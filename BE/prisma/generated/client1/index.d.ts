
/**
 * Client
**/

import * as runtime from './runtime/library';
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends Prisma.PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};


/**
 * Model allegato
 * 
 */
export type allegato = {
  id: number
  tabella_appartenenza: string | null
  id_tabella_appartenenza: number | null
  descrizione: string | null
  path: string | null
  filename_disk: string | null
  filename_originale: string | null
  id_operatore_salvataggio: number | null
  dt_salvataggio: Date | null
  del: number | null
}

/**
 * Model appalto
 * 
 */
export type appalto = {
  id: number
  tipologia: number | null
  dataModifica: string | null
}

/**
 * Model attrezzatura
 * 
 */
export type attrezzatura = {
  id: number
  tipologiaAttrezzatura: number | null
  descrizione: string | null
  dataModifica: string | null
}

/**
 * Model catasto_monitoraggio
 * 
 */
export type catasto_monitoraggio = {
  id: number
  tabellaCatasto: string | null
  tabellaMonitoraggio: string | null
  idElemento: string | null
}

/**
 * Model catastoanomalia
 * 
 */
export type catastoanomalia = {
  id: number
  idUtente: number | null
  idAppalto: number | null
  dataModifica: string | null
  adjacentLayer: string | null
  adjacentLayerGeom: string | null
}

/**
 * Model catastolinker
 * 
 */
export type catastolinker = {
  id: number
  idCatasto: number | null
  idAppalto: number | null
  idUtente: number | null
  dataModifica: string | null
  idSegnalazione: number | null
  idLavoro: number | null
  statoSegnalazione: string | null
  statoLavoro: string | null
  flg_catasto: number | null
  idPratica: number | null
  geojson: string | null
}

/**
 * Model categoriaanomalia
 * 
 */
export type categoriaanomalia = {
  id: number
  value: string | null
  tabellaNome: string | null
  modalitaInserimento: string | null
}

/**
 * Model categoriaanomalia_sottocategoriaanomalia
 * 
 */
export type categoriaanomalia_sottocategoriaanomalia = {
  id: number
  id_categoria_anomalia: number | null
  id_sottocategoria_anomalia: number | null
}

/**
 * Model categoriaanomalia_sottocategorialavoro
 * 
 */
export type categoriaanomalia_sottocategorialavoro = {
  id: number
  id_categoria_lavoro: number | null
  id_sottocategoria_lavoro: number | null
}

/**
 * Model contabilita
 * 
 */
export type contabilita = {
  id: number
  prezzario: number | null
  descrizioneContabilita: number | null
  proprieta: string | null
}

/**
 * Model evento
 * 
 */
export type evento = {
  id: number
  idUtente: number | null
  idAppalto: number | null
  tipoEvento: number | null
  generatoDa: string | null
  idPratica: number | null
  noteEvento: string | null
  lavoriEvento: number | null
  statoEvento: number | null
  documentiCorrelati: number | null
  propietaEvento: string | null
  severitaEvento: number | null
}

/**
 * Model filelinker
 * 
 */
export type filelinker = {
  id: number
  metadata: string | null
}

/**
 * Model filtro
 * 
 */
export type filtro = {
  id: number
  idUtente: number | null
  json: string | null
  tipo: string | null
  nome: string | null
}

/**
 * Model filtro_colonne
 * 
 */
export type filtro_colonne = {
  id: number
  idUtente: number | null
  json: string | null
  tabella: string | null
}

/**
 * Model fonti
 * 
 */
export type fonti = {
  id: number
  value: string | null
}

/**
 * Model gruppo
 * 
 */
export type gruppo = {
  id: number
  idAppalto: number | null
  descrizione: string | null
  dataModifica: string | null
}

/**
 * Model impresa
 * 
 */
export type impresa = {
  id: number
  value: string | null
}

/**
 * Model lavoro
 * 
 */
export type lavoro = {
  id: number
  idAppalto: number | null
  idEvento: number | null
  idPratica: number | null
  idPOI: number | null
  idUtente: number | null
  dataCreazione: string | null
  dataModifica: string | null
  dataChiusura: string | null
  localizzazioneDichiarata: string | null
  categoriaLavoro: number | null
  dettaglioLavoro: number | null
  noteLavoro: string | null
  contabilitaLavoro: number | null
  attrezzaturaLavoro: number | null
  mezzoLavoro: number | null
  personaleLavoro: number | null
  dataModificaStato: string | null
  stato: string | null
  notaStato: string | null
  idUtenteStato: number | null
  localizzazioneDichiarataQuartiere: string | null
  statoCorrenteLavoro: string | null
  del: string | null
  dataInizioProgrammata: string | null
  dataInizioEffettiva: string | null
  dataInizioMassima: string | null
  dataFineProgrammata: string | null
  dataFineEffettiva: string | null
  dataFineMassima: string | null
  delOggettiCatasto: string | null
  quantita: string | null
  operatore: string | null
  sospeso: number | null
  dataora_ini_sospensione: string | null
  dataora_fine_sospensione: string | null
  tempo_sospensione: number | null
  note_sospensione: string | null
  impresaEsecutrice: number | null
  segnaleticatemporanea: string | null
  tipolavoro: string | null
  statoMessaInSicurezza: string | null
  dataMessaInSicurezza: string | null
  notePubbliche: string | null
}

/**
 * Model lavorostorico
 * 
 */
export type lavorostorico = {
  id: number
  idLavoro: number | null
  idAppalto: number | null
  idEvento: number | null
  idPratica: number | null
  idPOI: number | null
  idUtente: number | null
  dataCreazione: string | null
  dataModifica: string | null
  dataChiusura: string | null
  localizzazioneDichiarata: string | null
  categoriaLavoro: number | null
  dettaglioLavoro: number | null
  noteLavoro: string | null
  contabilitaLavoro: number | null
  attrezzaturaLavoro: number | null
  mezzoLavoro: number | null
  personaleLavoro: number | null
  dataModificaStato: string | null
  stato: string | null
  notaStato: string | null
  idUtenteStato: number | null
  sospeso: number | null
  dataora_ini_sospensione: string | null
  dataora_fine_sospensione: string | null
  tempo_sospensione: number | null
  note_sospensione: string | null
  dataInizioProgrammata: string | null
  dataInizioEffettiva: string | null
  dataInizioMassima: string | null
  dataFineProgrammata: string | null
  dataFineEffettiva: string | null
  dataFineMassima: string | null
  localizzazioneDichiarataQuartiere: string | null
  statoCorrenteLavoro: string | null
  delOggettiCatasto: string | null
  del: string | null
  quantita: string | null
  operatore: string | null
  impresaEsecutrice: number | null
  segnaleticatemporanea: string | null
  tipolavoro: string | null
  statoMessaInSicurezza: string | null
  dataMessaInSicurezza: string | null
  flgCambioStato: string | null
  notePubbliche: string | null
}

/**
 * Model livelliservizio
 * 
 */
export type livelliservizio = {
  id: number
  idAppalto: number | null
  idUtente: number | null
  dataModifica: string | null
  idLds: number | null
  risultato: string | null
  detrazioneEffettivo: string | null
  premioEffettivo: string | null
  chiave: string | null
  unita: string | null
  idSegnalazione: number | null
  idLavoro: number | null
  dataIntervalloDa: string | null
  dataIntervalloA: string | null
  dataRichiesta: string | null
  dataInizioEffettivaLavoro: string | null
  dataChiusuraSegnalazione: string | null
  dataFineMassima: string | null
  elaborato: number | null
  idSchedulatore: number | null
  tipolavoro: string | null
  note: string | null
  dataCreazioneSegnalazione: string | null
}

/**
 * Model livelliserviziocanone
 * 
 */
export type livelliserviziocanone = {
  id: number
  idLds: number | null
  anno: string | null
  semestre: number | null
  trimestre: number | null
  canoneCalcoloLdS: number | null
}

/**
 * Model livelliserviziodescrizione
 * 
 */
export type livelliserviziodescrizione = {
  id: number
  ambito: string | null
  lds: string | null
  parametroValutazione: string | null
  ldsOT: string | null
  ldsCPT: string | null
  indiceScostamento: string | null
  penaleUnitaria: number | null
  controllo: string | null
  note: string | null
  tipo: string | null
  funzione: string | null
  tipoEstrazione: string | null
}

/**
 * Model livelliservizioschedulatore
 * 
 */
export type livelliservizioschedulatore = {
  id: number
  idAppalto: number | null
  tipologia: string | null
  anno: number | null
  semestre: number | null
  stato: string | null
  idUtente: number | null
  dataCreazione: string | null
}

/**
 * Model mezzo
 * 
 */
export type mezzo = {
  id: number
  tipologiaMezzo: number | null
  descrizione: string | null
  dataModifica: string | null
}

/**
 * Model oggetto
 * 
 */
export type oggetto = {
  id: number
  catastoId: number | null
}

/**
 * Model oggettocivetta
 * 
 */
export type oggettocivetta = {
  id: number
  idSegnalazione: number | null
  idOggettoCatasto: number | null
  idAppalto: number | null
  idUtente: number | null
  dataModifica: string | null
  idRifCivetta: number | null
}

/**
 * Model personale
 * 
 */
export type personale = {
  id: number
  idUtente: number | null
  tipologiaPersonale: number | null
  descrizione: string | null
  dataModifica: string | null
}

/**
 * Model poi
 * 
 */
export type poi = {
  id: number
  descrizione: string | null
  dataInizio: string | null
  dataFine: string | null
  idAppalto: number | null
  notePOI: string | null
}

/**
 * Model pratica
 * 
 */
export type pratica = {
  id: number
  idUtente: number | null
  idAppalto: number | null
  dataModifica: string | null
  dataChiusura: string | null
  nomePratica: string | null
  localizzazioneDichiarataQuartiere: string | null
  localizzazioneDichiarata: string | null
  notePratica: string | null
  importoPratica: string | null
  del: string | null
  dataCreazione: string | null
  statoCorrentePratica: string | null
  delLavori: string | null
}

/**
 * Model praticastorico
 * 
 */
export type praticastorico = {
  id: number
  idPratica: number | null
  idAppalto: number | null
  idUtente: number | null
  nomePratica: string | null
  localizzazioneDichiarataQuartiere: string | null
  localizzazioneDichiarata: string | null
  dataModifica: string | null
  dataChiusura: string | null
  notePratica: string | null
  importoPratica: string | null
  del: string | null
  dataCreazione: string | null
  statoCorrentePratica: string | null
  delLavori: string | null
}

/**
 * Model prezzario
 * 
 */
export type prezzario = {
  id: number
  descrizione: string | null
  unitaDiMisura: string | null
  prezzo: string | null
}

/**
 * Model registrorichiedente
 * 
 */
export type registrorichiedente = {
  id: number
  idAppalto: number | null
  noteSegnalatore: string | null
  dataCreazione: string | null
  dataModifica: string | null
  dataRichiesta: string | null
  localizzazioneNote: string | null
  descrizioneAnomalia: string | null
  idUtente: number | null
  idSegnalazione: number | null
  idSegnalatore: number | null
  fonteSegnalazione: number | null
  idSegnalazioneGetico: number | null
  del: string | null
}

/**
 * Model segnalatore
 * 
 */
export type segnalatore = {
  id: number
  idAppalto: number | null
  tipoSegnalatore: number | null
  nomeSegnalatore: string | null
  cognomeSegnalatore: string | null
  telefonoSegnalatore: string | null
  emailSegnalatore: string | null
  cellulareSegnalatore: string | null
  pecSegnalatore: string | null
}

/**
 * Model segnalazione
 * 
 */
export type segnalazione = {
  id: number
  idAppalto: number | null
  noteSegnalatore: string | null
  segnalatori: number[]
  dataCreazione: string | null
  dataModifica: string | null
  dataRichiesta: string | null
  localizzazioneDichiarata: string | null
  localizzazioneDichiarataCivico: string | null
  localizzazioneNote: string | null
  descrizioneAnomalia: string | null
  commentoAnomalia: string | null
  idEvento: number | null
  idPratica: number | null
  dataModificaStato: string | null
  stato: string | null
  notaStato: string | null
  idUtente: number | null
  idUtenteStato: number | null
  idSegnalatore: number | null
  fonteSegnalazione: number | null
  categoriaAnomalia: number | null
  dettaglioAnomalia: number | null
  severitaEvento: number | null
  tipoEvento: number | null
  idTecnico: number | null
  localizzazioneDichiarataQuartiere: string | null
  idLavoroAssociato: string | null
  dataChiusura: string | null
  statoCorrenteSegnalazione: string | null
  del: string | null
  idSegnalazioneGetico: number | null
  delOggettiCatasto: string | null
  sottoservizi: string | null
  sinistri: string | null
  richiestaSopralluogo: string | null
  numeroProvvedimento: string | null
  idTipoProvvedimento: number | null
}

/**
 * Model segnalazione_getico
 * 
 */
export type segnalazione_getico = {
  id: number
  id_ticket: string | null
  segnalante_nome: string | null
  segnalante_cognome: string | null
  segnalante_email: string | null
  segnalante_telefono: string | null
  luogo_indirizzo: string | null
  luogo_civico: string | null
  luogo_ubicazione: string | null
  descrizione: string | null
  tipologia: string | null
  flg_stato: string | null
  luogo_quartiere: string | null
  dataRichiesta: string | null
  dataInoltro: string | null
  ufficioProvenienza: string | null
  luogo_civico2: string | null
  luogo_indirizzo2: string | null
  ufficio_inoltro: string | null
  json_uffici: string | null
  note_esito: string | null
  sopralluogo: string | null
  sopralluogo_note: string | null
  sopralluogo_effettuato: string | null
  sopralluogo_importato: string | null
  sopralluogo_catasto_json: string | null
}

/**
 * Model segnalazionestatostorico
 * 
 */
export type segnalazionestatostorico = {
  id: number
  idAppalto: number | null
  idSegnalazione: number | null
  idUtente: number | null
  dataModifica: string | null
  stato: string | null
  notaStato: string | null
}

/**
 * Model segnalazionestorico
 * 
 */
export type segnalazionestorico = {
  id: number
  idAppalto: number | null
  idSegnalazione: number | null
  noteSegnalatore: string | null
  segnalatori: number[]
  dataCreazione: string | null
  dataModifica: string | null
  dataRichiesta: string | null
  localizzazioneDichiarata: string | null
  localizzazioneNote: string | null
  descrizioneAnomalia: string | null
  commentoAnomalia: string | null
  idEvento: number | null
  idPratica: number | null
  dataModificaStato: string | null
  stato: string | null
  notaStato: string | null
  flgCambioStato: string | null
  idUtente: number | null
  idUtenteStato: number | null
  idSegnalatore: number | null
  fonteSegnalazione: number | null
  categoriaAnomalia: number | null
  dettaglioAnomalia: number | null
  severitaEvento: number | null
  tipoEvento: number | null
  idLavoroAssociato: string | null
  statoCorrenteSegnalazione: string | null
  idSegnalazioneGetico: number | null
  sottoservizi: string | null
  sinistri: string | null
  richiestaSopralluogo: string | null
  delOggettiCatasto: string | null
  idTecnico: number | null
  numeroProvvedimento: string | null
  dataChiusura: string | null
  localizzazioneDichiarataQuartiere: string | null
  localizzazioneDichiarataCivico: string | null
  del: string | null
  idTipoProvvedimento: number | null
}

/**
 * Model sottocategoriaanomalia
 * 
 */
export type sottocategoriaanomalia = {
  id: number
  value: string | null
}

/**
 * Model sottocategoriaanomalia_sottocategorialavoro
 * 
 */
export type sottocategoriaanomalia_sottocategorialavoro = {
  id: number
  id_categoria_anomalia: number | null
  id_sottocategoria_anomalia: number | null
  id_sottocategoria_lavoro: number | null
}

/**
 * Model sottocategorialavoro
 * 
 */
export type sottocategorialavoro = {
  id: number
  value: string | null
}

/**
 * Model stato
 * 
 */
export type stato = {
  id: number
  idEvento: number | null
  classeCorrente: number | null
  statoCorrente: number | null
  idUtente: number | null
  storiaStato: number | null
}

/**
 * Model storiastato
 * 
 */
export type storiastato = {
  id: number
  statoStorico: number | null
  stato: number | null
  dataStato: string | null
}

/**
 * Model tecnici
 * 
 */
export type tecnici = {
  id: number
  value: string | null
}

/**
 * Model tipoevento
 * 
 */
export type tipoevento = {
  id: number
  value: string | null
}

/**
 * Model tipologia
 * 
 */
export type tipologia = {
  id: number
  proprieta: string | null
}

/**
 * Model tipooggetto
 * 
 */
export type tipooggetto = {
  id: number
  value: string | null
  tabellaNome: string | null
}

/**
 * Model tipoprovvedimento
 * 
 */
export type tipoprovvedimento = {
  id: number
  value: string | null
}

/**
 * Model tiposegnalatore
 * 
 */
export type tiposegnalatore = {
  id: number
  value: string | null
}

/**
 * Model tiposeverita
 * 
 */
export type tiposeverita = {
  id: number
  value: string | null
}

/**
 * Model utenti
 * 
 */
export type utenti = {
  id: number
  idAppalto: number | null
  nome: string | null
  cognome: string | null
  username: string | null
  password: string | null
  email: string
  status: string | null
  permessi: string | null
  dataCreazione: string | null
  dataModifica: string | null
  dataSospensione: string | null
  idGruppo: number | null
  del: string | null
  scadenzaPassword: string | null
  roles: string | null
}


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Allegatoes
 * const allegatoes = await prisma.allegato.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Allegatoes
   * const allegatoes = await prisma.allegato.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<void>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): Promise<UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<this, "$connect" | "$disconnect" | "$on" | "$transaction" | "$use">) => Promise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): Promise<R>

      /**
   * `prisma.allegato`: Exposes CRUD operations for the **allegato** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Allegatoes
    * const allegatoes = await prisma.allegato.findMany()
    * ```
    */
  get allegato(): Prisma.allegatoDelegate<GlobalReject>;

  /**
   * `prisma.appalto`: Exposes CRUD operations for the **appalto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Appaltos
    * const appaltos = await prisma.appalto.findMany()
    * ```
    */
  get appalto(): Prisma.appaltoDelegate<GlobalReject>;

  /**
   * `prisma.attrezzatura`: Exposes CRUD operations for the **attrezzatura** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Attrezzaturas
    * const attrezzaturas = await prisma.attrezzatura.findMany()
    * ```
    */
  get attrezzatura(): Prisma.attrezzaturaDelegate<GlobalReject>;

  /**
   * `prisma.catasto_monitoraggio`: Exposes CRUD operations for the **catasto_monitoraggio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Catasto_monitoraggios
    * const catasto_monitoraggios = await prisma.catasto_monitoraggio.findMany()
    * ```
    */
  get catasto_monitoraggio(): Prisma.catasto_monitoraggioDelegate<GlobalReject>;

  /**
   * `prisma.catastoanomalia`: Exposes CRUD operations for the **catastoanomalia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Catastoanomalias
    * const catastoanomalias = await prisma.catastoanomalia.findMany()
    * ```
    */
  get catastoanomalia(): Prisma.catastoanomaliaDelegate<GlobalReject>;

  /**
   * `prisma.catastolinker`: Exposes CRUD operations for the **catastolinker** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Catastolinkers
    * const catastolinkers = await prisma.catastolinker.findMany()
    * ```
    */
  get catastolinker(): Prisma.catastolinkerDelegate<GlobalReject>;

  /**
   * `prisma.categoriaanomalia`: Exposes CRUD operations for the **categoriaanomalia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categoriaanomalias
    * const categoriaanomalias = await prisma.categoriaanomalia.findMany()
    * ```
    */
  get categoriaanomalia(): Prisma.categoriaanomaliaDelegate<GlobalReject>;

  /**
   * `prisma.categoriaanomalia_sottocategoriaanomalia`: Exposes CRUD operations for the **categoriaanomalia_sottocategoriaanomalia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categoriaanomalia_sottocategoriaanomalias
    * const categoriaanomalia_sottocategoriaanomalias = await prisma.categoriaanomalia_sottocategoriaanomalia.findMany()
    * ```
    */
  get categoriaanomalia_sottocategoriaanomalia(): Prisma.categoriaanomalia_sottocategoriaanomaliaDelegate<GlobalReject>;

  /**
   * `prisma.categoriaanomalia_sottocategorialavoro`: Exposes CRUD operations for the **categoriaanomalia_sottocategorialavoro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categoriaanomalia_sottocategorialavoros
    * const categoriaanomalia_sottocategorialavoros = await prisma.categoriaanomalia_sottocategorialavoro.findMany()
    * ```
    */
  get categoriaanomalia_sottocategorialavoro(): Prisma.categoriaanomalia_sottocategorialavoroDelegate<GlobalReject>;

  /**
   * `prisma.contabilita`: Exposes CRUD operations for the **contabilita** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contabilitas
    * const contabilitas = await prisma.contabilita.findMany()
    * ```
    */
  get contabilita(): Prisma.contabilitaDelegate<GlobalReject>;

  /**
   * `prisma.evento`: Exposes CRUD operations for the **evento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Eventos
    * const eventos = await prisma.evento.findMany()
    * ```
    */
  get evento(): Prisma.eventoDelegate<GlobalReject>;

  /**
   * `prisma.filelinker`: Exposes CRUD operations for the **filelinker** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Filelinkers
    * const filelinkers = await prisma.filelinker.findMany()
    * ```
    */
  get filelinker(): Prisma.filelinkerDelegate<GlobalReject>;

  /**
   * `prisma.filtro`: Exposes CRUD operations for the **filtro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Filtros
    * const filtros = await prisma.filtro.findMany()
    * ```
    */
  get filtro(): Prisma.filtroDelegate<GlobalReject>;

  /**
   * `prisma.filtro_colonne`: Exposes CRUD operations for the **filtro_colonne** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Filtro_colonnes
    * const filtro_colonnes = await prisma.filtro_colonne.findMany()
    * ```
    */
  get filtro_colonne(): Prisma.filtro_colonneDelegate<GlobalReject>;

  /**
   * `prisma.fonti`: Exposes CRUD operations for the **fonti** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Fontis
    * const fontis = await prisma.fonti.findMany()
    * ```
    */
  get fonti(): Prisma.fontiDelegate<GlobalReject>;

  /**
   * `prisma.gruppo`: Exposes CRUD operations for the **gruppo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gruppos
    * const gruppos = await prisma.gruppo.findMany()
    * ```
    */
  get gruppo(): Prisma.gruppoDelegate<GlobalReject>;

  /**
   * `prisma.impresa`: Exposes CRUD operations for the **impresa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Impresas
    * const impresas = await prisma.impresa.findMany()
    * ```
    */
  get impresa(): Prisma.impresaDelegate<GlobalReject>;

  /**
   * `prisma.lavoro`: Exposes CRUD operations for the **lavoro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Lavoros
    * const lavoros = await prisma.lavoro.findMany()
    * ```
    */
  get lavoro(): Prisma.lavoroDelegate<GlobalReject>;

  /**
   * `prisma.lavorostorico`: Exposes CRUD operations for the **lavorostorico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Lavorostoricos
    * const lavorostoricos = await prisma.lavorostorico.findMany()
    * ```
    */
  get lavorostorico(): Prisma.lavorostoricoDelegate<GlobalReject>;

  /**
   * `prisma.livelliservizio`: Exposes CRUD operations for the **livelliservizio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Livelliservizios
    * const livelliservizios = await prisma.livelliservizio.findMany()
    * ```
    */
  get livelliservizio(): Prisma.livelliservizioDelegate<GlobalReject>;

  /**
   * `prisma.livelliserviziocanone`: Exposes CRUD operations for the **livelliserviziocanone** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Livelliserviziocanones
    * const livelliserviziocanones = await prisma.livelliserviziocanone.findMany()
    * ```
    */
  get livelliserviziocanone(): Prisma.livelliserviziocanoneDelegate<GlobalReject>;

  /**
   * `prisma.livelliserviziodescrizione`: Exposes CRUD operations for the **livelliserviziodescrizione** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Livelliserviziodescriziones
    * const livelliserviziodescriziones = await prisma.livelliserviziodescrizione.findMany()
    * ```
    */
  get livelliserviziodescrizione(): Prisma.livelliserviziodescrizioneDelegate<GlobalReject>;

  /**
   * `prisma.livelliservizioschedulatore`: Exposes CRUD operations for the **livelliservizioschedulatore** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Livelliservizioschedulatores
    * const livelliservizioschedulatores = await prisma.livelliservizioschedulatore.findMany()
    * ```
    */
  get livelliservizioschedulatore(): Prisma.livelliservizioschedulatoreDelegate<GlobalReject>;

  /**
   * `prisma.mezzo`: Exposes CRUD operations for the **mezzo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mezzos
    * const mezzos = await prisma.mezzo.findMany()
    * ```
    */
  get mezzo(): Prisma.mezzoDelegate<GlobalReject>;

  /**
   * `prisma.oggetto`: Exposes CRUD operations for the **oggetto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Oggettos
    * const oggettos = await prisma.oggetto.findMany()
    * ```
    */
  get oggetto(): Prisma.oggettoDelegate<GlobalReject>;

  /**
   * `prisma.oggettocivetta`: Exposes CRUD operations for the **oggettocivetta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Oggettocivettas
    * const oggettocivettas = await prisma.oggettocivetta.findMany()
    * ```
    */
  get oggettocivetta(): Prisma.oggettocivettaDelegate<GlobalReject>;

  /**
   * `prisma.personale`: Exposes CRUD operations for the **personale** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Personales
    * const personales = await prisma.personale.findMany()
    * ```
    */
  get personale(): Prisma.personaleDelegate<GlobalReject>;

  /**
   * `prisma.poi`: Exposes CRUD operations for the **poi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pois
    * const pois = await prisma.poi.findMany()
    * ```
    */
  get poi(): Prisma.poiDelegate<GlobalReject>;

  /**
   * `prisma.pratica`: Exposes CRUD operations for the **pratica** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Praticas
    * const praticas = await prisma.pratica.findMany()
    * ```
    */
  get pratica(): Prisma.praticaDelegate<GlobalReject>;

  /**
   * `prisma.praticastorico`: Exposes CRUD operations for the **praticastorico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Praticastoricos
    * const praticastoricos = await prisma.praticastorico.findMany()
    * ```
    */
  get praticastorico(): Prisma.praticastoricoDelegate<GlobalReject>;

  /**
   * `prisma.prezzario`: Exposes CRUD operations for the **prezzario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Prezzarios
    * const prezzarios = await prisma.prezzario.findMany()
    * ```
    */
  get prezzario(): Prisma.prezzarioDelegate<GlobalReject>;

  /**
   * `prisma.registrorichiedente`: Exposes CRUD operations for the **registrorichiedente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Registrorichiedentes
    * const registrorichiedentes = await prisma.registrorichiedente.findMany()
    * ```
    */
  get registrorichiedente(): Prisma.registrorichiedenteDelegate<GlobalReject>;

  /**
   * `prisma.segnalatore`: Exposes CRUD operations for the **segnalatore** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Segnalatores
    * const segnalatores = await prisma.segnalatore.findMany()
    * ```
    */
  get segnalatore(): Prisma.segnalatoreDelegate<GlobalReject>;

  /**
   * `prisma.segnalazione`: Exposes CRUD operations for the **segnalazione** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Segnalaziones
    * const segnalaziones = await prisma.segnalazione.findMany()
    * ```
    */
  get segnalazione(): Prisma.segnalazioneDelegate<GlobalReject>;

  /**
   * `prisma.segnalazione_getico`: Exposes CRUD operations for the **segnalazione_getico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Segnalazione_geticos
    * const segnalazione_geticos = await prisma.segnalazione_getico.findMany()
    * ```
    */
  get segnalazione_getico(): Prisma.segnalazione_geticoDelegate<GlobalReject>;

  /**
   * `prisma.segnalazionestatostorico`: Exposes CRUD operations for the **segnalazionestatostorico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Segnalazionestatostoricos
    * const segnalazionestatostoricos = await prisma.segnalazionestatostorico.findMany()
    * ```
    */
  get segnalazionestatostorico(): Prisma.segnalazionestatostoricoDelegate<GlobalReject>;

  /**
   * `prisma.segnalazionestorico`: Exposes CRUD operations for the **segnalazionestorico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Segnalazionestoricos
    * const segnalazionestoricos = await prisma.segnalazionestorico.findMany()
    * ```
    */
  get segnalazionestorico(): Prisma.segnalazionestoricoDelegate<GlobalReject>;

  /**
   * `prisma.sottocategoriaanomalia`: Exposes CRUD operations for the **sottocategoriaanomalia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sottocategoriaanomalias
    * const sottocategoriaanomalias = await prisma.sottocategoriaanomalia.findMany()
    * ```
    */
  get sottocategoriaanomalia(): Prisma.sottocategoriaanomaliaDelegate<GlobalReject>;

  /**
   * `prisma.sottocategoriaanomalia_sottocategorialavoro`: Exposes CRUD operations for the **sottocategoriaanomalia_sottocategorialavoro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sottocategoriaanomalia_sottocategorialavoros
    * const sottocategoriaanomalia_sottocategorialavoros = await prisma.sottocategoriaanomalia_sottocategorialavoro.findMany()
    * ```
    */
  get sottocategoriaanomalia_sottocategorialavoro(): Prisma.sottocategoriaanomalia_sottocategorialavoroDelegate<GlobalReject>;

  /**
   * `prisma.sottocategorialavoro`: Exposes CRUD operations for the **sottocategorialavoro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sottocategorialavoros
    * const sottocategorialavoros = await prisma.sottocategorialavoro.findMany()
    * ```
    */
  get sottocategorialavoro(): Prisma.sottocategorialavoroDelegate<GlobalReject>;

  /**
   * `prisma.stato`: Exposes CRUD operations for the **stato** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Statoes
    * const statoes = await prisma.stato.findMany()
    * ```
    */
  get stato(): Prisma.statoDelegate<GlobalReject>;

  /**
   * `prisma.storiastato`: Exposes CRUD operations for the **storiastato** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Storiastatoes
    * const storiastatoes = await prisma.storiastato.findMany()
    * ```
    */
  get storiastato(): Prisma.storiastatoDelegate<GlobalReject>;

  /**
   * `prisma.tecnici`: Exposes CRUD operations for the **tecnici** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tecnicis
    * const tecnicis = await prisma.tecnici.findMany()
    * ```
    */
  get tecnici(): Prisma.tecniciDelegate<GlobalReject>;

  /**
   * `prisma.tipoevento`: Exposes CRUD operations for the **tipoevento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipoeventos
    * const tipoeventos = await prisma.tipoevento.findMany()
    * ```
    */
  get tipoevento(): Prisma.tipoeventoDelegate<GlobalReject>;

  /**
   * `prisma.tipologia`: Exposes CRUD operations for the **tipologia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipologias
    * const tipologias = await prisma.tipologia.findMany()
    * ```
    */
  get tipologia(): Prisma.tipologiaDelegate<GlobalReject>;

  /**
   * `prisma.tipooggetto`: Exposes CRUD operations for the **tipooggetto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipooggettos
    * const tipooggettos = await prisma.tipooggetto.findMany()
    * ```
    */
  get tipooggetto(): Prisma.tipooggettoDelegate<GlobalReject>;

  /**
   * `prisma.tipoprovvedimento`: Exposes CRUD operations for the **tipoprovvedimento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipoprovvedimentos
    * const tipoprovvedimentos = await prisma.tipoprovvedimento.findMany()
    * ```
    */
  get tipoprovvedimento(): Prisma.tipoprovvedimentoDelegate<GlobalReject>;

  /**
   * `prisma.tiposegnalatore`: Exposes CRUD operations for the **tiposegnalatore** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tiposegnalatores
    * const tiposegnalatores = await prisma.tiposegnalatore.findMany()
    * ```
    */
  get tiposegnalatore(): Prisma.tiposegnalatoreDelegate<GlobalReject>;

  /**
   * `prisma.tiposeverita`: Exposes CRUD operations for the **tiposeverita** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tiposeveritas
    * const tiposeveritas = await prisma.tiposeverita.findMany()
    * ```
    */
  get tiposeverita(): Prisma.tiposeveritaDelegate<GlobalReject>;

  /**
   * `prisma.utenti`: Exposes CRUD operations for the **utenti** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Utentis
    * const utentis = await prisma.utenti.findMany()
    * ```
    */
  get utenti(): Prisma.utentiDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = runtime.Types.Public.PrismaPromise<T>

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket


  /**
   * Prisma Client JS version: 4.10.1
   * Query Engine version: aead147aa326ccb985dcfed5b065b4fdabd44b19
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: runtime.Types.Utils.LegacyExact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    allegato: 'allegato',
    appalto: 'appalto',
    attrezzatura: 'attrezzatura',
    catasto_monitoraggio: 'catasto_monitoraggio',
    catastoanomalia: 'catastoanomalia',
    catastolinker: 'catastolinker',
    categoriaanomalia: 'categoriaanomalia',
    categoriaanomalia_sottocategoriaanomalia: 'categoriaanomalia_sottocategoriaanomalia',
    categoriaanomalia_sottocategorialavoro: 'categoriaanomalia_sottocategorialavoro',
    contabilita: 'contabilita',
    evento: 'evento',
    filelinker: 'filelinker',
    filtro: 'filtro',
    filtro_colonne: 'filtro_colonne',
    fonti: 'fonti',
    gruppo: 'gruppo',
    impresa: 'impresa',
    lavoro: 'lavoro',
    lavorostorico: 'lavorostorico',
    livelliservizio: 'livelliservizio',
    livelliserviziocanone: 'livelliserviziocanone',
    livelliserviziodescrizione: 'livelliserviziodescrizione',
    livelliservizioschedulatore: 'livelliservizioschedulatore',
    mezzo: 'mezzo',
    oggetto: 'oggetto',
    oggettocivetta: 'oggettocivetta',
    personale: 'personale',
    poi: 'poi',
    pratica: 'pratica',
    praticastorico: 'praticastorico',
    prezzario: 'prezzario',
    registrorichiedente: 'registrorichiedente',
    segnalatore: 'segnalatore',
    segnalazione: 'segnalazione',
    segnalazione_getico: 'segnalazione_getico',
    segnalazionestatostorico: 'segnalazionestatostorico',
    segnalazionestorico: 'segnalazionestorico',
    sottocategoriaanomalia: 'sottocategoriaanomalia',
    sottocategoriaanomalia_sottocategorialavoro: 'sottocategoriaanomalia_sottocategorialavoro',
    sottocategorialavoro: 'sottocategorialavoro',
    stato: 'stato',
    storiastato: 'storiastato',
    tecnici: 'tecnici',
    tipoevento: 'tipoevento',
    tipologia: 'tipologia',
    tipooggetto: 'tipooggetto',
    tipoprovvedimento: 'tipoprovvedimento',
    tiposegnalatore: 'tiposegnalatore',
    tiposeverita: 'tiposeverita',
    utenti: 'utenti'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type DefaultPrismaClient = PrismaClient
  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends RejectOnNotFound
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     * @deprecated since 4.0.0. Use `findUniqueOrThrow`/`findFirstOrThrow` methods instead.
     * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, '$connect' | '$disconnect' | '$on' | '$transaction' | '$use'>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CategoriaanomaliaCountOutputType
   */


  export type CategoriaanomaliaCountOutputType = {
    categoriaanomalia_sottocategoriaanomalia: number
    categoriaanomalia_sottocategorialavoro: number
    lavoro: number
    lavorostorico: number
    segnalazione: number
    segnalazionestorico: number
    sottocategoriaanomalia_sottocategorialavoro: number
  }

  export type CategoriaanomaliaCountOutputTypeSelect = {
    categoriaanomalia_sottocategoriaanomalia?: boolean
    categoriaanomalia_sottocategorialavoro?: boolean
    lavoro?: boolean
    lavorostorico?: boolean
    segnalazione?: boolean
    segnalazionestorico?: boolean
    sottocategoriaanomalia_sottocategorialavoro?: boolean
  }

  export type CategoriaanomaliaCountOutputTypeGetPayload<S extends boolean | null | undefined | CategoriaanomaliaCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? CategoriaanomaliaCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (CategoriaanomaliaCountOutputTypeArgs)
    ? CategoriaanomaliaCountOutputType 
    : S extends { select: any } & (CategoriaanomaliaCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof CategoriaanomaliaCountOutputType ? CategoriaanomaliaCountOutputType[P] : never
  } 
      : CategoriaanomaliaCountOutputType




  // Custom InputTypes

  /**
   * CategoriaanomaliaCountOutputType without action
   */
  export type CategoriaanomaliaCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the CategoriaanomaliaCountOutputType
     */
    select?: CategoriaanomaliaCountOutputTypeSelect | null
  }



  /**
   * Count Type FontiCountOutputType
   */


  export type FontiCountOutputType = {
    registrorichiedente: number
    segnalazione: number
    segnalazionestorico: number
  }

  export type FontiCountOutputTypeSelect = {
    registrorichiedente?: boolean
    segnalazione?: boolean
    segnalazionestorico?: boolean
  }

  export type FontiCountOutputTypeGetPayload<S extends boolean | null | undefined | FontiCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? FontiCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (FontiCountOutputTypeArgs)
    ? FontiCountOutputType 
    : S extends { select: any } & (FontiCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof FontiCountOutputType ? FontiCountOutputType[P] : never
  } 
      : FontiCountOutputType




  // Custom InputTypes

  /**
   * FontiCountOutputType without action
   */
  export type FontiCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the FontiCountOutputType
     */
    select?: FontiCountOutputTypeSelect | null
  }



  /**
   * Count Type GruppoCountOutputType
   */


  export type GruppoCountOutputType = {
    utenti: number
  }

  export type GruppoCountOutputTypeSelect = {
    utenti?: boolean
  }

  export type GruppoCountOutputTypeGetPayload<S extends boolean | null | undefined | GruppoCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? GruppoCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (GruppoCountOutputTypeArgs)
    ? GruppoCountOutputType 
    : S extends { select: any } & (GruppoCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof GruppoCountOutputType ? GruppoCountOutputType[P] : never
  } 
      : GruppoCountOutputType




  // Custom InputTypes

  /**
   * GruppoCountOutputType without action
   */
  export type GruppoCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the GruppoCountOutputType
     */
    select?: GruppoCountOutputTypeSelect | null
  }



  /**
   * Count Type ImpresaCountOutputType
   */


  export type ImpresaCountOutputType = {
    lavoro: number
    lavorostorico: number
  }

  export type ImpresaCountOutputTypeSelect = {
    lavoro?: boolean
    lavorostorico?: boolean
  }

  export type ImpresaCountOutputTypeGetPayload<S extends boolean | null | undefined | ImpresaCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ImpresaCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (ImpresaCountOutputTypeArgs)
    ? ImpresaCountOutputType 
    : S extends { select: any } & (ImpresaCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof ImpresaCountOutputType ? ImpresaCountOutputType[P] : never
  } 
      : ImpresaCountOutputType




  // Custom InputTypes

  /**
   * ImpresaCountOutputType without action
   */
  export type ImpresaCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ImpresaCountOutputType
     */
    select?: ImpresaCountOutputTypeSelect | null
  }



  /**
   * Count Type LavoroCountOutputType
   */


  export type LavoroCountOutputType = {
    catastolinker: number
  }

  export type LavoroCountOutputTypeSelect = {
    catastolinker?: boolean
  }

  export type LavoroCountOutputTypeGetPayload<S extends boolean | null | undefined | LavoroCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? LavoroCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (LavoroCountOutputTypeArgs)
    ? LavoroCountOutputType 
    : S extends { select: any } & (LavoroCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof LavoroCountOutputType ? LavoroCountOutputType[P] : never
  } 
      : LavoroCountOutputType




  // Custom InputTypes

  /**
   * LavoroCountOutputType without action
   */
  export type LavoroCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the LavoroCountOutputType
     */
    select?: LavoroCountOutputTypeSelect | null
  }



  /**
   * Count Type LivelliserviziodescrizioneCountOutputType
   */


  export type LivelliserviziodescrizioneCountOutputType = {
    livelliservizio: number
  }

  export type LivelliserviziodescrizioneCountOutputTypeSelect = {
    livelliservizio?: boolean
  }

  export type LivelliserviziodescrizioneCountOutputTypeGetPayload<S extends boolean | null | undefined | LivelliserviziodescrizioneCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? LivelliserviziodescrizioneCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (LivelliserviziodescrizioneCountOutputTypeArgs)
    ? LivelliserviziodescrizioneCountOutputType 
    : S extends { select: any } & (LivelliserviziodescrizioneCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof LivelliserviziodescrizioneCountOutputType ? LivelliserviziodescrizioneCountOutputType[P] : never
  } 
      : LivelliserviziodescrizioneCountOutputType




  // Custom InputTypes

  /**
   * LivelliserviziodescrizioneCountOutputType without action
   */
  export type LivelliserviziodescrizioneCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the LivelliserviziodescrizioneCountOutputType
     */
    select?: LivelliserviziodescrizioneCountOutputTypeSelect | null
  }



  /**
   * Count Type PraticaCountOutputType
   */


  export type PraticaCountOutputType = {
    catastolinker: number
  }

  export type PraticaCountOutputTypeSelect = {
    catastolinker?: boolean
  }

  export type PraticaCountOutputTypeGetPayload<S extends boolean | null | undefined | PraticaCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? PraticaCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (PraticaCountOutputTypeArgs)
    ? PraticaCountOutputType 
    : S extends { select: any } & (PraticaCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof PraticaCountOutputType ? PraticaCountOutputType[P] : never
  } 
      : PraticaCountOutputType




  // Custom InputTypes

  /**
   * PraticaCountOutputType without action
   */
  export type PraticaCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the PraticaCountOutputType
     */
    select?: PraticaCountOutputTypeSelect | null
  }



  /**
   * Count Type SegnalatoreCountOutputType
   */


  export type SegnalatoreCountOutputType = {
    registrorichiedente: number
    segnalazione: number
    segnalazionestorico: number
  }

  export type SegnalatoreCountOutputTypeSelect = {
    registrorichiedente?: boolean
    segnalazione?: boolean
    segnalazionestorico?: boolean
  }

  export type SegnalatoreCountOutputTypeGetPayload<S extends boolean | null | undefined | SegnalatoreCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? SegnalatoreCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (SegnalatoreCountOutputTypeArgs)
    ? SegnalatoreCountOutputType 
    : S extends { select: any } & (SegnalatoreCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof SegnalatoreCountOutputType ? SegnalatoreCountOutputType[P] : never
  } 
      : SegnalatoreCountOutputType




  // Custom InputTypes

  /**
   * SegnalatoreCountOutputType without action
   */
  export type SegnalatoreCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the SegnalatoreCountOutputType
     */
    select?: SegnalatoreCountOutputTypeSelect | null
  }



  /**
   * Count Type SegnalazioneCountOutputType
   */


  export type SegnalazioneCountOutputType = {
    segnalazionestatostorico: number
  }

  export type SegnalazioneCountOutputTypeSelect = {
    segnalazionestatostorico?: boolean
  }

  export type SegnalazioneCountOutputTypeGetPayload<S extends boolean | null | undefined | SegnalazioneCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? SegnalazioneCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (SegnalazioneCountOutputTypeArgs)
    ? SegnalazioneCountOutputType 
    : S extends { select: any } & (SegnalazioneCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof SegnalazioneCountOutputType ? SegnalazioneCountOutputType[P] : never
  } 
      : SegnalazioneCountOutputType




  // Custom InputTypes

  /**
   * SegnalazioneCountOutputType without action
   */
  export type SegnalazioneCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the SegnalazioneCountOutputType
     */
    select?: SegnalazioneCountOutputTypeSelect | null
  }



  /**
   * Count Type Segnalazione_geticoCountOutputType
   */


  export type Segnalazione_geticoCountOutputType = {
    registrorichiedente: number
    segnalazione: number
    segnalazionestorico: number
  }

  export type Segnalazione_geticoCountOutputTypeSelect = {
    registrorichiedente?: boolean
    segnalazione?: boolean
    segnalazionestorico?: boolean
  }

  export type Segnalazione_geticoCountOutputTypeGetPayload<S extends boolean | null | undefined | Segnalazione_geticoCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Segnalazione_geticoCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (Segnalazione_geticoCountOutputTypeArgs)
    ? Segnalazione_geticoCountOutputType 
    : S extends { select: any } & (Segnalazione_geticoCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof Segnalazione_geticoCountOutputType ? Segnalazione_geticoCountOutputType[P] : never
  } 
      : Segnalazione_geticoCountOutputType




  // Custom InputTypes

  /**
   * Segnalazione_geticoCountOutputType without action
   */
  export type Segnalazione_geticoCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Segnalazione_geticoCountOutputType
     */
    select?: Segnalazione_geticoCountOutputTypeSelect | null
  }



  /**
   * Count Type SottocategoriaanomaliaCountOutputType
   */


  export type SottocategoriaanomaliaCountOutputType = {
    categoriaanomalia_sottocategoriaanomalia: number
    segnalazione: number
    segnalazionestorico: number
    sottocategoriaanomalia_sottocategorialavoro: number
  }

  export type SottocategoriaanomaliaCountOutputTypeSelect = {
    categoriaanomalia_sottocategoriaanomalia?: boolean
    segnalazione?: boolean
    segnalazionestorico?: boolean
    sottocategoriaanomalia_sottocategorialavoro?: boolean
  }

  export type SottocategoriaanomaliaCountOutputTypeGetPayload<S extends boolean | null | undefined | SottocategoriaanomaliaCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? SottocategoriaanomaliaCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (SottocategoriaanomaliaCountOutputTypeArgs)
    ? SottocategoriaanomaliaCountOutputType 
    : S extends { select: any } & (SottocategoriaanomaliaCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof SottocategoriaanomaliaCountOutputType ? SottocategoriaanomaliaCountOutputType[P] : never
  } 
      : SottocategoriaanomaliaCountOutputType




  // Custom InputTypes

  /**
   * SottocategoriaanomaliaCountOutputType without action
   */
  export type SottocategoriaanomaliaCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the SottocategoriaanomaliaCountOutputType
     */
    select?: SottocategoriaanomaliaCountOutputTypeSelect | null
  }



  /**
   * Count Type SottocategorialavoroCountOutputType
   */


  export type SottocategorialavoroCountOutputType = {
    categoriaanomalia_sottocategorialavoro: number
    lavoro: number
    lavorostorico: number
    sottocategoriaanomalia_sottocategorialavoro: number
  }

  export type SottocategorialavoroCountOutputTypeSelect = {
    categoriaanomalia_sottocategorialavoro?: boolean
    lavoro?: boolean
    lavorostorico?: boolean
    sottocategoriaanomalia_sottocategorialavoro?: boolean
  }

  export type SottocategorialavoroCountOutputTypeGetPayload<S extends boolean | null | undefined | SottocategorialavoroCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? SottocategorialavoroCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (SottocategorialavoroCountOutputTypeArgs)
    ? SottocategorialavoroCountOutputType 
    : S extends { select: any } & (SottocategorialavoroCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof SottocategorialavoroCountOutputType ? SottocategorialavoroCountOutputType[P] : never
  } 
      : SottocategorialavoroCountOutputType




  // Custom InputTypes

  /**
   * SottocategorialavoroCountOutputType without action
   */
  export type SottocategorialavoroCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the SottocategorialavoroCountOutputType
     */
    select?: SottocategorialavoroCountOutputTypeSelect | null
  }



  /**
   * Count Type TecniciCountOutputType
   */


  export type TecniciCountOutputType = {
    segnalazione: number
    segnalazionestorico: number
  }

  export type TecniciCountOutputTypeSelect = {
    segnalazione?: boolean
    segnalazionestorico?: boolean
  }

  export type TecniciCountOutputTypeGetPayload<S extends boolean | null | undefined | TecniciCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TecniciCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (TecniciCountOutputTypeArgs)
    ? TecniciCountOutputType 
    : S extends { select: any } & (TecniciCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof TecniciCountOutputType ? TecniciCountOutputType[P] : never
  } 
      : TecniciCountOutputType




  // Custom InputTypes

  /**
   * TecniciCountOutputType without action
   */
  export type TecniciCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the TecniciCountOutputType
     */
    select?: TecniciCountOutputTypeSelect | null
  }



  /**
   * Count Type TipoeventoCountOutputType
   */


  export type TipoeventoCountOutputType = {
    segnalazione: number
    segnalazionestorico: number
  }

  export type TipoeventoCountOutputTypeSelect = {
    segnalazione?: boolean
    segnalazionestorico?: boolean
  }

  export type TipoeventoCountOutputTypeGetPayload<S extends boolean | null | undefined | TipoeventoCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TipoeventoCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (TipoeventoCountOutputTypeArgs)
    ? TipoeventoCountOutputType 
    : S extends { select: any } & (TipoeventoCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof TipoeventoCountOutputType ? TipoeventoCountOutputType[P] : never
  } 
      : TipoeventoCountOutputType




  // Custom InputTypes

  /**
   * TipoeventoCountOutputType without action
   */
  export type TipoeventoCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the TipoeventoCountOutputType
     */
    select?: TipoeventoCountOutputTypeSelect | null
  }



  /**
   * Count Type TipoprovvedimentoCountOutputType
   */


  export type TipoprovvedimentoCountOutputType = {
    segnalazione: number
    segnalazionestorico: number
  }

  export type TipoprovvedimentoCountOutputTypeSelect = {
    segnalazione?: boolean
    segnalazionestorico?: boolean
  }

  export type TipoprovvedimentoCountOutputTypeGetPayload<S extends boolean | null | undefined | TipoprovvedimentoCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TipoprovvedimentoCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (TipoprovvedimentoCountOutputTypeArgs)
    ? TipoprovvedimentoCountOutputType 
    : S extends { select: any } & (TipoprovvedimentoCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof TipoprovvedimentoCountOutputType ? TipoprovvedimentoCountOutputType[P] : never
  } 
      : TipoprovvedimentoCountOutputType




  // Custom InputTypes

  /**
   * TipoprovvedimentoCountOutputType without action
   */
  export type TipoprovvedimentoCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the TipoprovvedimentoCountOutputType
     */
    select?: TipoprovvedimentoCountOutputTypeSelect | null
  }



  /**
   * Count Type TiposeveritaCountOutputType
   */


  export type TiposeveritaCountOutputType = {
    segnalazione: number
    segnalazionestorico: number
  }

  export type TiposeveritaCountOutputTypeSelect = {
    segnalazione?: boolean
    segnalazionestorico?: boolean
  }

  export type TiposeveritaCountOutputTypeGetPayload<S extends boolean | null | undefined | TiposeveritaCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TiposeveritaCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (TiposeveritaCountOutputTypeArgs)
    ? TiposeveritaCountOutputType 
    : S extends { select: any } & (TiposeveritaCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof TiposeveritaCountOutputType ? TiposeveritaCountOutputType[P] : never
  } 
      : TiposeveritaCountOutputType




  // Custom InputTypes

  /**
   * TiposeveritaCountOutputType without action
   */
  export type TiposeveritaCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the TiposeveritaCountOutputType
     */
    select?: TiposeveritaCountOutputTypeSelect | null
  }



  /**
   * Count Type UtentiCountOutputType
   */


  export type UtentiCountOutputType = {
    catastoanomalia: number
    catastolinker: number
    lavoro_lavoro_idUtenteStatoToutenti: number
    lavoro_lavoro_idUtenteToutenti: number
    lavorostorico_lavorostorico_idUtenteStatoToutenti: number
    lavorostorico_lavorostorico_idUtenteToutenti: number
    livelliservizio: number
    oggettocivetta: number
    pratica: number
    praticastorico: number
    registrorichiedente: number
    segnalazione_segnalazione_idUtenteStatoToutenti: number
    segnalazione_segnalazione_idUtenteToutenti: number
    segnalazionestatostorico: number
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti: number
    segnalazionestorico_segnalazionestorico_idUtenteToutenti: number
  }

  export type UtentiCountOutputTypeSelect = {
    catastoanomalia?: boolean
    catastolinker?: boolean
    lavoro_lavoro_idUtenteStatoToutenti?: boolean
    lavoro_lavoro_idUtenteToutenti?: boolean
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: boolean
    lavorostorico_lavorostorico_idUtenteToutenti?: boolean
    livelliservizio?: boolean
    oggettocivetta?: boolean
    pratica?: boolean
    praticastorico?: boolean
    registrorichiedente?: boolean
    segnalazione_segnalazione_idUtenteStatoToutenti?: boolean
    segnalazione_segnalazione_idUtenteToutenti?: boolean
    segnalazionestatostorico?: boolean
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: boolean
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: boolean
  }

  export type UtentiCountOutputTypeGetPayload<S extends boolean | null | undefined | UtentiCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? UtentiCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (UtentiCountOutputTypeArgs)
    ? UtentiCountOutputType 
    : S extends { select: any } & (UtentiCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof UtentiCountOutputType ? UtentiCountOutputType[P] : never
  } 
      : UtentiCountOutputType




  // Custom InputTypes

  /**
   * UtentiCountOutputType without action
   */
  export type UtentiCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the UtentiCountOutputType
     */
    select?: UtentiCountOutputTypeSelect | null
  }



  /**
   * Models
   */

  /**
   * Model allegato
   */


  export type AggregateAllegato = {
    _count: AllegatoCountAggregateOutputType | null
    _avg: AllegatoAvgAggregateOutputType | null
    _sum: AllegatoSumAggregateOutputType | null
    _min: AllegatoMinAggregateOutputType | null
    _max: AllegatoMaxAggregateOutputType | null
  }

  export type AllegatoAvgAggregateOutputType = {
    id: number | null
    id_tabella_appartenenza: number | null
    id_operatore_salvataggio: number | null
    del: number | null
  }

  export type AllegatoSumAggregateOutputType = {
    id: number | null
    id_tabella_appartenenza: number | null
    id_operatore_salvataggio: number | null
    del: number | null
  }

  export type AllegatoMinAggregateOutputType = {
    id: number | null
    tabella_appartenenza: string | null
    id_tabella_appartenenza: number | null
    descrizione: string | null
    path: string | null
    filename_disk: string | null
    filename_originale: string | null
    id_operatore_salvataggio: number | null
    dt_salvataggio: Date | null
    del: number | null
  }

  export type AllegatoMaxAggregateOutputType = {
    id: number | null
    tabella_appartenenza: string | null
    id_tabella_appartenenza: number | null
    descrizione: string | null
    path: string | null
    filename_disk: string | null
    filename_originale: string | null
    id_operatore_salvataggio: number | null
    dt_salvataggio: Date | null
    del: number | null
  }

  export type AllegatoCountAggregateOutputType = {
    id: number
    tabella_appartenenza: number
    id_tabella_appartenenza: number
    descrizione: number
    path: number
    filename_disk: number
    filename_originale: number
    id_operatore_salvataggio: number
    dt_salvataggio: number
    del: number
    _all: number
  }


  export type AllegatoAvgAggregateInputType = {
    id?: true
    id_tabella_appartenenza?: true
    id_operatore_salvataggio?: true
    del?: true
  }

  export type AllegatoSumAggregateInputType = {
    id?: true
    id_tabella_appartenenza?: true
    id_operatore_salvataggio?: true
    del?: true
  }

  export type AllegatoMinAggregateInputType = {
    id?: true
    tabella_appartenenza?: true
    id_tabella_appartenenza?: true
    descrizione?: true
    path?: true
    filename_disk?: true
    filename_originale?: true
    id_operatore_salvataggio?: true
    dt_salvataggio?: true
    del?: true
  }

  export type AllegatoMaxAggregateInputType = {
    id?: true
    tabella_appartenenza?: true
    id_tabella_appartenenza?: true
    descrizione?: true
    path?: true
    filename_disk?: true
    filename_originale?: true
    id_operatore_salvataggio?: true
    dt_salvataggio?: true
    del?: true
  }

  export type AllegatoCountAggregateInputType = {
    id?: true
    tabella_appartenenza?: true
    id_tabella_appartenenza?: true
    descrizione?: true
    path?: true
    filename_disk?: true
    filename_originale?: true
    id_operatore_salvataggio?: true
    dt_salvataggio?: true
    del?: true
    _all?: true
  }

  export type AllegatoAggregateArgs = {
    /**
     * Filter which allegato to aggregate.
     */
    where?: allegatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of allegatoes to fetch.
     */
    orderBy?: Enumerable<allegatoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: allegatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` allegatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` allegatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned allegatoes
    **/
    _count?: true | AllegatoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AllegatoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AllegatoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AllegatoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AllegatoMaxAggregateInputType
  }

  export type GetAllegatoAggregateType<T extends AllegatoAggregateArgs> = {
        [P in keyof T & keyof AggregateAllegato]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAllegato[P]>
      : GetScalarType<T[P], AggregateAllegato[P]>
  }




  export type AllegatoGroupByArgs = {
    where?: allegatoWhereInput
    orderBy?: Enumerable<allegatoOrderByWithAggregationInput>
    by: AllegatoScalarFieldEnum[]
    having?: allegatoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AllegatoCountAggregateInputType | true
    _avg?: AllegatoAvgAggregateInputType
    _sum?: AllegatoSumAggregateInputType
    _min?: AllegatoMinAggregateInputType
    _max?: AllegatoMaxAggregateInputType
  }


  export type AllegatoGroupByOutputType = {
    id: number
    tabella_appartenenza: string | null
    id_tabella_appartenenza: number | null
    descrizione: string | null
    path: string | null
    filename_disk: string | null
    filename_originale: string | null
    id_operatore_salvataggio: number | null
    dt_salvataggio: Date | null
    del: number | null
    _count: AllegatoCountAggregateOutputType | null
    _avg: AllegatoAvgAggregateOutputType | null
    _sum: AllegatoSumAggregateOutputType | null
    _min: AllegatoMinAggregateOutputType | null
    _max: AllegatoMaxAggregateOutputType | null
  }

  type GetAllegatoGroupByPayload<T extends AllegatoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<AllegatoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AllegatoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AllegatoGroupByOutputType[P]>
            : GetScalarType<T[P], AllegatoGroupByOutputType[P]>
        }
      >
    >


  export type allegatoSelect = {
    id?: boolean
    tabella_appartenenza?: boolean
    id_tabella_appartenenza?: boolean
    descrizione?: boolean
    path?: boolean
    filename_disk?: boolean
    filename_originale?: boolean
    id_operatore_salvataggio?: boolean
    dt_salvataggio?: boolean
    del?: boolean
  }


  export type allegatoGetPayload<S extends boolean | null | undefined | allegatoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? allegato :
    S extends undefined ? never :
    S extends { include: any } & (allegatoArgs | allegatoFindManyArgs)
    ? allegato 
    : S extends { select: any } & (allegatoArgs | allegatoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof allegato ? allegato[P] : never
  } 
      : allegato


  type allegatoCountArgs = 
    Omit<allegatoFindManyArgs, 'select' | 'include'> & {
      select?: AllegatoCountAggregateInputType | true
    }

  export interface allegatoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Allegato that matches the filter.
     * @param {allegatoFindUniqueArgs} args - Arguments to find a Allegato
     * @example
     * // Get one Allegato
     * const allegato = await prisma.allegato.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends allegatoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, allegatoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'allegato'> extends True ? Prisma__allegatoClient<allegatoGetPayload<T>> : Prisma__allegatoClient<allegatoGetPayload<T> | null, null>

    /**
     * Find one Allegato that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {allegatoFindUniqueOrThrowArgs} args - Arguments to find a Allegato
     * @example
     * // Get one Allegato
     * const allegato = await prisma.allegato.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends allegatoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, allegatoFindUniqueOrThrowArgs>
    ): Prisma__allegatoClient<allegatoGetPayload<T>>

    /**
     * Find the first Allegato that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {allegatoFindFirstArgs} args - Arguments to find a Allegato
     * @example
     * // Get one Allegato
     * const allegato = await prisma.allegato.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends allegatoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, allegatoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'allegato'> extends True ? Prisma__allegatoClient<allegatoGetPayload<T>> : Prisma__allegatoClient<allegatoGetPayload<T> | null, null>

    /**
     * Find the first Allegato that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {allegatoFindFirstOrThrowArgs} args - Arguments to find a Allegato
     * @example
     * // Get one Allegato
     * const allegato = await prisma.allegato.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends allegatoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, allegatoFindFirstOrThrowArgs>
    ): Prisma__allegatoClient<allegatoGetPayload<T>>

    /**
     * Find zero or more Allegatoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {allegatoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Allegatoes
     * const allegatoes = await prisma.allegato.findMany()
     * 
     * // Get first 10 Allegatoes
     * const allegatoes = await prisma.allegato.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const allegatoWithIdOnly = await prisma.allegato.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends allegatoFindManyArgs>(
      args?: SelectSubset<T, allegatoFindManyArgs>
    ): Prisma.PrismaPromise<Array<allegatoGetPayload<T>>>

    /**
     * Create a Allegato.
     * @param {allegatoCreateArgs} args - Arguments to create a Allegato.
     * @example
     * // Create one Allegato
     * const Allegato = await prisma.allegato.create({
     *   data: {
     *     // ... data to create a Allegato
     *   }
     * })
     * 
    **/
    create<T extends allegatoCreateArgs>(
      args: SelectSubset<T, allegatoCreateArgs>
    ): Prisma__allegatoClient<allegatoGetPayload<T>>

    /**
     * Create many Allegatoes.
     *     @param {allegatoCreateManyArgs} args - Arguments to create many Allegatoes.
     *     @example
     *     // Create many Allegatoes
     *     const allegato = await prisma.allegato.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends allegatoCreateManyArgs>(
      args?: SelectSubset<T, allegatoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Allegato.
     * @param {allegatoDeleteArgs} args - Arguments to delete one Allegato.
     * @example
     * // Delete one Allegato
     * const Allegato = await prisma.allegato.delete({
     *   where: {
     *     // ... filter to delete one Allegato
     *   }
     * })
     * 
    **/
    delete<T extends allegatoDeleteArgs>(
      args: SelectSubset<T, allegatoDeleteArgs>
    ): Prisma__allegatoClient<allegatoGetPayload<T>>

    /**
     * Update one Allegato.
     * @param {allegatoUpdateArgs} args - Arguments to update one Allegato.
     * @example
     * // Update one Allegato
     * const allegato = await prisma.allegato.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends allegatoUpdateArgs>(
      args: SelectSubset<T, allegatoUpdateArgs>
    ): Prisma__allegatoClient<allegatoGetPayload<T>>

    /**
     * Delete zero or more Allegatoes.
     * @param {allegatoDeleteManyArgs} args - Arguments to filter Allegatoes to delete.
     * @example
     * // Delete a few Allegatoes
     * const { count } = await prisma.allegato.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends allegatoDeleteManyArgs>(
      args?: SelectSubset<T, allegatoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Allegatoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {allegatoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Allegatoes
     * const allegato = await prisma.allegato.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends allegatoUpdateManyArgs>(
      args: SelectSubset<T, allegatoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Allegato.
     * @param {allegatoUpsertArgs} args - Arguments to update or create a Allegato.
     * @example
     * // Update or create a Allegato
     * const allegato = await prisma.allegato.upsert({
     *   create: {
     *     // ... data to create a Allegato
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Allegato we want to update
     *   }
     * })
    **/
    upsert<T extends allegatoUpsertArgs>(
      args: SelectSubset<T, allegatoUpsertArgs>
    ): Prisma__allegatoClient<allegatoGetPayload<T>>

    /**
     * Count the number of Allegatoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {allegatoCountArgs} args - Arguments to filter Allegatoes to count.
     * @example
     * // Count the number of Allegatoes
     * const count = await prisma.allegato.count({
     *   where: {
     *     // ... the filter for the Allegatoes we want to count
     *   }
     * })
    **/
    count<T extends allegatoCountArgs>(
      args?: Subset<T, allegatoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AllegatoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Allegato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AllegatoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AllegatoAggregateArgs>(args: Subset<T, AllegatoAggregateArgs>): Prisma.PrismaPromise<GetAllegatoAggregateType<T>>

    /**
     * Group by Allegato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AllegatoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AllegatoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AllegatoGroupByArgs['orderBy'] }
        : { orderBy?: AllegatoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AllegatoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAllegatoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for allegato.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__allegatoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * allegato base type for findUnique actions
   */
  export type allegatoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the allegato
     */
    select?: allegatoSelect | null
    /**
     * Filter, which allegato to fetch.
     */
    where: allegatoWhereUniqueInput
  }

  /**
   * allegato findUnique
   */
  export interface allegatoFindUniqueArgs extends allegatoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * allegato findUniqueOrThrow
   */
  export type allegatoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the allegato
     */
    select?: allegatoSelect | null
    /**
     * Filter, which allegato to fetch.
     */
    where: allegatoWhereUniqueInput
  }


  /**
   * allegato base type for findFirst actions
   */
  export type allegatoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the allegato
     */
    select?: allegatoSelect | null
    /**
     * Filter, which allegato to fetch.
     */
    where?: allegatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of allegatoes to fetch.
     */
    orderBy?: Enumerable<allegatoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for allegatoes.
     */
    cursor?: allegatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` allegatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` allegatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of allegatoes.
     */
    distinct?: Enumerable<AllegatoScalarFieldEnum>
  }

  /**
   * allegato findFirst
   */
  export interface allegatoFindFirstArgs extends allegatoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * allegato findFirstOrThrow
   */
  export type allegatoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the allegato
     */
    select?: allegatoSelect | null
    /**
     * Filter, which allegato to fetch.
     */
    where?: allegatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of allegatoes to fetch.
     */
    orderBy?: Enumerable<allegatoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for allegatoes.
     */
    cursor?: allegatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` allegatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` allegatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of allegatoes.
     */
    distinct?: Enumerable<AllegatoScalarFieldEnum>
  }


  /**
   * allegato findMany
   */
  export type allegatoFindManyArgs = {
    /**
     * Select specific fields to fetch from the allegato
     */
    select?: allegatoSelect | null
    /**
     * Filter, which allegatoes to fetch.
     */
    where?: allegatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of allegatoes to fetch.
     */
    orderBy?: Enumerable<allegatoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing allegatoes.
     */
    cursor?: allegatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` allegatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` allegatoes.
     */
    skip?: number
    distinct?: Enumerable<AllegatoScalarFieldEnum>
  }


  /**
   * allegato create
   */
  export type allegatoCreateArgs = {
    /**
     * Select specific fields to fetch from the allegato
     */
    select?: allegatoSelect | null
    /**
     * The data needed to create a allegato.
     */
    data: XOR<allegatoCreateInput, allegatoUncheckedCreateInput>
  }


  /**
   * allegato createMany
   */
  export type allegatoCreateManyArgs = {
    /**
     * The data used to create many allegatoes.
     */
    data: Enumerable<allegatoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * allegato update
   */
  export type allegatoUpdateArgs = {
    /**
     * Select specific fields to fetch from the allegato
     */
    select?: allegatoSelect | null
    /**
     * The data needed to update a allegato.
     */
    data: XOR<allegatoUpdateInput, allegatoUncheckedUpdateInput>
    /**
     * Choose, which allegato to update.
     */
    where: allegatoWhereUniqueInput
  }


  /**
   * allegato updateMany
   */
  export type allegatoUpdateManyArgs = {
    /**
     * The data used to update allegatoes.
     */
    data: XOR<allegatoUpdateManyMutationInput, allegatoUncheckedUpdateManyInput>
    /**
     * Filter which allegatoes to update
     */
    where?: allegatoWhereInput
  }


  /**
   * allegato upsert
   */
  export type allegatoUpsertArgs = {
    /**
     * Select specific fields to fetch from the allegato
     */
    select?: allegatoSelect | null
    /**
     * The filter to search for the allegato to update in case it exists.
     */
    where: allegatoWhereUniqueInput
    /**
     * In case the allegato found by the `where` argument doesn't exist, create a new allegato with this data.
     */
    create: XOR<allegatoCreateInput, allegatoUncheckedCreateInput>
    /**
     * In case the allegato was found with the provided `where` argument, update it with this data.
     */
    update: XOR<allegatoUpdateInput, allegatoUncheckedUpdateInput>
  }


  /**
   * allegato delete
   */
  export type allegatoDeleteArgs = {
    /**
     * Select specific fields to fetch from the allegato
     */
    select?: allegatoSelect | null
    /**
     * Filter which allegato to delete.
     */
    where: allegatoWhereUniqueInput
  }


  /**
   * allegato deleteMany
   */
  export type allegatoDeleteManyArgs = {
    /**
     * Filter which allegatoes to delete
     */
    where?: allegatoWhereInput
  }


  /**
   * allegato without action
   */
  export type allegatoArgs = {
    /**
     * Select specific fields to fetch from the allegato
     */
    select?: allegatoSelect | null
  }



  /**
   * Model appalto
   */


  export type AggregateAppalto = {
    _count: AppaltoCountAggregateOutputType | null
    _avg: AppaltoAvgAggregateOutputType | null
    _sum: AppaltoSumAggregateOutputType | null
    _min: AppaltoMinAggregateOutputType | null
    _max: AppaltoMaxAggregateOutputType | null
  }

  export type AppaltoAvgAggregateOutputType = {
    id: number | null
    tipologia: number | null
  }

  export type AppaltoSumAggregateOutputType = {
    id: number | null
    tipologia: number | null
  }

  export type AppaltoMinAggregateOutputType = {
    id: number | null
    tipologia: number | null
    dataModifica: string | null
  }

  export type AppaltoMaxAggregateOutputType = {
    id: number | null
    tipologia: number | null
    dataModifica: string | null
  }

  export type AppaltoCountAggregateOutputType = {
    id: number
    tipologia: number
    dataModifica: number
    _all: number
  }


  export type AppaltoAvgAggregateInputType = {
    id?: true
    tipologia?: true
  }

  export type AppaltoSumAggregateInputType = {
    id?: true
    tipologia?: true
  }

  export type AppaltoMinAggregateInputType = {
    id?: true
    tipologia?: true
    dataModifica?: true
  }

  export type AppaltoMaxAggregateInputType = {
    id?: true
    tipologia?: true
    dataModifica?: true
  }

  export type AppaltoCountAggregateInputType = {
    id?: true
    tipologia?: true
    dataModifica?: true
    _all?: true
  }

  export type AppaltoAggregateArgs = {
    /**
     * Filter which appalto to aggregate.
     */
    where?: appaltoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of appaltos to fetch.
     */
    orderBy?: Enumerable<appaltoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: appaltoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` appaltos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` appaltos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned appaltos
    **/
    _count?: true | AppaltoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AppaltoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AppaltoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AppaltoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AppaltoMaxAggregateInputType
  }

  export type GetAppaltoAggregateType<T extends AppaltoAggregateArgs> = {
        [P in keyof T & keyof AggregateAppalto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAppalto[P]>
      : GetScalarType<T[P], AggregateAppalto[P]>
  }




  export type AppaltoGroupByArgs = {
    where?: appaltoWhereInput
    orderBy?: Enumerable<appaltoOrderByWithAggregationInput>
    by: AppaltoScalarFieldEnum[]
    having?: appaltoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AppaltoCountAggregateInputType | true
    _avg?: AppaltoAvgAggregateInputType
    _sum?: AppaltoSumAggregateInputType
    _min?: AppaltoMinAggregateInputType
    _max?: AppaltoMaxAggregateInputType
  }


  export type AppaltoGroupByOutputType = {
    id: number
    tipologia: number | null
    dataModifica: string | null
    _count: AppaltoCountAggregateOutputType | null
    _avg: AppaltoAvgAggregateOutputType | null
    _sum: AppaltoSumAggregateOutputType | null
    _min: AppaltoMinAggregateOutputType | null
    _max: AppaltoMaxAggregateOutputType | null
  }

  type GetAppaltoGroupByPayload<T extends AppaltoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<AppaltoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AppaltoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AppaltoGroupByOutputType[P]>
            : GetScalarType<T[P], AppaltoGroupByOutputType[P]>
        }
      >
    >


  export type appaltoSelect = {
    id?: boolean
    tipologia?: boolean
    dataModifica?: boolean
  }


  export type appaltoGetPayload<S extends boolean | null | undefined | appaltoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? appalto :
    S extends undefined ? never :
    S extends { include: any } & (appaltoArgs | appaltoFindManyArgs)
    ? appalto 
    : S extends { select: any } & (appaltoArgs | appaltoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof appalto ? appalto[P] : never
  } 
      : appalto


  type appaltoCountArgs = 
    Omit<appaltoFindManyArgs, 'select' | 'include'> & {
      select?: AppaltoCountAggregateInputType | true
    }

  export interface appaltoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Appalto that matches the filter.
     * @param {appaltoFindUniqueArgs} args - Arguments to find a Appalto
     * @example
     * // Get one Appalto
     * const appalto = await prisma.appalto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends appaltoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, appaltoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'appalto'> extends True ? Prisma__appaltoClient<appaltoGetPayload<T>> : Prisma__appaltoClient<appaltoGetPayload<T> | null, null>

    /**
     * Find one Appalto that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {appaltoFindUniqueOrThrowArgs} args - Arguments to find a Appalto
     * @example
     * // Get one Appalto
     * const appalto = await prisma.appalto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends appaltoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, appaltoFindUniqueOrThrowArgs>
    ): Prisma__appaltoClient<appaltoGetPayload<T>>

    /**
     * Find the first Appalto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {appaltoFindFirstArgs} args - Arguments to find a Appalto
     * @example
     * // Get one Appalto
     * const appalto = await prisma.appalto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends appaltoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, appaltoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'appalto'> extends True ? Prisma__appaltoClient<appaltoGetPayload<T>> : Prisma__appaltoClient<appaltoGetPayload<T> | null, null>

    /**
     * Find the first Appalto that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {appaltoFindFirstOrThrowArgs} args - Arguments to find a Appalto
     * @example
     * // Get one Appalto
     * const appalto = await prisma.appalto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends appaltoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, appaltoFindFirstOrThrowArgs>
    ): Prisma__appaltoClient<appaltoGetPayload<T>>

    /**
     * Find zero or more Appaltos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {appaltoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Appaltos
     * const appaltos = await prisma.appalto.findMany()
     * 
     * // Get first 10 Appaltos
     * const appaltos = await prisma.appalto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const appaltoWithIdOnly = await prisma.appalto.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends appaltoFindManyArgs>(
      args?: SelectSubset<T, appaltoFindManyArgs>
    ): Prisma.PrismaPromise<Array<appaltoGetPayload<T>>>

    /**
     * Create a Appalto.
     * @param {appaltoCreateArgs} args - Arguments to create a Appalto.
     * @example
     * // Create one Appalto
     * const Appalto = await prisma.appalto.create({
     *   data: {
     *     // ... data to create a Appalto
     *   }
     * })
     * 
    **/
    create<T extends appaltoCreateArgs>(
      args: SelectSubset<T, appaltoCreateArgs>
    ): Prisma__appaltoClient<appaltoGetPayload<T>>

    /**
     * Create many Appaltos.
     *     @param {appaltoCreateManyArgs} args - Arguments to create many Appaltos.
     *     @example
     *     // Create many Appaltos
     *     const appalto = await prisma.appalto.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends appaltoCreateManyArgs>(
      args?: SelectSubset<T, appaltoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Appalto.
     * @param {appaltoDeleteArgs} args - Arguments to delete one Appalto.
     * @example
     * // Delete one Appalto
     * const Appalto = await prisma.appalto.delete({
     *   where: {
     *     // ... filter to delete one Appalto
     *   }
     * })
     * 
    **/
    delete<T extends appaltoDeleteArgs>(
      args: SelectSubset<T, appaltoDeleteArgs>
    ): Prisma__appaltoClient<appaltoGetPayload<T>>

    /**
     * Update one Appalto.
     * @param {appaltoUpdateArgs} args - Arguments to update one Appalto.
     * @example
     * // Update one Appalto
     * const appalto = await prisma.appalto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends appaltoUpdateArgs>(
      args: SelectSubset<T, appaltoUpdateArgs>
    ): Prisma__appaltoClient<appaltoGetPayload<T>>

    /**
     * Delete zero or more Appaltos.
     * @param {appaltoDeleteManyArgs} args - Arguments to filter Appaltos to delete.
     * @example
     * // Delete a few Appaltos
     * const { count } = await prisma.appalto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends appaltoDeleteManyArgs>(
      args?: SelectSubset<T, appaltoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Appaltos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {appaltoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Appaltos
     * const appalto = await prisma.appalto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends appaltoUpdateManyArgs>(
      args: SelectSubset<T, appaltoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Appalto.
     * @param {appaltoUpsertArgs} args - Arguments to update or create a Appalto.
     * @example
     * // Update or create a Appalto
     * const appalto = await prisma.appalto.upsert({
     *   create: {
     *     // ... data to create a Appalto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Appalto we want to update
     *   }
     * })
    **/
    upsert<T extends appaltoUpsertArgs>(
      args: SelectSubset<T, appaltoUpsertArgs>
    ): Prisma__appaltoClient<appaltoGetPayload<T>>

    /**
     * Count the number of Appaltos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {appaltoCountArgs} args - Arguments to filter Appaltos to count.
     * @example
     * // Count the number of Appaltos
     * const count = await prisma.appalto.count({
     *   where: {
     *     // ... the filter for the Appaltos we want to count
     *   }
     * })
    **/
    count<T extends appaltoCountArgs>(
      args?: Subset<T, appaltoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AppaltoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Appalto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppaltoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AppaltoAggregateArgs>(args: Subset<T, AppaltoAggregateArgs>): Prisma.PrismaPromise<GetAppaltoAggregateType<T>>

    /**
     * Group by Appalto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppaltoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AppaltoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AppaltoGroupByArgs['orderBy'] }
        : { orderBy?: AppaltoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AppaltoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAppaltoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for appalto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__appaltoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * appalto base type for findUnique actions
   */
  export type appaltoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the appalto
     */
    select?: appaltoSelect | null
    /**
     * Filter, which appalto to fetch.
     */
    where: appaltoWhereUniqueInput
  }

  /**
   * appalto findUnique
   */
  export interface appaltoFindUniqueArgs extends appaltoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * appalto findUniqueOrThrow
   */
  export type appaltoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the appalto
     */
    select?: appaltoSelect | null
    /**
     * Filter, which appalto to fetch.
     */
    where: appaltoWhereUniqueInput
  }


  /**
   * appalto base type for findFirst actions
   */
  export type appaltoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the appalto
     */
    select?: appaltoSelect | null
    /**
     * Filter, which appalto to fetch.
     */
    where?: appaltoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of appaltos to fetch.
     */
    orderBy?: Enumerable<appaltoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for appaltos.
     */
    cursor?: appaltoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` appaltos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` appaltos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of appaltos.
     */
    distinct?: Enumerable<AppaltoScalarFieldEnum>
  }

  /**
   * appalto findFirst
   */
  export interface appaltoFindFirstArgs extends appaltoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * appalto findFirstOrThrow
   */
  export type appaltoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the appalto
     */
    select?: appaltoSelect | null
    /**
     * Filter, which appalto to fetch.
     */
    where?: appaltoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of appaltos to fetch.
     */
    orderBy?: Enumerable<appaltoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for appaltos.
     */
    cursor?: appaltoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` appaltos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` appaltos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of appaltos.
     */
    distinct?: Enumerable<AppaltoScalarFieldEnum>
  }


  /**
   * appalto findMany
   */
  export type appaltoFindManyArgs = {
    /**
     * Select specific fields to fetch from the appalto
     */
    select?: appaltoSelect | null
    /**
     * Filter, which appaltos to fetch.
     */
    where?: appaltoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of appaltos to fetch.
     */
    orderBy?: Enumerable<appaltoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing appaltos.
     */
    cursor?: appaltoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` appaltos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` appaltos.
     */
    skip?: number
    distinct?: Enumerable<AppaltoScalarFieldEnum>
  }


  /**
   * appalto create
   */
  export type appaltoCreateArgs = {
    /**
     * Select specific fields to fetch from the appalto
     */
    select?: appaltoSelect | null
    /**
     * The data needed to create a appalto.
     */
    data: XOR<appaltoCreateInput, appaltoUncheckedCreateInput>
  }


  /**
   * appalto createMany
   */
  export type appaltoCreateManyArgs = {
    /**
     * The data used to create many appaltos.
     */
    data: Enumerable<appaltoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * appalto update
   */
  export type appaltoUpdateArgs = {
    /**
     * Select specific fields to fetch from the appalto
     */
    select?: appaltoSelect | null
    /**
     * The data needed to update a appalto.
     */
    data: XOR<appaltoUpdateInput, appaltoUncheckedUpdateInput>
    /**
     * Choose, which appalto to update.
     */
    where: appaltoWhereUniqueInput
  }


  /**
   * appalto updateMany
   */
  export type appaltoUpdateManyArgs = {
    /**
     * The data used to update appaltos.
     */
    data: XOR<appaltoUpdateManyMutationInput, appaltoUncheckedUpdateManyInput>
    /**
     * Filter which appaltos to update
     */
    where?: appaltoWhereInput
  }


  /**
   * appalto upsert
   */
  export type appaltoUpsertArgs = {
    /**
     * Select specific fields to fetch from the appalto
     */
    select?: appaltoSelect | null
    /**
     * The filter to search for the appalto to update in case it exists.
     */
    where: appaltoWhereUniqueInput
    /**
     * In case the appalto found by the `where` argument doesn't exist, create a new appalto with this data.
     */
    create: XOR<appaltoCreateInput, appaltoUncheckedCreateInput>
    /**
     * In case the appalto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<appaltoUpdateInput, appaltoUncheckedUpdateInput>
  }


  /**
   * appalto delete
   */
  export type appaltoDeleteArgs = {
    /**
     * Select specific fields to fetch from the appalto
     */
    select?: appaltoSelect | null
    /**
     * Filter which appalto to delete.
     */
    where: appaltoWhereUniqueInput
  }


  /**
   * appalto deleteMany
   */
  export type appaltoDeleteManyArgs = {
    /**
     * Filter which appaltos to delete
     */
    where?: appaltoWhereInput
  }


  /**
   * appalto without action
   */
  export type appaltoArgs = {
    /**
     * Select specific fields to fetch from the appalto
     */
    select?: appaltoSelect | null
  }



  /**
   * Model attrezzatura
   */


  export type AggregateAttrezzatura = {
    _count: AttrezzaturaCountAggregateOutputType | null
    _avg: AttrezzaturaAvgAggregateOutputType | null
    _sum: AttrezzaturaSumAggregateOutputType | null
    _min: AttrezzaturaMinAggregateOutputType | null
    _max: AttrezzaturaMaxAggregateOutputType | null
  }

  export type AttrezzaturaAvgAggregateOutputType = {
    id: number | null
    tipologiaAttrezzatura: number | null
  }

  export type AttrezzaturaSumAggregateOutputType = {
    id: number | null
    tipologiaAttrezzatura: number | null
  }

  export type AttrezzaturaMinAggregateOutputType = {
    id: number | null
    tipologiaAttrezzatura: number | null
    descrizione: string | null
    dataModifica: string | null
  }

  export type AttrezzaturaMaxAggregateOutputType = {
    id: number | null
    tipologiaAttrezzatura: number | null
    descrizione: string | null
    dataModifica: string | null
  }

  export type AttrezzaturaCountAggregateOutputType = {
    id: number
    tipologiaAttrezzatura: number
    descrizione: number
    dataModifica: number
    _all: number
  }


  export type AttrezzaturaAvgAggregateInputType = {
    id?: true
    tipologiaAttrezzatura?: true
  }

  export type AttrezzaturaSumAggregateInputType = {
    id?: true
    tipologiaAttrezzatura?: true
  }

  export type AttrezzaturaMinAggregateInputType = {
    id?: true
    tipologiaAttrezzatura?: true
    descrizione?: true
    dataModifica?: true
  }

  export type AttrezzaturaMaxAggregateInputType = {
    id?: true
    tipologiaAttrezzatura?: true
    descrizione?: true
    dataModifica?: true
  }

  export type AttrezzaturaCountAggregateInputType = {
    id?: true
    tipologiaAttrezzatura?: true
    descrizione?: true
    dataModifica?: true
    _all?: true
  }

  export type AttrezzaturaAggregateArgs = {
    /**
     * Filter which attrezzatura to aggregate.
     */
    where?: attrezzaturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attrezzaturas to fetch.
     */
    orderBy?: Enumerable<attrezzaturaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: attrezzaturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attrezzaturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attrezzaturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned attrezzaturas
    **/
    _count?: true | AttrezzaturaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AttrezzaturaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AttrezzaturaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AttrezzaturaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AttrezzaturaMaxAggregateInputType
  }

  export type GetAttrezzaturaAggregateType<T extends AttrezzaturaAggregateArgs> = {
        [P in keyof T & keyof AggregateAttrezzatura]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAttrezzatura[P]>
      : GetScalarType<T[P], AggregateAttrezzatura[P]>
  }




  export type AttrezzaturaGroupByArgs = {
    where?: attrezzaturaWhereInput
    orderBy?: Enumerable<attrezzaturaOrderByWithAggregationInput>
    by: AttrezzaturaScalarFieldEnum[]
    having?: attrezzaturaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AttrezzaturaCountAggregateInputType | true
    _avg?: AttrezzaturaAvgAggregateInputType
    _sum?: AttrezzaturaSumAggregateInputType
    _min?: AttrezzaturaMinAggregateInputType
    _max?: AttrezzaturaMaxAggregateInputType
  }


  export type AttrezzaturaGroupByOutputType = {
    id: number
    tipologiaAttrezzatura: number | null
    descrizione: string | null
    dataModifica: string | null
    _count: AttrezzaturaCountAggregateOutputType | null
    _avg: AttrezzaturaAvgAggregateOutputType | null
    _sum: AttrezzaturaSumAggregateOutputType | null
    _min: AttrezzaturaMinAggregateOutputType | null
    _max: AttrezzaturaMaxAggregateOutputType | null
  }

  type GetAttrezzaturaGroupByPayload<T extends AttrezzaturaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<AttrezzaturaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AttrezzaturaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AttrezzaturaGroupByOutputType[P]>
            : GetScalarType<T[P], AttrezzaturaGroupByOutputType[P]>
        }
      >
    >


  export type attrezzaturaSelect = {
    id?: boolean
    tipologiaAttrezzatura?: boolean
    descrizione?: boolean
    dataModifica?: boolean
  }


  export type attrezzaturaGetPayload<S extends boolean | null | undefined | attrezzaturaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? attrezzatura :
    S extends undefined ? never :
    S extends { include: any } & (attrezzaturaArgs | attrezzaturaFindManyArgs)
    ? attrezzatura 
    : S extends { select: any } & (attrezzaturaArgs | attrezzaturaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof attrezzatura ? attrezzatura[P] : never
  } 
      : attrezzatura


  type attrezzaturaCountArgs = 
    Omit<attrezzaturaFindManyArgs, 'select' | 'include'> & {
      select?: AttrezzaturaCountAggregateInputType | true
    }

  export interface attrezzaturaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Attrezzatura that matches the filter.
     * @param {attrezzaturaFindUniqueArgs} args - Arguments to find a Attrezzatura
     * @example
     * // Get one Attrezzatura
     * const attrezzatura = await prisma.attrezzatura.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends attrezzaturaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, attrezzaturaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'attrezzatura'> extends True ? Prisma__attrezzaturaClient<attrezzaturaGetPayload<T>> : Prisma__attrezzaturaClient<attrezzaturaGetPayload<T> | null, null>

    /**
     * Find one Attrezzatura that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {attrezzaturaFindUniqueOrThrowArgs} args - Arguments to find a Attrezzatura
     * @example
     * // Get one Attrezzatura
     * const attrezzatura = await prisma.attrezzatura.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends attrezzaturaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, attrezzaturaFindUniqueOrThrowArgs>
    ): Prisma__attrezzaturaClient<attrezzaturaGetPayload<T>>

    /**
     * Find the first Attrezzatura that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attrezzaturaFindFirstArgs} args - Arguments to find a Attrezzatura
     * @example
     * // Get one Attrezzatura
     * const attrezzatura = await prisma.attrezzatura.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends attrezzaturaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, attrezzaturaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'attrezzatura'> extends True ? Prisma__attrezzaturaClient<attrezzaturaGetPayload<T>> : Prisma__attrezzaturaClient<attrezzaturaGetPayload<T> | null, null>

    /**
     * Find the first Attrezzatura that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attrezzaturaFindFirstOrThrowArgs} args - Arguments to find a Attrezzatura
     * @example
     * // Get one Attrezzatura
     * const attrezzatura = await prisma.attrezzatura.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends attrezzaturaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, attrezzaturaFindFirstOrThrowArgs>
    ): Prisma__attrezzaturaClient<attrezzaturaGetPayload<T>>

    /**
     * Find zero or more Attrezzaturas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attrezzaturaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Attrezzaturas
     * const attrezzaturas = await prisma.attrezzatura.findMany()
     * 
     * // Get first 10 Attrezzaturas
     * const attrezzaturas = await prisma.attrezzatura.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const attrezzaturaWithIdOnly = await prisma.attrezzatura.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends attrezzaturaFindManyArgs>(
      args?: SelectSubset<T, attrezzaturaFindManyArgs>
    ): Prisma.PrismaPromise<Array<attrezzaturaGetPayload<T>>>

    /**
     * Create a Attrezzatura.
     * @param {attrezzaturaCreateArgs} args - Arguments to create a Attrezzatura.
     * @example
     * // Create one Attrezzatura
     * const Attrezzatura = await prisma.attrezzatura.create({
     *   data: {
     *     // ... data to create a Attrezzatura
     *   }
     * })
     * 
    **/
    create<T extends attrezzaturaCreateArgs>(
      args: SelectSubset<T, attrezzaturaCreateArgs>
    ): Prisma__attrezzaturaClient<attrezzaturaGetPayload<T>>

    /**
     * Create many Attrezzaturas.
     *     @param {attrezzaturaCreateManyArgs} args - Arguments to create many Attrezzaturas.
     *     @example
     *     // Create many Attrezzaturas
     *     const attrezzatura = await prisma.attrezzatura.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends attrezzaturaCreateManyArgs>(
      args?: SelectSubset<T, attrezzaturaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Attrezzatura.
     * @param {attrezzaturaDeleteArgs} args - Arguments to delete one Attrezzatura.
     * @example
     * // Delete one Attrezzatura
     * const Attrezzatura = await prisma.attrezzatura.delete({
     *   where: {
     *     // ... filter to delete one Attrezzatura
     *   }
     * })
     * 
    **/
    delete<T extends attrezzaturaDeleteArgs>(
      args: SelectSubset<T, attrezzaturaDeleteArgs>
    ): Prisma__attrezzaturaClient<attrezzaturaGetPayload<T>>

    /**
     * Update one Attrezzatura.
     * @param {attrezzaturaUpdateArgs} args - Arguments to update one Attrezzatura.
     * @example
     * // Update one Attrezzatura
     * const attrezzatura = await prisma.attrezzatura.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends attrezzaturaUpdateArgs>(
      args: SelectSubset<T, attrezzaturaUpdateArgs>
    ): Prisma__attrezzaturaClient<attrezzaturaGetPayload<T>>

    /**
     * Delete zero or more Attrezzaturas.
     * @param {attrezzaturaDeleteManyArgs} args - Arguments to filter Attrezzaturas to delete.
     * @example
     * // Delete a few Attrezzaturas
     * const { count } = await prisma.attrezzatura.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends attrezzaturaDeleteManyArgs>(
      args?: SelectSubset<T, attrezzaturaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Attrezzaturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attrezzaturaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Attrezzaturas
     * const attrezzatura = await prisma.attrezzatura.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends attrezzaturaUpdateManyArgs>(
      args: SelectSubset<T, attrezzaturaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Attrezzatura.
     * @param {attrezzaturaUpsertArgs} args - Arguments to update or create a Attrezzatura.
     * @example
     * // Update or create a Attrezzatura
     * const attrezzatura = await prisma.attrezzatura.upsert({
     *   create: {
     *     // ... data to create a Attrezzatura
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Attrezzatura we want to update
     *   }
     * })
    **/
    upsert<T extends attrezzaturaUpsertArgs>(
      args: SelectSubset<T, attrezzaturaUpsertArgs>
    ): Prisma__attrezzaturaClient<attrezzaturaGetPayload<T>>

    /**
     * Count the number of Attrezzaturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attrezzaturaCountArgs} args - Arguments to filter Attrezzaturas to count.
     * @example
     * // Count the number of Attrezzaturas
     * const count = await prisma.attrezzatura.count({
     *   where: {
     *     // ... the filter for the Attrezzaturas we want to count
     *   }
     * })
    **/
    count<T extends attrezzaturaCountArgs>(
      args?: Subset<T, attrezzaturaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AttrezzaturaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Attrezzatura.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AttrezzaturaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AttrezzaturaAggregateArgs>(args: Subset<T, AttrezzaturaAggregateArgs>): Prisma.PrismaPromise<GetAttrezzaturaAggregateType<T>>

    /**
     * Group by Attrezzatura.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AttrezzaturaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AttrezzaturaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AttrezzaturaGroupByArgs['orderBy'] }
        : { orderBy?: AttrezzaturaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AttrezzaturaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAttrezzaturaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for attrezzatura.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__attrezzaturaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * attrezzatura base type for findUnique actions
   */
  export type attrezzaturaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the attrezzatura
     */
    select?: attrezzaturaSelect | null
    /**
     * Filter, which attrezzatura to fetch.
     */
    where: attrezzaturaWhereUniqueInput
  }

  /**
   * attrezzatura findUnique
   */
  export interface attrezzaturaFindUniqueArgs extends attrezzaturaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * attrezzatura findUniqueOrThrow
   */
  export type attrezzaturaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the attrezzatura
     */
    select?: attrezzaturaSelect | null
    /**
     * Filter, which attrezzatura to fetch.
     */
    where: attrezzaturaWhereUniqueInput
  }


  /**
   * attrezzatura base type for findFirst actions
   */
  export type attrezzaturaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the attrezzatura
     */
    select?: attrezzaturaSelect | null
    /**
     * Filter, which attrezzatura to fetch.
     */
    where?: attrezzaturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attrezzaturas to fetch.
     */
    orderBy?: Enumerable<attrezzaturaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attrezzaturas.
     */
    cursor?: attrezzaturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attrezzaturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attrezzaturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attrezzaturas.
     */
    distinct?: Enumerable<AttrezzaturaScalarFieldEnum>
  }

  /**
   * attrezzatura findFirst
   */
  export interface attrezzaturaFindFirstArgs extends attrezzaturaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * attrezzatura findFirstOrThrow
   */
  export type attrezzaturaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the attrezzatura
     */
    select?: attrezzaturaSelect | null
    /**
     * Filter, which attrezzatura to fetch.
     */
    where?: attrezzaturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attrezzaturas to fetch.
     */
    orderBy?: Enumerable<attrezzaturaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attrezzaturas.
     */
    cursor?: attrezzaturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attrezzaturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attrezzaturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attrezzaturas.
     */
    distinct?: Enumerable<AttrezzaturaScalarFieldEnum>
  }


  /**
   * attrezzatura findMany
   */
  export type attrezzaturaFindManyArgs = {
    /**
     * Select specific fields to fetch from the attrezzatura
     */
    select?: attrezzaturaSelect | null
    /**
     * Filter, which attrezzaturas to fetch.
     */
    where?: attrezzaturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attrezzaturas to fetch.
     */
    orderBy?: Enumerable<attrezzaturaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing attrezzaturas.
     */
    cursor?: attrezzaturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attrezzaturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attrezzaturas.
     */
    skip?: number
    distinct?: Enumerable<AttrezzaturaScalarFieldEnum>
  }


  /**
   * attrezzatura create
   */
  export type attrezzaturaCreateArgs = {
    /**
     * Select specific fields to fetch from the attrezzatura
     */
    select?: attrezzaturaSelect | null
    /**
     * The data needed to create a attrezzatura.
     */
    data: XOR<attrezzaturaCreateInput, attrezzaturaUncheckedCreateInput>
  }


  /**
   * attrezzatura createMany
   */
  export type attrezzaturaCreateManyArgs = {
    /**
     * The data used to create many attrezzaturas.
     */
    data: Enumerable<attrezzaturaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * attrezzatura update
   */
  export type attrezzaturaUpdateArgs = {
    /**
     * Select specific fields to fetch from the attrezzatura
     */
    select?: attrezzaturaSelect | null
    /**
     * The data needed to update a attrezzatura.
     */
    data: XOR<attrezzaturaUpdateInput, attrezzaturaUncheckedUpdateInput>
    /**
     * Choose, which attrezzatura to update.
     */
    where: attrezzaturaWhereUniqueInput
  }


  /**
   * attrezzatura updateMany
   */
  export type attrezzaturaUpdateManyArgs = {
    /**
     * The data used to update attrezzaturas.
     */
    data: XOR<attrezzaturaUpdateManyMutationInput, attrezzaturaUncheckedUpdateManyInput>
    /**
     * Filter which attrezzaturas to update
     */
    where?: attrezzaturaWhereInput
  }


  /**
   * attrezzatura upsert
   */
  export type attrezzaturaUpsertArgs = {
    /**
     * Select specific fields to fetch from the attrezzatura
     */
    select?: attrezzaturaSelect | null
    /**
     * The filter to search for the attrezzatura to update in case it exists.
     */
    where: attrezzaturaWhereUniqueInput
    /**
     * In case the attrezzatura found by the `where` argument doesn't exist, create a new attrezzatura with this data.
     */
    create: XOR<attrezzaturaCreateInput, attrezzaturaUncheckedCreateInput>
    /**
     * In case the attrezzatura was found with the provided `where` argument, update it with this data.
     */
    update: XOR<attrezzaturaUpdateInput, attrezzaturaUncheckedUpdateInput>
  }


  /**
   * attrezzatura delete
   */
  export type attrezzaturaDeleteArgs = {
    /**
     * Select specific fields to fetch from the attrezzatura
     */
    select?: attrezzaturaSelect | null
    /**
     * Filter which attrezzatura to delete.
     */
    where: attrezzaturaWhereUniqueInput
  }


  /**
   * attrezzatura deleteMany
   */
  export type attrezzaturaDeleteManyArgs = {
    /**
     * Filter which attrezzaturas to delete
     */
    where?: attrezzaturaWhereInput
  }


  /**
   * attrezzatura without action
   */
  export type attrezzaturaArgs = {
    /**
     * Select specific fields to fetch from the attrezzatura
     */
    select?: attrezzaturaSelect | null
  }



  /**
   * Model catasto_monitoraggio
   */


  export type AggregateCatasto_monitoraggio = {
    _count: Catasto_monitoraggioCountAggregateOutputType | null
    _avg: Catasto_monitoraggioAvgAggregateOutputType | null
    _sum: Catasto_monitoraggioSumAggregateOutputType | null
    _min: Catasto_monitoraggioMinAggregateOutputType | null
    _max: Catasto_monitoraggioMaxAggregateOutputType | null
  }

  export type Catasto_monitoraggioAvgAggregateOutputType = {
    id: number | null
  }

  export type Catasto_monitoraggioSumAggregateOutputType = {
    id: number | null
  }

  export type Catasto_monitoraggioMinAggregateOutputType = {
    id: number | null
    tabellaCatasto: string | null
    tabellaMonitoraggio: string | null
    idElemento: string | null
  }

  export type Catasto_monitoraggioMaxAggregateOutputType = {
    id: number | null
    tabellaCatasto: string | null
    tabellaMonitoraggio: string | null
    idElemento: string | null
  }

  export type Catasto_monitoraggioCountAggregateOutputType = {
    id: number
    tabellaCatasto: number
    tabellaMonitoraggio: number
    idElemento: number
    _all: number
  }


  export type Catasto_monitoraggioAvgAggregateInputType = {
    id?: true
  }

  export type Catasto_monitoraggioSumAggregateInputType = {
    id?: true
  }

  export type Catasto_monitoraggioMinAggregateInputType = {
    id?: true
    tabellaCatasto?: true
    tabellaMonitoraggio?: true
    idElemento?: true
  }

  export type Catasto_monitoraggioMaxAggregateInputType = {
    id?: true
    tabellaCatasto?: true
    tabellaMonitoraggio?: true
    idElemento?: true
  }

  export type Catasto_monitoraggioCountAggregateInputType = {
    id?: true
    tabellaCatasto?: true
    tabellaMonitoraggio?: true
    idElemento?: true
    _all?: true
  }

  export type Catasto_monitoraggioAggregateArgs = {
    /**
     * Filter which catasto_monitoraggio to aggregate.
     */
    where?: catasto_monitoraggioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catasto_monitoraggios to fetch.
     */
    orderBy?: Enumerable<catasto_monitoraggioOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: catasto_monitoraggioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catasto_monitoraggios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catasto_monitoraggios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned catasto_monitoraggios
    **/
    _count?: true | Catasto_monitoraggioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Catasto_monitoraggioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Catasto_monitoraggioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Catasto_monitoraggioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Catasto_monitoraggioMaxAggregateInputType
  }

  export type GetCatasto_monitoraggioAggregateType<T extends Catasto_monitoraggioAggregateArgs> = {
        [P in keyof T & keyof AggregateCatasto_monitoraggio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCatasto_monitoraggio[P]>
      : GetScalarType<T[P], AggregateCatasto_monitoraggio[P]>
  }




  export type Catasto_monitoraggioGroupByArgs = {
    where?: catasto_monitoraggioWhereInput
    orderBy?: Enumerable<catasto_monitoraggioOrderByWithAggregationInput>
    by: Catasto_monitoraggioScalarFieldEnum[]
    having?: catasto_monitoraggioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Catasto_monitoraggioCountAggregateInputType | true
    _avg?: Catasto_monitoraggioAvgAggregateInputType
    _sum?: Catasto_monitoraggioSumAggregateInputType
    _min?: Catasto_monitoraggioMinAggregateInputType
    _max?: Catasto_monitoraggioMaxAggregateInputType
  }


  export type Catasto_monitoraggioGroupByOutputType = {
    id: number
    tabellaCatasto: string | null
    tabellaMonitoraggio: string | null
    idElemento: string | null
    _count: Catasto_monitoraggioCountAggregateOutputType | null
    _avg: Catasto_monitoraggioAvgAggregateOutputType | null
    _sum: Catasto_monitoraggioSumAggregateOutputType | null
    _min: Catasto_monitoraggioMinAggregateOutputType | null
    _max: Catasto_monitoraggioMaxAggregateOutputType | null
  }

  type GetCatasto_monitoraggioGroupByPayload<T extends Catasto_monitoraggioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Catasto_monitoraggioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Catasto_monitoraggioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Catasto_monitoraggioGroupByOutputType[P]>
            : GetScalarType<T[P], Catasto_monitoraggioGroupByOutputType[P]>
        }
      >
    >


  export type catasto_monitoraggioSelect = {
    id?: boolean
    tabellaCatasto?: boolean
    tabellaMonitoraggio?: boolean
    idElemento?: boolean
  }


  export type catasto_monitoraggioGetPayload<S extends boolean | null | undefined | catasto_monitoraggioArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? catasto_monitoraggio :
    S extends undefined ? never :
    S extends { include: any } & (catasto_monitoraggioArgs | catasto_monitoraggioFindManyArgs)
    ? catasto_monitoraggio 
    : S extends { select: any } & (catasto_monitoraggioArgs | catasto_monitoraggioFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof catasto_monitoraggio ? catasto_monitoraggio[P] : never
  } 
      : catasto_monitoraggio


  type catasto_monitoraggioCountArgs = 
    Omit<catasto_monitoraggioFindManyArgs, 'select' | 'include'> & {
      select?: Catasto_monitoraggioCountAggregateInputType | true
    }

  export interface catasto_monitoraggioDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Catasto_monitoraggio that matches the filter.
     * @param {catasto_monitoraggioFindUniqueArgs} args - Arguments to find a Catasto_monitoraggio
     * @example
     * // Get one Catasto_monitoraggio
     * const catasto_monitoraggio = await prisma.catasto_monitoraggio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends catasto_monitoraggioFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, catasto_monitoraggioFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'catasto_monitoraggio'> extends True ? Prisma__catasto_monitoraggioClient<catasto_monitoraggioGetPayload<T>> : Prisma__catasto_monitoraggioClient<catasto_monitoraggioGetPayload<T> | null, null>

    /**
     * Find one Catasto_monitoraggio that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {catasto_monitoraggioFindUniqueOrThrowArgs} args - Arguments to find a Catasto_monitoraggio
     * @example
     * // Get one Catasto_monitoraggio
     * const catasto_monitoraggio = await prisma.catasto_monitoraggio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends catasto_monitoraggioFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, catasto_monitoraggioFindUniqueOrThrowArgs>
    ): Prisma__catasto_monitoraggioClient<catasto_monitoraggioGetPayload<T>>

    /**
     * Find the first Catasto_monitoraggio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catasto_monitoraggioFindFirstArgs} args - Arguments to find a Catasto_monitoraggio
     * @example
     * // Get one Catasto_monitoraggio
     * const catasto_monitoraggio = await prisma.catasto_monitoraggio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends catasto_monitoraggioFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, catasto_monitoraggioFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'catasto_monitoraggio'> extends True ? Prisma__catasto_monitoraggioClient<catasto_monitoraggioGetPayload<T>> : Prisma__catasto_monitoraggioClient<catasto_monitoraggioGetPayload<T> | null, null>

    /**
     * Find the first Catasto_monitoraggio that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catasto_monitoraggioFindFirstOrThrowArgs} args - Arguments to find a Catasto_monitoraggio
     * @example
     * // Get one Catasto_monitoraggio
     * const catasto_monitoraggio = await prisma.catasto_monitoraggio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends catasto_monitoraggioFindFirstOrThrowArgs>(
      args?: SelectSubset<T, catasto_monitoraggioFindFirstOrThrowArgs>
    ): Prisma__catasto_monitoraggioClient<catasto_monitoraggioGetPayload<T>>

    /**
     * Find zero or more Catasto_monitoraggios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catasto_monitoraggioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Catasto_monitoraggios
     * const catasto_monitoraggios = await prisma.catasto_monitoraggio.findMany()
     * 
     * // Get first 10 Catasto_monitoraggios
     * const catasto_monitoraggios = await prisma.catasto_monitoraggio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const catasto_monitoraggioWithIdOnly = await prisma.catasto_monitoraggio.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends catasto_monitoraggioFindManyArgs>(
      args?: SelectSubset<T, catasto_monitoraggioFindManyArgs>
    ): Prisma.PrismaPromise<Array<catasto_monitoraggioGetPayload<T>>>

    /**
     * Create a Catasto_monitoraggio.
     * @param {catasto_monitoraggioCreateArgs} args - Arguments to create a Catasto_monitoraggio.
     * @example
     * // Create one Catasto_monitoraggio
     * const Catasto_monitoraggio = await prisma.catasto_monitoraggio.create({
     *   data: {
     *     // ... data to create a Catasto_monitoraggio
     *   }
     * })
     * 
    **/
    create<T extends catasto_monitoraggioCreateArgs>(
      args: SelectSubset<T, catasto_monitoraggioCreateArgs>
    ): Prisma__catasto_monitoraggioClient<catasto_monitoraggioGetPayload<T>>

    /**
     * Create many Catasto_monitoraggios.
     *     @param {catasto_monitoraggioCreateManyArgs} args - Arguments to create many Catasto_monitoraggios.
     *     @example
     *     // Create many Catasto_monitoraggios
     *     const catasto_monitoraggio = await prisma.catasto_monitoraggio.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends catasto_monitoraggioCreateManyArgs>(
      args?: SelectSubset<T, catasto_monitoraggioCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Catasto_monitoraggio.
     * @param {catasto_monitoraggioDeleteArgs} args - Arguments to delete one Catasto_monitoraggio.
     * @example
     * // Delete one Catasto_monitoraggio
     * const Catasto_monitoraggio = await prisma.catasto_monitoraggio.delete({
     *   where: {
     *     // ... filter to delete one Catasto_monitoraggio
     *   }
     * })
     * 
    **/
    delete<T extends catasto_monitoraggioDeleteArgs>(
      args: SelectSubset<T, catasto_monitoraggioDeleteArgs>
    ): Prisma__catasto_monitoraggioClient<catasto_monitoraggioGetPayload<T>>

    /**
     * Update one Catasto_monitoraggio.
     * @param {catasto_monitoraggioUpdateArgs} args - Arguments to update one Catasto_monitoraggio.
     * @example
     * // Update one Catasto_monitoraggio
     * const catasto_monitoraggio = await prisma.catasto_monitoraggio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends catasto_monitoraggioUpdateArgs>(
      args: SelectSubset<T, catasto_monitoraggioUpdateArgs>
    ): Prisma__catasto_monitoraggioClient<catasto_monitoraggioGetPayload<T>>

    /**
     * Delete zero or more Catasto_monitoraggios.
     * @param {catasto_monitoraggioDeleteManyArgs} args - Arguments to filter Catasto_monitoraggios to delete.
     * @example
     * // Delete a few Catasto_monitoraggios
     * const { count } = await prisma.catasto_monitoraggio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends catasto_monitoraggioDeleteManyArgs>(
      args?: SelectSubset<T, catasto_monitoraggioDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Catasto_monitoraggios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catasto_monitoraggioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Catasto_monitoraggios
     * const catasto_monitoraggio = await prisma.catasto_monitoraggio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends catasto_monitoraggioUpdateManyArgs>(
      args: SelectSubset<T, catasto_monitoraggioUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Catasto_monitoraggio.
     * @param {catasto_monitoraggioUpsertArgs} args - Arguments to update or create a Catasto_monitoraggio.
     * @example
     * // Update or create a Catasto_monitoraggio
     * const catasto_monitoraggio = await prisma.catasto_monitoraggio.upsert({
     *   create: {
     *     // ... data to create a Catasto_monitoraggio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Catasto_monitoraggio we want to update
     *   }
     * })
    **/
    upsert<T extends catasto_monitoraggioUpsertArgs>(
      args: SelectSubset<T, catasto_monitoraggioUpsertArgs>
    ): Prisma__catasto_monitoraggioClient<catasto_monitoraggioGetPayload<T>>

    /**
     * Count the number of Catasto_monitoraggios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catasto_monitoraggioCountArgs} args - Arguments to filter Catasto_monitoraggios to count.
     * @example
     * // Count the number of Catasto_monitoraggios
     * const count = await prisma.catasto_monitoraggio.count({
     *   where: {
     *     // ... the filter for the Catasto_monitoraggios we want to count
     *   }
     * })
    **/
    count<T extends catasto_monitoraggioCountArgs>(
      args?: Subset<T, catasto_monitoraggioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Catasto_monitoraggioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Catasto_monitoraggio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Catasto_monitoraggioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Catasto_monitoraggioAggregateArgs>(args: Subset<T, Catasto_monitoraggioAggregateArgs>): Prisma.PrismaPromise<GetCatasto_monitoraggioAggregateType<T>>

    /**
     * Group by Catasto_monitoraggio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Catasto_monitoraggioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Catasto_monitoraggioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Catasto_monitoraggioGroupByArgs['orderBy'] }
        : { orderBy?: Catasto_monitoraggioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Catasto_monitoraggioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCatasto_monitoraggioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for catasto_monitoraggio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__catasto_monitoraggioClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * catasto_monitoraggio base type for findUnique actions
   */
  export type catasto_monitoraggioFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the catasto_monitoraggio
     */
    select?: catasto_monitoraggioSelect | null
    /**
     * Filter, which catasto_monitoraggio to fetch.
     */
    where: catasto_monitoraggioWhereUniqueInput
  }

  /**
   * catasto_monitoraggio findUnique
   */
  export interface catasto_monitoraggioFindUniqueArgs extends catasto_monitoraggioFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * catasto_monitoraggio findUniqueOrThrow
   */
  export type catasto_monitoraggioFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the catasto_monitoraggio
     */
    select?: catasto_monitoraggioSelect | null
    /**
     * Filter, which catasto_monitoraggio to fetch.
     */
    where: catasto_monitoraggioWhereUniqueInput
  }


  /**
   * catasto_monitoraggio base type for findFirst actions
   */
  export type catasto_monitoraggioFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the catasto_monitoraggio
     */
    select?: catasto_monitoraggioSelect | null
    /**
     * Filter, which catasto_monitoraggio to fetch.
     */
    where?: catasto_monitoraggioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catasto_monitoraggios to fetch.
     */
    orderBy?: Enumerable<catasto_monitoraggioOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for catasto_monitoraggios.
     */
    cursor?: catasto_monitoraggioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catasto_monitoraggios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catasto_monitoraggios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of catasto_monitoraggios.
     */
    distinct?: Enumerable<Catasto_monitoraggioScalarFieldEnum>
  }

  /**
   * catasto_monitoraggio findFirst
   */
  export interface catasto_monitoraggioFindFirstArgs extends catasto_monitoraggioFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * catasto_monitoraggio findFirstOrThrow
   */
  export type catasto_monitoraggioFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the catasto_monitoraggio
     */
    select?: catasto_monitoraggioSelect | null
    /**
     * Filter, which catasto_monitoraggio to fetch.
     */
    where?: catasto_monitoraggioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catasto_monitoraggios to fetch.
     */
    orderBy?: Enumerable<catasto_monitoraggioOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for catasto_monitoraggios.
     */
    cursor?: catasto_monitoraggioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catasto_monitoraggios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catasto_monitoraggios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of catasto_monitoraggios.
     */
    distinct?: Enumerable<Catasto_monitoraggioScalarFieldEnum>
  }


  /**
   * catasto_monitoraggio findMany
   */
  export type catasto_monitoraggioFindManyArgs = {
    /**
     * Select specific fields to fetch from the catasto_monitoraggio
     */
    select?: catasto_monitoraggioSelect | null
    /**
     * Filter, which catasto_monitoraggios to fetch.
     */
    where?: catasto_monitoraggioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catasto_monitoraggios to fetch.
     */
    orderBy?: Enumerable<catasto_monitoraggioOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing catasto_monitoraggios.
     */
    cursor?: catasto_monitoraggioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catasto_monitoraggios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catasto_monitoraggios.
     */
    skip?: number
    distinct?: Enumerable<Catasto_monitoraggioScalarFieldEnum>
  }


  /**
   * catasto_monitoraggio create
   */
  export type catasto_monitoraggioCreateArgs = {
    /**
     * Select specific fields to fetch from the catasto_monitoraggio
     */
    select?: catasto_monitoraggioSelect | null
    /**
     * The data needed to create a catasto_monitoraggio.
     */
    data: XOR<catasto_monitoraggioCreateInput, catasto_monitoraggioUncheckedCreateInput>
  }


  /**
   * catasto_monitoraggio createMany
   */
  export type catasto_monitoraggioCreateManyArgs = {
    /**
     * The data used to create many catasto_monitoraggios.
     */
    data: Enumerable<catasto_monitoraggioCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * catasto_monitoraggio update
   */
  export type catasto_monitoraggioUpdateArgs = {
    /**
     * Select specific fields to fetch from the catasto_monitoraggio
     */
    select?: catasto_monitoraggioSelect | null
    /**
     * The data needed to update a catasto_monitoraggio.
     */
    data: XOR<catasto_monitoraggioUpdateInput, catasto_monitoraggioUncheckedUpdateInput>
    /**
     * Choose, which catasto_monitoraggio to update.
     */
    where: catasto_monitoraggioWhereUniqueInput
  }


  /**
   * catasto_monitoraggio updateMany
   */
  export type catasto_monitoraggioUpdateManyArgs = {
    /**
     * The data used to update catasto_monitoraggios.
     */
    data: XOR<catasto_monitoraggioUpdateManyMutationInput, catasto_monitoraggioUncheckedUpdateManyInput>
    /**
     * Filter which catasto_monitoraggios to update
     */
    where?: catasto_monitoraggioWhereInput
  }


  /**
   * catasto_monitoraggio upsert
   */
  export type catasto_monitoraggioUpsertArgs = {
    /**
     * Select specific fields to fetch from the catasto_monitoraggio
     */
    select?: catasto_monitoraggioSelect | null
    /**
     * The filter to search for the catasto_monitoraggio to update in case it exists.
     */
    where: catasto_monitoraggioWhereUniqueInput
    /**
     * In case the catasto_monitoraggio found by the `where` argument doesn't exist, create a new catasto_monitoraggio with this data.
     */
    create: XOR<catasto_monitoraggioCreateInput, catasto_monitoraggioUncheckedCreateInput>
    /**
     * In case the catasto_monitoraggio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<catasto_monitoraggioUpdateInput, catasto_monitoraggioUncheckedUpdateInput>
  }


  /**
   * catasto_monitoraggio delete
   */
  export type catasto_monitoraggioDeleteArgs = {
    /**
     * Select specific fields to fetch from the catasto_monitoraggio
     */
    select?: catasto_monitoraggioSelect | null
    /**
     * Filter which catasto_monitoraggio to delete.
     */
    where: catasto_monitoraggioWhereUniqueInput
  }


  /**
   * catasto_monitoraggio deleteMany
   */
  export type catasto_monitoraggioDeleteManyArgs = {
    /**
     * Filter which catasto_monitoraggios to delete
     */
    where?: catasto_monitoraggioWhereInput
  }


  /**
   * catasto_monitoraggio without action
   */
  export type catasto_monitoraggioArgs = {
    /**
     * Select specific fields to fetch from the catasto_monitoraggio
     */
    select?: catasto_monitoraggioSelect | null
  }



  /**
   * Model catastoanomalia
   */


  export type AggregateCatastoanomalia = {
    _count: CatastoanomaliaCountAggregateOutputType | null
    _avg: CatastoanomaliaAvgAggregateOutputType | null
    _sum: CatastoanomaliaSumAggregateOutputType | null
    _min: CatastoanomaliaMinAggregateOutputType | null
    _max: CatastoanomaliaMaxAggregateOutputType | null
  }

  export type CatastoanomaliaAvgAggregateOutputType = {
    id: number | null
    idUtente: number | null
    idAppalto: number | null
  }

  export type CatastoanomaliaSumAggregateOutputType = {
    id: number | null
    idUtente: number | null
    idAppalto: number | null
  }

  export type CatastoanomaliaMinAggregateOutputType = {
    id: number | null
    idUtente: number | null
    idAppalto: number | null
    dataModifica: string | null
    adjacentLayer: string | null
    adjacentLayerGeom: string | null
  }

  export type CatastoanomaliaMaxAggregateOutputType = {
    id: number | null
    idUtente: number | null
    idAppalto: number | null
    dataModifica: string | null
    adjacentLayer: string | null
    adjacentLayerGeom: string | null
  }

  export type CatastoanomaliaCountAggregateOutputType = {
    id: number
    idUtente: number
    idAppalto: number
    dataModifica: number
    adjacentLayer: number
    adjacentLayerGeom: number
    _all: number
  }


  export type CatastoanomaliaAvgAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
  }

  export type CatastoanomaliaSumAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
  }

  export type CatastoanomaliaMinAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
    dataModifica?: true
    adjacentLayer?: true
    adjacentLayerGeom?: true
  }

  export type CatastoanomaliaMaxAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
    dataModifica?: true
    adjacentLayer?: true
    adjacentLayerGeom?: true
  }

  export type CatastoanomaliaCountAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
    dataModifica?: true
    adjacentLayer?: true
    adjacentLayerGeom?: true
    _all?: true
  }

  export type CatastoanomaliaAggregateArgs = {
    /**
     * Filter which catastoanomalia to aggregate.
     */
    where?: catastoanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catastoanomalias to fetch.
     */
    orderBy?: Enumerable<catastoanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: catastoanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catastoanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catastoanomalias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned catastoanomalias
    **/
    _count?: true | CatastoanomaliaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CatastoanomaliaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CatastoanomaliaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CatastoanomaliaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CatastoanomaliaMaxAggregateInputType
  }

  export type GetCatastoanomaliaAggregateType<T extends CatastoanomaliaAggregateArgs> = {
        [P in keyof T & keyof AggregateCatastoanomalia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCatastoanomalia[P]>
      : GetScalarType<T[P], AggregateCatastoanomalia[P]>
  }




  export type CatastoanomaliaGroupByArgs = {
    where?: catastoanomaliaWhereInput
    orderBy?: Enumerable<catastoanomaliaOrderByWithAggregationInput>
    by: CatastoanomaliaScalarFieldEnum[]
    having?: catastoanomaliaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CatastoanomaliaCountAggregateInputType | true
    _avg?: CatastoanomaliaAvgAggregateInputType
    _sum?: CatastoanomaliaSumAggregateInputType
    _min?: CatastoanomaliaMinAggregateInputType
    _max?: CatastoanomaliaMaxAggregateInputType
  }


  export type CatastoanomaliaGroupByOutputType = {
    id: number
    idUtente: number | null
    idAppalto: number | null
    dataModifica: string | null
    adjacentLayer: string | null
    adjacentLayerGeom: string | null
    _count: CatastoanomaliaCountAggregateOutputType | null
    _avg: CatastoanomaliaAvgAggregateOutputType | null
    _sum: CatastoanomaliaSumAggregateOutputType | null
    _min: CatastoanomaliaMinAggregateOutputType | null
    _max: CatastoanomaliaMaxAggregateOutputType | null
  }

  type GetCatastoanomaliaGroupByPayload<T extends CatastoanomaliaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<CatastoanomaliaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CatastoanomaliaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CatastoanomaliaGroupByOutputType[P]>
            : GetScalarType<T[P], CatastoanomaliaGroupByOutputType[P]>
        }
      >
    >


  export type catastoanomaliaSelect = {
    id?: boolean
    idUtente?: boolean
    idAppalto?: boolean
    dataModifica?: boolean
    adjacentLayer?: boolean
    adjacentLayerGeom?: boolean
    utenti?: boolean | utentiArgs
  }


  export type catastoanomaliaInclude = {
    utenti?: boolean | utentiArgs
  }

  export type catastoanomaliaGetPayload<S extends boolean | null | undefined | catastoanomaliaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? catastoanomalia :
    S extends undefined ? never :
    S extends { include: any } & (catastoanomaliaArgs | catastoanomaliaFindManyArgs)
    ? catastoanomalia  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'utenti' ? utentiGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (catastoanomaliaArgs | catastoanomaliaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'utenti' ? utentiGetPayload<S['select'][P]> | null :  P extends keyof catastoanomalia ? catastoanomalia[P] : never
  } 
      : catastoanomalia


  type catastoanomaliaCountArgs = 
    Omit<catastoanomaliaFindManyArgs, 'select' | 'include'> & {
      select?: CatastoanomaliaCountAggregateInputType | true
    }

  export interface catastoanomaliaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Catastoanomalia that matches the filter.
     * @param {catastoanomaliaFindUniqueArgs} args - Arguments to find a Catastoanomalia
     * @example
     * // Get one Catastoanomalia
     * const catastoanomalia = await prisma.catastoanomalia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends catastoanomaliaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, catastoanomaliaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'catastoanomalia'> extends True ? Prisma__catastoanomaliaClient<catastoanomaliaGetPayload<T>> : Prisma__catastoanomaliaClient<catastoanomaliaGetPayload<T> | null, null>

    /**
     * Find one Catastoanomalia that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {catastoanomaliaFindUniqueOrThrowArgs} args - Arguments to find a Catastoanomalia
     * @example
     * // Get one Catastoanomalia
     * const catastoanomalia = await prisma.catastoanomalia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends catastoanomaliaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, catastoanomaliaFindUniqueOrThrowArgs>
    ): Prisma__catastoanomaliaClient<catastoanomaliaGetPayload<T>>

    /**
     * Find the first Catastoanomalia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catastoanomaliaFindFirstArgs} args - Arguments to find a Catastoanomalia
     * @example
     * // Get one Catastoanomalia
     * const catastoanomalia = await prisma.catastoanomalia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends catastoanomaliaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, catastoanomaliaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'catastoanomalia'> extends True ? Prisma__catastoanomaliaClient<catastoanomaliaGetPayload<T>> : Prisma__catastoanomaliaClient<catastoanomaliaGetPayload<T> | null, null>

    /**
     * Find the first Catastoanomalia that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catastoanomaliaFindFirstOrThrowArgs} args - Arguments to find a Catastoanomalia
     * @example
     * // Get one Catastoanomalia
     * const catastoanomalia = await prisma.catastoanomalia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends catastoanomaliaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, catastoanomaliaFindFirstOrThrowArgs>
    ): Prisma__catastoanomaliaClient<catastoanomaliaGetPayload<T>>

    /**
     * Find zero or more Catastoanomalias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catastoanomaliaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Catastoanomalias
     * const catastoanomalias = await prisma.catastoanomalia.findMany()
     * 
     * // Get first 10 Catastoanomalias
     * const catastoanomalias = await prisma.catastoanomalia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const catastoanomaliaWithIdOnly = await prisma.catastoanomalia.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends catastoanomaliaFindManyArgs>(
      args?: SelectSubset<T, catastoanomaliaFindManyArgs>
    ): Prisma.PrismaPromise<Array<catastoanomaliaGetPayload<T>>>

    /**
     * Create a Catastoanomalia.
     * @param {catastoanomaliaCreateArgs} args - Arguments to create a Catastoanomalia.
     * @example
     * // Create one Catastoanomalia
     * const Catastoanomalia = await prisma.catastoanomalia.create({
     *   data: {
     *     // ... data to create a Catastoanomalia
     *   }
     * })
     * 
    **/
    create<T extends catastoanomaliaCreateArgs>(
      args: SelectSubset<T, catastoanomaliaCreateArgs>
    ): Prisma__catastoanomaliaClient<catastoanomaliaGetPayload<T>>

    /**
     * Create many Catastoanomalias.
     *     @param {catastoanomaliaCreateManyArgs} args - Arguments to create many Catastoanomalias.
     *     @example
     *     // Create many Catastoanomalias
     *     const catastoanomalia = await prisma.catastoanomalia.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends catastoanomaliaCreateManyArgs>(
      args?: SelectSubset<T, catastoanomaliaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Catastoanomalia.
     * @param {catastoanomaliaDeleteArgs} args - Arguments to delete one Catastoanomalia.
     * @example
     * // Delete one Catastoanomalia
     * const Catastoanomalia = await prisma.catastoanomalia.delete({
     *   where: {
     *     // ... filter to delete one Catastoanomalia
     *   }
     * })
     * 
    **/
    delete<T extends catastoanomaliaDeleteArgs>(
      args: SelectSubset<T, catastoanomaliaDeleteArgs>
    ): Prisma__catastoanomaliaClient<catastoanomaliaGetPayload<T>>

    /**
     * Update one Catastoanomalia.
     * @param {catastoanomaliaUpdateArgs} args - Arguments to update one Catastoanomalia.
     * @example
     * // Update one Catastoanomalia
     * const catastoanomalia = await prisma.catastoanomalia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends catastoanomaliaUpdateArgs>(
      args: SelectSubset<T, catastoanomaliaUpdateArgs>
    ): Prisma__catastoanomaliaClient<catastoanomaliaGetPayload<T>>

    /**
     * Delete zero or more Catastoanomalias.
     * @param {catastoanomaliaDeleteManyArgs} args - Arguments to filter Catastoanomalias to delete.
     * @example
     * // Delete a few Catastoanomalias
     * const { count } = await prisma.catastoanomalia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends catastoanomaliaDeleteManyArgs>(
      args?: SelectSubset<T, catastoanomaliaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Catastoanomalias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catastoanomaliaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Catastoanomalias
     * const catastoanomalia = await prisma.catastoanomalia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends catastoanomaliaUpdateManyArgs>(
      args: SelectSubset<T, catastoanomaliaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Catastoanomalia.
     * @param {catastoanomaliaUpsertArgs} args - Arguments to update or create a Catastoanomalia.
     * @example
     * // Update or create a Catastoanomalia
     * const catastoanomalia = await prisma.catastoanomalia.upsert({
     *   create: {
     *     // ... data to create a Catastoanomalia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Catastoanomalia we want to update
     *   }
     * })
    **/
    upsert<T extends catastoanomaliaUpsertArgs>(
      args: SelectSubset<T, catastoanomaliaUpsertArgs>
    ): Prisma__catastoanomaliaClient<catastoanomaliaGetPayload<T>>

    /**
     * Count the number of Catastoanomalias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catastoanomaliaCountArgs} args - Arguments to filter Catastoanomalias to count.
     * @example
     * // Count the number of Catastoanomalias
     * const count = await prisma.catastoanomalia.count({
     *   where: {
     *     // ... the filter for the Catastoanomalias we want to count
     *   }
     * })
    **/
    count<T extends catastoanomaliaCountArgs>(
      args?: Subset<T, catastoanomaliaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CatastoanomaliaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Catastoanomalia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatastoanomaliaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CatastoanomaliaAggregateArgs>(args: Subset<T, CatastoanomaliaAggregateArgs>): Prisma.PrismaPromise<GetCatastoanomaliaAggregateType<T>>

    /**
     * Group by Catastoanomalia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatastoanomaliaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CatastoanomaliaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CatastoanomaliaGroupByArgs['orderBy'] }
        : { orderBy?: CatastoanomaliaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CatastoanomaliaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCatastoanomaliaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for catastoanomalia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__catastoanomaliaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    utenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * catastoanomalia base type for findUnique actions
   */
  export type catastoanomaliaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the catastoanomalia
     */
    select?: catastoanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastoanomaliaInclude | null
    /**
     * Filter, which catastoanomalia to fetch.
     */
    where: catastoanomaliaWhereUniqueInput
  }

  /**
   * catastoanomalia findUnique
   */
  export interface catastoanomaliaFindUniqueArgs extends catastoanomaliaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * catastoanomalia findUniqueOrThrow
   */
  export type catastoanomaliaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the catastoanomalia
     */
    select?: catastoanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastoanomaliaInclude | null
    /**
     * Filter, which catastoanomalia to fetch.
     */
    where: catastoanomaliaWhereUniqueInput
  }


  /**
   * catastoanomalia base type for findFirst actions
   */
  export type catastoanomaliaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the catastoanomalia
     */
    select?: catastoanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastoanomaliaInclude | null
    /**
     * Filter, which catastoanomalia to fetch.
     */
    where?: catastoanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catastoanomalias to fetch.
     */
    orderBy?: Enumerable<catastoanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for catastoanomalias.
     */
    cursor?: catastoanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catastoanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catastoanomalias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of catastoanomalias.
     */
    distinct?: Enumerable<CatastoanomaliaScalarFieldEnum>
  }

  /**
   * catastoanomalia findFirst
   */
  export interface catastoanomaliaFindFirstArgs extends catastoanomaliaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * catastoanomalia findFirstOrThrow
   */
  export type catastoanomaliaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the catastoanomalia
     */
    select?: catastoanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastoanomaliaInclude | null
    /**
     * Filter, which catastoanomalia to fetch.
     */
    where?: catastoanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catastoanomalias to fetch.
     */
    orderBy?: Enumerable<catastoanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for catastoanomalias.
     */
    cursor?: catastoanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catastoanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catastoanomalias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of catastoanomalias.
     */
    distinct?: Enumerable<CatastoanomaliaScalarFieldEnum>
  }


  /**
   * catastoanomalia findMany
   */
  export type catastoanomaliaFindManyArgs = {
    /**
     * Select specific fields to fetch from the catastoanomalia
     */
    select?: catastoanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastoanomaliaInclude | null
    /**
     * Filter, which catastoanomalias to fetch.
     */
    where?: catastoanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catastoanomalias to fetch.
     */
    orderBy?: Enumerable<catastoanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing catastoanomalias.
     */
    cursor?: catastoanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catastoanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catastoanomalias.
     */
    skip?: number
    distinct?: Enumerable<CatastoanomaliaScalarFieldEnum>
  }


  /**
   * catastoanomalia create
   */
  export type catastoanomaliaCreateArgs = {
    /**
     * Select specific fields to fetch from the catastoanomalia
     */
    select?: catastoanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastoanomaliaInclude | null
    /**
     * The data needed to create a catastoanomalia.
     */
    data: XOR<catastoanomaliaCreateInput, catastoanomaliaUncheckedCreateInput>
  }


  /**
   * catastoanomalia createMany
   */
  export type catastoanomaliaCreateManyArgs = {
    /**
     * The data used to create many catastoanomalias.
     */
    data: Enumerable<catastoanomaliaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * catastoanomalia update
   */
  export type catastoanomaliaUpdateArgs = {
    /**
     * Select specific fields to fetch from the catastoanomalia
     */
    select?: catastoanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastoanomaliaInclude | null
    /**
     * The data needed to update a catastoanomalia.
     */
    data: XOR<catastoanomaliaUpdateInput, catastoanomaliaUncheckedUpdateInput>
    /**
     * Choose, which catastoanomalia to update.
     */
    where: catastoanomaliaWhereUniqueInput
  }


  /**
   * catastoanomalia updateMany
   */
  export type catastoanomaliaUpdateManyArgs = {
    /**
     * The data used to update catastoanomalias.
     */
    data: XOR<catastoanomaliaUpdateManyMutationInput, catastoanomaliaUncheckedUpdateManyInput>
    /**
     * Filter which catastoanomalias to update
     */
    where?: catastoanomaliaWhereInput
  }


  /**
   * catastoanomalia upsert
   */
  export type catastoanomaliaUpsertArgs = {
    /**
     * Select specific fields to fetch from the catastoanomalia
     */
    select?: catastoanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastoanomaliaInclude | null
    /**
     * The filter to search for the catastoanomalia to update in case it exists.
     */
    where: catastoanomaliaWhereUniqueInput
    /**
     * In case the catastoanomalia found by the `where` argument doesn't exist, create a new catastoanomalia with this data.
     */
    create: XOR<catastoanomaliaCreateInput, catastoanomaliaUncheckedCreateInput>
    /**
     * In case the catastoanomalia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<catastoanomaliaUpdateInput, catastoanomaliaUncheckedUpdateInput>
  }


  /**
   * catastoanomalia delete
   */
  export type catastoanomaliaDeleteArgs = {
    /**
     * Select specific fields to fetch from the catastoanomalia
     */
    select?: catastoanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastoanomaliaInclude | null
    /**
     * Filter which catastoanomalia to delete.
     */
    where: catastoanomaliaWhereUniqueInput
  }


  /**
   * catastoanomalia deleteMany
   */
  export type catastoanomaliaDeleteManyArgs = {
    /**
     * Filter which catastoanomalias to delete
     */
    where?: catastoanomaliaWhereInput
  }


  /**
   * catastoanomalia without action
   */
  export type catastoanomaliaArgs = {
    /**
     * Select specific fields to fetch from the catastoanomalia
     */
    select?: catastoanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastoanomaliaInclude | null
  }



  /**
   * Model catastolinker
   */


  export type AggregateCatastolinker = {
    _count: CatastolinkerCountAggregateOutputType | null
    _avg: CatastolinkerAvgAggregateOutputType | null
    _sum: CatastolinkerSumAggregateOutputType | null
    _min: CatastolinkerMinAggregateOutputType | null
    _max: CatastolinkerMaxAggregateOutputType | null
  }

  export type CatastolinkerAvgAggregateOutputType = {
    id: number | null
    idCatasto: number | null
    idAppalto: number | null
    idUtente: number | null
    idSegnalazione: number | null
    idLavoro: number | null
    flg_catasto: number | null
    idPratica: number | null
  }

  export type CatastolinkerSumAggregateOutputType = {
    id: number | null
    idCatasto: number | null
    idAppalto: number | null
    idUtente: number | null
    idSegnalazione: number | null
    idLavoro: number | null
    flg_catasto: number | null
    idPratica: number | null
  }

  export type CatastolinkerMinAggregateOutputType = {
    id: number | null
    idCatasto: number | null
    idAppalto: number | null
    idUtente: number | null
    dataModifica: string | null
    idSegnalazione: number | null
    idLavoro: number | null
    statoSegnalazione: string | null
    statoLavoro: string | null
    flg_catasto: number | null
    idPratica: number | null
    geojson: string | null
  }

  export type CatastolinkerMaxAggregateOutputType = {
    id: number | null
    idCatasto: number | null
    idAppalto: number | null
    idUtente: number | null
    dataModifica: string | null
    idSegnalazione: number | null
    idLavoro: number | null
    statoSegnalazione: string | null
    statoLavoro: string | null
    flg_catasto: number | null
    idPratica: number | null
    geojson: string | null
  }

  export type CatastolinkerCountAggregateOutputType = {
    id: number
    idCatasto: number
    idAppalto: number
    idUtente: number
    dataModifica: number
    idSegnalazione: number
    idLavoro: number
    statoSegnalazione: number
    statoLavoro: number
    flg_catasto: number
    idPratica: number
    geojson: number
    _all: number
  }


  export type CatastolinkerAvgAggregateInputType = {
    id?: true
    idCatasto?: true
    idAppalto?: true
    idUtente?: true
    idSegnalazione?: true
    idLavoro?: true
    flg_catasto?: true
    idPratica?: true
  }

  export type CatastolinkerSumAggregateInputType = {
    id?: true
    idCatasto?: true
    idAppalto?: true
    idUtente?: true
    idSegnalazione?: true
    idLavoro?: true
    flg_catasto?: true
    idPratica?: true
  }

  export type CatastolinkerMinAggregateInputType = {
    id?: true
    idCatasto?: true
    idAppalto?: true
    idUtente?: true
    dataModifica?: true
    idSegnalazione?: true
    idLavoro?: true
    statoSegnalazione?: true
    statoLavoro?: true
    flg_catasto?: true
    idPratica?: true
    geojson?: true
  }

  export type CatastolinkerMaxAggregateInputType = {
    id?: true
    idCatasto?: true
    idAppalto?: true
    idUtente?: true
    dataModifica?: true
    idSegnalazione?: true
    idLavoro?: true
    statoSegnalazione?: true
    statoLavoro?: true
    flg_catasto?: true
    idPratica?: true
    geojson?: true
  }

  export type CatastolinkerCountAggregateInputType = {
    id?: true
    idCatasto?: true
    idAppalto?: true
    idUtente?: true
    dataModifica?: true
    idSegnalazione?: true
    idLavoro?: true
    statoSegnalazione?: true
    statoLavoro?: true
    flg_catasto?: true
    idPratica?: true
    geojson?: true
    _all?: true
  }

  export type CatastolinkerAggregateArgs = {
    /**
     * Filter which catastolinker to aggregate.
     */
    where?: catastolinkerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catastolinkers to fetch.
     */
    orderBy?: Enumerable<catastolinkerOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: catastolinkerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catastolinkers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catastolinkers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned catastolinkers
    **/
    _count?: true | CatastolinkerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CatastolinkerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CatastolinkerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CatastolinkerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CatastolinkerMaxAggregateInputType
  }

  export type GetCatastolinkerAggregateType<T extends CatastolinkerAggregateArgs> = {
        [P in keyof T & keyof AggregateCatastolinker]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCatastolinker[P]>
      : GetScalarType<T[P], AggregateCatastolinker[P]>
  }




  export type CatastolinkerGroupByArgs = {
    where?: catastolinkerWhereInput
    orderBy?: Enumerable<catastolinkerOrderByWithAggregationInput>
    by: CatastolinkerScalarFieldEnum[]
    having?: catastolinkerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CatastolinkerCountAggregateInputType | true
    _avg?: CatastolinkerAvgAggregateInputType
    _sum?: CatastolinkerSumAggregateInputType
    _min?: CatastolinkerMinAggregateInputType
    _max?: CatastolinkerMaxAggregateInputType
  }


  export type CatastolinkerGroupByOutputType = {
    id: number
    idCatasto: number | null
    idAppalto: number | null
    idUtente: number | null
    dataModifica: string | null
    idSegnalazione: number | null
    idLavoro: number | null
    statoSegnalazione: string | null
    statoLavoro: string | null
    flg_catasto: number | null
    idPratica: number | null
    geojson: string | null
    _count: CatastolinkerCountAggregateOutputType | null
    _avg: CatastolinkerAvgAggregateOutputType | null
    _sum: CatastolinkerSumAggregateOutputType | null
    _min: CatastolinkerMinAggregateOutputType | null
    _max: CatastolinkerMaxAggregateOutputType | null
  }

  type GetCatastolinkerGroupByPayload<T extends CatastolinkerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<CatastolinkerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CatastolinkerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CatastolinkerGroupByOutputType[P]>
            : GetScalarType<T[P], CatastolinkerGroupByOutputType[P]>
        }
      >
    >


  export type catastolinkerSelect = {
    id?: boolean
    idCatasto?: boolean
    idAppalto?: boolean
    idUtente?: boolean
    dataModifica?: boolean
    idSegnalazione?: boolean
    idLavoro?: boolean
    statoSegnalazione?: boolean
    statoLavoro?: boolean
    flg_catasto?: boolean
    idPratica?: boolean
    geojson?: boolean
    lavoro?: boolean | lavoroArgs
    pratica?: boolean | praticaArgs
    utenti?: boolean | utentiArgs
  }


  export type catastolinkerInclude = {
    lavoro?: boolean | lavoroArgs
    pratica?: boolean | praticaArgs
    utenti?: boolean | utentiArgs
  }

  export type catastolinkerGetPayload<S extends boolean | null | undefined | catastolinkerArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? catastolinker :
    S extends undefined ? never :
    S extends { include: any } & (catastolinkerArgs | catastolinkerFindManyArgs)
    ? catastolinker  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'lavoro' ? lavoroGetPayload<S['include'][P]> | null :
        P extends 'pratica' ? praticaGetPayload<S['include'][P]> | null :
        P extends 'utenti' ? utentiGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (catastolinkerArgs | catastolinkerFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'lavoro' ? lavoroGetPayload<S['select'][P]> | null :
        P extends 'pratica' ? praticaGetPayload<S['select'][P]> | null :
        P extends 'utenti' ? utentiGetPayload<S['select'][P]> | null :  P extends keyof catastolinker ? catastolinker[P] : never
  } 
      : catastolinker


  type catastolinkerCountArgs = 
    Omit<catastolinkerFindManyArgs, 'select' | 'include'> & {
      select?: CatastolinkerCountAggregateInputType | true
    }

  export interface catastolinkerDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Catastolinker that matches the filter.
     * @param {catastolinkerFindUniqueArgs} args - Arguments to find a Catastolinker
     * @example
     * // Get one Catastolinker
     * const catastolinker = await prisma.catastolinker.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends catastolinkerFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, catastolinkerFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'catastolinker'> extends True ? Prisma__catastolinkerClient<catastolinkerGetPayload<T>> : Prisma__catastolinkerClient<catastolinkerGetPayload<T> | null, null>

    /**
     * Find one Catastolinker that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {catastolinkerFindUniqueOrThrowArgs} args - Arguments to find a Catastolinker
     * @example
     * // Get one Catastolinker
     * const catastolinker = await prisma.catastolinker.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends catastolinkerFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, catastolinkerFindUniqueOrThrowArgs>
    ): Prisma__catastolinkerClient<catastolinkerGetPayload<T>>

    /**
     * Find the first Catastolinker that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catastolinkerFindFirstArgs} args - Arguments to find a Catastolinker
     * @example
     * // Get one Catastolinker
     * const catastolinker = await prisma.catastolinker.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends catastolinkerFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, catastolinkerFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'catastolinker'> extends True ? Prisma__catastolinkerClient<catastolinkerGetPayload<T>> : Prisma__catastolinkerClient<catastolinkerGetPayload<T> | null, null>

    /**
     * Find the first Catastolinker that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catastolinkerFindFirstOrThrowArgs} args - Arguments to find a Catastolinker
     * @example
     * // Get one Catastolinker
     * const catastolinker = await prisma.catastolinker.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends catastolinkerFindFirstOrThrowArgs>(
      args?: SelectSubset<T, catastolinkerFindFirstOrThrowArgs>
    ): Prisma__catastolinkerClient<catastolinkerGetPayload<T>>

    /**
     * Find zero or more Catastolinkers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catastolinkerFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Catastolinkers
     * const catastolinkers = await prisma.catastolinker.findMany()
     * 
     * // Get first 10 Catastolinkers
     * const catastolinkers = await prisma.catastolinker.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const catastolinkerWithIdOnly = await prisma.catastolinker.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends catastolinkerFindManyArgs>(
      args?: SelectSubset<T, catastolinkerFindManyArgs>
    ): Prisma.PrismaPromise<Array<catastolinkerGetPayload<T>>>

    /**
     * Create a Catastolinker.
     * @param {catastolinkerCreateArgs} args - Arguments to create a Catastolinker.
     * @example
     * // Create one Catastolinker
     * const Catastolinker = await prisma.catastolinker.create({
     *   data: {
     *     // ... data to create a Catastolinker
     *   }
     * })
     * 
    **/
    create<T extends catastolinkerCreateArgs>(
      args: SelectSubset<T, catastolinkerCreateArgs>
    ): Prisma__catastolinkerClient<catastolinkerGetPayload<T>>

    /**
     * Create many Catastolinkers.
     *     @param {catastolinkerCreateManyArgs} args - Arguments to create many Catastolinkers.
     *     @example
     *     // Create many Catastolinkers
     *     const catastolinker = await prisma.catastolinker.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends catastolinkerCreateManyArgs>(
      args?: SelectSubset<T, catastolinkerCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Catastolinker.
     * @param {catastolinkerDeleteArgs} args - Arguments to delete one Catastolinker.
     * @example
     * // Delete one Catastolinker
     * const Catastolinker = await prisma.catastolinker.delete({
     *   where: {
     *     // ... filter to delete one Catastolinker
     *   }
     * })
     * 
    **/
    delete<T extends catastolinkerDeleteArgs>(
      args: SelectSubset<T, catastolinkerDeleteArgs>
    ): Prisma__catastolinkerClient<catastolinkerGetPayload<T>>

    /**
     * Update one Catastolinker.
     * @param {catastolinkerUpdateArgs} args - Arguments to update one Catastolinker.
     * @example
     * // Update one Catastolinker
     * const catastolinker = await prisma.catastolinker.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends catastolinkerUpdateArgs>(
      args: SelectSubset<T, catastolinkerUpdateArgs>
    ): Prisma__catastolinkerClient<catastolinkerGetPayload<T>>

    /**
     * Delete zero or more Catastolinkers.
     * @param {catastolinkerDeleteManyArgs} args - Arguments to filter Catastolinkers to delete.
     * @example
     * // Delete a few Catastolinkers
     * const { count } = await prisma.catastolinker.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends catastolinkerDeleteManyArgs>(
      args?: SelectSubset<T, catastolinkerDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Catastolinkers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catastolinkerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Catastolinkers
     * const catastolinker = await prisma.catastolinker.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends catastolinkerUpdateManyArgs>(
      args: SelectSubset<T, catastolinkerUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Catastolinker.
     * @param {catastolinkerUpsertArgs} args - Arguments to update or create a Catastolinker.
     * @example
     * // Update or create a Catastolinker
     * const catastolinker = await prisma.catastolinker.upsert({
     *   create: {
     *     // ... data to create a Catastolinker
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Catastolinker we want to update
     *   }
     * })
    **/
    upsert<T extends catastolinkerUpsertArgs>(
      args: SelectSubset<T, catastolinkerUpsertArgs>
    ): Prisma__catastolinkerClient<catastolinkerGetPayload<T>>

    /**
     * Count the number of Catastolinkers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catastolinkerCountArgs} args - Arguments to filter Catastolinkers to count.
     * @example
     * // Count the number of Catastolinkers
     * const count = await prisma.catastolinker.count({
     *   where: {
     *     // ... the filter for the Catastolinkers we want to count
     *   }
     * })
    **/
    count<T extends catastolinkerCountArgs>(
      args?: Subset<T, catastolinkerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CatastolinkerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Catastolinker.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatastolinkerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CatastolinkerAggregateArgs>(args: Subset<T, CatastolinkerAggregateArgs>): Prisma.PrismaPromise<GetCatastolinkerAggregateType<T>>

    /**
     * Group by Catastolinker.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatastolinkerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CatastolinkerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CatastolinkerGroupByArgs['orderBy'] }
        : { orderBy?: CatastolinkerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CatastolinkerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCatastolinkerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for catastolinker.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__catastolinkerClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    lavoro<T extends lavoroArgs= {}>(args?: Subset<T, lavoroArgs>): Prisma__lavoroClient<lavoroGetPayload<T> | Null>;

    pratica<T extends praticaArgs= {}>(args?: Subset<T, praticaArgs>): Prisma__praticaClient<praticaGetPayload<T> | Null>;

    utenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * catastolinker base type for findUnique actions
   */
  export type catastolinkerFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
    /**
     * Filter, which catastolinker to fetch.
     */
    where: catastolinkerWhereUniqueInput
  }

  /**
   * catastolinker findUnique
   */
  export interface catastolinkerFindUniqueArgs extends catastolinkerFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * catastolinker findUniqueOrThrow
   */
  export type catastolinkerFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
    /**
     * Filter, which catastolinker to fetch.
     */
    where: catastolinkerWhereUniqueInput
  }


  /**
   * catastolinker base type for findFirst actions
   */
  export type catastolinkerFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
    /**
     * Filter, which catastolinker to fetch.
     */
    where?: catastolinkerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catastolinkers to fetch.
     */
    orderBy?: Enumerable<catastolinkerOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for catastolinkers.
     */
    cursor?: catastolinkerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catastolinkers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catastolinkers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of catastolinkers.
     */
    distinct?: Enumerable<CatastolinkerScalarFieldEnum>
  }

  /**
   * catastolinker findFirst
   */
  export interface catastolinkerFindFirstArgs extends catastolinkerFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * catastolinker findFirstOrThrow
   */
  export type catastolinkerFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
    /**
     * Filter, which catastolinker to fetch.
     */
    where?: catastolinkerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catastolinkers to fetch.
     */
    orderBy?: Enumerable<catastolinkerOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for catastolinkers.
     */
    cursor?: catastolinkerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catastolinkers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catastolinkers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of catastolinkers.
     */
    distinct?: Enumerable<CatastolinkerScalarFieldEnum>
  }


  /**
   * catastolinker findMany
   */
  export type catastolinkerFindManyArgs = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
    /**
     * Filter, which catastolinkers to fetch.
     */
    where?: catastolinkerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catastolinkers to fetch.
     */
    orderBy?: Enumerable<catastolinkerOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing catastolinkers.
     */
    cursor?: catastolinkerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catastolinkers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catastolinkers.
     */
    skip?: number
    distinct?: Enumerable<CatastolinkerScalarFieldEnum>
  }


  /**
   * catastolinker create
   */
  export type catastolinkerCreateArgs = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
    /**
     * The data needed to create a catastolinker.
     */
    data: XOR<catastolinkerCreateInput, catastolinkerUncheckedCreateInput>
  }


  /**
   * catastolinker createMany
   */
  export type catastolinkerCreateManyArgs = {
    /**
     * The data used to create many catastolinkers.
     */
    data: Enumerable<catastolinkerCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * catastolinker update
   */
  export type catastolinkerUpdateArgs = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
    /**
     * The data needed to update a catastolinker.
     */
    data: XOR<catastolinkerUpdateInput, catastolinkerUncheckedUpdateInput>
    /**
     * Choose, which catastolinker to update.
     */
    where: catastolinkerWhereUniqueInput
  }


  /**
   * catastolinker updateMany
   */
  export type catastolinkerUpdateManyArgs = {
    /**
     * The data used to update catastolinkers.
     */
    data: XOR<catastolinkerUpdateManyMutationInput, catastolinkerUncheckedUpdateManyInput>
    /**
     * Filter which catastolinkers to update
     */
    where?: catastolinkerWhereInput
  }


  /**
   * catastolinker upsert
   */
  export type catastolinkerUpsertArgs = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
    /**
     * The filter to search for the catastolinker to update in case it exists.
     */
    where: catastolinkerWhereUniqueInput
    /**
     * In case the catastolinker found by the `where` argument doesn't exist, create a new catastolinker with this data.
     */
    create: XOR<catastolinkerCreateInput, catastolinkerUncheckedCreateInput>
    /**
     * In case the catastolinker was found with the provided `where` argument, update it with this data.
     */
    update: XOR<catastolinkerUpdateInput, catastolinkerUncheckedUpdateInput>
  }


  /**
   * catastolinker delete
   */
  export type catastolinkerDeleteArgs = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
    /**
     * Filter which catastolinker to delete.
     */
    where: catastolinkerWhereUniqueInput
  }


  /**
   * catastolinker deleteMany
   */
  export type catastolinkerDeleteManyArgs = {
    /**
     * Filter which catastolinkers to delete
     */
    where?: catastolinkerWhereInput
  }


  /**
   * catastolinker without action
   */
  export type catastolinkerArgs = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
  }



  /**
   * Model categoriaanomalia
   */


  export type AggregateCategoriaanomalia = {
    _count: CategoriaanomaliaCountAggregateOutputType | null
    _avg: CategoriaanomaliaAvgAggregateOutputType | null
    _sum: CategoriaanomaliaSumAggregateOutputType | null
    _min: CategoriaanomaliaMinAggregateOutputType | null
    _max: CategoriaanomaliaMaxAggregateOutputType | null
  }

  export type CategoriaanomaliaAvgAggregateOutputType = {
    id: number | null
  }

  export type CategoriaanomaliaSumAggregateOutputType = {
    id: number | null
  }

  export type CategoriaanomaliaMinAggregateOutputType = {
    id: number | null
    value: string | null
    tabellaNome: string | null
    modalitaInserimento: string | null
  }

  export type CategoriaanomaliaMaxAggregateOutputType = {
    id: number | null
    value: string | null
    tabellaNome: string | null
    modalitaInserimento: string | null
  }

  export type CategoriaanomaliaCountAggregateOutputType = {
    id: number
    value: number
    tabellaNome: number
    modalitaInserimento: number
    _all: number
  }


  export type CategoriaanomaliaAvgAggregateInputType = {
    id?: true
  }

  export type CategoriaanomaliaSumAggregateInputType = {
    id?: true
  }

  export type CategoriaanomaliaMinAggregateInputType = {
    id?: true
    value?: true
    tabellaNome?: true
    modalitaInserimento?: true
  }

  export type CategoriaanomaliaMaxAggregateInputType = {
    id?: true
    value?: true
    tabellaNome?: true
    modalitaInserimento?: true
  }

  export type CategoriaanomaliaCountAggregateInputType = {
    id?: true
    value?: true
    tabellaNome?: true
    modalitaInserimento?: true
    _all?: true
  }

  export type CategoriaanomaliaAggregateArgs = {
    /**
     * Filter which categoriaanomalia to aggregate.
     */
    where?: categoriaanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoriaanomalias to fetch.
     */
    orderBy?: Enumerable<categoriaanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoriaanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoriaanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoriaanomalias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categoriaanomalias
    **/
    _count?: true | CategoriaanomaliaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaanomaliaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaanomaliaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaanomaliaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaanomaliaMaxAggregateInputType
  }

  export type GetCategoriaanomaliaAggregateType<T extends CategoriaanomaliaAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoriaanomalia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoriaanomalia[P]>
      : GetScalarType<T[P], AggregateCategoriaanomalia[P]>
  }




  export type CategoriaanomaliaGroupByArgs = {
    where?: categoriaanomaliaWhereInput
    orderBy?: Enumerable<categoriaanomaliaOrderByWithAggregationInput>
    by: CategoriaanomaliaScalarFieldEnum[]
    having?: categoriaanomaliaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaanomaliaCountAggregateInputType | true
    _avg?: CategoriaanomaliaAvgAggregateInputType
    _sum?: CategoriaanomaliaSumAggregateInputType
    _min?: CategoriaanomaliaMinAggregateInputType
    _max?: CategoriaanomaliaMaxAggregateInputType
  }


  export type CategoriaanomaliaGroupByOutputType = {
    id: number
    value: string | null
    tabellaNome: string | null
    modalitaInserimento: string | null
    _count: CategoriaanomaliaCountAggregateOutputType | null
    _avg: CategoriaanomaliaAvgAggregateOutputType | null
    _sum: CategoriaanomaliaSumAggregateOutputType | null
    _min: CategoriaanomaliaMinAggregateOutputType | null
    _max: CategoriaanomaliaMaxAggregateOutputType | null
  }

  type GetCategoriaanomaliaGroupByPayload<T extends CategoriaanomaliaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<CategoriaanomaliaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaanomaliaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaanomaliaGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaanomaliaGroupByOutputType[P]>
        }
      >
    >


  export type categoriaanomaliaSelect = {
    id?: boolean
    value?: boolean
    tabellaNome?: boolean
    modalitaInserimento?: boolean
    categoriaanomalia_sottocategoriaanomalia?: boolean | categoriaanomalia$categoriaanomalia_sottocategoriaanomaliaArgs
    categoriaanomalia_sottocategorialavoro?: boolean | categoriaanomalia$categoriaanomalia_sottocategorialavoroArgs
    lavoro?: boolean | categoriaanomalia$lavoroArgs
    lavorostorico?: boolean | categoriaanomalia$lavorostoricoArgs
    segnalazione?: boolean | categoriaanomalia$segnalazioneArgs
    segnalazionestorico?: boolean | categoriaanomalia$segnalazionestoricoArgs
    sottocategoriaanomalia_sottocategorialavoro?: boolean | categoriaanomalia$sottocategoriaanomalia_sottocategorialavoroArgs
    _count?: boolean | CategoriaanomaliaCountOutputTypeArgs
  }


  export type categoriaanomaliaInclude = {
    categoriaanomalia_sottocategoriaanomalia?: boolean | categoriaanomalia$categoriaanomalia_sottocategoriaanomaliaArgs
    categoriaanomalia_sottocategorialavoro?: boolean | categoriaanomalia$categoriaanomalia_sottocategorialavoroArgs
    lavoro?: boolean | categoriaanomalia$lavoroArgs
    lavorostorico?: boolean | categoriaanomalia$lavorostoricoArgs
    segnalazione?: boolean | categoriaanomalia$segnalazioneArgs
    segnalazionestorico?: boolean | categoriaanomalia$segnalazionestoricoArgs
    sottocategoriaanomalia_sottocategorialavoro?: boolean | categoriaanomalia$sottocategoriaanomalia_sottocategorialavoroArgs
    _count?: boolean | CategoriaanomaliaCountOutputTypeArgs
  }

  export type categoriaanomaliaGetPayload<S extends boolean | null | undefined | categoriaanomaliaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? categoriaanomalia :
    S extends undefined ? never :
    S extends { include: any } & (categoriaanomaliaArgs | categoriaanomaliaFindManyArgs)
    ? categoriaanomalia  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'categoriaanomalia_sottocategoriaanomalia' ? Array < categoriaanomalia_sottocategoriaanomaliaGetPayload<S['include'][P]>>  :
        P extends 'categoriaanomalia_sottocategorialavoro' ? Array < categoriaanomalia_sottocategorialavoroGetPayload<S['include'][P]>>  :
        P extends 'lavoro' ? Array < lavoroGetPayload<S['include'][P]>>  :
        P extends 'lavorostorico' ? Array < lavorostoricoGetPayload<S['include'][P]>>  :
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['include'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['include'][P]>>  :
        P extends 'sottocategoriaanomalia_sottocategorialavoro' ? Array < sottocategoriaanomalia_sottocategorialavoroGetPayload<S['include'][P]>>  :
        P extends '_count' ? CategoriaanomaliaCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (categoriaanomaliaArgs | categoriaanomaliaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'categoriaanomalia_sottocategoriaanomalia' ? Array < categoriaanomalia_sottocategoriaanomaliaGetPayload<S['select'][P]>>  :
        P extends 'categoriaanomalia_sottocategorialavoro' ? Array < categoriaanomalia_sottocategorialavoroGetPayload<S['select'][P]>>  :
        P extends 'lavoro' ? Array < lavoroGetPayload<S['select'][P]>>  :
        P extends 'lavorostorico' ? Array < lavorostoricoGetPayload<S['select'][P]>>  :
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['select'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['select'][P]>>  :
        P extends 'sottocategoriaanomalia_sottocategorialavoro' ? Array < sottocategoriaanomalia_sottocategorialavoroGetPayload<S['select'][P]>>  :
        P extends '_count' ? CategoriaanomaliaCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof categoriaanomalia ? categoriaanomalia[P] : never
  } 
      : categoriaanomalia


  type categoriaanomaliaCountArgs = 
    Omit<categoriaanomaliaFindManyArgs, 'select' | 'include'> & {
      select?: CategoriaanomaliaCountAggregateInputType | true
    }

  export interface categoriaanomaliaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Categoriaanomalia that matches the filter.
     * @param {categoriaanomaliaFindUniqueArgs} args - Arguments to find a Categoriaanomalia
     * @example
     * // Get one Categoriaanomalia
     * const categoriaanomalia = await prisma.categoriaanomalia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends categoriaanomaliaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, categoriaanomaliaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'categoriaanomalia'> extends True ? Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T>> : Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T> | null, null>

    /**
     * Find one Categoriaanomalia that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {categoriaanomaliaFindUniqueOrThrowArgs} args - Arguments to find a Categoriaanomalia
     * @example
     * // Get one Categoriaanomalia
     * const categoriaanomalia = await prisma.categoriaanomalia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends categoriaanomaliaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, categoriaanomaliaFindUniqueOrThrowArgs>
    ): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T>>

    /**
     * Find the first Categoriaanomalia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomaliaFindFirstArgs} args - Arguments to find a Categoriaanomalia
     * @example
     * // Get one Categoriaanomalia
     * const categoriaanomalia = await prisma.categoriaanomalia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends categoriaanomaliaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, categoriaanomaliaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'categoriaanomalia'> extends True ? Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T>> : Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T> | null, null>

    /**
     * Find the first Categoriaanomalia that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomaliaFindFirstOrThrowArgs} args - Arguments to find a Categoriaanomalia
     * @example
     * // Get one Categoriaanomalia
     * const categoriaanomalia = await prisma.categoriaanomalia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends categoriaanomaliaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, categoriaanomaliaFindFirstOrThrowArgs>
    ): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T>>

    /**
     * Find zero or more Categoriaanomalias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomaliaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categoriaanomalias
     * const categoriaanomalias = await prisma.categoriaanomalia.findMany()
     * 
     * // Get first 10 Categoriaanomalias
     * const categoriaanomalias = await prisma.categoriaanomalia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriaanomaliaWithIdOnly = await prisma.categoriaanomalia.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends categoriaanomaliaFindManyArgs>(
      args?: SelectSubset<T, categoriaanomaliaFindManyArgs>
    ): Prisma.PrismaPromise<Array<categoriaanomaliaGetPayload<T>>>

    /**
     * Create a Categoriaanomalia.
     * @param {categoriaanomaliaCreateArgs} args - Arguments to create a Categoriaanomalia.
     * @example
     * // Create one Categoriaanomalia
     * const Categoriaanomalia = await prisma.categoriaanomalia.create({
     *   data: {
     *     // ... data to create a Categoriaanomalia
     *   }
     * })
     * 
    **/
    create<T extends categoriaanomaliaCreateArgs>(
      args: SelectSubset<T, categoriaanomaliaCreateArgs>
    ): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T>>

    /**
     * Create many Categoriaanomalias.
     *     @param {categoriaanomaliaCreateManyArgs} args - Arguments to create many Categoriaanomalias.
     *     @example
     *     // Create many Categoriaanomalias
     *     const categoriaanomalia = await prisma.categoriaanomalia.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends categoriaanomaliaCreateManyArgs>(
      args?: SelectSubset<T, categoriaanomaliaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Categoriaanomalia.
     * @param {categoriaanomaliaDeleteArgs} args - Arguments to delete one Categoriaanomalia.
     * @example
     * // Delete one Categoriaanomalia
     * const Categoriaanomalia = await prisma.categoriaanomalia.delete({
     *   where: {
     *     // ... filter to delete one Categoriaanomalia
     *   }
     * })
     * 
    **/
    delete<T extends categoriaanomaliaDeleteArgs>(
      args: SelectSubset<T, categoriaanomaliaDeleteArgs>
    ): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T>>

    /**
     * Update one Categoriaanomalia.
     * @param {categoriaanomaliaUpdateArgs} args - Arguments to update one Categoriaanomalia.
     * @example
     * // Update one Categoriaanomalia
     * const categoriaanomalia = await prisma.categoriaanomalia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends categoriaanomaliaUpdateArgs>(
      args: SelectSubset<T, categoriaanomaliaUpdateArgs>
    ): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T>>

    /**
     * Delete zero or more Categoriaanomalias.
     * @param {categoriaanomaliaDeleteManyArgs} args - Arguments to filter Categoriaanomalias to delete.
     * @example
     * // Delete a few Categoriaanomalias
     * const { count } = await prisma.categoriaanomalia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends categoriaanomaliaDeleteManyArgs>(
      args?: SelectSubset<T, categoriaanomaliaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categoriaanomalias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomaliaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categoriaanomalias
     * const categoriaanomalia = await prisma.categoriaanomalia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends categoriaanomaliaUpdateManyArgs>(
      args: SelectSubset<T, categoriaanomaliaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categoriaanomalia.
     * @param {categoriaanomaliaUpsertArgs} args - Arguments to update or create a Categoriaanomalia.
     * @example
     * // Update or create a Categoriaanomalia
     * const categoriaanomalia = await prisma.categoriaanomalia.upsert({
     *   create: {
     *     // ... data to create a Categoriaanomalia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoriaanomalia we want to update
     *   }
     * })
    **/
    upsert<T extends categoriaanomaliaUpsertArgs>(
      args: SelectSubset<T, categoriaanomaliaUpsertArgs>
    ): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T>>

    /**
     * Count the number of Categoriaanomalias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomaliaCountArgs} args - Arguments to filter Categoriaanomalias to count.
     * @example
     * // Count the number of Categoriaanomalias
     * const count = await prisma.categoriaanomalia.count({
     *   where: {
     *     // ... the filter for the Categoriaanomalias we want to count
     *   }
     * })
    **/
    count<T extends categoriaanomaliaCountArgs>(
      args?: Subset<T, categoriaanomaliaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaanomaliaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoriaanomalia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaanomaliaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaanomaliaAggregateArgs>(args: Subset<T, CategoriaanomaliaAggregateArgs>): Prisma.PrismaPromise<GetCategoriaanomaliaAggregateType<T>>

    /**
     * Group by Categoriaanomalia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaanomaliaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaanomaliaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaanomaliaGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaanomaliaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaanomaliaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaanomaliaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for categoriaanomalia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__categoriaanomaliaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    categoriaanomalia_sottocategoriaanomalia<T extends categoriaanomalia$categoriaanomalia_sottocategoriaanomaliaArgs= {}>(args?: Subset<T, categoriaanomalia$categoriaanomalia_sottocategoriaanomaliaArgs>): Prisma.PrismaPromise<Array<categoriaanomalia_sottocategoriaanomaliaGetPayload<T>>| Null>;

    categoriaanomalia_sottocategorialavoro<T extends categoriaanomalia$categoriaanomalia_sottocategorialavoroArgs= {}>(args?: Subset<T, categoriaanomalia$categoriaanomalia_sottocategorialavoroArgs>): Prisma.PrismaPromise<Array<categoriaanomalia_sottocategorialavoroGetPayload<T>>| Null>;

    lavoro<T extends categoriaanomalia$lavoroArgs= {}>(args?: Subset<T, categoriaanomalia$lavoroArgs>): Prisma.PrismaPromise<Array<lavoroGetPayload<T>>| Null>;

    lavorostorico<T extends categoriaanomalia$lavorostoricoArgs= {}>(args?: Subset<T, categoriaanomalia$lavorostoricoArgs>): Prisma.PrismaPromise<Array<lavorostoricoGetPayload<T>>| Null>;

    segnalazione<T extends categoriaanomalia$segnalazioneArgs= {}>(args?: Subset<T, categoriaanomalia$segnalazioneArgs>): Prisma.PrismaPromise<Array<segnalazioneGetPayload<T>>| Null>;

    segnalazionestorico<T extends categoriaanomalia$segnalazionestoricoArgs= {}>(args?: Subset<T, categoriaanomalia$segnalazionestoricoArgs>): Prisma.PrismaPromise<Array<segnalazionestoricoGetPayload<T>>| Null>;

    sottocategoriaanomalia_sottocategorialavoro<T extends categoriaanomalia$sottocategoriaanomalia_sottocategorialavoroArgs= {}>(args?: Subset<T, categoriaanomalia$sottocategoriaanomalia_sottocategorialavoroArgs>): Prisma.PrismaPromise<Array<sottocategoriaanomalia_sottocategorialavoroGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * categoriaanomalia base type for findUnique actions
   */
  export type categoriaanomaliaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the categoriaanomalia
     */
    select?: categoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomaliaInclude | null
    /**
     * Filter, which categoriaanomalia to fetch.
     */
    where: categoriaanomaliaWhereUniqueInput
  }

  /**
   * categoriaanomalia findUnique
   */
  export interface categoriaanomaliaFindUniqueArgs extends categoriaanomaliaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * categoriaanomalia findUniqueOrThrow
   */
  export type categoriaanomaliaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia
     */
    select?: categoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomaliaInclude | null
    /**
     * Filter, which categoriaanomalia to fetch.
     */
    where: categoriaanomaliaWhereUniqueInput
  }


  /**
   * categoriaanomalia base type for findFirst actions
   */
  export type categoriaanomaliaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the categoriaanomalia
     */
    select?: categoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomaliaInclude | null
    /**
     * Filter, which categoriaanomalia to fetch.
     */
    where?: categoriaanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoriaanomalias to fetch.
     */
    orderBy?: Enumerable<categoriaanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categoriaanomalias.
     */
    cursor?: categoriaanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoriaanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoriaanomalias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categoriaanomalias.
     */
    distinct?: Enumerable<CategoriaanomaliaScalarFieldEnum>
  }

  /**
   * categoriaanomalia findFirst
   */
  export interface categoriaanomaliaFindFirstArgs extends categoriaanomaliaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * categoriaanomalia findFirstOrThrow
   */
  export type categoriaanomaliaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia
     */
    select?: categoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomaliaInclude | null
    /**
     * Filter, which categoriaanomalia to fetch.
     */
    where?: categoriaanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoriaanomalias to fetch.
     */
    orderBy?: Enumerable<categoriaanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categoriaanomalias.
     */
    cursor?: categoriaanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoriaanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoriaanomalias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categoriaanomalias.
     */
    distinct?: Enumerable<CategoriaanomaliaScalarFieldEnum>
  }


  /**
   * categoriaanomalia findMany
   */
  export type categoriaanomaliaFindManyArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia
     */
    select?: categoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomaliaInclude | null
    /**
     * Filter, which categoriaanomalias to fetch.
     */
    where?: categoriaanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoriaanomalias to fetch.
     */
    orderBy?: Enumerable<categoriaanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categoriaanomalias.
     */
    cursor?: categoriaanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoriaanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoriaanomalias.
     */
    skip?: number
    distinct?: Enumerable<CategoriaanomaliaScalarFieldEnum>
  }


  /**
   * categoriaanomalia create
   */
  export type categoriaanomaliaCreateArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia
     */
    select?: categoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomaliaInclude | null
    /**
     * The data needed to create a categoriaanomalia.
     */
    data: XOR<categoriaanomaliaCreateInput, categoriaanomaliaUncheckedCreateInput>
  }


  /**
   * categoriaanomalia createMany
   */
  export type categoriaanomaliaCreateManyArgs = {
    /**
     * The data used to create many categoriaanomalias.
     */
    data: Enumerable<categoriaanomaliaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * categoriaanomalia update
   */
  export type categoriaanomaliaUpdateArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia
     */
    select?: categoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomaliaInclude | null
    /**
     * The data needed to update a categoriaanomalia.
     */
    data: XOR<categoriaanomaliaUpdateInput, categoriaanomaliaUncheckedUpdateInput>
    /**
     * Choose, which categoriaanomalia to update.
     */
    where: categoriaanomaliaWhereUniqueInput
  }


  /**
   * categoriaanomalia updateMany
   */
  export type categoriaanomaliaUpdateManyArgs = {
    /**
     * The data used to update categoriaanomalias.
     */
    data: XOR<categoriaanomaliaUpdateManyMutationInput, categoriaanomaliaUncheckedUpdateManyInput>
    /**
     * Filter which categoriaanomalias to update
     */
    where?: categoriaanomaliaWhereInput
  }


  /**
   * categoriaanomalia upsert
   */
  export type categoriaanomaliaUpsertArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia
     */
    select?: categoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomaliaInclude | null
    /**
     * The filter to search for the categoriaanomalia to update in case it exists.
     */
    where: categoriaanomaliaWhereUniqueInput
    /**
     * In case the categoriaanomalia found by the `where` argument doesn't exist, create a new categoriaanomalia with this data.
     */
    create: XOR<categoriaanomaliaCreateInput, categoriaanomaliaUncheckedCreateInput>
    /**
     * In case the categoriaanomalia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoriaanomaliaUpdateInput, categoriaanomaliaUncheckedUpdateInput>
  }


  /**
   * categoriaanomalia delete
   */
  export type categoriaanomaliaDeleteArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia
     */
    select?: categoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomaliaInclude | null
    /**
     * Filter which categoriaanomalia to delete.
     */
    where: categoriaanomaliaWhereUniqueInput
  }


  /**
   * categoriaanomalia deleteMany
   */
  export type categoriaanomaliaDeleteManyArgs = {
    /**
     * Filter which categoriaanomalias to delete
     */
    where?: categoriaanomaliaWhereInput
  }


  /**
   * categoriaanomalia.categoriaanomalia_sottocategoriaanomalia
   */
  export type categoriaanomalia$categoriaanomalia_sottocategoriaanomaliaArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategoriaanomalia
     */
    select?: categoriaanomalia_sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategoriaanomaliaInclude | null
    where?: categoriaanomalia_sottocategoriaanomaliaWhereInput
    orderBy?: Enumerable<categoriaanomalia_sottocategoriaanomaliaOrderByWithRelationInput>
    cursor?: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Categoriaanomalia_sottocategoriaanomaliaScalarFieldEnum>
  }


  /**
   * categoriaanomalia.categoriaanomalia_sottocategorialavoro
   */
  export type categoriaanomalia$categoriaanomalia_sottocategorialavoroArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategorialavoro
     */
    select?: categoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategorialavoroInclude | null
    where?: categoriaanomalia_sottocategorialavoroWhereInput
    orderBy?: Enumerable<categoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    cursor?: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Categoriaanomalia_sottocategorialavoroScalarFieldEnum>
  }


  /**
   * categoriaanomalia.lavoro
   */
  export type categoriaanomalia$lavoroArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    where?: lavoroWhereInput
    orderBy?: Enumerable<lavoroOrderByWithRelationInput>
    cursor?: lavoroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LavoroScalarFieldEnum>
  }


  /**
   * categoriaanomalia.lavorostorico
   */
  export type categoriaanomalia$lavorostoricoArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    where?: lavorostoricoWhereInput
    orderBy?: Enumerable<lavorostoricoOrderByWithRelationInput>
    cursor?: lavorostoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LavorostoricoScalarFieldEnum>
  }


  /**
   * categoriaanomalia.segnalazione
   */
  export type categoriaanomalia$segnalazioneArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    where?: segnalazioneWhereInput
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    cursor?: segnalazioneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * categoriaanomalia.segnalazionestorico
   */
  export type categoriaanomalia$segnalazionestoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    where?: segnalazionestoricoWhereInput
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    cursor?: segnalazionestoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * categoriaanomalia.sottocategoriaanomalia_sottocategorialavoro
   */
  export type categoriaanomalia$sottocategoriaanomalia_sottocategorialavoroArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
    where?: sottocategoriaanomalia_sottocategorialavoroWhereInput
    orderBy?: Enumerable<sottocategoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    cursor?: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Sottocategoriaanomalia_sottocategorialavoroScalarFieldEnum>
  }


  /**
   * categoriaanomalia without action
   */
  export type categoriaanomaliaArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia
     */
    select?: categoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomaliaInclude | null
  }



  /**
   * Model categoriaanomalia_sottocategoriaanomalia
   */


  export type AggregateCategoriaanomalia_sottocategoriaanomalia = {
    _count: Categoriaanomalia_sottocategoriaanomaliaCountAggregateOutputType | null
    _avg: Categoriaanomalia_sottocategoriaanomaliaAvgAggregateOutputType | null
    _sum: Categoriaanomalia_sottocategoriaanomaliaSumAggregateOutputType | null
    _min: Categoriaanomalia_sottocategoriaanomaliaMinAggregateOutputType | null
    _max: Categoriaanomalia_sottocategoriaanomaliaMaxAggregateOutputType | null
  }

  export type Categoriaanomalia_sottocategoriaanomaliaAvgAggregateOutputType = {
    id: number | null
    id_categoria_anomalia: number | null
    id_sottocategoria_anomalia: number | null
  }

  export type Categoriaanomalia_sottocategoriaanomaliaSumAggregateOutputType = {
    id: number | null
    id_categoria_anomalia: number | null
    id_sottocategoria_anomalia: number | null
  }

  export type Categoriaanomalia_sottocategoriaanomaliaMinAggregateOutputType = {
    id: number | null
    id_categoria_anomalia: number | null
    id_sottocategoria_anomalia: number | null
  }

  export type Categoriaanomalia_sottocategoriaanomaliaMaxAggregateOutputType = {
    id: number | null
    id_categoria_anomalia: number | null
    id_sottocategoria_anomalia: number | null
  }

  export type Categoriaanomalia_sottocategoriaanomaliaCountAggregateOutputType = {
    id: number
    id_categoria_anomalia: number
    id_sottocategoria_anomalia: number
    _all: number
  }


  export type Categoriaanomalia_sottocategoriaanomaliaAvgAggregateInputType = {
    id?: true
    id_categoria_anomalia?: true
    id_sottocategoria_anomalia?: true
  }

  export type Categoriaanomalia_sottocategoriaanomaliaSumAggregateInputType = {
    id?: true
    id_categoria_anomalia?: true
    id_sottocategoria_anomalia?: true
  }

  export type Categoriaanomalia_sottocategoriaanomaliaMinAggregateInputType = {
    id?: true
    id_categoria_anomalia?: true
    id_sottocategoria_anomalia?: true
  }

  export type Categoriaanomalia_sottocategoriaanomaliaMaxAggregateInputType = {
    id?: true
    id_categoria_anomalia?: true
    id_sottocategoria_anomalia?: true
  }

  export type Categoriaanomalia_sottocategoriaanomaliaCountAggregateInputType = {
    id?: true
    id_categoria_anomalia?: true
    id_sottocategoria_anomalia?: true
    _all?: true
  }

  export type Categoriaanomalia_sottocategoriaanomaliaAggregateArgs = {
    /**
     * Filter which categoriaanomalia_sottocategoriaanomalia to aggregate.
     */
    where?: categoriaanomalia_sottocategoriaanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoriaanomalia_sottocategoriaanomalias to fetch.
     */
    orderBy?: Enumerable<categoriaanomalia_sottocategoriaanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoriaanomalia_sottocategoriaanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoriaanomalia_sottocategoriaanomalias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categoriaanomalia_sottocategoriaanomalias
    **/
    _count?: true | Categoriaanomalia_sottocategoriaanomaliaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Categoriaanomalia_sottocategoriaanomaliaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Categoriaanomalia_sottocategoriaanomaliaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Categoriaanomalia_sottocategoriaanomaliaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Categoriaanomalia_sottocategoriaanomaliaMaxAggregateInputType
  }

  export type GetCategoriaanomalia_sottocategoriaanomaliaAggregateType<T extends Categoriaanomalia_sottocategoriaanomaliaAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoriaanomalia_sottocategoriaanomalia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoriaanomalia_sottocategoriaanomalia[P]>
      : GetScalarType<T[P], AggregateCategoriaanomalia_sottocategoriaanomalia[P]>
  }




  export type Categoriaanomalia_sottocategoriaanomaliaGroupByArgs = {
    where?: categoriaanomalia_sottocategoriaanomaliaWhereInput
    orderBy?: Enumerable<categoriaanomalia_sottocategoriaanomaliaOrderByWithAggregationInput>
    by: Categoriaanomalia_sottocategoriaanomaliaScalarFieldEnum[]
    having?: categoriaanomalia_sottocategoriaanomaliaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Categoriaanomalia_sottocategoriaanomaliaCountAggregateInputType | true
    _avg?: Categoriaanomalia_sottocategoriaanomaliaAvgAggregateInputType
    _sum?: Categoriaanomalia_sottocategoriaanomaliaSumAggregateInputType
    _min?: Categoriaanomalia_sottocategoriaanomaliaMinAggregateInputType
    _max?: Categoriaanomalia_sottocategoriaanomaliaMaxAggregateInputType
  }


  export type Categoriaanomalia_sottocategoriaanomaliaGroupByOutputType = {
    id: number
    id_categoria_anomalia: number | null
    id_sottocategoria_anomalia: number | null
    _count: Categoriaanomalia_sottocategoriaanomaliaCountAggregateOutputType | null
    _avg: Categoriaanomalia_sottocategoriaanomaliaAvgAggregateOutputType | null
    _sum: Categoriaanomalia_sottocategoriaanomaliaSumAggregateOutputType | null
    _min: Categoriaanomalia_sottocategoriaanomaliaMinAggregateOutputType | null
    _max: Categoriaanomalia_sottocategoriaanomaliaMaxAggregateOutputType | null
  }

  type GetCategoriaanomalia_sottocategoriaanomaliaGroupByPayload<T extends Categoriaanomalia_sottocategoriaanomaliaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Categoriaanomalia_sottocategoriaanomaliaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Categoriaanomalia_sottocategoriaanomaliaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Categoriaanomalia_sottocategoriaanomaliaGroupByOutputType[P]>
            : GetScalarType<T[P], Categoriaanomalia_sottocategoriaanomaliaGroupByOutputType[P]>
        }
      >
    >


  export type categoriaanomalia_sottocategoriaanomaliaSelect = {
    id?: boolean
    id_categoria_anomalia?: boolean
    id_sottocategoria_anomalia?: boolean
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategoriaanomalia?: boolean | sottocategoriaanomaliaArgs
  }


  export type categoriaanomalia_sottocategoriaanomaliaInclude = {
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategoriaanomalia?: boolean | sottocategoriaanomaliaArgs
  }

  export type categoriaanomalia_sottocategoriaanomaliaGetPayload<S extends boolean | null | undefined | categoriaanomalia_sottocategoriaanomaliaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? categoriaanomalia_sottocategoriaanomalia :
    S extends undefined ? never :
    S extends { include: any } & (categoriaanomalia_sottocategoriaanomaliaArgs | categoriaanomalia_sottocategoriaanomaliaFindManyArgs)
    ? categoriaanomalia_sottocategoriaanomalia  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['include'][P]> | null :
        P extends 'sottocategoriaanomalia' ? sottocategoriaanomaliaGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (categoriaanomalia_sottocategoriaanomaliaArgs | categoriaanomalia_sottocategoriaanomaliaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['select'][P]> | null :
        P extends 'sottocategoriaanomalia' ? sottocategoriaanomaliaGetPayload<S['select'][P]> | null :  P extends keyof categoriaanomalia_sottocategoriaanomalia ? categoriaanomalia_sottocategoriaanomalia[P] : never
  } 
      : categoriaanomalia_sottocategoriaanomalia


  type categoriaanomalia_sottocategoriaanomaliaCountArgs = 
    Omit<categoriaanomalia_sottocategoriaanomaliaFindManyArgs, 'select' | 'include'> & {
      select?: Categoriaanomalia_sottocategoriaanomaliaCountAggregateInputType | true
    }

  export interface categoriaanomalia_sottocategoriaanomaliaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Categoriaanomalia_sottocategoriaanomalia that matches the filter.
     * @param {categoriaanomalia_sottocategoriaanomaliaFindUniqueArgs} args - Arguments to find a Categoriaanomalia_sottocategoriaanomalia
     * @example
     * // Get one Categoriaanomalia_sottocategoriaanomalia
     * const categoriaanomalia_sottocategoriaanomalia = await prisma.categoriaanomalia_sottocategoriaanomalia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends categoriaanomalia_sottocategoriaanomaliaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, categoriaanomalia_sottocategoriaanomaliaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'categoriaanomalia_sottocategoriaanomalia'> extends True ? Prisma__categoriaanomalia_sottocategoriaanomaliaClient<categoriaanomalia_sottocategoriaanomaliaGetPayload<T>> : Prisma__categoriaanomalia_sottocategoriaanomaliaClient<categoriaanomalia_sottocategoriaanomaliaGetPayload<T> | null, null>

    /**
     * Find one Categoriaanomalia_sottocategoriaanomalia that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {categoriaanomalia_sottocategoriaanomaliaFindUniqueOrThrowArgs} args - Arguments to find a Categoriaanomalia_sottocategoriaanomalia
     * @example
     * // Get one Categoriaanomalia_sottocategoriaanomalia
     * const categoriaanomalia_sottocategoriaanomalia = await prisma.categoriaanomalia_sottocategoriaanomalia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends categoriaanomalia_sottocategoriaanomaliaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, categoriaanomalia_sottocategoriaanomaliaFindUniqueOrThrowArgs>
    ): Prisma__categoriaanomalia_sottocategoriaanomaliaClient<categoriaanomalia_sottocategoriaanomaliaGetPayload<T>>

    /**
     * Find the first Categoriaanomalia_sottocategoriaanomalia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomalia_sottocategoriaanomaliaFindFirstArgs} args - Arguments to find a Categoriaanomalia_sottocategoriaanomalia
     * @example
     * // Get one Categoriaanomalia_sottocategoriaanomalia
     * const categoriaanomalia_sottocategoriaanomalia = await prisma.categoriaanomalia_sottocategoriaanomalia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends categoriaanomalia_sottocategoriaanomaliaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, categoriaanomalia_sottocategoriaanomaliaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'categoriaanomalia_sottocategoriaanomalia'> extends True ? Prisma__categoriaanomalia_sottocategoriaanomaliaClient<categoriaanomalia_sottocategoriaanomaliaGetPayload<T>> : Prisma__categoriaanomalia_sottocategoriaanomaliaClient<categoriaanomalia_sottocategoriaanomaliaGetPayload<T> | null, null>

    /**
     * Find the first Categoriaanomalia_sottocategoriaanomalia that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomalia_sottocategoriaanomaliaFindFirstOrThrowArgs} args - Arguments to find a Categoriaanomalia_sottocategoriaanomalia
     * @example
     * // Get one Categoriaanomalia_sottocategoriaanomalia
     * const categoriaanomalia_sottocategoriaanomalia = await prisma.categoriaanomalia_sottocategoriaanomalia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends categoriaanomalia_sottocategoriaanomaliaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, categoriaanomalia_sottocategoriaanomaliaFindFirstOrThrowArgs>
    ): Prisma__categoriaanomalia_sottocategoriaanomaliaClient<categoriaanomalia_sottocategoriaanomaliaGetPayload<T>>

    /**
     * Find zero or more Categoriaanomalia_sottocategoriaanomalias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomalia_sottocategoriaanomaliaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categoriaanomalia_sottocategoriaanomalias
     * const categoriaanomalia_sottocategoriaanomalias = await prisma.categoriaanomalia_sottocategoriaanomalia.findMany()
     * 
     * // Get first 10 Categoriaanomalia_sottocategoriaanomalias
     * const categoriaanomalia_sottocategoriaanomalias = await prisma.categoriaanomalia_sottocategoriaanomalia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriaanomalia_sottocategoriaanomaliaWithIdOnly = await prisma.categoriaanomalia_sottocategoriaanomalia.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends categoriaanomalia_sottocategoriaanomaliaFindManyArgs>(
      args?: SelectSubset<T, categoriaanomalia_sottocategoriaanomaliaFindManyArgs>
    ): Prisma.PrismaPromise<Array<categoriaanomalia_sottocategoriaanomaliaGetPayload<T>>>

    /**
     * Create a Categoriaanomalia_sottocategoriaanomalia.
     * @param {categoriaanomalia_sottocategoriaanomaliaCreateArgs} args - Arguments to create a Categoriaanomalia_sottocategoriaanomalia.
     * @example
     * // Create one Categoriaanomalia_sottocategoriaanomalia
     * const Categoriaanomalia_sottocategoriaanomalia = await prisma.categoriaanomalia_sottocategoriaanomalia.create({
     *   data: {
     *     // ... data to create a Categoriaanomalia_sottocategoriaanomalia
     *   }
     * })
     * 
    **/
    create<T extends categoriaanomalia_sottocategoriaanomaliaCreateArgs>(
      args: SelectSubset<T, categoriaanomalia_sottocategoriaanomaliaCreateArgs>
    ): Prisma__categoriaanomalia_sottocategoriaanomaliaClient<categoriaanomalia_sottocategoriaanomaliaGetPayload<T>>

    /**
     * Create many Categoriaanomalia_sottocategoriaanomalias.
     *     @param {categoriaanomalia_sottocategoriaanomaliaCreateManyArgs} args - Arguments to create many Categoriaanomalia_sottocategoriaanomalias.
     *     @example
     *     // Create many Categoriaanomalia_sottocategoriaanomalias
     *     const categoriaanomalia_sottocategoriaanomalia = await prisma.categoriaanomalia_sottocategoriaanomalia.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends categoriaanomalia_sottocategoriaanomaliaCreateManyArgs>(
      args?: SelectSubset<T, categoriaanomalia_sottocategoriaanomaliaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Categoriaanomalia_sottocategoriaanomalia.
     * @param {categoriaanomalia_sottocategoriaanomaliaDeleteArgs} args - Arguments to delete one Categoriaanomalia_sottocategoriaanomalia.
     * @example
     * // Delete one Categoriaanomalia_sottocategoriaanomalia
     * const Categoriaanomalia_sottocategoriaanomalia = await prisma.categoriaanomalia_sottocategoriaanomalia.delete({
     *   where: {
     *     // ... filter to delete one Categoriaanomalia_sottocategoriaanomalia
     *   }
     * })
     * 
    **/
    delete<T extends categoriaanomalia_sottocategoriaanomaliaDeleteArgs>(
      args: SelectSubset<T, categoriaanomalia_sottocategoriaanomaliaDeleteArgs>
    ): Prisma__categoriaanomalia_sottocategoriaanomaliaClient<categoriaanomalia_sottocategoriaanomaliaGetPayload<T>>

    /**
     * Update one Categoriaanomalia_sottocategoriaanomalia.
     * @param {categoriaanomalia_sottocategoriaanomaliaUpdateArgs} args - Arguments to update one Categoriaanomalia_sottocategoriaanomalia.
     * @example
     * // Update one Categoriaanomalia_sottocategoriaanomalia
     * const categoriaanomalia_sottocategoriaanomalia = await prisma.categoriaanomalia_sottocategoriaanomalia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends categoriaanomalia_sottocategoriaanomaliaUpdateArgs>(
      args: SelectSubset<T, categoriaanomalia_sottocategoriaanomaliaUpdateArgs>
    ): Prisma__categoriaanomalia_sottocategoriaanomaliaClient<categoriaanomalia_sottocategoriaanomaliaGetPayload<T>>

    /**
     * Delete zero or more Categoriaanomalia_sottocategoriaanomalias.
     * @param {categoriaanomalia_sottocategoriaanomaliaDeleteManyArgs} args - Arguments to filter Categoriaanomalia_sottocategoriaanomalias to delete.
     * @example
     * // Delete a few Categoriaanomalia_sottocategoriaanomalias
     * const { count } = await prisma.categoriaanomalia_sottocategoriaanomalia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends categoriaanomalia_sottocategoriaanomaliaDeleteManyArgs>(
      args?: SelectSubset<T, categoriaanomalia_sottocategoriaanomaliaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categoriaanomalia_sottocategoriaanomalias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomalia_sottocategoriaanomaliaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categoriaanomalia_sottocategoriaanomalias
     * const categoriaanomalia_sottocategoriaanomalia = await prisma.categoriaanomalia_sottocategoriaanomalia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends categoriaanomalia_sottocategoriaanomaliaUpdateManyArgs>(
      args: SelectSubset<T, categoriaanomalia_sottocategoriaanomaliaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categoriaanomalia_sottocategoriaanomalia.
     * @param {categoriaanomalia_sottocategoriaanomaliaUpsertArgs} args - Arguments to update or create a Categoriaanomalia_sottocategoriaanomalia.
     * @example
     * // Update or create a Categoriaanomalia_sottocategoriaanomalia
     * const categoriaanomalia_sottocategoriaanomalia = await prisma.categoriaanomalia_sottocategoriaanomalia.upsert({
     *   create: {
     *     // ... data to create a Categoriaanomalia_sottocategoriaanomalia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoriaanomalia_sottocategoriaanomalia we want to update
     *   }
     * })
    **/
    upsert<T extends categoriaanomalia_sottocategoriaanomaliaUpsertArgs>(
      args: SelectSubset<T, categoriaanomalia_sottocategoriaanomaliaUpsertArgs>
    ): Prisma__categoriaanomalia_sottocategoriaanomaliaClient<categoriaanomalia_sottocategoriaanomaliaGetPayload<T>>

    /**
     * Count the number of Categoriaanomalia_sottocategoriaanomalias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomalia_sottocategoriaanomaliaCountArgs} args - Arguments to filter Categoriaanomalia_sottocategoriaanomalias to count.
     * @example
     * // Count the number of Categoriaanomalia_sottocategoriaanomalias
     * const count = await prisma.categoriaanomalia_sottocategoriaanomalia.count({
     *   where: {
     *     // ... the filter for the Categoriaanomalia_sottocategoriaanomalias we want to count
     *   }
     * })
    **/
    count<T extends categoriaanomalia_sottocategoriaanomaliaCountArgs>(
      args?: Subset<T, categoriaanomalia_sottocategoriaanomaliaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Categoriaanomalia_sottocategoriaanomaliaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoriaanomalia_sottocategoriaanomalia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoriaanomalia_sottocategoriaanomaliaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Categoriaanomalia_sottocategoriaanomaliaAggregateArgs>(args: Subset<T, Categoriaanomalia_sottocategoriaanomaliaAggregateArgs>): Prisma.PrismaPromise<GetCategoriaanomalia_sottocategoriaanomaliaAggregateType<T>>

    /**
     * Group by Categoriaanomalia_sottocategoriaanomalia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoriaanomalia_sottocategoriaanomaliaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Categoriaanomalia_sottocategoriaanomaliaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Categoriaanomalia_sottocategoriaanomaliaGroupByArgs['orderBy'] }
        : { orderBy?: Categoriaanomalia_sottocategoriaanomaliaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Categoriaanomalia_sottocategoriaanomaliaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaanomalia_sottocategoriaanomaliaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for categoriaanomalia_sottocategoriaanomalia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__categoriaanomalia_sottocategoriaanomaliaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    categoriaanomalia<T extends categoriaanomaliaArgs= {}>(args?: Subset<T, categoriaanomaliaArgs>): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T> | Null>;

    sottocategoriaanomalia<T extends sottocategoriaanomaliaArgs= {}>(args?: Subset<T, sottocategoriaanomaliaArgs>): Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * categoriaanomalia_sottocategoriaanomalia base type for findUnique actions
   */
  export type categoriaanomalia_sottocategoriaanomaliaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategoriaanomalia
     */
    select?: categoriaanomalia_sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategoriaanomaliaInclude | null
    /**
     * Filter, which categoriaanomalia_sottocategoriaanomalia to fetch.
     */
    where: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
  }

  /**
   * categoriaanomalia_sottocategoriaanomalia findUnique
   */
  export interface categoriaanomalia_sottocategoriaanomaliaFindUniqueArgs extends categoriaanomalia_sottocategoriaanomaliaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * categoriaanomalia_sottocategoriaanomalia findUniqueOrThrow
   */
  export type categoriaanomalia_sottocategoriaanomaliaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategoriaanomalia
     */
    select?: categoriaanomalia_sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategoriaanomaliaInclude | null
    /**
     * Filter, which categoriaanomalia_sottocategoriaanomalia to fetch.
     */
    where: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
  }


  /**
   * categoriaanomalia_sottocategoriaanomalia base type for findFirst actions
   */
  export type categoriaanomalia_sottocategoriaanomaliaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategoriaanomalia
     */
    select?: categoriaanomalia_sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategoriaanomaliaInclude | null
    /**
     * Filter, which categoriaanomalia_sottocategoriaanomalia to fetch.
     */
    where?: categoriaanomalia_sottocategoriaanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoriaanomalia_sottocategoriaanomalias to fetch.
     */
    orderBy?: Enumerable<categoriaanomalia_sottocategoriaanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categoriaanomalia_sottocategoriaanomalias.
     */
    cursor?: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoriaanomalia_sottocategoriaanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoriaanomalia_sottocategoriaanomalias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categoriaanomalia_sottocategoriaanomalias.
     */
    distinct?: Enumerable<Categoriaanomalia_sottocategoriaanomaliaScalarFieldEnum>
  }

  /**
   * categoriaanomalia_sottocategoriaanomalia findFirst
   */
  export interface categoriaanomalia_sottocategoriaanomaliaFindFirstArgs extends categoriaanomalia_sottocategoriaanomaliaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * categoriaanomalia_sottocategoriaanomalia findFirstOrThrow
   */
  export type categoriaanomalia_sottocategoriaanomaliaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategoriaanomalia
     */
    select?: categoriaanomalia_sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategoriaanomaliaInclude | null
    /**
     * Filter, which categoriaanomalia_sottocategoriaanomalia to fetch.
     */
    where?: categoriaanomalia_sottocategoriaanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoriaanomalia_sottocategoriaanomalias to fetch.
     */
    orderBy?: Enumerable<categoriaanomalia_sottocategoriaanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categoriaanomalia_sottocategoriaanomalias.
     */
    cursor?: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoriaanomalia_sottocategoriaanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoriaanomalia_sottocategoriaanomalias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categoriaanomalia_sottocategoriaanomalias.
     */
    distinct?: Enumerable<Categoriaanomalia_sottocategoriaanomaliaScalarFieldEnum>
  }


  /**
   * categoriaanomalia_sottocategoriaanomalia findMany
   */
  export type categoriaanomalia_sottocategoriaanomaliaFindManyArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategoriaanomalia
     */
    select?: categoriaanomalia_sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategoriaanomaliaInclude | null
    /**
     * Filter, which categoriaanomalia_sottocategoriaanomalias to fetch.
     */
    where?: categoriaanomalia_sottocategoriaanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoriaanomalia_sottocategoriaanomalias to fetch.
     */
    orderBy?: Enumerable<categoriaanomalia_sottocategoriaanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categoriaanomalia_sottocategoriaanomalias.
     */
    cursor?: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoriaanomalia_sottocategoriaanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoriaanomalia_sottocategoriaanomalias.
     */
    skip?: number
    distinct?: Enumerable<Categoriaanomalia_sottocategoriaanomaliaScalarFieldEnum>
  }


  /**
   * categoriaanomalia_sottocategoriaanomalia create
   */
  export type categoriaanomalia_sottocategoriaanomaliaCreateArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategoriaanomalia
     */
    select?: categoriaanomalia_sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategoriaanomaliaInclude | null
    /**
     * The data needed to create a categoriaanomalia_sottocategoriaanomalia.
     */
    data: XOR<categoriaanomalia_sottocategoriaanomaliaCreateInput, categoriaanomalia_sottocategoriaanomaliaUncheckedCreateInput>
  }


  /**
   * categoriaanomalia_sottocategoriaanomalia createMany
   */
  export type categoriaanomalia_sottocategoriaanomaliaCreateManyArgs = {
    /**
     * The data used to create many categoriaanomalia_sottocategoriaanomalias.
     */
    data: Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * categoriaanomalia_sottocategoriaanomalia update
   */
  export type categoriaanomalia_sottocategoriaanomaliaUpdateArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategoriaanomalia
     */
    select?: categoriaanomalia_sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategoriaanomaliaInclude | null
    /**
     * The data needed to update a categoriaanomalia_sottocategoriaanomalia.
     */
    data: XOR<categoriaanomalia_sottocategoriaanomaliaUpdateInput, categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateInput>
    /**
     * Choose, which categoriaanomalia_sottocategoriaanomalia to update.
     */
    where: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
  }


  /**
   * categoriaanomalia_sottocategoriaanomalia updateMany
   */
  export type categoriaanomalia_sottocategoriaanomaliaUpdateManyArgs = {
    /**
     * The data used to update categoriaanomalia_sottocategoriaanomalias.
     */
    data: XOR<categoriaanomalia_sottocategoriaanomaliaUpdateManyMutationInput, categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyInput>
    /**
     * Filter which categoriaanomalia_sottocategoriaanomalias to update
     */
    where?: categoriaanomalia_sottocategoriaanomaliaWhereInput
  }


  /**
   * categoriaanomalia_sottocategoriaanomalia upsert
   */
  export type categoriaanomalia_sottocategoriaanomaliaUpsertArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategoriaanomalia
     */
    select?: categoriaanomalia_sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategoriaanomaliaInclude | null
    /**
     * The filter to search for the categoriaanomalia_sottocategoriaanomalia to update in case it exists.
     */
    where: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    /**
     * In case the categoriaanomalia_sottocategoriaanomalia found by the `where` argument doesn't exist, create a new categoriaanomalia_sottocategoriaanomalia with this data.
     */
    create: XOR<categoriaanomalia_sottocategoriaanomaliaCreateInput, categoriaanomalia_sottocategoriaanomaliaUncheckedCreateInput>
    /**
     * In case the categoriaanomalia_sottocategoriaanomalia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoriaanomalia_sottocategoriaanomaliaUpdateInput, categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateInput>
  }


  /**
   * categoriaanomalia_sottocategoriaanomalia delete
   */
  export type categoriaanomalia_sottocategoriaanomaliaDeleteArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategoriaanomalia
     */
    select?: categoriaanomalia_sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategoriaanomaliaInclude | null
    /**
     * Filter which categoriaanomalia_sottocategoriaanomalia to delete.
     */
    where: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
  }


  /**
   * categoriaanomalia_sottocategoriaanomalia deleteMany
   */
  export type categoriaanomalia_sottocategoriaanomaliaDeleteManyArgs = {
    /**
     * Filter which categoriaanomalia_sottocategoriaanomalias to delete
     */
    where?: categoriaanomalia_sottocategoriaanomaliaWhereInput
  }


  /**
   * categoriaanomalia_sottocategoriaanomalia without action
   */
  export type categoriaanomalia_sottocategoriaanomaliaArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategoriaanomalia
     */
    select?: categoriaanomalia_sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategoriaanomaliaInclude | null
  }



  /**
   * Model categoriaanomalia_sottocategorialavoro
   */


  export type AggregateCategoriaanomalia_sottocategorialavoro = {
    _count: Categoriaanomalia_sottocategorialavoroCountAggregateOutputType | null
    _avg: Categoriaanomalia_sottocategorialavoroAvgAggregateOutputType | null
    _sum: Categoriaanomalia_sottocategorialavoroSumAggregateOutputType | null
    _min: Categoriaanomalia_sottocategorialavoroMinAggregateOutputType | null
    _max: Categoriaanomalia_sottocategorialavoroMaxAggregateOutputType | null
  }

  export type Categoriaanomalia_sottocategorialavoroAvgAggregateOutputType = {
    id: number | null
    id_categoria_lavoro: number | null
    id_sottocategoria_lavoro: number | null
  }

  export type Categoriaanomalia_sottocategorialavoroSumAggregateOutputType = {
    id: number | null
    id_categoria_lavoro: number | null
    id_sottocategoria_lavoro: number | null
  }

  export type Categoriaanomalia_sottocategorialavoroMinAggregateOutputType = {
    id: number | null
    id_categoria_lavoro: number | null
    id_sottocategoria_lavoro: number | null
  }

  export type Categoriaanomalia_sottocategorialavoroMaxAggregateOutputType = {
    id: number | null
    id_categoria_lavoro: number | null
    id_sottocategoria_lavoro: number | null
  }

  export type Categoriaanomalia_sottocategorialavoroCountAggregateOutputType = {
    id: number
    id_categoria_lavoro: number
    id_sottocategoria_lavoro: number
    _all: number
  }


  export type Categoriaanomalia_sottocategorialavoroAvgAggregateInputType = {
    id?: true
    id_categoria_lavoro?: true
    id_sottocategoria_lavoro?: true
  }

  export type Categoriaanomalia_sottocategorialavoroSumAggregateInputType = {
    id?: true
    id_categoria_lavoro?: true
    id_sottocategoria_lavoro?: true
  }

  export type Categoriaanomalia_sottocategorialavoroMinAggregateInputType = {
    id?: true
    id_categoria_lavoro?: true
    id_sottocategoria_lavoro?: true
  }

  export type Categoriaanomalia_sottocategorialavoroMaxAggregateInputType = {
    id?: true
    id_categoria_lavoro?: true
    id_sottocategoria_lavoro?: true
  }

  export type Categoriaanomalia_sottocategorialavoroCountAggregateInputType = {
    id?: true
    id_categoria_lavoro?: true
    id_sottocategoria_lavoro?: true
    _all?: true
  }

  export type Categoriaanomalia_sottocategorialavoroAggregateArgs = {
    /**
     * Filter which categoriaanomalia_sottocategorialavoro to aggregate.
     */
    where?: categoriaanomalia_sottocategorialavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoriaanomalia_sottocategorialavoros to fetch.
     */
    orderBy?: Enumerable<categoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoriaanomalia_sottocategorialavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoriaanomalia_sottocategorialavoros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categoriaanomalia_sottocategorialavoros
    **/
    _count?: true | Categoriaanomalia_sottocategorialavoroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Categoriaanomalia_sottocategorialavoroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Categoriaanomalia_sottocategorialavoroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Categoriaanomalia_sottocategorialavoroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Categoriaanomalia_sottocategorialavoroMaxAggregateInputType
  }

  export type GetCategoriaanomalia_sottocategorialavoroAggregateType<T extends Categoriaanomalia_sottocategorialavoroAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoriaanomalia_sottocategorialavoro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoriaanomalia_sottocategorialavoro[P]>
      : GetScalarType<T[P], AggregateCategoriaanomalia_sottocategorialavoro[P]>
  }




  export type Categoriaanomalia_sottocategorialavoroGroupByArgs = {
    where?: categoriaanomalia_sottocategorialavoroWhereInput
    orderBy?: Enumerable<categoriaanomalia_sottocategorialavoroOrderByWithAggregationInput>
    by: Categoriaanomalia_sottocategorialavoroScalarFieldEnum[]
    having?: categoriaanomalia_sottocategorialavoroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Categoriaanomalia_sottocategorialavoroCountAggregateInputType | true
    _avg?: Categoriaanomalia_sottocategorialavoroAvgAggregateInputType
    _sum?: Categoriaanomalia_sottocategorialavoroSumAggregateInputType
    _min?: Categoriaanomalia_sottocategorialavoroMinAggregateInputType
    _max?: Categoriaanomalia_sottocategorialavoroMaxAggregateInputType
  }


  export type Categoriaanomalia_sottocategorialavoroGroupByOutputType = {
    id: number
    id_categoria_lavoro: number | null
    id_sottocategoria_lavoro: number | null
    _count: Categoriaanomalia_sottocategorialavoroCountAggregateOutputType | null
    _avg: Categoriaanomalia_sottocategorialavoroAvgAggregateOutputType | null
    _sum: Categoriaanomalia_sottocategorialavoroSumAggregateOutputType | null
    _min: Categoriaanomalia_sottocategorialavoroMinAggregateOutputType | null
    _max: Categoriaanomalia_sottocategorialavoroMaxAggregateOutputType | null
  }

  type GetCategoriaanomalia_sottocategorialavoroGroupByPayload<T extends Categoriaanomalia_sottocategorialavoroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Categoriaanomalia_sottocategorialavoroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Categoriaanomalia_sottocategorialavoroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Categoriaanomalia_sottocategorialavoroGroupByOutputType[P]>
            : GetScalarType<T[P], Categoriaanomalia_sottocategorialavoroGroupByOutputType[P]>
        }
      >
    >


  export type categoriaanomalia_sottocategorialavoroSelect = {
    id?: boolean
    id_categoria_lavoro?: boolean
    id_sottocategoria_lavoro?: boolean
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategorialavoro?: boolean | sottocategorialavoroArgs
  }


  export type categoriaanomalia_sottocategorialavoroInclude = {
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategorialavoro?: boolean | sottocategorialavoroArgs
  }

  export type categoriaanomalia_sottocategorialavoroGetPayload<S extends boolean | null | undefined | categoriaanomalia_sottocategorialavoroArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? categoriaanomalia_sottocategorialavoro :
    S extends undefined ? never :
    S extends { include: any } & (categoriaanomalia_sottocategorialavoroArgs | categoriaanomalia_sottocategorialavoroFindManyArgs)
    ? categoriaanomalia_sottocategorialavoro  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['include'][P]> | null :
        P extends 'sottocategorialavoro' ? sottocategorialavoroGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (categoriaanomalia_sottocategorialavoroArgs | categoriaanomalia_sottocategorialavoroFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['select'][P]> | null :
        P extends 'sottocategorialavoro' ? sottocategorialavoroGetPayload<S['select'][P]> | null :  P extends keyof categoriaanomalia_sottocategorialavoro ? categoriaanomalia_sottocategorialavoro[P] : never
  } 
      : categoriaanomalia_sottocategorialavoro


  type categoriaanomalia_sottocategorialavoroCountArgs = 
    Omit<categoriaanomalia_sottocategorialavoroFindManyArgs, 'select' | 'include'> & {
      select?: Categoriaanomalia_sottocategorialavoroCountAggregateInputType | true
    }

  export interface categoriaanomalia_sottocategorialavoroDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Categoriaanomalia_sottocategorialavoro that matches the filter.
     * @param {categoriaanomalia_sottocategorialavoroFindUniqueArgs} args - Arguments to find a Categoriaanomalia_sottocategorialavoro
     * @example
     * // Get one Categoriaanomalia_sottocategorialavoro
     * const categoriaanomalia_sottocategorialavoro = await prisma.categoriaanomalia_sottocategorialavoro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends categoriaanomalia_sottocategorialavoroFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, categoriaanomalia_sottocategorialavoroFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'categoriaanomalia_sottocategorialavoro'> extends True ? Prisma__categoriaanomalia_sottocategorialavoroClient<categoriaanomalia_sottocategorialavoroGetPayload<T>> : Prisma__categoriaanomalia_sottocategorialavoroClient<categoriaanomalia_sottocategorialavoroGetPayload<T> | null, null>

    /**
     * Find one Categoriaanomalia_sottocategorialavoro that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {categoriaanomalia_sottocategorialavoroFindUniqueOrThrowArgs} args - Arguments to find a Categoriaanomalia_sottocategorialavoro
     * @example
     * // Get one Categoriaanomalia_sottocategorialavoro
     * const categoriaanomalia_sottocategorialavoro = await prisma.categoriaanomalia_sottocategorialavoro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends categoriaanomalia_sottocategorialavoroFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, categoriaanomalia_sottocategorialavoroFindUniqueOrThrowArgs>
    ): Prisma__categoriaanomalia_sottocategorialavoroClient<categoriaanomalia_sottocategorialavoroGetPayload<T>>

    /**
     * Find the first Categoriaanomalia_sottocategorialavoro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomalia_sottocategorialavoroFindFirstArgs} args - Arguments to find a Categoriaanomalia_sottocategorialavoro
     * @example
     * // Get one Categoriaanomalia_sottocategorialavoro
     * const categoriaanomalia_sottocategorialavoro = await prisma.categoriaanomalia_sottocategorialavoro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends categoriaanomalia_sottocategorialavoroFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, categoriaanomalia_sottocategorialavoroFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'categoriaanomalia_sottocategorialavoro'> extends True ? Prisma__categoriaanomalia_sottocategorialavoroClient<categoriaanomalia_sottocategorialavoroGetPayload<T>> : Prisma__categoriaanomalia_sottocategorialavoroClient<categoriaanomalia_sottocategorialavoroGetPayload<T> | null, null>

    /**
     * Find the first Categoriaanomalia_sottocategorialavoro that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomalia_sottocategorialavoroFindFirstOrThrowArgs} args - Arguments to find a Categoriaanomalia_sottocategorialavoro
     * @example
     * // Get one Categoriaanomalia_sottocategorialavoro
     * const categoriaanomalia_sottocategorialavoro = await prisma.categoriaanomalia_sottocategorialavoro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends categoriaanomalia_sottocategorialavoroFindFirstOrThrowArgs>(
      args?: SelectSubset<T, categoriaanomalia_sottocategorialavoroFindFirstOrThrowArgs>
    ): Prisma__categoriaanomalia_sottocategorialavoroClient<categoriaanomalia_sottocategorialavoroGetPayload<T>>

    /**
     * Find zero or more Categoriaanomalia_sottocategorialavoros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomalia_sottocategorialavoroFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categoriaanomalia_sottocategorialavoros
     * const categoriaanomalia_sottocategorialavoros = await prisma.categoriaanomalia_sottocategorialavoro.findMany()
     * 
     * // Get first 10 Categoriaanomalia_sottocategorialavoros
     * const categoriaanomalia_sottocategorialavoros = await prisma.categoriaanomalia_sottocategorialavoro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriaanomalia_sottocategorialavoroWithIdOnly = await prisma.categoriaanomalia_sottocategorialavoro.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends categoriaanomalia_sottocategorialavoroFindManyArgs>(
      args?: SelectSubset<T, categoriaanomalia_sottocategorialavoroFindManyArgs>
    ): Prisma.PrismaPromise<Array<categoriaanomalia_sottocategorialavoroGetPayload<T>>>

    /**
     * Create a Categoriaanomalia_sottocategorialavoro.
     * @param {categoriaanomalia_sottocategorialavoroCreateArgs} args - Arguments to create a Categoriaanomalia_sottocategorialavoro.
     * @example
     * // Create one Categoriaanomalia_sottocategorialavoro
     * const Categoriaanomalia_sottocategorialavoro = await prisma.categoriaanomalia_sottocategorialavoro.create({
     *   data: {
     *     // ... data to create a Categoriaanomalia_sottocategorialavoro
     *   }
     * })
     * 
    **/
    create<T extends categoriaanomalia_sottocategorialavoroCreateArgs>(
      args: SelectSubset<T, categoriaanomalia_sottocategorialavoroCreateArgs>
    ): Prisma__categoriaanomalia_sottocategorialavoroClient<categoriaanomalia_sottocategorialavoroGetPayload<T>>

    /**
     * Create many Categoriaanomalia_sottocategorialavoros.
     *     @param {categoriaanomalia_sottocategorialavoroCreateManyArgs} args - Arguments to create many Categoriaanomalia_sottocategorialavoros.
     *     @example
     *     // Create many Categoriaanomalia_sottocategorialavoros
     *     const categoriaanomalia_sottocategorialavoro = await prisma.categoriaanomalia_sottocategorialavoro.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends categoriaanomalia_sottocategorialavoroCreateManyArgs>(
      args?: SelectSubset<T, categoriaanomalia_sottocategorialavoroCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Categoriaanomalia_sottocategorialavoro.
     * @param {categoriaanomalia_sottocategorialavoroDeleteArgs} args - Arguments to delete one Categoriaanomalia_sottocategorialavoro.
     * @example
     * // Delete one Categoriaanomalia_sottocategorialavoro
     * const Categoriaanomalia_sottocategorialavoro = await prisma.categoriaanomalia_sottocategorialavoro.delete({
     *   where: {
     *     // ... filter to delete one Categoriaanomalia_sottocategorialavoro
     *   }
     * })
     * 
    **/
    delete<T extends categoriaanomalia_sottocategorialavoroDeleteArgs>(
      args: SelectSubset<T, categoriaanomalia_sottocategorialavoroDeleteArgs>
    ): Prisma__categoriaanomalia_sottocategorialavoroClient<categoriaanomalia_sottocategorialavoroGetPayload<T>>

    /**
     * Update one Categoriaanomalia_sottocategorialavoro.
     * @param {categoriaanomalia_sottocategorialavoroUpdateArgs} args - Arguments to update one Categoriaanomalia_sottocategorialavoro.
     * @example
     * // Update one Categoriaanomalia_sottocategorialavoro
     * const categoriaanomalia_sottocategorialavoro = await prisma.categoriaanomalia_sottocategorialavoro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends categoriaanomalia_sottocategorialavoroUpdateArgs>(
      args: SelectSubset<T, categoriaanomalia_sottocategorialavoroUpdateArgs>
    ): Prisma__categoriaanomalia_sottocategorialavoroClient<categoriaanomalia_sottocategorialavoroGetPayload<T>>

    /**
     * Delete zero or more Categoriaanomalia_sottocategorialavoros.
     * @param {categoriaanomalia_sottocategorialavoroDeleteManyArgs} args - Arguments to filter Categoriaanomalia_sottocategorialavoros to delete.
     * @example
     * // Delete a few Categoriaanomalia_sottocategorialavoros
     * const { count } = await prisma.categoriaanomalia_sottocategorialavoro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends categoriaanomalia_sottocategorialavoroDeleteManyArgs>(
      args?: SelectSubset<T, categoriaanomalia_sottocategorialavoroDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categoriaanomalia_sottocategorialavoros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomalia_sottocategorialavoroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categoriaanomalia_sottocategorialavoros
     * const categoriaanomalia_sottocategorialavoro = await prisma.categoriaanomalia_sottocategorialavoro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends categoriaanomalia_sottocategorialavoroUpdateManyArgs>(
      args: SelectSubset<T, categoriaanomalia_sottocategorialavoroUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categoriaanomalia_sottocategorialavoro.
     * @param {categoriaanomalia_sottocategorialavoroUpsertArgs} args - Arguments to update or create a Categoriaanomalia_sottocategorialavoro.
     * @example
     * // Update or create a Categoriaanomalia_sottocategorialavoro
     * const categoriaanomalia_sottocategorialavoro = await prisma.categoriaanomalia_sottocategorialavoro.upsert({
     *   create: {
     *     // ... data to create a Categoriaanomalia_sottocategorialavoro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoriaanomalia_sottocategorialavoro we want to update
     *   }
     * })
    **/
    upsert<T extends categoriaanomalia_sottocategorialavoroUpsertArgs>(
      args: SelectSubset<T, categoriaanomalia_sottocategorialavoroUpsertArgs>
    ): Prisma__categoriaanomalia_sottocategorialavoroClient<categoriaanomalia_sottocategorialavoroGetPayload<T>>

    /**
     * Count the number of Categoriaanomalia_sottocategorialavoros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaanomalia_sottocategorialavoroCountArgs} args - Arguments to filter Categoriaanomalia_sottocategorialavoros to count.
     * @example
     * // Count the number of Categoriaanomalia_sottocategorialavoros
     * const count = await prisma.categoriaanomalia_sottocategorialavoro.count({
     *   where: {
     *     // ... the filter for the Categoriaanomalia_sottocategorialavoros we want to count
     *   }
     * })
    **/
    count<T extends categoriaanomalia_sottocategorialavoroCountArgs>(
      args?: Subset<T, categoriaanomalia_sottocategorialavoroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Categoriaanomalia_sottocategorialavoroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoriaanomalia_sottocategorialavoro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoriaanomalia_sottocategorialavoroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Categoriaanomalia_sottocategorialavoroAggregateArgs>(args: Subset<T, Categoriaanomalia_sottocategorialavoroAggregateArgs>): Prisma.PrismaPromise<GetCategoriaanomalia_sottocategorialavoroAggregateType<T>>

    /**
     * Group by Categoriaanomalia_sottocategorialavoro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoriaanomalia_sottocategorialavoroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Categoriaanomalia_sottocategorialavoroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Categoriaanomalia_sottocategorialavoroGroupByArgs['orderBy'] }
        : { orderBy?: Categoriaanomalia_sottocategorialavoroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Categoriaanomalia_sottocategorialavoroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaanomalia_sottocategorialavoroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for categoriaanomalia_sottocategorialavoro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__categoriaanomalia_sottocategorialavoroClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    categoriaanomalia<T extends categoriaanomaliaArgs= {}>(args?: Subset<T, categoriaanomaliaArgs>): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T> | Null>;

    sottocategorialavoro<T extends sottocategorialavoroArgs= {}>(args?: Subset<T, sottocategorialavoroArgs>): Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * categoriaanomalia_sottocategorialavoro base type for findUnique actions
   */
  export type categoriaanomalia_sottocategorialavoroFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategorialavoro
     */
    select?: categoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategorialavoroInclude | null
    /**
     * Filter, which categoriaanomalia_sottocategorialavoro to fetch.
     */
    where: categoriaanomalia_sottocategorialavoroWhereUniqueInput
  }

  /**
   * categoriaanomalia_sottocategorialavoro findUnique
   */
  export interface categoriaanomalia_sottocategorialavoroFindUniqueArgs extends categoriaanomalia_sottocategorialavoroFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * categoriaanomalia_sottocategorialavoro findUniqueOrThrow
   */
  export type categoriaanomalia_sottocategorialavoroFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategorialavoro
     */
    select?: categoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategorialavoroInclude | null
    /**
     * Filter, which categoriaanomalia_sottocategorialavoro to fetch.
     */
    where: categoriaanomalia_sottocategorialavoroWhereUniqueInput
  }


  /**
   * categoriaanomalia_sottocategorialavoro base type for findFirst actions
   */
  export type categoriaanomalia_sottocategorialavoroFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategorialavoro
     */
    select?: categoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategorialavoroInclude | null
    /**
     * Filter, which categoriaanomalia_sottocategorialavoro to fetch.
     */
    where?: categoriaanomalia_sottocategorialavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoriaanomalia_sottocategorialavoros to fetch.
     */
    orderBy?: Enumerable<categoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categoriaanomalia_sottocategorialavoros.
     */
    cursor?: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoriaanomalia_sottocategorialavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoriaanomalia_sottocategorialavoros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categoriaanomalia_sottocategorialavoros.
     */
    distinct?: Enumerable<Categoriaanomalia_sottocategorialavoroScalarFieldEnum>
  }

  /**
   * categoriaanomalia_sottocategorialavoro findFirst
   */
  export interface categoriaanomalia_sottocategorialavoroFindFirstArgs extends categoriaanomalia_sottocategorialavoroFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * categoriaanomalia_sottocategorialavoro findFirstOrThrow
   */
  export type categoriaanomalia_sottocategorialavoroFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategorialavoro
     */
    select?: categoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategorialavoroInclude | null
    /**
     * Filter, which categoriaanomalia_sottocategorialavoro to fetch.
     */
    where?: categoriaanomalia_sottocategorialavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoriaanomalia_sottocategorialavoros to fetch.
     */
    orderBy?: Enumerable<categoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categoriaanomalia_sottocategorialavoros.
     */
    cursor?: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoriaanomalia_sottocategorialavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoriaanomalia_sottocategorialavoros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categoriaanomalia_sottocategorialavoros.
     */
    distinct?: Enumerable<Categoriaanomalia_sottocategorialavoroScalarFieldEnum>
  }


  /**
   * categoriaanomalia_sottocategorialavoro findMany
   */
  export type categoriaanomalia_sottocategorialavoroFindManyArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategorialavoro
     */
    select?: categoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategorialavoroInclude | null
    /**
     * Filter, which categoriaanomalia_sottocategorialavoros to fetch.
     */
    where?: categoriaanomalia_sottocategorialavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoriaanomalia_sottocategorialavoros to fetch.
     */
    orderBy?: Enumerable<categoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categoriaanomalia_sottocategorialavoros.
     */
    cursor?: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoriaanomalia_sottocategorialavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoriaanomalia_sottocategorialavoros.
     */
    skip?: number
    distinct?: Enumerable<Categoriaanomalia_sottocategorialavoroScalarFieldEnum>
  }


  /**
   * categoriaanomalia_sottocategorialavoro create
   */
  export type categoriaanomalia_sottocategorialavoroCreateArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategorialavoro
     */
    select?: categoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategorialavoroInclude | null
    /**
     * The data needed to create a categoriaanomalia_sottocategorialavoro.
     */
    data: XOR<categoriaanomalia_sottocategorialavoroCreateInput, categoriaanomalia_sottocategorialavoroUncheckedCreateInput>
  }


  /**
   * categoriaanomalia_sottocategorialavoro createMany
   */
  export type categoriaanomalia_sottocategorialavoroCreateManyArgs = {
    /**
     * The data used to create many categoriaanomalia_sottocategorialavoros.
     */
    data: Enumerable<categoriaanomalia_sottocategorialavoroCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * categoriaanomalia_sottocategorialavoro update
   */
  export type categoriaanomalia_sottocategorialavoroUpdateArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategorialavoro
     */
    select?: categoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategorialavoroInclude | null
    /**
     * The data needed to update a categoriaanomalia_sottocategorialavoro.
     */
    data: XOR<categoriaanomalia_sottocategorialavoroUpdateInput, categoriaanomalia_sottocategorialavoroUncheckedUpdateInput>
    /**
     * Choose, which categoriaanomalia_sottocategorialavoro to update.
     */
    where: categoriaanomalia_sottocategorialavoroWhereUniqueInput
  }


  /**
   * categoriaanomalia_sottocategorialavoro updateMany
   */
  export type categoriaanomalia_sottocategorialavoroUpdateManyArgs = {
    /**
     * The data used to update categoriaanomalia_sottocategorialavoros.
     */
    data: XOR<categoriaanomalia_sottocategorialavoroUpdateManyMutationInput, categoriaanomalia_sottocategorialavoroUncheckedUpdateManyInput>
    /**
     * Filter which categoriaanomalia_sottocategorialavoros to update
     */
    where?: categoriaanomalia_sottocategorialavoroWhereInput
  }


  /**
   * categoriaanomalia_sottocategorialavoro upsert
   */
  export type categoriaanomalia_sottocategorialavoroUpsertArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategorialavoro
     */
    select?: categoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategorialavoroInclude | null
    /**
     * The filter to search for the categoriaanomalia_sottocategorialavoro to update in case it exists.
     */
    where: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    /**
     * In case the categoriaanomalia_sottocategorialavoro found by the `where` argument doesn't exist, create a new categoriaanomalia_sottocategorialavoro with this data.
     */
    create: XOR<categoriaanomalia_sottocategorialavoroCreateInput, categoriaanomalia_sottocategorialavoroUncheckedCreateInput>
    /**
     * In case the categoriaanomalia_sottocategorialavoro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoriaanomalia_sottocategorialavoroUpdateInput, categoriaanomalia_sottocategorialavoroUncheckedUpdateInput>
  }


  /**
   * categoriaanomalia_sottocategorialavoro delete
   */
  export type categoriaanomalia_sottocategorialavoroDeleteArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategorialavoro
     */
    select?: categoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategorialavoroInclude | null
    /**
     * Filter which categoriaanomalia_sottocategorialavoro to delete.
     */
    where: categoriaanomalia_sottocategorialavoroWhereUniqueInput
  }


  /**
   * categoriaanomalia_sottocategorialavoro deleteMany
   */
  export type categoriaanomalia_sottocategorialavoroDeleteManyArgs = {
    /**
     * Filter which categoriaanomalia_sottocategorialavoros to delete
     */
    where?: categoriaanomalia_sottocategorialavoroWhereInput
  }


  /**
   * categoriaanomalia_sottocategorialavoro without action
   */
  export type categoriaanomalia_sottocategorialavoroArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategorialavoro
     */
    select?: categoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategorialavoroInclude | null
  }



  /**
   * Model contabilita
   */


  export type AggregateContabilita = {
    _count: ContabilitaCountAggregateOutputType | null
    _avg: ContabilitaAvgAggregateOutputType | null
    _sum: ContabilitaSumAggregateOutputType | null
    _min: ContabilitaMinAggregateOutputType | null
    _max: ContabilitaMaxAggregateOutputType | null
  }

  export type ContabilitaAvgAggregateOutputType = {
    id: number | null
    prezzario: number | null
    descrizioneContabilita: number | null
  }

  export type ContabilitaSumAggregateOutputType = {
    id: number | null
    prezzario: number | null
    descrizioneContabilita: number | null
  }

  export type ContabilitaMinAggregateOutputType = {
    id: number | null
    prezzario: number | null
    descrizioneContabilita: number | null
    proprieta: string | null
  }

  export type ContabilitaMaxAggregateOutputType = {
    id: number | null
    prezzario: number | null
    descrizioneContabilita: number | null
    proprieta: string | null
  }

  export type ContabilitaCountAggregateOutputType = {
    id: number
    prezzario: number
    descrizioneContabilita: number
    proprieta: number
    _all: number
  }


  export type ContabilitaAvgAggregateInputType = {
    id?: true
    prezzario?: true
    descrizioneContabilita?: true
  }

  export type ContabilitaSumAggregateInputType = {
    id?: true
    prezzario?: true
    descrizioneContabilita?: true
  }

  export type ContabilitaMinAggregateInputType = {
    id?: true
    prezzario?: true
    descrizioneContabilita?: true
    proprieta?: true
  }

  export type ContabilitaMaxAggregateInputType = {
    id?: true
    prezzario?: true
    descrizioneContabilita?: true
    proprieta?: true
  }

  export type ContabilitaCountAggregateInputType = {
    id?: true
    prezzario?: true
    descrizioneContabilita?: true
    proprieta?: true
    _all?: true
  }

  export type ContabilitaAggregateArgs = {
    /**
     * Filter which contabilita to aggregate.
     */
    where?: contabilitaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contabilitas to fetch.
     */
    orderBy?: Enumerable<contabilitaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: contabilitaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contabilitas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contabilitas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned contabilitas
    **/
    _count?: true | ContabilitaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ContabilitaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ContabilitaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContabilitaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContabilitaMaxAggregateInputType
  }

  export type GetContabilitaAggregateType<T extends ContabilitaAggregateArgs> = {
        [P in keyof T & keyof AggregateContabilita]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContabilita[P]>
      : GetScalarType<T[P], AggregateContabilita[P]>
  }




  export type ContabilitaGroupByArgs = {
    where?: contabilitaWhereInput
    orderBy?: Enumerable<contabilitaOrderByWithAggregationInput>
    by: ContabilitaScalarFieldEnum[]
    having?: contabilitaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContabilitaCountAggregateInputType | true
    _avg?: ContabilitaAvgAggregateInputType
    _sum?: ContabilitaSumAggregateInputType
    _min?: ContabilitaMinAggregateInputType
    _max?: ContabilitaMaxAggregateInputType
  }


  export type ContabilitaGroupByOutputType = {
    id: number
    prezzario: number | null
    descrizioneContabilita: number | null
    proprieta: string | null
    _count: ContabilitaCountAggregateOutputType | null
    _avg: ContabilitaAvgAggregateOutputType | null
    _sum: ContabilitaSumAggregateOutputType | null
    _min: ContabilitaMinAggregateOutputType | null
    _max: ContabilitaMaxAggregateOutputType | null
  }

  type GetContabilitaGroupByPayload<T extends ContabilitaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<ContabilitaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContabilitaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContabilitaGroupByOutputType[P]>
            : GetScalarType<T[P], ContabilitaGroupByOutputType[P]>
        }
      >
    >


  export type contabilitaSelect = {
    id?: boolean
    prezzario?: boolean
    descrizioneContabilita?: boolean
    proprieta?: boolean
  }


  export type contabilitaGetPayload<S extends boolean | null | undefined | contabilitaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? contabilita :
    S extends undefined ? never :
    S extends { include: any } & (contabilitaArgs | contabilitaFindManyArgs)
    ? contabilita 
    : S extends { select: any } & (contabilitaArgs | contabilitaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof contabilita ? contabilita[P] : never
  } 
      : contabilita


  type contabilitaCountArgs = 
    Omit<contabilitaFindManyArgs, 'select' | 'include'> & {
      select?: ContabilitaCountAggregateInputType | true
    }

  export interface contabilitaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Contabilita that matches the filter.
     * @param {contabilitaFindUniqueArgs} args - Arguments to find a Contabilita
     * @example
     * // Get one Contabilita
     * const contabilita = await prisma.contabilita.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends contabilitaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, contabilitaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'contabilita'> extends True ? Prisma__contabilitaClient<contabilitaGetPayload<T>> : Prisma__contabilitaClient<contabilitaGetPayload<T> | null, null>

    /**
     * Find one Contabilita that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {contabilitaFindUniqueOrThrowArgs} args - Arguments to find a Contabilita
     * @example
     * // Get one Contabilita
     * const contabilita = await prisma.contabilita.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends contabilitaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, contabilitaFindUniqueOrThrowArgs>
    ): Prisma__contabilitaClient<contabilitaGetPayload<T>>

    /**
     * Find the first Contabilita that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contabilitaFindFirstArgs} args - Arguments to find a Contabilita
     * @example
     * // Get one Contabilita
     * const contabilita = await prisma.contabilita.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends contabilitaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, contabilitaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'contabilita'> extends True ? Prisma__contabilitaClient<contabilitaGetPayload<T>> : Prisma__contabilitaClient<contabilitaGetPayload<T> | null, null>

    /**
     * Find the first Contabilita that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contabilitaFindFirstOrThrowArgs} args - Arguments to find a Contabilita
     * @example
     * // Get one Contabilita
     * const contabilita = await prisma.contabilita.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends contabilitaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, contabilitaFindFirstOrThrowArgs>
    ): Prisma__contabilitaClient<contabilitaGetPayload<T>>

    /**
     * Find zero or more Contabilitas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contabilitaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contabilitas
     * const contabilitas = await prisma.contabilita.findMany()
     * 
     * // Get first 10 Contabilitas
     * const contabilitas = await prisma.contabilita.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contabilitaWithIdOnly = await prisma.contabilita.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends contabilitaFindManyArgs>(
      args?: SelectSubset<T, contabilitaFindManyArgs>
    ): Prisma.PrismaPromise<Array<contabilitaGetPayload<T>>>

    /**
     * Create a Contabilita.
     * @param {contabilitaCreateArgs} args - Arguments to create a Contabilita.
     * @example
     * // Create one Contabilita
     * const Contabilita = await prisma.contabilita.create({
     *   data: {
     *     // ... data to create a Contabilita
     *   }
     * })
     * 
    **/
    create<T extends contabilitaCreateArgs>(
      args: SelectSubset<T, contabilitaCreateArgs>
    ): Prisma__contabilitaClient<contabilitaGetPayload<T>>

    /**
     * Create many Contabilitas.
     *     @param {contabilitaCreateManyArgs} args - Arguments to create many Contabilitas.
     *     @example
     *     // Create many Contabilitas
     *     const contabilita = await prisma.contabilita.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends contabilitaCreateManyArgs>(
      args?: SelectSubset<T, contabilitaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Contabilita.
     * @param {contabilitaDeleteArgs} args - Arguments to delete one Contabilita.
     * @example
     * // Delete one Contabilita
     * const Contabilita = await prisma.contabilita.delete({
     *   where: {
     *     // ... filter to delete one Contabilita
     *   }
     * })
     * 
    **/
    delete<T extends contabilitaDeleteArgs>(
      args: SelectSubset<T, contabilitaDeleteArgs>
    ): Prisma__contabilitaClient<contabilitaGetPayload<T>>

    /**
     * Update one Contabilita.
     * @param {contabilitaUpdateArgs} args - Arguments to update one Contabilita.
     * @example
     * // Update one Contabilita
     * const contabilita = await prisma.contabilita.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends contabilitaUpdateArgs>(
      args: SelectSubset<T, contabilitaUpdateArgs>
    ): Prisma__contabilitaClient<contabilitaGetPayload<T>>

    /**
     * Delete zero or more Contabilitas.
     * @param {contabilitaDeleteManyArgs} args - Arguments to filter Contabilitas to delete.
     * @example
     * // Delete a few Contabilitas
     * const { count } = await prisma.contabilita.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends contabilitaDeleteManyArgs>(
      args?: SelectSubset<T, contabilitaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contabilitas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contabilitaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contabilitas
     * const contabilita = await prisma.contabilita.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends contabilitaUpdateManyArgs>(
      args: SelectSubset<T, contabilitaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contabilita.
     * @param {contabilitaUpsertArgs} args - Arguments to update or create a Contabilita.
     * @example
     * // Update or create a Contabilita
     * const contabilita = await prisma.contabilita.upsert({
     *   create: {
     *     // ... data to create a Contabilita
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contabilita we want to update
     *   }
     * })
    **/
    upsert<T extends contabilitaUpsertArgs>(
      args: SelectSubset<T, contabilitaUpsertArgs>
    ): Prisma__contabilitaClient<contabilitaGetPayload<T>>

    /**
     * Count the number of Contabilitas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contabilitaCountArgs} args - Arguments to filter Contabilitas to count.
     * @example
     * // Count the number of Contabilitas
     * const count = await prisma.contabilita.count({
     *   where: {
     *     // ... the filter for the Contabilitas we want to count
     *   }
     * })
    **/
    count<T extends contabilitaCountArgs>(
      args?: Subset<T, contabilitaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContabilitaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contabilita.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContabilitaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContabilitaAggregateArgs>(args: Subset<T, ContabilitaAggregateArgs>): Prisma.PrismaPromise<GetContabilitaAggregateType<T>>

    /**
     * Group by Contabilita.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContabilitaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContabilitaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContabilitaGroupByArgs['orderBy'] }
        : { orderBy?: ContabilitaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContabilitaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContabilitaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for contabilita.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__contabilitaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * contabilita base type for findUnique actions
   */
  export type contabilitaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the contabilita
     */
    select?: contabilitaSelect | null
    /**
     * Filter, which contabilita to fetch.
     */
    where: contabilitaWhereUniqueInput
  }

  /**
   * contabilita findUnique
   */
  export interface contabilitaFindUniqueArgs extends contabilitaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * contabilita findUniqueOrThrow
   */
  export type contabilitaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the contabilita
     */
    select?: contabilitaSelect | null
    /**
     * Filter, which contabilita to fetch.
     */
    where: contabilitaWhereUniqueInput
  }


  /**
   * contabilita base type for findFirst actions
   */
  export type contabilitaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the contabilita
     */
    select?: contabilitaSelect | null
    /**
     * Filter, which contabilita to fetch.
     */
    where?: contabilitaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contabilitas to fetch.
     */
    orderBy?: Enumerable<contabilitaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contabilitas.
     */
    cursor?: contabilitaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contabilitas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contabilitas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contabilitas.
     */
    distinct?: Enumerable<ContabilitaScalarFieldEnum>
  }

  /**
   * contabilita findFirst
   */
  export interface contabilitaFindFirstArgs extends contabilitaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * contabilita findFirstOrThrow
   */
  export type contabilitaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the contabilita
     */
    select?: contabilitaSelect | null
    /**
     * Filter, which contabilita to fetch.
     */
    where?: contabilitaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contabilitas to fetch.
     */
    orderBy?: Enumerable<contabilitaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contabilitas.
     */
    cursor?: contabilitaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contabilitas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contabilitas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contabilitas.
     */
    distinct?: Enumerable<ContabilitaScalarFieldEnum>
  }


  /**
   * contabilita findMany
   */
  export type contabilitaFindManyArgs = {
    /**
     * Select specific fields to fetch from the contabilita
     */
    select?: contabilitaSelect | null
    /**
     * Filter, which contabilitas to fetch.
     */
    where?: contabilitaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contabilitas to fetch.
     */
    orderBy?: Enumerable<contabilitaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing contabilitas.
     */
    cursor?: contabilitaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contabilitas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contabilitas.
     */
    skip?: number
    distinct?: Enumerable<ContabilitaScalarFieldEnum>
  }


  /**
   * contabilita create
   */
  export type contabilitaCreateArgs = {
    /**
     * Select specific fields to fetch from the contabilita
     */
    select?: contabilitaSelect | null
    /**
     * The data needed to create a contabilita.
     */
    data: XOR<contabilitaCreateInput, contabilitaUncheckedCreateInput>
  }


  /**
   * contabilita createMany
   */
  export type contabilitaCreateManyArgs = {
    /**
     * The data used to create many contabilitas.
     */
    data: Enumerable<contabilitaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * contabilita update
   */
  export type contabilitaUpdateArgs = {
    /**
     * Select specific fields to fetch from the contabilita
     */
    select?: contabilitaSelect | null
    /**
     * The data needed to update a contabilita.
     */
    data: XOR<contabilitaUpdateInput, contabilitaUncheckedUpdateInput>
    /**
     * Choose, which contabilita to update.
     */
    where: contabilitaWhereUniqueInput
  }


  /**
   * contabilita updateMany
   */
  export type contabilitaUpdateManyArgs = {
    /**
     * The data used to update contabilitas.
     */
    data: XOR<contabilitaUpdateManyMutationInput, contabilitaUncheckedUpdateManyInput>
    /**
     * Filter which contabilitas to update
     */
    where?: contabilitaWhereInput
  }


  /**
   * contabilita upsert
   */
  export type contabilitaUpsertArgs = {
    /**
     * Select specific fields to fetch from the contabilita
     */
    select?: contabilitaSelect | null
    /**
     * The filter to search for the contabilita to update in case it exists.
     */
    where: contabilitaWhereUniqueInput
    /**
     * In case the contabilita found by the `where` argument doesn't exist, create a new contabilita with this data.
     */
    create: XOR<contabilitaCreateInput, contabilitaUncheckedCreateInput>
    /**
     * In case the contabilita was found with the provided `where` argument, update it with this data.
     */
    update: XOR<contabilitaUpdateInput, contabilitaUncheckedUpdateInput>
  }


  /**
   * contabilita delete
   */
  export type contabilitaDeleteArgs = {
    /**
     * Select specific fields to fetch from the contabilita
     */
    select?: contabilitaSelect | null
    /**
     * Filter which contabilita to delete.
     */
    where: contabilitaWhereUniqueInput
  }


  /**
   * contabilita deleteMany
   */
  export type contabilitaDeleteManyArgs = {
    /**
     * Filter which contabilitas to delete
     */
    where?: contabilitaWhereInput
  }


  /**
   * contabilita without action
   */
  export type contabilitaArgs = {
    /**
     * Select specific fields to fetch from the contabilita
     */
    select?: contabilitaSelect | null
  }



  /**
   * Model evento
   */


  export type AggregateEvento = {
    _count: EventoCountAggregateOutputType | null
    _avg: EventoAvgAggregateOutputType | null
    _sum: EventoSumAggregateOutputType | null
    _min: EventoMinAggregateOutputType | null
    _max: EventoMaxAggregateOutputType | null
  }

  export type EventoAvgAggregateOutputType = {
    id: number | null
    idUtente: number | null
    idAppalto: number | null
    tipoEvento: number | null
    idPratica: number | null
    lavoriEvento: number | null
    statoEvento: number | null
    documentiCorrelati: number | null
    severitaEvento: number | null
  }

  export type EventoSumAggregateOutputType = {
    id: number | null
    idUtente: number | null
    idAppalto: number | null
    tipoEvento: number | null
    idPratica: number | null
    lavoriEvento: number | null
    statoEvento: number | null
    documentiCorrelati: number | null
    severitaEvento: number | null
  }

  export type EventoMinAggregateOutputType = {
    id: number | null
    idUtente: number | null
    idAppalto: number | null
    tipoEvento: number | null
    generatoDa: string | null
    idPratica: number | null
    noteEvento: string | null
    lavoriEvento: number | null
    statoEvento: number | null
    documentiCorrelati: number | null
    propietaEvento: string | null
    severitaEvento: number | null
  }

  export type EventoMaxAggregateOutputType = {
    id: number | null
    idUtente: number | null
    idAppalto: number | null
    tipoEvento: number | null
    generatoDa: string | null
    idPratica: number | null
    noteEvento: string | null
    lavoriEvento: number | null
    statoEvento: number | null
    documentiCorrelati: number | null
    propietaEvento: string | null
    severitaEvento: number | null
  }

  export type EventoCountAggregateOutputType = {
    id: number
    idUtente: number
    idAppalto: number
    tipoEvento: number
    generatoDa: number
    idPratica: number
    noteEvento: number
    lavoriEvento: number
    statoEvento: number
    documentiCorrelati: number
    propietaEvento: number
    severitaEvento: number
    _all: number
  }


  export type EventoAvgAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
    tipoEvento?: true
    idPratica?: true
    lavoriEvento?: true
    statoEvento?: true
    documentiCorrelati?: true
    severitaEvento?: true
  }

  export type EventoSumAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
    tipoEvento?: true
    idPratica?: true
    lavoriEvento?: true
    statoEvento?: true
    documentiCorrelati?: true
    severitaEvento?: true
  }

  export type EventoMinAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
    tipoEvento?: true
    generatoDa?: true
    idPratica?: true
    noteEvento?: true
    lavoriEvento?: true
    statoEvento?: true
    documentiCorrelati?: true
    propietaEvento?: true
    severitaEvento?: true
  }

  export type EventoMaxAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
    tipoEvento?: true
    generatoDa?: true
    idPratica?: true
    noteEvento?: true
    lavoriEvento?: true
    statoEvento?: true
    documentiCorrelati?: true
    propietaEvento?: true
    severitaEvento?: true
  }

  export type EventoCountAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
    tipoEvento?: true
    generatoDa?: true
    idPratica?: true
    noteEvento?: true
    lavoriEvento?: true
    statoEvento?: true
    documentiCorrelati?: true
    propietaEvento?: true
    severitaEvento?: true
    _all?: true
  }

  export type EventoAggregateArgs = {
    /**
     * Filter which evento to aggregate.
     */
    where?: eventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of eventos to fetch.
     */
    orderBy?: Enumerable<eventoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: eventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` eventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned eventos
    **/
    _count?: true | EventoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventoMaxAggregateInputType
  }

  export type GetEventoAggregateType<T extends EventoAggregateArgs> = {
        [P in keyof T & keyof AggregateEvento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvento[P]>
      : GetScalarType<T[P], AggregateEvento[P]>
  }




  export type EventoGroupByArgs = {
    where?: eventoWhereInput
    orderBy?: Enumerable<eventoOrderByWithAggregationInput>
    by: EventoScalarFieldEnum[]
    having?: eventoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventoCountAggregateInputType | true
    _avg?: EventoAvgAggregateInputType
    _sum?: EventoSumAggregateInputType
    _min?: EventoMinAggregateInputType
    _max?: EventoMaxAggregateInputType
  }


  export type EventoGroupByOutputType = {
    id: number
    idUtente: number | null
    idAppalto: number | null
    tipoEvento: number | null
    generatoDa: string | null
    idPratica: number | null
    noteEvento: string | null
    lavoriEvento: number | null
    statoEvento: number | null
    documentiCorrelati: number | null
    propietaEvento: string | null
    severitaEvento: number | null
    _count: EventoCountAggregateOutputType | null
    _avg: EventoAvgAggregateOutputType | null
    _sum: EventoSumAggregateOutputType | null
    _min: EventoMinAggregateOutputType | null
    _max: EventoMaxAggregateOutputType | null
  }

  type GetEventoGroupByPayload<T extends EventoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<EventoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventoGroupByOutputType[P]>
            : GetScalarType<T[P], EventoGroupByOutputType[P]>
        }
      >
    >


  export type eventoSelect = {
    id?: boolean
    idUtente?: boolean
    idAppalto?: boolean
    tipoEvento?: boolean
    generatoDa?: boolean
    idPratica?: boolean
    noteEvento?: boolean
    lavoriEvento?: boolean
    statoEvento?: boolean
    documentiCorrelati?: boolean
    propietaEvento?: boolean
    severitaEvento?: boolean
  }


  export type eventoGetPayload<S extends boolean | null | undefined | eventoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? evento :
    S extends undefined ? never :
    S extends { include: any } & (eventoArgs | eventoFindManyArgs)
    ? evento 
    : S extends { select: any } & (eventoArgs | eventoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof evento ? evento[P] : never
  } 
      : evento


  type eventoCountArgs = 
    Omit<eventoFindManyArgs, 'select' | 'include'> & {
      select?: EventoCountAggregateInputType | true
    }

  export interface eventoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Evento that matches the filter.
     * @param {eventoFindUniqueArgs} args - Arguments to find a Evento
     * @example
     * // Get one Evento
     * const evento = await prisma.evento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends eventoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, eventoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'evento'> extends True ? Prisma__eventoClient<eventoGetPayload<T>> : Prisma__eventoClient<eventoGetPayload<T> | null, null>

    /**
     * Find one Evento that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {eventoFindUniqueOrThrowArgs} args - Arguments to find a Evento
     * @example
     * // Get one Evento
     * const evento = await prisma.evento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends eventoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, eventoFindUniqueOrThrowArgs>
    ): Prisma__eventoClient<eventoGetPayload<T>>

    /**
     * Find the first Evento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventoFindFirstArgs} args - Arguments to find a Evento
     * @example
     * // Get one Evento
     * const evento = await prisma.evento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends eventoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, eventoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'evento'> extends True ? Prisma__eventoClient<eventoGetPayload<T>> : Prisma__eventoClient<eventoGetPayload<T> | null, null>

    /**
     * Find the first Evento that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventoFindFirstOrThrowArgs} args - Arguments to find a Evento
     * @example
     * // Get one Evento
     * const evento = await prisma.evento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends eventoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, eventoFindFirstOrThrowArgs>
    ): Prisma__eventoClient<eventoGetPayload<T>>

    /**
     * Find zero or more Eventos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Eventos
     * const eventos = await prisma.evento.findMany()
     * 
     * // Get first 10 Eventos
     * const eventos = await prisma.evento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventoWithIdOnly = await prisma.evento.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends eventoFindManyArgs>(
      args?: SelectSubset<T, eventoFindManyArgs>
    ): Prisma.PrismaPromise<Array<eventoGetPayload<T>>>

    /**
     * Create a Evento.
     * @param {eventoCreateArgs} args - Arguments to create a Evento.
     * @example
     * // Create one Evento
     * const Evento = await prisma.evento.create({
     *   data: {
     *     // ... data to create a Evento
     *   }
     * })
     * 
    **/
    create<T extends eventoCreateArgs>(
      args: SelectSubset<T, eventoCreateArgs>
    ): Prisma__eventoClient<eventoGetPayload<T>>

    /**
     * Create many Eventos.
     *     @param {eventoCreateManyArgs} args - Arguments to create many Eventos.
     *     @example
     *     // Create many Eventos
     *     const evento = await prisma.evento.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends eventoCreateManyArgs>(
      args?: SelectSubset<T, eventoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Evento.
     * @param {eventoDeleteArgs} args - Arguments to delete one Evento.
     * @example
     * // Delete one Evento
     * const Evento = await prisma.evento.delete({
     *   where: {
     *     // ... filter to delete one Evento
     *   }
     * })
     * 
    **/
    delete<T extends eventoDeleteArgs>(
      args: SelectSubset<T, eventoDeleteArgs>
    ): Prisma__eventoClient<eventoGetPayload<T>>

    /**
     * Update one Evento.
     * @param {eventoUpdateArgs} args - Arguments to update one Evento.
     * @example
     * // Update one Evento
     * const evento = await prisma.evento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends eventoUpdateArgs>(
      args: SelectSubset<T, eventoUpdateArgs>
    ): Prisma__eventoClient<eventoGetPayload<T>>

    /**
     * Delete zero or more Eventos.
     * @param {eventoDeleteManyArgs} args - Arguments to filter Eventos to delete.
     * @example
     * // Delete a few Eventos
     * const { count } = await prisma.evento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends eventoDeleteManyArgs>(
      args?: SelectSubset<T, eventoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Eventos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Eventos
     * const evento = await prisma.evento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends eventoUpdateManyArgs>(
      args: SelectSubset<T, eventoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Evento.
     * @param {eventoUpsertArgs} args - Arguments to update or create a Evento.
     * @example
     * // Update or create a Evento
     * const evento = await prisma.evento.upsert({
     *   create: {
     *     // ... data to create a Evento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Evento we want to update
     *   }
     * })
    **/
    upsert<T extends eventoUpsertArgs>(
      args: SelectSubset<T, eventoUpsertArgs>
    ): Prisma__eventoClient<eventoGetPayload<T>>

    /**
     * Count the number of Eventos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventoCountArgs} args - Arguments to filter Eventos to count.
     * @example
     * // Count the number of Eventos
     * const count = await prisma.evento.count({
     *   where: {
     *     // ... the filter for the Eventos we want to count
     *   }
     * })
    **/
    count<T extends eventoCountArgs>(
      args?: Subset<T, eventoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Evento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventoAggregateArgs>(args: Subset<T, EventoAggregateArgs>): Prisma.PrismaPromise<GetEventoAggregateType<T>>

    /**
     * Group by Evento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventoGroupByArgs['orderBy'] }
        : { orderBy?: EventoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for evento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__eventoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * evento base type for findUnique actions
   */
  export type eventoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the evento
     */
    select?: eventoSelect | null
    /**
     * Filter, which evento to fetch.
     */
    where: eventoWhereUniqueInput
  }

  /**
   * evento findUnique
   */
  export interface eventoFindUniqueArgs extends eventoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * evento findUniqueOrThrow
   */
  export type eventoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the evento
     */
    select?: eventoSelect | null
    /**
     * Filter, which evento to fetch.
     */
    where: eventoWhereUniqueInput
  }


  /**
   * evento base type for findFirst actions
   */
  export type eventoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the evento
     */
    select?: eventoSelect | null
    /**
     * Filter, which evento to fetch.
     */
    where?: eventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of eventos to fetch.
     */
    orderBy?: Enumerable<eventoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for eventos.
     */
    cursor?: eventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` eventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of eventos.
     */
    distinct?: Enumerable<EventoScalarFieldEnum>
  }

  /**
   * evento findFirst
   */
  export interface eventoFindFirstArgs extends eventoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * evento findFirstOrThrow
   */
  export type eventoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the evento
     */
    select?: eventoSelect | null
    /**
     * Filter, which evento to fetch.
     */
    where?: eventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of eventos to fetch.
     */
    orderBy?: Enumerable<eventoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for eventos.
     */
    cursor?: eventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` eventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of eventos.
     */
    distinct?: Enumerable<EventoScalarFieldEnum>
  }


  /**
   * evento findMany
   */
  export type eventoFindManyArgs = {
    /**
     * Select specific fields to fetch from the evento
     */
    select?: eventoSelect | null
    /**
     * Filter, which eventos to fetch.
     */
    where?: eventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of eventos to fetch.
     */
    orderBy?: Enumerable<eventoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing eventos.
     */
    cursor?: eventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` eventos.
     */
    skip?: number
    distinct?: Enumerable<EventoScalarFieldEnum>
  }


  /**
   * evento create
   */
  export type eventoCreateArgs = {
    /**
     * Select specific fields to fetch from the evento
     */
    select?: eventoSelect | null
    /**
     * The data needed to create a evento.
     */
    data: XOR<eventoCreateInput, eventoUncheckedCreateInput>
  }


  /**
   * evento createMany
   */
  export type eventoCreateManyArgs = {
    /**
     * The data used to create many eventos.
     */
    data: Enumerable<eventoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * evento update
   */
  export type eventoUpdateArgs = {
    /**
     * Select specific fields to fetch from the evento
     */
    select?: eventoSelect | null
    /**
     * The data needed to update a evento.
     */
    data: XOR<eventoUpdateInput, eventoUncheckedUpdateInput>
    /**
     * Choose, which evento to update.
     */
    where: eventoWhereUniqueInput
  }


  /**
   * evento updateMany
   */
  export type eventoUpdateManyArgs = {
    /**
     * The data used to update eventos.
     */
    data: XOR<eventoUpdateManyMutationInput, eventoUncheckedUpdateManyInput>
    /**
     * Filter which eventos to update
     */
    where?: eventoWhereInput
  }


  /**
   * evento upsert
   */
  export type eventoUpsertArgs = {
    /**
     * Select specific fields to fetch from the evento
     */
    select?: eventoSelect | null
    /**
     * The filter to search for the evento to update in case it exists.
     */
    where: eventoWhereUniqueInput
    /**
     * In case the evento found by the `where` argument doesn't exist, create a new evento with this data.
     */
    create: XOR<eventoCreateInput, eventoUncheckedCreateInput>
    /**
     * In case the evento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<eventoUpdateInput, eventoUncheckedUpdateInput>
  }


  /**
   * evento delete
   */
  export type eventoDeleteArgs = {
    /**
     * Select specific fields to fetch from the evento
     */
    select?: eventoSelect | null
    /**
     * Filter which evento to delete.
     */
    where: eventoWhereUniqueInput
  }


  /**
   * evento deleteMany
   */
  export type eventoDeleteManyArgs = {
    /**
     * Filter which eventos to delete
     */
    where?: eventoWhereInput
  }


  /**
   * evento without action
   */
  export type eventoArgs = {
    /**
     * Select specific fields to fetch from the evento
     */
    select?: eventoSelect | null
  }



  /**
   * Model filelinker
   */


  export type AggregateFilelinker = {
    _count: FilelinkerCountAggregateOutputType | null
    _avg: FilelinkerAvgAggregateOutputType | null
    _sum: FilelinkerSumAggregateOutputType | null
    _min: FilelinkerMinAggregateOutputType | null
    _max: FilelinkerMaxAggregateOutputType | null
  }

  export type FilelinkerAvgAggregateOutputType = {
    id: number | null
  }

  export type FilelinkerSumAggregateOutputType = {
    id: number | null
  }

  export type FilelinkerMinAggregateOutputType = {
    id: number | null
    metadata: string | null
  }

  export type FilelinkerMaxAggregateOutputType = {
    id: number | null
    metadata: string | null
  }

  export type FilelinkerCountAggregateOutputType = {
    id: number
    metadata: number
    _all: number
  }


  export type FilelinkerAvgAggregateInputType = {
    id?: true
  }

  export type FilelinkerSumAggregateInputType = {
    id?: true
  }

  export type FilelinkerMinAggregateInputType = {
    id?: true
    metadata?: true
  }

  export type FilelinkerMaxAggregateInputType = {
    id?: true
    metadata?: true
  }

  export type FilelinkerCountAggregateInputType = {
    id?: true
    metadata?: true
    _all?: true
  }

  export type FilelinkerAggregateArgs = {
    /**
     * Filter which filelinker to aggregate.
     */
    where?: filelinkerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filelinkers to fetch.
     */
    orderBy?: Enumerable<filelinkerOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: filelinkerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filelinkers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filelinkers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned filelinkers
    **/
    _count?: true | FilelinkerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FilelinkerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FilelinkerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FilelinkerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FilelinkerMaxAggregateInputType
  }

  export type GetFilelinkerAggregateType<T extends FilelinkerAggregateArgs> = {
        [P in keyof T & keyof AggregateFilelinker]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFilelinker[P]>
      : GetScalarType<T[P], AggregateFilelinker[P]>
  }




  export type FilelinkerGroupByArgs = {
    where?: filelinkerWhereInput
    orderBy?: Enumerable<filelinkerOrderByWithAggregationInput>
    by: FilelinkerScalarFieldEnum[]
    having?: filelinkerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FilelinkerCountAggregateInputType | true
    _avg?: FilelinkerAvgAggregateInputType
    _sum?: FilelinkerSumAggregateInputType
    _min?: FilelinkerMinAggregateInputType
    _max?: FilelinkerMaxAggregateInputType
  }


  export type FilelinkerGroupByOutputType = {
    id: number
    metadata: string | null
    _count: FilelinkerCountAggregateOutputType | null
    _avg: FilelinkerAvgAggregateOutputType | null
    _sum: FilelinkerSumAggregateOutputType | null
    _min: FilelinkerMinAggregateOutputType | null
    _max: FilelinkerMaxAggregateOutputType | null
  }

  type GetFilelinkerGroupByPayload<T extends FilelinkerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<FilelinkerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FilelinkerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FilelinkerGroupByOutputType[P]>
            : GetScalarType<T[P], FilelinkerGroupByOutputType[P]>
        }
      >
    >


  export type filelinkerSelect = {
    id?: boolean
    metadata?: boolean
  }


  export type filelinkerGetPayload<S extends boolean | null | undefined | filelinkerArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? filelinker :
    S extends undefined ? never :
    S extends { include: any } & (filelinkerArgs | filelinkerFindManyArgs)
    ? filelinker 
    : S extends { select: any } & (filelinkerArgs | filelinkerFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof filelinker ? filelinker[P] : never
  } 
      : filelinker


  type filelinkerCountArgs = 
    Omit<filelinkerFindManyArgs, 'select' | 'include'> & {
      select?: FilelinkerCountAggregateInputType | true
    }

  export interface filelinkerDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Filelinker that matches the filter.
     * @param {filelinkerFindUniqueArgs} args - Arguments to find a Filelinker
     * @example
     * // Get one Filelinker
     * const filelinker = await prisma.filelinker.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends filelinkerFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, filelinkerFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'filelinker'> extends True ? Prisma__filelinkerClient<filelinkerGetPayload<T>> : Prisma__filelinkerClient<filelinkerGetPayload<T> | null, null>

    /**
     * Find one Filelinker that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {filelinkerFindUniqueOrThrowArgs} args - Arguments to find a Filelinker
     * @example
     * // Get one Filelinker
     * const filelinker = await prisma.filelinker.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends filelinkerFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, filelinkerFindUniqueOrThrowArgs>
    ): Prisma__filelinkerClient<filelinkerGetPayload<T>>

    /**
     * Find the first Filelinker that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filelinkerFindFirstArgs} args - Arguments to find a Filelinker
     * @example
     * // Get one Filelinker
     * const filelinker = await prisma.filelinker.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends filelinkerFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, filelinkerFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'filelinker'> extends True ? Prisma__filelinkerClient<filelinkerGetPayload<T>> : Prisma__filelinkerClient<filelinkerGetPayload<T> | null, null>

    /**
     * Find the first Filelinker that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filelinkerFindFirstOrThrowArgs} args - Arguments to find a Filelinker
     * @example
     * // Get one Filelinker
     * const filelinker = await prisma.filelinker.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends filelinkerFindFirstOrThrowArgs>(
      args?: SelectSubset<T, filelinkerFindFirstOrThrowArgs>
    ): Prisma__filelinkerClient<filelinkerGetPayload<T>>

    /**
     * Find zero or more Filelinkers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filelinkerFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Filelinkers
     * const filelinkers = await prisma.filelinker.findMany()
     * 
     * // Get first 10 Filelinkers
     * const filelinkers = await prisma.filelinker.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const filelinkerWithIdOnly = await prisma.filelinker.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends filelinkerFindManyArgs>(
      args?: SelectSubset<T, filelinkerFindManyArgs>
    ): Prisma.PrismaPromise<Array<filelinkerGetPayload<T>>>

    /**
     * Create a Filelinker.
     * @param {filelinkerCreateArgs} args - Arguments to create a Filelinker.
     * @example
     * // Create one Filelinker
     * const Filelinker = await prisma.filelinker.create({
     *   data: {
     *     // ... data to create a Filelinker
     *   }
     * })
     * 
    **/
    create<T extends filelinkerCreateArgs>(
      args: SelectSubset<T, filelinkerCreateArgs>
    ): Prisma__filelinkerClient<filelinkerGetPayload<T>>

    /**
     * Create many Filelinkers.
     *     @param {filelinkerCreateManyArgs} args - Arguments to create many Filelinkers.
     *     @example
     *     // Create many Filelinkers
     *     const filelinker = await prisma.filelinker.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends filelinkerCreateManyArgs>(
      args?: SelectSubset<T, filelinkerCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Filelinker.
     * @param {filelinkerDeleteArgs} args - Arguments to delete one Filelinker.
     * @example
     * // Delete one Filelinker
     * const Filelinker = await prisma.filelinker.delete({
     *   where: {
     *     // ... filter to delete one Filelinker
     *   }
     * })
     * 
    **/
    delete<T extends filelinkerDeleteArgs>(
      args: SelectSubset<T, filelinkerDeleteArgs>
    ): Prisma__filelinkerClient<filelinkerGetPayload<T>>

    /**
     * Update one Filelinker.
     * @param {filelinkerUpdateArgs} args - Arguments to update one Filelinker.
     * @example
     * // Update one Filelinker
     * const filelinker = await prisma.filelinker.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends filelinkerUpdateArgs>(
      args: SelectSubset<T, filelinkerUpdateArgs>
    ): Prisma__filelinkerClient<filelinkerGetPayload<T>>

    /**
     * Delete zero or more Filelinkers.
     * @param {filelinkerDeleteManyArgs} args - Arguments to filter Filelinkers to delete.
     * @example
     * // Delete a few Filelinkers
     * const { count } = await prisma.filelinker.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends filelinkerDeleteManyArgs>(
      args?: SelectSubset<T, filelinkerDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Filelinkers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filelinkerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Filelinkers
     * const filelinker = await prisma.filelinker.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends filelinkerUpdateManyArgs>(
      args: SelectSubset<T, filelinkerUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Filelinker.
     * @param {filelinkerUpsertArgs} args - Arguments to update or create a Filelinker.
     * @example
     * // Update or create a Filelinker
     * const filelinker = await prisma.filelinker.upsert({
     *   create: {
     *     // ... data to create a Filelinker
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Filelinker we want to update
     *   }
     * })
    **/
    upsert<T extends filelinkerUpsertArgs>(
      args: SelectSubset<T, filelinkerUpsertArgs>
    ): Prisma__filelinkerClient<filelinkerGetPayload<T>>

    /**
     * Count the number of Filelinkers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filelinkerCountArgs} args - Arguments to filter Filelinkers to count.
     * @example
     * // Count the number of Filelinkers
     * const count = await prisma.filelinker.count({
     *   where: {
     *     // ... the filter for the Filelinkers we want to count
     *   }
     * })
    **/
    count<T extends filelinkerCountArgs>(
      args?: Subset<T, filelinkerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FilelinkerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Filelinker.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilelinkerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FilelinkerAggregateArgs>(args: Subset<T, FilelinkerAggregateArgs>): Prisma.PrismaPromise<GetFilelinkerAggregateType<T>>

    /**
     * Group by Filelinker.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilelinkerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FilelinkerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FilelinkerGroupByArgs['orderBy'] }
        : { orderBy?: FilelinkerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FilelinkerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFilelinkerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for filelinker.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__filelinkerClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * filelinker base type for findUnique actions
   */
  export type filelinkerFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the filelinker
     */
    select?: filelinkerSelect | null
    /**
     * Filter, which filelinker to fetch.
     */
    where: filelinkerWhereUniqueInput
  }

  /**
   * filelinker findUnique
   */
  export interface filelinkerFindUniqueArgs extends filelinkerFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * filelinker findUniqueOrThrow
   */
  export type filelinkerFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the filelinker
     */
    select?: filelinkerSelect | null
    /**
     * Filter, which filelinker to fetch.
     */
    where: filelinkerWhereUniqueInput
  }


  /**
   * filelinker base type for findFirst actions
   */
  export type filelinkerFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the filelinker
     */
    select?: filelinkerSelect | null
    /**
     * Filter, which filelinker to fetch.
     */
    where?: filelinkerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filelinkers to fetch.
     */
    orderBy?: Enumerable<filelinkerOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for filelinkers.
     */
    cursor?: filelinkerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filelinkers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filelinkers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of filelinkers.
     */
    distinct?: Enumerable<FilelinkerScalarFieldEnum>
  }

  /**
   * filelinker findFirst
   */
  export interface filelinkerFindFirstArgs extends filelinkerFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * filelinker findFirstOrThrow
   */
  export type filelinkerFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the filelinker
     */
    select?: filelinkerSelect | null
    /**
     * Filter, which filelinker to fetch.
     */
    where?: filelinkerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filelinkers to fetch.
     */
    orderBy?: Enumerable<filelinkerOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for filelinkers.
     */
    cursor?: filelinkerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filelinkers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filelinkers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of filelinkers.
     */
    distinct?: Enumerable<FilelinkerScalarFieldEnum>
  }


  /**
   * filelinker findMany
   */
  export type filelinkerFindManyArgs = {
    /**
     * Select specific fields to fetch from the filelinker
     */
    select?: filelinkerSelect | null
    /**
     * Filter, which filelinkers to fetch.
     */
    where?: filelinkerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filelinkers to fetch.
     */
    orderBy?: Enumerable<filelinkerOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing filelinkers.
     */
    cursor?: filelinkerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filelinkers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filelinkers.
     */
    skip?: number
    distinct?: Enumerable<FilelinkerScalarFieldEnum>
  }


  /**
   * filelinker create
   */
  export type filelinkerCreateArgs = {
    /**
     * Select specific fields to fetch from the filelinker
     */
    select?: filelinkerSelect | null
    /**
     * The data needed to create a filelinker.
     */
    data: XOR<filelinkerCreateInput, filelinkerUncheckedCreateInput>
  }


  /**
   * filelinker createMany
   */
  export type filelinkerCreateManyArgs = {
    /**
     * The data used to create many filelinkers.
     */
    data: Enumerable<filelinkerCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * filelinker update
   */
  export type filelinkerUpdateArgs = {
    /**
     * Select specific fields to fetch from the filelinker
     */
    select?: filelinkerSelect | null
    /**
     * The data needed to update a filelinker.
     */
    data: XOR<filelinkerUpdateInput, filelinkerUncheckedUpdateInput>
    /**
     * Choose, which filelinker to update.
     */
    where: filelinkerWhereUniqueInput
  }


  /**
   * filelinker updateMany
   */
  export type filelinkerUpdateManyArgs = {
    /**
     * The data used to update filelinkers.
     */
    data: XOR<filelinkerUpdateManyMutationInput, filelinkerUncheckedUpdateManyInput>
    /**
     * Filter which filelinkers to update
     */
    where?: filelinkerWhereInput
  }


  /**
   * filelinker upsert
   */
  export type filelinkerUpsertArgs = {
    /**
     * Select specific fields to fetch from the filelinker
     */
    select?: filelinkerSelect | null
    /**
     * The filter to search for the filelinker to update in case it exists.
     */
    where: filelinkerWhereUniqueInput
    /**
     * In case the filelinker found by the `where` argument doesn't exist, create a new filelinker with this data.
     */
    create: XOR<filelinkerCreateInput, filelinkerUncheckedCreateInput>
    /**
     * In case the filelinker was found with the provided `where` argument, update it with this data.
     */
    update: XOR<filelinkerUpdateInput, filelinkerUncheckedUpdateInput>
  }


  /**
   * filelinker delete
   */
  export type filelinkerDeleteArgs = {
    /**
     * Select specific fields to fetch from the filelinker
     */
    select?: filelinkerSelect | null
    /**
     * Filter which filelinker to delete.
     */
    where: filelinkerWhereUniqueInput
  }


  /**
   * filelinker deleteMany
   */
  export type filelinkerDeleteManyArgs = {
    /**
     * Filter which filelinkers to delete
     */
    where?: filelinkerWhereInput
  }


  /**
   * filelinker without action
   */
  export type filelinkerArgs = {
    /**
     * Select specific fields to fetch from the filelinker
     */
    select?: filelinkerSelect | null
  }



  /**
   * Model filtro
   */


  export type AggregateFiltro = {
    _count: FiltroCountAggregateOutputType | null
    _avg: FiltroAvgAggregateOutputType | null
    _sum: FiltroSumAggregateOutputType | null
    _min: FiltroMinAggregateOutputType | null
    _max: FiltroMaxAggregateOutputType | null
  }

  export type FiltroAvgAggregateOutputType = {
    id: number | null
    idUtente: number | null
  }

  export type FiltroSumAggregateOutputType = {
    id: number | null
    idUtente: number | null
  }

  export type FiltroMinAggregateOutputType = {
    id: number | null
    idUtente: number | null
    json: string | null
    tipo: string | null
    nome: string | null
  }

  export type FiltroMaxAggregateOutputType = {
    id: number | null
    idUtente: number | null
    json: string | null
    tipo: string | null
    nome: string | null
  }

  export type FiltroCountAggregateOutputType = {
    id: number
    idUtente: number
    json: number
    tipo: number
    nome: number
    _all: number
  }


  export type FiltroAvgAggregateInputType = {
    id?: true
    idUtente?: true
  }

  export type FiltroSumAggregateInputType = {
    id?: true
    idUtente?: true
  }

  export type FiltroMinAggregateInputType = {
    id?: true
    idUtente?: true
    json?: true
    tipo?: true
    nome?: true
  }

  export type FiltroMaxAggregateInputType = {
    id?: true
    idUtente?: true
    json?: true
    tipo?: true
    nome?: true
  }

  export type FiltroCountAggregateInputType = {
    id?: true
    idUtente?: true
    json?: true
    tipo?: true
    nome?: true
    _all?: true
  }

  export type FiltroAggregateArgs = {
    /**
     * Filter which filtro to aggregate.
     */
    where?: filtroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filtros to fetch.
     */
    orderBy?: Enumerable<filtroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: filtroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filtros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filtros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned filtros
    **/
    _count?: true | FiltroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FiltroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FiltroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FiltroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FiltroMaxAggregateInputType
  }

  export type GetFiltroAggregateType<T extends FiltroAggregateArgs> = {
        [P in keyof T & keyof AggregateFiltro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFiltro[P]>
      : GetScalarType<T[P], AggregateFiltro[P]>
  }




  export type FiltroGroupByArgs = {
    where?: filtroWhereInput
    orderBy?: Enumerable<filtroOrderByWithAggregationInput>
    by: FiltroScalarFieldEnum[]
    having?: filtroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FiltroCountAggregateInputType | true
    _avg?: FiltroAvgAggregateInputType
    _sum?: FiltroSumAggregateInputType
    _min?: FiltroMinAggregateInputType
    _max?: FiltroMaxAggregateInputType
  }


  export type FiltroGroupByOutputType = {
    id: number
    idUtente: number | null
    json: string | null
    tipo: string | null
    nome: string | null
    _count: FiltroCountAggregateOutputType | null
    _avg: FiltroAvgAggregateOutputType | null
    _sum: FiltroSumAggregateOutputType | null
    _min: FiltroMinAggregateOutputType | null
    _max: FiltroMaxAggregateOutputType | null
  }

  type GetFiltroGroupByPayload<T extends FiltroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<FiltroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FiltroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FiltroGroupByOutputType[P]>
            : GetScalarType<T[P], FiltroGroupByOutputType[P]>
        }
      >
    >


  export type filtroSelect = {
    id?: boolean
    idUtente?: boolean
    json?: boolean
    tipo?: boolean
    nome?: boolean
  }


  export type filtroGetPayload<S extends boolean | null | undefined | filtroArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? filtro :
    S extends undefined ? never :
    S extends { include: any } & (filtroArgs | filtroFindManyArgs)
    ? filtro 
    : S extends { select: any } & (filtroArgs | filtroFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof filtro ? filtro[P] : never
  } 
      : filtro


  type filtroCountArgs = 
    Omit<filtroFindManyArgs, 'select' | 'include'> & {
      select?: FiltroCountAggregateInputType | true
    }

  export interface filtroDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Filtro that matches the filter.
     * @param {filtroFindUniqueArgs} args - Arguments to find a Filtro
     * @example
     * // Get one Filtro
     * const filtro = await prisma.filtro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends filtroFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, filtroFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'filtro'> extends True ? Prisma__filtroClient<filtroGetPayload<T>> : Prisma__filtroClient<filtroGetPayload<T> | null, null>

    /**
     * Find one Filtro that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {filtroFindUniqueOrThrowArgs} args - Arguments to find a Filtro
     * @example
     * // Get one Filtro
     * const filtro = await prisma.filtro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends filtroFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, filtroFindUniqueOrThrowArgs>
    ): Prisma__filtroClient<filtroGetPayload<T>>

    /**
     * Find the first Filtro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filtroFindFirstArgs} args - Arguments to find a Filtro
     * @example
     * // Get one Filtro
     * const filtro = await prisma.filtro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends filtroFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, filtroFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'filtro'> extends True ? Prisma__filtroClient<filtroGetPayload<T>> : Prisma__filtroClient<filtroGetPayload<T> | null, null>

    /**
     * Find the first Filtro that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filtroFindFirstOrThrowArgs} args - Arguments to find a Filtro
     * @example
     * // Get one Filtro
     * const filtro = await prisma.filtro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends filtroFindFirstOrThrowArgs>(
      args?: SelectSubset<T, filtroFindFirstOrThrowArgs>
    ): Prisma__filtroClient<filtroGetPayload<T>>

    /**
     * Find zero or more Filtros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filtroFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Filtros
     * const filtros = await prisma.filtro.findMany()
     * 
     * // Get first 10 Filtros
     * const filtros = await prisma.filtro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const filtroWithIdOnly = await prisma.filtro.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends filtroFindManyArgs>(
      args?: SelectSubset<T, filtroFindManyArgs>
    ): Prisma.PrismaPromise<Array<filtroGetPayload<T>>>

    /**
     * Create a Filtro.
     * @param {filtroCreateArgs} args - Arguments to create a Filtro.
     * @example
     * // Create one Filtro
     * const Filtro = await prisma.filtro.create({
     *   data: {
     *     // ... data to create a Filtro
     *   }
     * })
     * 
    **/
    create<T extends filtroCreateArgs>(
      args: SelectSubset<T, filtroCreateArgs>
    ): Prisma__filtroClient<filtroGetPayload<T>>

    /**
     * Create many Filtros.
     *     @param {filtroCreateManyArgs} args - Arguments to create many Filtros.
     *     @example
     *     // Create many Filtros
     *     const filtro = await prisma.filtro.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends filtroCreateManyArgs>(
      args?: SelectSubset<T, filtroCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Filtro.
     * @param {filtroDeleteArgs} args - Arguments to delete one Filtro.
     * @example
     * // Delete one Filtro
     * const Filtro = await prisma.filtro.delete({
     *   where: {
     *     // ... filter to delete one Filtro
     *   }
     * })
     * 
    **/
    delete<T extends filtroDeleteArgs>(
      args: SelectSubset<T, filtroDeleteArgs>
    ): Prisma__filtroClient<filtroGetPayload<T>>

    /**
     * Update one Filtro.
     * @param {filtroUpdateArgs} args - Arguments to update one Filtro.
     * @example
     * // Update one Filtro
     * const filtro = await prisma.filtro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends filtroUpdateArgs>(
      args: SelectSubset<T, filtroUpdateArgs>
    ): Prisma__filtroClient<filtroGetPayload<T>>

    /**
     * Delete zero or more Filtros.
     * @param {filtroDeleteManyArgs} args - Arguments to filter Filtros to delete.
     * @example
     * // Delete a few Filtros
     * const { count } = await prisma.filtro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends filtroDeleteManyArgs>(
      args?: SelectSubset<T, filtroDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Filtros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filtroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Filtros
     * const filtro = await prisma.filtro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends filtroUpdateManyArgs>(
      args: SelectSubset<T, filtroUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Filtro.
     * @param {filtroUpsertArgs} args - Arguments to update or create a Filtro.
     * @example
     * // Update or create a Filtro
     * const filtro = await prisma.filtro.upsert({
     *   create: {
     *     // ... data to create a Filtro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Filtro we want to update
     *   }
     * })
    **/
    upsert<T extends filtroUpsertArgs>(
      args: SelectSubset<T, filtroUpsertArgs>
    ): Prisma__filtroClient<filtroGetPayload<T>>

    /**
     * Count the number of Filtros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filtroCountArgs} args - Arguments to filter Filtros to count.
     * @example
     * // Count the number of Filtros
     * const count = await prisma.filtro.count({
     *   where: {
     *     // ... the filter for the Filtros we want to count
     *   }
     * })
    **/
    count<T extends filtroCountArgs>(
      args?: Subset<T, filtroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FiltroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Filtro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FiltroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FiltroAggregateArgs>(args: Subset<T, FiltroAggregateArgs>): Prisma.PrismaPromise<GetFiltroAggregateType<T>>

    /**
     * Group by Filtro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FiltroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FiltroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FiltroGroupByArgs['orderBy'] }
        : { orderBy?: FiltroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FiltroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFiltroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for filtro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__filtroClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * filtro base type for findUnique actions
   */
  export type filtroFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the filtro
     */
    select?: filtroSelect | null
    /**
     * Filter, which filtro to fetch.
     */
    where: filtroWhereUniqueInput
  }

  /**
   * filtro findUnique
   */
  export interface filtroFindUniqueArgs extends filtroFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * filtro findUniqueOrThrow
   */
  export type filtroFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the filtro
     */
    select?: filtroSelect | null
    /**
     * Filter, which filtro to fetch.
     */
    where: filtroWhereUniqueInput
  }


  /**
   * filtro base type for findFirst actions
   */
  export type filtroFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the filtro
     */
    select?: filtroSelect | null
    /**
     * Filter, which filtro to fetch.
     */
    where?: filtroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filtros to fetch.
     */
    orderBy?: Enumerable<filtroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for filtros.
     */
    cursor?: filtroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filtros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filtros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of filtros.
     */
    distinct?: Enumerable<FiltroScalarFieldEnum>
  }

  /**
   * filtro findFirst
   */
  export interface filtroFindFirstArgs extends filtroFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * filtro findFirstOrThrow
   */
  export type filtroFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the filtro
     */
    select?: filtroSelect | null
    /**
     * Filter, which filtro to fetch.
     */
    where?: filtroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filtros to fetch.
     */
    orderBy?: Enumerable<filtroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for filtros.
     */
    cursor?: filtroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filtros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filtros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of filtros.
     */
    distinct?: Enumerable<FiltroScalarFieldEnum>
  }


  /**
   * filtro findMany
   */
  export type filtroFindManyArgs = {
    /**
     * Select specific fields to fetch from the filtro
     */
    select?: filtroSelect | null
    /**
     * Filter, which filtros to fetch.
     */
    where?: filtroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filtros to fetch.
     */
    orderBy?: Enumerable<filtroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing filtros.
     */
    cursor?: filtroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filtros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filtros.
     */
    skip?: number
    distinct?: Enumerable<FiltroScalarFieldEnum>
  }


  /**
   * filtro create
   */
  export type filtroCreateArgs = {
    /**
     * Select specific fields to fetch from the filtro
     */
    select?: filtroSelect | null
    /**
     * The data needed to create a filtro.
     */
    data: XOR<filtroCreateInput, filtroUncheckedCreateInput>
  }


  /**
   * filtro createMany
   */
  export type filtroCreateManyArgs = {
    /**
     * The data used to create many filtros.
     */
    data: Enumerable<filtroCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * filtro update
   */
  export type filtroUpdateArgs = {
    /**
     * Select specific fields to fetch from the filtro
     */
    select?: filtroSelect | null
    /**
     * The data needed to update a filtro.
     */
    data: XOR<filtroUpdateInput, filtroUncheckedUpdateInput>
    /**
     * Choose, which filtro to update.
     */
    where: filtroWhereUniqueInput
  }


  /**
   * filtro updateMany
   */
  export type filtroUpdateManyArgs = {
    /**
     * The data used to update filtros.
     */
    data: XOR<filtroUpdateManyMutationInput, filtroUncheckedUpdateManyInput>
    /**
     * Filter which filtros to update
     */
    where?: filtroWhereInput
  }


  /**
   * filtro upsert
   */
  export type filtroUpsertArgs = {
    /**
     * Select specific fields to fetch from the filtro
     */
    select?: filtroSelect | null
    /**
     * The filter to search for the filtro to update in case it exists.
     */
    where: filtroWhereUniqueInput
    /**
     * In case the filtro found by the `where` argument doesn't exist, create a new filtro with this data.
     */
    create: XOR<filtroCreateInput, filtroUncheckedCreateInput>
    /**
     * In case the filtro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<filtroUpdateInput, filtroUncheckedUpdateInput>
  }


  /**
   * filtro delete
   */
  export type filtroDeleteArgs = {
    /**
     * Select specific fields to fetch from the filtro
     */
    select?: filtroSelect | null
    /**
     * Filter which filtro to delete.
     */
    where: filtroWhereUniqueInput
  }


  /**
   * filtro deleteMany
   */
  export type filtroDeleteManyArgs = {
    /**
     * Filter which filtros to delete
     */
    where?: filtroWhereInput
  }


  /**
   * filtro without action
   */
  export type filtroArgs = {
    /**
     * Select specific fields to fetch from the filtro
     */
    select?: filtroSelect | null
  }



  /**
   * Model filtro_colonne
   */


  export type AggregateFiltro_colonne = {
    _count: Filtro_colonneCountAggregateOutputType | null
    _avg: Filtro_colonneAvgAggregateOutputType | null
    _sum: Filtro_colonneSumAggregateOutputType | null
    _min: Filtro_colonneMinAggregateOutputType | null
    _max: Filtro_colonneMaxAggregateOutputType | null
  }

  export type Filtro_colonneAvgAggregateOutputType = {
    id: number | null
    idUtente: number | null
  }

  export type Filtro_colonneSumAggregateOutputType = {
    id: number | null
    idUtente: number | null
  }

  export type Filtro_colonneMinAggregateOutputType = {
    id: number | null
    idUtente: number | null
    json: string | null
    tabella: string | null
  }

  export type Filtro_colonneMaxAggregateOutputType = {
    id: number | null
    idUtente: number | null
    json: string | null
    tabella: string | null
  }

  export type Filtro_colonneCountAggregateOutputType = {
    id: number
    idUtente: number
    json: number
    tabella: number
    _all: number
  }


  export type Filtro_colonneAvgAggregateInputType = {
    id?: true
    idUtente?: true
  }

  export type Filtro_colonneSumAggregateInputType = {
    id?: true
    idUtente?: true
  }

  export type Filtro_colonneMinAggregateInputType = {
    id?: true
    idUtente?: true
    json?: true
    tabella?: true
  }

  export type Filtro_colonneMaxAggregateInputType = {
    id?: true
    idUtente?: true
    json?: true
    tabella?: true
  }

  export type Filtro_colonneCountAggregateInputType = {
    id?: true
    idUtente?: true
    json?: true
    tabella?: true
    _all?: true
  }

  export type Filtro_colonneAggregateArgs = {
    /**
     * Filter which filtro_colonne to aggregate.
     */
    where?: filtro_colonneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filtro_colonnes to fetch.
     */
    orderBy?: Enumerable<filtro_colonneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: filtro_colonneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filtro_colonnes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filtro_colonnes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned filtro_colonnes
    **/
    _count?: true | Filtro_colonneCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Filtro_colonneAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Filtro_colonneSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Filtro_colonneMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Filtro_colonneMaxAggregateInputType
  }

  export type GetFiltro_colonneAggregateType<T extends Filtro_colonneAggregateArgs> = {
        [P in keyof T & keyof AggregateFiltro_colonne]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFiltro_colonne[P]>
      : GetScalarType<T[P], AggregateFiltro_colonne[P]>
  }




  export type Filtro_colonneGroupByArgs = {
    where?: filtro_colonneWhereInput
    orderBy?: Enumerable<filtro_colonneOrderByWithAggregationInput>
    by: Filtro_colonneScalarFieldEnum[]
    having?: filtro_colonneScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Filtro_colonneCountAggregateInputType | true
    _avg?: Filtro_colonneAvgAggregateInputType
    _sum?: Filtro_colonneSumAggregateInputType
    _min?: Filtro_colonneMinAggregateInputType
    _max?: Filtro_colonneMaxAggregateInputType
  }


  export type Filtro_colonneGroupByOutputType = {
    id: number
    idUtente: number | null
    json: string | null
    tabella: string | null
    _count: Filtro_colonneCountAggregateOutputType | null
    _avg: Filtro_colonneAvgAggregateOutputType | null
    _sum: Filtro_colonneSumAggregateOutputType | null
    _min: Filtro_colonneMinAggregateOutputType | null
    _max: Filtro_colonneMaxAggregateOutputType | null
  }

  type GetFiltro_colonneGroupByPayload<T extends Filtro_colonneGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Filtro_colonneGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Filtro_colonneGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Filtro_colonneGroupByOutputType[P]>
            : GetScalarType<T[P], Filtro_colonneGroupByOutputType[P]>
        }
      >
    >


  export type filtro_colonneSelect = {
    id?: boolean
    idUtente?: boolean
    json?: boolean
    tabella?: boolean
  }


  export type filtro_colonneGetPayload<S extends boolean | null | undefined | filtro_colonneArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? filtro_colonne :
    S extends undefined ? never :
    S extends { include: any } & (filtro_colonneArgs | filtro_colonneFindManyArgs)
    ? filtro_colonne 
    : S extends { select: any } & (filtro_colonneArgs | filtro_colonneFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof filtro_colonne ? filtro_colonne[P] : never
  } 
      : filtro_colonne


  type filtro_colonneCountArgs = 
    Omit<filtro_colonneFindManyArgs, 'select' | 'include'> & {
      select?: Filtro_colonneCountAggregateInputType | true
    }

  export interface filtro_colonneDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Filtro_colonne that matches the filter.
     * @param {filtro_colonneFindUniqueArgs} args - Arguments to find a Filtro_colonne
     * @example
     * // Get one Filtro_colonne
     * const filtro_colonne = await prisma.filtro_colonne.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends filtro_colonneFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, filtro_colonneFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'filtro_colonne'> extends True ? Prisma__filtro_colonneClient<filtro_colonneGetPayload<T>> : Prisma__filtro_colonneClient<filtro_colonneGetPayload<T> | null, null>

    /**
     * Find one Filtro_colonne that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {filtro_colonneFindUniqueOrThrowArgs} args - Arguments to find a Filtro_colonne
     * @example
     * // Get one Filtro_colonne
     * const filtro_colonne = await prisma.filtro_colonne.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends filtro_colonneFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, filtro_colonneFindUniqueOrThrowArgs>
    ): Prisma__filtro_colonneClient<filtro_colonneGetPayload<T>>

    /**
     * Find the first Filtro_colonne that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filtro_colonneFindFirstArgs} args - Arguments to find a Filtro_colonne
     * @example
     * // Get one Filtro_colonne
     * const filtro_colonne = await prisma.filtro_colonne.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends filtro_colonneFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, filtro_colonneFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'filtro_colonne'> extends True ? Prisma__filtro_colonneClient<filtro_colonneGetPayload<T>> : Prisma__filtro_colonneClient<filtro_colonneGetPayload<T> | null, null>

    /**
     * Find the first Filtro_colonne that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filtro_colonneFindFirstOrThrowArgs} args - Arguments to find a Filtro_colonne
     * @example
     * // Get one Filtro_colonne
     * const filtro_colonne = await prisma.filtro_colonne.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends filtro_colonneFindFirstOrThrowArgs>(
      args?: SelectSubset<T, filtro_colonneFindFirstOrThrowArgs>
    ): Prisma__filtro_colonneClient<filtro_colonneGetPayload<T>>

    /**
     * Find zero or more Filtro_colonnes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filtro_colonneFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Filtro_colonnes
     * const filtro_colonnes = await prisma.filtro_colonne.findMany()
     * 
     * // Get first 10 Filtro_colonnes
     * const filtro_colonnes = await prisma.filtro_colonne.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const filtro_colonneWithIdOnly = await prisma.filtro_colonne.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends filtro_colonneFindManyArgs>(
      args?: SelectSubset<T, filtro_colonneFindManyArgs>
    ): Prisma.PrismaPromise<Array<filtro_colonneGetPayload<T>>>

    /**
     * Create a Filtro_colonne.
     * @param {filtro_colonneCreateArgs} args - Arguments to create a Filtro_colonne.
     * @example
     * // Create one Filtro_colonne
     * const Filtro_colonne = await prisma.filtro_colonne.create({
     *   data: {
     *     // ... data to create a Filtro_colonne
     *   }
     * })
     * 
    **/
    create<T extends filtro_colonneCreateArgs>(
      args: SelectSubset<T, filtro_colonneCreateArgs>
    ): Prisma__filtro_colonneClient<filtro_colonneGetPayload<T>>

    /**
     * Create many Filtro_colonnes.
     *     @param {filtro_colonneCreateManyArgs} args - Arguments to create many Filtro_colonnes.
     *     @example
     *     // Create many Filtro_colonnes
     *     const filtro_colonne = await prisma.filtro_colonne.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends filtro_colonneCreateManyArgs>(
      args?: SelectSubset<T, filtro_colonneCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Filtro_colonne.
     * @param {filtro_colonneDeleteArgs} args - Arguments to delete one Filtro_colonne.
     * @example
     * // Delete one Filtro_colonne
     * const Filtro_colonne = await prisma.filtro_colonne.delete({
     *   where: {
     *     // ... filter to delete one Filtro_colonne
     *   }
     * })
     * 
    **/
    delete<T extends filtro_colonneDeleteArgs>(
      args: SelectSubset<T, filtro_colonneDeleteArgs>
    ): Prisma__filtro_colonneClient<filtro_colonneGetPayload<T>>

    /**
     * Update one Filtro_colonne.
     * @param {filtro_colonneUpdateArgs} args - Arguments to update one Filtro_colonne.
     * @example
     * // Update one Filtro_colonne
     * const filtro_colonne = await prisma.filtro_colonne.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends filtro_colonneUpdateArgs>(
      args: SelectSubset<T, filtro_colonneUpdateArgs>
    ): Prisma__filtro_colonneClient<filtro_colonneGetPayload<T>>

    /**
     * Delete zero or more Filtro_colonnes.
     * @param {filtro_colonneDeleteManyArgs} args - Arguments to filter Filtro_colonnes to delete.
     * @example
     * // Delete a few Filtro_colonnes
     * const { count } = await prisma.filtro_colonne.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends filtro_colonneDeleteManyArgs>(
      args?: SelectSubset<T, filtro_colonneDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Filtro_colonnes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filtro_colonneUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Filtro_colonnes
     * const filtro_colonne = await prisma.filtro_colonne.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends filtro_colonneUpdateManyArgs>(
      args: SelectSubset<T, filtro_colonneUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Filtro_colonne.
     * @param {filtro_colonneUpsertArgs} args - Arguments to update or create a Filtro_colonne.
     * @example
     * // Update or create a Filtro_colonne
     * const filtro_colonne = await prisma.filtro_colonne.upsert({
     *   create: {
     *     // ... data to create a Filtro_colonne
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Filtro_colonne we want to update
     *   }
     * })
    **/
    upsert<T extends filtro_colonneUpsertArgs>(
      args: SelectSubset<T, filtro_colonneUpsertArgs>
    ): Prisma__filtro_colonneClient<filtro_colonneGetPayload<T>>

    /**
     * Count the number of Filtro_colonnes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filtro_colonneCountArgs} args - Arguments to filter Filtro_colonnes to count.
     * @example
     * // Count the number of Filtro_colonnes
     * const count = await prisma.filtro_colonne.count({
     *   where: {
     *     // ... the filter for the Filtro_colonnes we want to count
     *   }
     * })
    **/
    count<T extends filtro_colonneCountArgs>(
      args?: Subset<T, filtro_colonneCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Filtro_colonneCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Filtro_colonne.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Filtro_colonneAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Filtro_colonneAggregateArgs>(args: Subset<T, Filtro_colonneAggregateArgs>): Prisma.PrismaPromise<GetFiltro_colonneAggregateType<T>>

    /**
     * Group by Filtro_colonne.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Filtro_colonneGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Filtro_colonneGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Filtro_colonneGroupByArgs['orderBy'] }
        : { orderBy?: Filtro_colonneGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Filtro_colonneGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFiltro_colonneGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for filtro_colonne.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__filtro_colonneClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * filtro_colonne base type for findUnique actions
   */
  export type filtro_colonneFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the filtro_colonne
     */
    select?: filtro_colonneSelect | null
    /**
     * Filter, which filtro_colonne to fetch.
     */
    where: filtro_colonneWhereUniqueInput
  }

  /**
   * filtro_colonne findUnique
   */
  export interface filtro_colonneFindUniqueArgs extends filtro_colonneFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * filtro_colonne findUniqueOrThrow
   */
  export type filtro_colonneFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the filtro_colonne
     */
    select?: filtro_colonneSelect | null
    /**
     * Filter, which filtro_colonne to fetch.
     */
    where: filtro_colonneWhereUniqueInput
  }


  /**
   * filtro_colonne base type for findFirst actions
   */
  export type filtro_colonneFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the filtro_colonne
     */
    select?: filtro_colonneSelect | null
    /**
     * Filter, which filtro_colonne to fetch.
     */
    where?: filtro_colonneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filtro_colonnes to fetch.
     */
    orderBy?: Enumerable<filtro_colonneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for filtro_colonnes.
     */
    cursor?: filtro_colonneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filtro_colonnes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filtro_colonnes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of filtro_colonnes.
     */
    distinct?: Enumerable<Filtro_colonneScalarFieldEnum>
  }

  /**
   * filtro_colonne findFirst
   */
  export interface filtro_colonneFindFirstArgs extends filtro_colonneFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * filtro_colonne findFirstOrThrow
   */
  export type filtro_colonneFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the filtro_colonne
     */
    select?: filtro_colonneSelect | null
    /**
     * Filter, which filtro_colonne to fetch.
     */
    where?: filtro_colonneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filtro_colonnes to fetch.
     */
    orderBy?: Enumerable<filtro_colonneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for filtro_colonnes.
     */
    cursor?: filtro_colonneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filtro_colonnes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filtro_colonnes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of filtro_colonnes.
     */
    distinct?: Enumerable<Filtro_colonneScalarFieldEnum>
  }


  /**
   * filtro_colonne findMany
   */
  export type filtro_colonneFindManyArgs = {
    /**
     * Select specific fields to fetch from the filtro_colonne
     */
    select?: filtro_colonneSelect | null
    /**
     * Filter, which filtro_colonnes to fetch.
     */
    where?: filtro_colonneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filtro_colonnes to fetch.
     */
    orderBy?: Enumerable<filtro_colonneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing filtro_colonnes.
     */
    cursor?: filtro_colonneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filtro_colonnes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filtro_colonnes.
     */
    skip?: number
    distinct?: Enumerable<Filtro_colonneScalarFieldEnum>
  }


  /**
   * filtro_colonne create
   */
  export type filtro_colonneCreateArgs = {
    /**
     * Select specific fields to fetch from the filtro_colonne
     */
    select?: filtro_colonneSelect | null
    /**
     * The data needed to create a filtro_colonne.
     */
    data: XOR<filtro_colonneCreateInput, filtro_colonneUncheckedCreateInput>
  }


  /**
   * filtro_colonne createMany
   */
  export type filtro_colonneCreateManyArgs = {
    /**
     * The data used to create many filtro_colonnes.
     */
    data: Enumerable<filtro_colonneCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * filtro_colonne update
   */
  export type filtro_colonneUpdateArgs = {
    /**
     * Select specific fields to fetch from the filtro_colonne
     */
    select?: filtro_colonneSelect | null
    /**
     * The data needed to update a filtro_colonne.
     */
    data: XOR<filtro_colonneUpdateInput, filtro_colonneUncheckedUpdateInput>
    /**
     * Choose, which filtro_colonne to update.
     */
    where: filtro_colonneWhereUniqueInput
  }


  /**
   * filtro_colonne updateMany
   */
  export type filtro_colonneUpdateManyArgs = {
    /**
     * The data used to update filtro_colonnes.
     */
    data: XOR<filtro_colonneUpdateManyMutationInput, filtro_colonneUncheckedUpdateManyInput>
    /**
     * Filter which filtro_colonnes to update
     */
    where?: filtro_colonneWhereInput
  }


  /**
   * filtro_colonne upsert
   */
  export type filtro_colonneUpsertArgs = {
    /**
     * Select specific fields to fetch from the filtro_colonne
     */
    select?: filtro_colonneSelect | null
    /**
     * The filter to search for the filtro_colonne to update in case it exists.
     */
    where: filtro_colonneWhereUniqueInput
    /**
     * In case the filtro_colonne found by the `where` argument doesn't exist, create a new filtro_colonne with this data.
     */
    create: XOR<filtro_colonneCreateInput, filtro_colonneUncheckedCreateInput>
    /**
     * In case the filtro_colonne was found with the provided `where` argument, update it with this data.
     */
    update: XOR<filtro_colonneUpdateInput, filtro_colonneUncheckedUpdateInput>
  }


  /**
   * filtro_colonne delete
   */
  export type filtro_colonneDeleteArgs = {
    /**
     * Select specific fields to fetch from the filtro_colonne
     */
    select?: filtro_colonneSelect | null
    /**
     * Filter which filtro_colonne to delete.
     */
    where: filtro_colonneWhereUniqueInput
  }


  /**
   * filtro_colonne deleteMany
   */
  export type filtro_colonneDeleteManyArgs = {
    /**
     * Filter which filtro_colonnes to delete
     */
    where?: filtro_colonneWhereInput
  }


  /**
   * filtro_colonne without action
   */
  export type filtro_colonneArgs = {
    /**
     * Select specific fields to fetch from the filtro_colonne
     */
    select?: filtro_colonneSelect | null
  }



  /**
   * Model fonti
   */


  export type AggregateFonti = {
    _count: FontiCountAggregateOutputType | null
    _avg: FontiAvgAggregateOutputType | null
    _sum: FontiSumAggregateOutputType | null
    _min: FontiMinAggregateOutputType | null
    _max: FontiMaxAggregateOutputType | null
  }

  export type FontiAvgAggregateOutputType = {
    id: number | null
  }

  export type FontiSumAggregateOutputType = {
    id: number | null
  }

  export type FontiMinAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type FontiMaxAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type FontiCountAggregateOutputType = {
    id: number
    value: number
    _all: number
  }


  export type FontiAvgAggregateInputType = {
    id?: true
  }

  export type FontiSumAggregateInputType = {
    id?: true
  }

  export type FontiMinAggregateInputType = {
    id?: true
    value?: true
  }

  export type FontiMaxAggregateInputType = {
    id?: true
    value?: true
  }

  export type FontiCountAggregateInputType = {
    id?: true
    value?: true
    _all?: true
  }

  export type FontiAggregateArgs = {
    /**
     * Filter which fonti to aggregate.
     */
    where?: fontiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fontis to fetch.
     */
    orderBy?: Enumerable<fontiOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: fontiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fontis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fontis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned fontis
    **/
    _count?: true | FontiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FontiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FontiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FontiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FontiMaxAggregateInputType
  }

  export type GetFontiAggregateType<T extends FontiAggregateArgs> = {
        [P in keyof T & keyof AggregateFonti]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFonti[P]>
      : GetScalarType<T[P], AggregateFonti[P]>
  }




  export type FontiGroupByArgs = {
    where?: fontiWhereInput
    orderBy?: Enumerable<fontiOrderByWithAggregationInput>
    by: FontiScalarFieldEnum[]
    having?: fontiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FontiCountAggregateInputType | true
    _avg?: FontiAvgAggregateInputType
    _sum?: FontiSumAggregateInputType
    _min?: FontiMinAggregateInputType
    _max?: FontiMaxAggregateInputType
  }


  export type FontiGroupByOutputType = {
    id: number
    value: string | null
    _count: FontiCountAggregateOutputType | null
    _avg: FontiAvgAggregateOutputType | null
    _sum: FontiSumAggregateOutputType | null
    _min: FontiMinAggregateOutputType | null
    _max: FontiMaxAggregateOutputType | null
  }

  type GetFontiGroupByPayload<T extends FontiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<FontiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FontiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FontiGroupByOutputType[P]>
            : GetScalarType<T[P], FontiGroupByOutputType[P]>
        }
      >
    >


  export type fontiSelect = {
    id?: boolean
    value?: boolean
    registrorichiedente?: boolean | fonti$registrorichiedenteArgs
    segnalazione?: boolean | fonti$segnalazioneArgs
    segnalazionestorico?: boolean | fonti$segnalazionestoricoArgs
    _count?: boolean | FontiCountOutputTypeArgs
  }


  export type fontiInclude = {
    registrorichiedente?: boolean | fonti$registrorichiedenteArgs
    segnalazione?: boolean | fonti$segnalazioneArgs
    segnalazionestorico?: boolean | fonti$segnalazionestoricoArgs
    _count?: boolean | FontiCountOutputTypeArgs
  }

  export type fontiGetPayload<S extends boolean | null | undefined | fontiArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? fonti :
    S extends undefined ? never :
    S extends { include: any } & (fontiArgs | fontiFindManyArgs)
    ? fonti  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'registrorichiedente' ? Array < registrorichiedenteGetPayload<S['include'][P]>>  :
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['include'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['include'][P]>>  :
        P extends '_count' ? FontiCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (fontiArgs | fontiFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'registrorichiedente' ? Array < registrorichiedenteGetPayload<S['select'][P]>>  :
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['select'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['select'][P]>>  :
        P extends '_count' ? FontiCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof fonti ? fonti[P] : never
  } 
      : fonti


  type fontiCountArgs = 
    Omit<fontiFindManyArgs, 'select' | 'include'> & {
      select?: FontiCountAggregateInputType | true
    }

  export interface fontiDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Fonti that matches the filter.
     * @param {fontiFindUniqueArgs} args - Arguments to find a Fonti
     * @example
     * // Get one Fonti
     * const fonti = await prisma.fonti.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends fontiFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, fontiFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'fonti'> extends True ? Prisma__fontiClient<fontiGetPayload<T>> : Prisma__fontiClient<fontiGetPayload<T> | null, null>

    /**
     * Find one Fonti that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {fontiFindUniqueOrThrowArgs} args - Arguments to find a Fonti
     * @example
     * // Get one Fonti
     * const fonti = await prisma.fonti.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends fontiFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, fontiFindUniqueOrThrowArgs>
    ): Prisma__fontiClient<fontiGetPayload<T>>

    /**
     * Find the first Fonti that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fontiFindFirstArgs} args - Arguments to find a Fonti
     * @example
     * // Get one Fonti
     * const fonti = await prisma.fonti.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends fontiFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, fontiFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'fonti'> extends True ? Prisma__fontiClient<fontiGetPayload<T>> : Prisma__fontiClient<fontiGetPayload<T> | null, null>

    /**
     * Find the first Fonti that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fontiFindFirstOrThrowArgs} args - Arguments to find a Fonti
     * @example
     * // Get one Fonti
     * const fonti = await prisma.fonti.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends fontiFindFirstOrThrowArgs>(
      args?: SelectSubset<T, fontiFindFirstOrThrowArgs>
    ): Prisma__fontiClient<fontiGetPayload<T>>

    /**
     * Find zero or more Fontis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fontiFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Fontis
     * const fontis = await prisma.fonti.findMany()
     * 
     * // Get first 10 Fontis
     * const fontis = await prisma.fonti.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fontiWithIdOnly = await prisma.fonti.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends fontiFindManyArgs>(
      args?: SelectSubset<T, fontiFindManyArgs>
    ): Prisma.PrismaPromise<Array<fontiGetPayload<T>>>

    /**
     * Create a Fonti.
     * @param {fontiCreateArgs} args - Arguments to create a Fonti.
     * @example
     * // Create one Fonti
     * const Fonti = await prisma.fonti.create({
     *   data: {
     *     // ... data to create a Fonti
     *   }
     * })
     * 
    **/
    create<T extends fontiCreateArgs>(
      args: SelectSubset<T, fontiCreateArgs>
    ): Prisma__fontiClient<fontiGetPayload<T>>

    /**
     * Create many Fontis.
     *     @param {fontiCreateManyArgs} args - Arguments to create many Fontis.
     *     @example
     *     // Create many Fontis
     *     const fonti = await prisma.fonti.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends fontiCreateManyArgs>(
      args?: SelectSubset<T, fontiCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Fonti.
     * @param {fontiDeleteArgs} args - Arguments to delete one Fonti.
     * @example
     * // Delete one Fonti
     * const Fonti = await prisma.fonti.delete({
     *   where: {
     *     // ... filter to delete one Fonti
     *   }
     * })
     * 
    **/
    delete<T extends fontiDeleteArgs>(
      args: SelectSubset<T, fontiDeleteArgs>
    ): Prisma__fontiClient<fontiGetPayload<T>>

    /**
     * Update one Fonti.
     * @param {fontiUpdateArgs} args - Arguments to update one Fonti.
     * @example
     * // Update one Fonti
     * const fonti = await prisma.fonti.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends fontiUpdateArgs>(
      args: SelectSubset<T, fontiUpdateArgs>
    ): Prisma__fontiClient<fontiGetPayload<T>>

    /**
     * Delete zero or more Fontis.
     * @param {fontiDeleteManyArgs} args - Arguments to filter Fontis to delete.
     * @example
     * // Delete a few Fontis
     * const { count } = await prisma.fonti.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends fontiDeleteManyArgs>(
      args?: SelectSubset<T, fontiDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fontis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fontiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Fontis
     * const fonti = await prisma.fonti.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends fontiUpdateManyArgs>(
      args: SelectSubset<T, fontiUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Fonti.
     * @param {fontiUpsertArgs} args - Arguments to update or create a Fonti.
     * @example
     * // Update or create a Fonti
     * const fonti = await prisma.fonti.upsert({
     *   create: {
     *     // ... data to create a Fonti
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fonti we want to update
     *   }
     * })
    **/
    upsert<T extends fontiUpsertArgs>(
      args: SelectSubset<T, fontiUpsertArgs>
    ): Prisma__fontiClient<fontiGetPayload<T>>

    /**
     * Count the number of Fontis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fontiCountArgs} args - Arguments to filter Fontis to count.
     * @example
     * // Count the number of Fontis
     * const count = await prisma.fonti.count({
     *   where: {
     *     // ... the filter for the Fontis we want to count
     *   }
     * })
    **/
    count<T extends fontiCountArgs>(
      args?: Subset<T, fontiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FontiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fonti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FontiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FontiAggregateArgs>(args: Subset<T, FontiAggregateArgs>): Prisma.PrismaPromise<GetFontiAggregateType<T>>

    /**
     * Group by Fonti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FontiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FontiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FontiGroupByArgs['orderBy'] }
        : { orderBy?: FontiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FontiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFontiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for fonti.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__fontiClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    registrorichiedente<T extends fonti$registrorichiedenteArgs= {}>(args?: Subset<T, fonti$registrorichiedenteArgs>): Prisma.PrismaPromise<Array<registrorichiedenteGetPayload<T>>| Null>;

    segnalazione<T extends fonti$segnalazioneArgs= {}>(args?: Subset<T, fonti$segnalazioneArgs>): Prisma.PrismaPromise<Array<segnalazioneGetPayload<T>>| Null>;

    segnalazionestorico<T extends fonti$segnalazionestoricoArgs= {}>(args?: Subset<T, fonti$segnalazionestoricoArgs>): Prisma.PrismaPromise<Array<segnalazionestoricoGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * fonti base type for findUnique actions
   */
  export type fontiFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the fonti
     */
    select?: fontiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: fontiInclude | null
    /**
     * Filter, which fonti to fetch.
     */
    where: fontiWhereUniqueInput
  }

  /**
   * fonti findUnique
   */
  export interface fontiFindUniqueArgs extends fontiFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * fonti findUniqueOrThrow
   */
  export type fontiFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the fonti
     */
    select?: fontiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: fontiInclude | null
    /**
     * Filter, which fonti to fetch.
     */
    where: fontiWhereUniqueInput
  }


  /**
   * fonti base type for findFirst actions
   */
  export type fontiFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the fonti
     */
    select?: fontiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: fontiInclude | null
    /**
     * Filter, which fonti to fetch.
     */
    where?: fontiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fontis to fetch.
     */
    orderBy?: Enumerable<fontiOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fontis.
     */
    cursor?: fontiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fontis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fontis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fontis.
     */
    distinct?: Enumerable<FontiScalarFieldEnum>
  }

  /**
   * fonti findFirst
   */
  export interface fontiFindFirstArgs extends fontiFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * fonti findFirstOrThrow
   */
  export type fontiFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the fonti
     */
    select?: fontiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: fontiInclude | null
    /**
     * Filter, which fonti to fetch.
     */
    where?: fontiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fontis to fetch.
     */
    orderBy?: Enumerable<fontiOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fontis.
     */
    cursor?: fontiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fontis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fontis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fontis.
     */
    distinct?: Enumerable<FontiScalarFieldEnum>
  }


  /**
   * fonti findMany
   */
  export type fontiFindManyArgs = {
    /**
     * Select specific fields to fetch from the fonti
     */
    select?: fontiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: fontiInclude | null
    /**
     * Filter, which fontis to fetch.
     */
    where?: fontiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fontis to fetch.
     */
    orderBy?: Enumerable<fontiOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing fontis.
     */
    cursor?: fontiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fontis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fontis.
     */
    skip?: number
    distinct?: Enumerable<FontiScalarFieldEnum>
  }


  /**
   * fonti create
   */
  export type fontiCreateArgs = {
    /**
     * Select specific fields to fetch from the fonti
     */
    select?: fontiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: fontiInclude | null
    /**
     * The data needed to create a fonti.
     */
    data: XOR<fontiCreateInput, fontiUncheckedCreateInput>
  }


  /**
   * fonti createMany
   */
  export type fontiCreateManyArgs = {
    /**
     * The data used to create many fontis.
     */
    data: Enumerable<fontiCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * fonti update
   */
  export type fontiUpdateArgs = {
    /**
     * Select specific fields to fetch from the fonti
     */
    select?: fontiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: fontiInclude | null
    /**
     * The data needed to update a fonti.
     */
    data: XOR<fontiUpdateInput, fontiUncheckedUpdateInput>
    /**
     * Choose, which fonti to update.
     */
    where: fontiWhereUniqueInput
  }


  /**
   * fonti updateMany
   */
  export type fontiUpdateManyArgs = {
    /**
     * The data used to update fontis.
     */
    data: XOR<fontiUpdateManyMutationInput, fontiUncheckedUpdateManyInput>
    /**
     * Filter which fontis to update
     */
    where?: fontiWhereInput
  }


  /**
   * fonti upsert
   */
  export type fontiUpsertArgs = {
    /**
     * Select specific fields to fetch from the fonti
     */
    select?: fontiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: fontiInclude | null
    /**
     * The filter to search for the fonti to update in case it exists.
     */
    where: fontiWhereUniqueInput
    /**
     * In case the fonti found by the `where` argument doesn't exist, create a new fonti with this data.
     */
    create: XOR<fontiCreateInput, fontiUncheckedCreateInput>
    /**
     * In case the fonti was found with the provided `where` argument, update it with this data.
     */
    update: XOR<fontiUpdateInput, fontiUncheckedUpdateInput>
  }


  /**
   * fonti delete
   */
  export type fontiDeleteArgs = {
    /**
     * Select specific fields to fetch from the fonti
     */
    select?: fontiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: fontiInclude | null
    /**
     * Filter which fonti to delete.
     */
    where: fontiWhereUniqueInput
  }


  /**
   * fonti deleteMany
   */
  export type fontiDeleteManyArgs = {
    /**
     * Filter which fontis to delete
     */
    where?: fontiWhereInput
  }


  /**
   * fonti.registrorichiedente
   */
  export type fonti$registrorichiedenteArgs = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    where?: registrorichiedenteWhereInput
    orderBy?: Enumerable<registrorichiedenteOrderByWithRelationInput>
    cursor?: registrorichiedenteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<RegistrorichiedenteScalarFieldEnum>
  }


  /**
   * fonti.segnalazione
   */
  export type fonti$segnalazioneArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    where?: segnalazioneWhereInput
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    cursor?: segnalazioneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * fonti.segnalazionestorico
   */
  export type fonti$segnalazionestoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    where?: segnalazionestoricoWhereInput
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    cursor?: segnalazionestoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * fonti without action
   */
  export type fontiArgs = {
    /**
     * Select specific fields to fetch from the fonti
     */
    select?: fontiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: fontiInclude | null
  }



  /**
   * Model gruppo
   */


  export type AggregateGruppo = {
    _count: GruppoCountAggregateOutputType | null
    _avg: GruppoAvgAggregateOutputType | null
    _sum: GruppoSumAggregateOutputType | null
    _min: GruppoMinAggregateOutputType | null
    _max: GruppoMaxAggregateOutputType | null
  }

  export type GruppoAvgAggregateOutputType = {
    id: number | null
    idAppalto: number | null
  }

  export type GruppoSumAggregateOutputType = {
    id: number | null
    idAppalto: number | null
  }

  export type GruppoMinAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    descrizione: string | null
    dataModifica: string | null
  }

  export type GruppoMaxAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    descrizione: string | null
    dataModifica: string | null
  }

  export type GruppoCountAggregateOutputType = {
    id: number
    idAppalto: number
    descrizione: number
    dataModifica: number
    _all: number
  }


  export type GruppoAvgAggregateInputType = {
    id?: true
    idAppalto?: true
  }

  export type GruppoSumAggregateInputType = {
    id?: true
    idAppalto?: true
  }

  export type GruppoMinAggregateInputType = {
    id?: true
    idAppalto?: true
    descrizione?: true
    dataModifica?: true
  }

  export type GruppoMaxAggregateInputType = {
    id?: true
    idAppalto?: true
    descrizione?: true
    dataModifica?: true
  }

  export type GruppoCountAggregateInputType = {
    id?: true
    idAppalto?: true
    descrizione?: true
    dataModifica?: true
    _all?: true
  }

  export type GruppoAggregateArgs = {
    /**
     * Filter which gruppo to aggregate.
     */
    where?: gruppoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gruppos to fetch.
     */
    orderBy?: Enumerable<gruppoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: gruppoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gruppos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gruppos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gruppos
    **/
    _count?: true | GruppoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GruppoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GruppoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GruppoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GruppoMaxAggregateInputType
  }

  export type GetGruppoAggregateType<T extends GruppoAggregateArgs> = {
        [P in keyof T & keyof AggregateGruppo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGruppo[P]>
      : GetScalarType<T[P], AggregateGruppo[P]>
  }




  export type GruppoGroupByArgs = {
    where?: gruppoWhereInput
    orderBy?: Enumerable<gruppoOrderByWithAggregationInput>
    by: GruppoScalarFieldEnum[]
    having?: gruppoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GruppoCountAggregateInputType | true
    _avg?: GruppoAvgAggregateInputType
    _sum?: GruppoSumAggregateInputType
    _min?: GruppoMinAggregateInputType
    _max?: GruppoMaxAggregateInputType
  }


  export type GruppoGroupByOutputType = {
    id: number
    idAppalto: number | null
    descrizione: string | null
    dataModifica: string | null
    _count: GruppoCountAggregateOutputType | null
    _avg: GruppoAvgAggregateOutputType | null
    _sum: GruppoSumAggregateOutputType | null
    _min: GruppoMinAggregateOutputType | null
    _max: GruppoMaxAggregateOutputType | null
  }

  type GetGruppoGroupByPayload<T extends GruppoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<GruppoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GruppoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GruppoGroupByOutputType[P]>
            : GetScalarType<T[P], GruppoGroupByOutputType[P]>
        }
      >
    >


  export type gruppoSelect = {
    id?: boolean
    idAppalto?: boolean
    descrizione?: boolean
    dataModifica?: boolean
    utenti?: boolean | gruppo$utentiArgs
    _count?: boolean | GruppoCountOutputTypeArgs
  }


  export type gruppoInclude = {
    utenti?: boolean | gruppo$utentiArgs
    _count?: boolean | GruppoCountOutputTypeArgs
  }

  export type gruppoGetPayload<S extends boolean | null | undefined | gruppoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? gruppo :
    S extends undefined ? never :
    S extends { include: any } & (gruppoArgs | gruppoFindManyArgs)
    ? gruppo  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'utenti' ? Array < utentiGetPayload<S['include'][P]>>  :
        P extends '_count' ? GruppoCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (gruppoArgs | gruppoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'utenti' ? Array < utentiGetPayload<S['select'][P]>>  :
        P extends '_count' ? GruppoCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof gruppo ? gruppo[P] : never
  } 
      : gruppo


  type gruppoCountArgs = 
    Omit<gruppoFindManyArgs, 'select' | 'include'> & {
      select?: GruppoCountAggregateInputType | true
    }

  export interface gruppoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Gruppo that matches the filter.
     * @param {gruppoFindUniqueArgs} args - Arguments to find a Gruppo
     * @example
     * // Get one Gruppo
     * const gruppo = await prisma.gruppo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gruppoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gruppoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gruppo'> extends True ? Prisma__gruppoClient<gruppoGetPayload<T>> : Prisma__gruppoClient<gruppoGetPayload<T> | null, null>

    /**
     * Find one Gruppo that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {gruppoFindUniqueOrThrowArgs} args - Arguments to find a Gruppo
     * @example
     * // Get one Gruppo
     * const gruppo = await prisma.gruppo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends gruppoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, gruppoFindUniqueOrThrowArgs>
    ): Prisma__gruppoClient<gruppoGetPayload<T>>

    /**
     * Find the first Gruppo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gruppoFindFirstArgs} args - Arguments to find a Gruppo
     * @example
     * // Get one Gruppo
     * const gruppo = await prisma.gruppo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gruppoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gruppoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gruppo'> extends True ? Prisma__gruppoClient<gruppoGetPayload<T>> : Prisma__gruppoClient<gruppoGetPayload<T> | null, null>

    /**
     * Find the first Gruppo that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gruppoFindFirstOrThrowArgs} args - Arguments to find a Gruppo
     * @example
     * // Get one Gruppo
     * const gruppo = await prisma.gruppo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends gruppoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, gruppoFindFirstOrThrowArgs>
    ): Prisma__gruppoClient<gruppoGetPayload<T>>

    /**
     * Find zero or more Gruppos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gruppoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gruppos
     * const gruppos = await prisma.gruppo.findMany()
     * 
     * // Get first 10 Gruppos
     * const gruppos = await prisma.gruppo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const gruppoWithIdOnly = await prisma.gruppo.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends gruppoFindManyArgs>(
      args?: SelectSubset<T, gruppoFindManyArgs>
    ): Prisma.PrismaPromise<Array<gruppoGetPayload<T>>>

    /**
     * Create a Gruppo.
     * @param {gruppoCreateArgs} args - Arguments to create a Gruppo.
     * @example
     * // Create one Gruppo
     * const Gruppo = await prisma.gruppo.create({
     *   data: {
     *     // ... data to create a Gruppo
     *   }
     * })
     * 
    **/
    create<T extends gruppoCreateArgs>(
      args: SelectSubset<T, gruppoCreateArgs>
    ): Prisma__gruppoClient<gruppoGetPayload<T>>

    /**
     * Create many Gruppos.
     *     @param {gruppoCreateManyArgs} args - Arguments to create many Gruppos.
     *     @example
     *     // Create many Gruppos
     *     const gruppo = await prisma.gruppo.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gruppoCreateManyArgs>(
      args?: SelectSubset<T, gruppoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Gruppo.
     * @param {gruppoDeleteArgs} args - Arguments to delete one Gruppo.
     * @example
     * // Delete one Gruppo
     * const Gruppo = await prisma.gruppo.delete({
     *   where: {
     *     // ... filter to delete one Gruppo
     *   }
     * })
     * 
    **/
    delete<T extends gruppoDeleteArgs>(
      args: SelectSubset<T, gruppoDeleteArgs>
    ): Prisma__gruppoClient<gruppoGetPayload<T>>

    /**
     * Update one Gruppo.
     * @param {gruppoUpdateArgs} args - Arguments to update one Gruppo.
     * @example
     * // Update one Gruppo
     * const gruppo = await prisma.gruppo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gruppoUpdateArgs>(
      args: SelectSubset<T, gruppoUpdateArgs>
    ): Prisma__gruppoClient<gruppoGetPayload<T>>

    /**
     * Delete zero or more Gruppos.
     * @param {gruppoDeleteManyArgs} args - Arguments to filter Gruppos to delete.
     * @example
     * // Delete a few Gruppos
     * const { count } = await prisma.gruppo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gruppoDeleteManyArgs>(
      args?: SelectSubset<T, gruppoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gruppos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gruppoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gruppos
     * const gruppo = await prisma.gruppo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gruppoUpdateManyArgs>(
      args: SelectSubset<T, gruppoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Gruppo.
     * @param {gruppoUpsertArgs} args - Arguments to update or create a Gruppo.
     * @example
     * // Update or create a Gruppo
     * const gruppo = await prisma.gruppo.upsert({
     *   create: {
     *     // ... data to create a Gruppo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gruppo we want to update
     *   }
     * })
    **/
    upsert<T extends gruppoUpsertArgs>(
      args: SelectSubset<T, gruppoUpsertArgs>
    ): Prisma__gruppoClient<gruppoGetPayload<T>>

    /**
     * Count the number of Gruppos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gruppoCountArgs} args - Arguments to filter Gruppos to count.
     * @example
     * // Count the number of Gruppos
     * const count = await prisma.gruppo.count({
     *   where: {
     *     // ... the filter for the Gruppos we want to count
     *   }
     * })
    **/
    count<T extends gruppoCountArgs>(
      args?: Subset<T, gruppoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GruppoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gruppo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GruppoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GruppoAggregateArgs>(args: Subset<T, GruppoAggregateArgs>): Prisma.PrismaPromise<GetGruppoAggregateType<T>>

    /**
     * Group by Gruppo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GruppoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GruppoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GruppoGroupByArgs['orderBy'] }
        : { orderBy?: GruppoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GruppoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGruppoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for gruppo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gruppoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    utenti<T extends gruppo$utentiArgs= {}>(args?: Subset<T, gruppo$utentiArgs>): Prisma.PrismaPromise<Array<utentiGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * gruppo base type for findUnique actions
   */
  export type gruppoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the gruppo
     */
    select?: gruppoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gruppoInclude | null
    /**
     * Filter, which gruppo to fetch.
     */
    where: gruppoWhereUniqueInput
  }

  /**
   * gruppo findUnique
   */
  export interface gruppoFindUniqueArgs extends gruppoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * gruppo findUniqueOrThrow
   */
  export type gruppoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the gruppo
     */
    select?: gruppoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gruppoInclude | null
    /**
     * Filter, which gruppo to fetch.
     */
    where: gruppoWhereUniqueInput
  }


  /**
   * gruppo base type for findFirst actions
   */
  export type gruppoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the gruppo
     */
    select?: gruppoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gruppoInclude | null
    /**
     * Filter, which gruppo to fetch.
     */
    where?: gruppoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gruppos to fetch.
     */
    orderBy?: Enumerable<gruppoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gruppos.
     */
    cursor?: gruppoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gruppos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gruppos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gruppos.
     */
    distinct?: Enumerable<GruppoScalarFieldEnum>
  }

  /**
   * gruppo findFirst
   */
  export interface gruppoFindFirstArgs extends gruppoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * gruppo findFirstOrThrow
   */
  export type gruppoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the gruppo
     */
    select?: gruppoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gruppoInclude | null
    /**
     * Filter, which gruppo to fetch.
     */
    where?: gruppoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gruppos to fetch.
     */
    orderBy?: Enumerable<gruppoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gruppos.
     */
    cursor?: gruppoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gruppos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gruppos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gruppos.
     */
    distinct?: Enumerable<GruppoScalarFieldEnum>
  }


  /**
   * gruppo findMany
   */
  export type gruppoFindManyArgs = {
    /**
     * Select specific fields to fetch from the gruppo
     */
    select?: gruppoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gruppoInclude | null
    /**
     * Filter, which gruppos to fetch.
     */
    where?: gruppoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gruppos to fetch.
     */
    orderBy?: Enumerable<gruppoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gruppos.
     */
    cursor?: gruppoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gruppos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gruppos.
     */
    skip?: number
    distinct?: Enumerable<GruppoScalarFieldEnum>
  }


  /**
   * gruppo create
   */
  export type gruppoCreateArgs = {
    /**
     * Select specific fields to fetch from the gruppo
     */
    select?: gruppoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gruppoInclude | null
    /**
     * The data needed to create a gruppo.
     */
    data: XOR<gruppoCreateInput, gruppoUncheckedCreateInput>
  }


  /**
   * gruppo createMany
   */
  export type gruppoCreateManyArgs = {
    /**
     * The data used to create many gruppos.
     */
    data: Enumerable<gruppoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gruppo update
   */
  export type gruppoUpdateArgs = {
    /**
     * Select specific fields to fetch from the gruppo
     */
    select?: gruppoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gruppoInclude | null
    /**
     * The data needed to update a gruppo.
     */
    data: XOR<gruppoUpdateInput, gruppoUncheckedUpdateInput>
    /**
     * Choose, which gruppo to update.
     */
    where: gruppoWhereUniqueInput
  }


  /**
   * gruppo updateMany
   */
  export type gruppoUpdateManyArgs = {
    /**
     * The data used to update gruppos.
     */
    data: XOR<gruppoUpdateManyMutationInput, gruppoUncheckedUpdateManyInput>
    /**
     * Filter which gruppos to update
     */
    where?: gruppoWhereInput
  }


  /**
   * gruppo upsert
   */
  export type gruppoUpsertArgs = {
    /**
     * Select specific fields to fetch from the gruppo
     */
    select?: gruppoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gruppoInclude | null
    /**
     * The filter to search for the gruppo to update in case it exists.
     */
    where: gruppoWhereUniqueInput
    /**
     * In case the gruppo found by the `where` argument doesn't exist, create a new gruppo with this data.
     */
    create: XOR<gruppoCreateInput, gruppoUncheckedCreateInput>
    /**
     * In case the gruppo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<gruppoUpdateInput, gruppoUncheckedUpdateInput>
  }


  /**
   * gruppo delete
   */
  export type gruppoDeleteArgs = {
    /**
     * Select specific fields to fetch from the gruppo
     */
    select?: gruppoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gruppoInclude | null
    /**
     * Filter which gruppo to delete.
     */
    where: gruppoWhereUniqueInput
  }


  /**
   * gruppo deleteMany
   */
  export type gruppoDeleteManyArgs = {
    /**
     * Filter which gruppos to delete
     */
    where?: gruppoWhereInput
  }


  /**
   * gruppo.utenti
   */
  export type gruppo$utentiArgs = {
    /**
     * Select specific fields to fetch from the utenti
     */
    select?: utentiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: utentiInclude | null
    where?: utentiWhereInput
    orderBy?: Enumerable<utentiOrderByWithRelationInput>
    cursor?: utentiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UtentiScalarFieldEnum>
  }


  /**
   * gruppo without action
   */
  export type gruppoArgs = {
    /**
     * Select specific fields to fetch from the gruppo
     */
    select?: gruppoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gruppoInclude | null
  }



  /**
   * Model impresa
   */


  export type AggregateImpresa = {
    _count: ImpresaCountAggregateOutputType | null
    _avg: ImpresaAvgAggregateOutputType | null
    _sum: ImpresaSumAggregateOutputType | null
    _min: ImpresaMinAggregateOutputType | null
    _max: ImpresaMaxAggregateOutputType | null
  }

  export type ImpresaAvgAggregateOutputType = {
    id: number | null
  }

  export type ImpresaSumAggregateOutputType = {
    id: number | null
  }

  export type ImpresaMinAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type ImpresaMaxAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type ImpresaCountAggregateOutputType = {
    id: number
    value: number
    _all: number
  }


  export type ImpresaAvgAggregateInputType = {
    id?: true
  }

  export type ImpresaSumAggregateInputType = {
    id?: true
  }

  export type ImpresaMinAggregateInputType = {
    id?: true
    value?: true
  }

  export type ImpresaMaxAggregateInputType = {
    id?: true
    value?: true
  }

  export type ImpresaCountAggregateInputType = {
    id?: true
    value?: true
    _all?: true
  }

  export type ImpresaAggregateArgs = {
    /**
     * Filter which impresa to aggregate.
     */
    where?: impresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of impresas to fetch.
     */
    orderBy?: Enumerable<impresaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: impresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` impresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` impresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned impresas
    **/
    _count?: true | ImpresaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ImpresaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ImpresaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImpresaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImpresaMaxAggregateInputType
  }

  export type GetImpresaAggregateType<T extends ImpresaAggregateArgs> = {
        [P in keyof T & keyof AggregateImpresa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImpresa[P]>
      : GetScalarType<T[P], AggregateImpresa[P]>
  }




  export type ImpresaGroupByArgs = {
    where?: impresaWhereInput
    orderBy?: Enumerable<impresaOrderByWithAggregationInput>
    by: ImpresaScalarFieldEnum[]
    having?: impresaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImpresaCountAggregateInputType | true
    _avg?: ImpresaAvgAggregateInputType
    _sum?: ImpresaSumAggregateInputType
    _min?: ImpresaMinAggregateInputType
    _max?: ImpresaMaxAggregateInputType
  }


  export type ImpresaGroupByOutputType = {
    id: number
    value: string | null
    _count: ImpresaCountAggregateOutputType | null
    _avg: ImpresaAvgAggregateOutputType | null
    _sum: ImpresaSumAggregateOutputType | null
    _min: ImpresaMinAggregateOutputType | null
    _max: ImpresaMaxAggregateOutputType | null
  }

  type GetImpresaGroupByPayload<T extends ImpresaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<ImpresaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImpresaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImpresaGroupByOutputType[P]>
            : GetScalarType<T[P], ImpresaGroupByOutputType[P]>
        }
      >
    >


  export type impresaSelect = {
    id?: boolean
    value?: boolean
    lavoro?: boolean | impresa$lavoroArgs
    lavorostorico?: boolean | impresa$lavorostoricoArgs
    _count?: boolean | ImpresaCountOutputTypeArgs
  }


  export type impresaInclude = {
    lavoro?: boolean | impresa$lavoroArgs
    lavorostorico?: boolean | impresa$lavorostoricoArgs
    _count?: boolean | ImpresaCountOutputTypeArgs
  }

  export type impresaGetPayload<S extends boolean | null | undefined | impresaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? impresa :
    S extends undefined ? never :
    S extends { include: any } & (impresaArgs | impresaFindManyArgs)
    ? impresa  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'lavoro' ? Array < lavoroGetPayload<S['include'][P]>>  :
        P extends 'lavorostorico' ? Array < lavorostoricoGetPayload<S['include'][P]>>  :
        P extends '_count' ? ImpresaCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (impresaArgs | impresaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'lavoro' ? Array < lavoroGetPayload<S['select'][P]>>  :
        P extends 'lavorostorico' ? Array < lavorostoricoGetPayload<S['select'][P]>>  :
        P extends '_count' ? ImpresaCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof impresa ? impresa[P] : never
  } 
      : impresa


  type impresaCountArgs = 
    Omit<impresaFindManyArgs, 'select' | 'include'> & {
      select?: ImpresaCountAggregateInputType | true
    }

  export interface impresaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Impresa that matches the filter.
     * @param {impresaFindUniqueArgs} args - Arguments to find a Impresa
     * @example
     * // Get one Impresa
     * const impresa = await prisma.impresa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends impresaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, impresaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'impresa'> extends True ? Prisma__impresaClient<impresaGetPayload<T>> : Prisma__impresaClient<impresaGetPayload<T> | null, null>

    /**
     * Find one Impresa that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {impresaFindUniqueOrThrowArgs} args - Arguments to find a Impresa
     * @example
     * // Get one Impresa
     * const impresa = await prisma.impresa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends impresaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, impresaFindUniqueOrThrowArgs>
    ): Prisma__impresaClient<impresaGetPayload<T>>

    /**
     * Find the first Impresa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {impresaFindFirstArgs} args - Arguments to find a Impresa
     * @example
     * // Get one Impresa
     * const impresa = await prisma.impresa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends impresaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, impresaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'impresa'> extends True ? Prisma__impresaClient<impresaGetPayload<T>> : Prisma__impresaClient<impresaGetPayload<T> | null, null>

    /**
     * Find the first Impresa that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {impresaFindFirstOrThrowArgs} args - Arguments to find a Impresa
     * @example
     * // Get one Impresa
     * const impresa = await prisma.impresa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends impresaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, impresaFindFirstOrThrowArgs>
    ): Prisma__impresaClient<impresaGetPayload<T>>

    /**
     * Find zero or more Impresas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {impresaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Impresas
     * const impresas = await prisma.impresa.findMany()
     * 
     * // Get first 10 Impresas
     * const impresas = await prisma.impresa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const impresaWithIdOnly = await prisma.impresa.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends impresaFindManyArgs>(
      args?: SelectSubset<T, impresaFindManyArgs>
    ): Prisma.PrismaPromise<Array<impresaGetPayload<T>>>

    /**
     * Create a Impresa.
     * @param {impresaCreateArgs} args - Arguments to create a Impresa.
     * @example
     * // Create one Impresa
     * const Impresa = await prisma.impresa.create({
     *   data: {
     *     // ... data to create a Impresa
     *   }
     * })
     * 
    **/
    create<T extends impresaCreateArgs>(
      args: SelectSubset<T, impresaCreateArgs>
    ): Prisma__impresaClient<impresaGetPayload<T>>

    /**
     * Create many Impresas.
     *     @param {impresaCreateManyArgs} args - Arguments to create many Impresas.
     *     @example
     *     // Create many Impresas
     *     const impresa = await prisma.impresa.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends impresaCreateManyArgs>(
      args?: SelectSubset<T, impresaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Impresa.
     * @param {impresaDeleteArgs} args - Arguments to delete one Impresa.
     * @example
     * // Delete one Impresa
     * const Impresa = await prisma.impresa.delete({
     *   where: {
     *     // ... filter to delete one Impresa
     *   }
     * })
     * 
    **/
    delete<T extends impresaDeleteArgs>(
      args: SelectSubset<T, impresaDeleteArgs>
    ): Prisma__impresaClient<impresaGetPayload<T>>

    /**
     * Update one Impresa.
     * @param {impresaUpdateArgs} args - Arguments to update one Impresa.
     * @example
     * // Update one Impresa
     * const impresa = await prisma.impresa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends impresaUpdateArgs>(
      args: SelectSubset<T, impresaUpdateArgs>
    ): Prisma__impresaClient<impresaGetPayload<T>>

    /**
     * Delete zero or more Impresas.
     * @param {impresaDeleteManyArgs} args - Arguments to filter Impresas to delete.
     * @example
     * // Delete a few Impresas
     * const { count } = await prisma.impresa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends impresaDeleteManyArgs>(
      args?: SelectSubset<T, impresaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Impresas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {impresaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Impresas
     * const impresa = await prisma.impresa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends impresaUpdateManyArgs>(
      args: SelectSubset<T, impresaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Impresa.
     * @param {impresaUpsertArgs} args - Arguments to update or create a Impresa.
     * @example
     * // Update or create a Impresa
     * const impresa = await prisma.impresa.upsert({
     *   create: {
     *     // ... data to create a Impresa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Impresa we want to update
     *   }
     * })
    **/
    upsert<T extends impresaUpsertArgs>(
      args: SelectSubset<T, impresaUpsertArgs>
    ): Prisma__impresaClient<impresaGetPayload<T>>

    /**
     * Count the number of Impresas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {impresaCountArgs} args - Arguments to filter Impresas to count.
     * @example
     * // Count the number of Impresas
     * const count = await prisma.impresa.count({
     *   where: {
     *     // ... the filter for the Impresas we want to count
     *   }
     * })
    **/
    count<T extends impresaCountArgs>(
      args?: Subset<T, impresaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImpresaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Impresa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImpresaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImpresaAggregateArgs>(args: Subset<T, ImpresaAggregateArgs>): Prisma.PrismaPromise<GetImpresaAggregateType<T>>

    /**
     * Group by Impresa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImpresaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ImpresaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ImpresaGroupByArgs['orderBy'] }
        : { orderBy?: ImpresaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ImpresaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImpresaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for impresa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__impresaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    lavoro<T extends impresa$lavoroArgs= {}>(args?: Subset<T, impresa$lavoroArgs>): Prisma.PrismaPromise<Array<lavoroGetPayload<T>>| Null>;

    lavorostorico<T extends impresa$lavorostoricoArgs= {}>(args?: Subset<T, impresa$lavorostoricoArgs>): Prisma.PrismaPromise<Array<lavorostoricoGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * impresa base type for findUnique actions
   */
  export type impresaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the impresa
     */
    select?: impresaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: impresaInclude | null
    /**
     * Filter, which impresa to fetch.
     */
    where: impresaWhereUniqueInput
  }

  /**
   * impresa findUnique
   */
  export interface impresaFindUniqueArgs extends impresaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * impresa findUniqueOrThrow
   */
  export type impresaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the impresa
     */
    select?: impresaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: impresaInclude | null
    /**
     * Filter, which impresa to fetch.
     */
    where: impresaWhereUniqueInput
  }


  /**
   * impresa base type for findFirst actions
   */
  export type impresaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the impresa
     */
    select?: impresaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: impresaInclude | null
    /**
     * Filter, which impresa to fetch.
     */
    where?: impresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of impresas to fetch.
     */
    orderBy?: Enumerable<impresaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for impresas.
     */
    cursor?: impresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` impresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` impresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of impresas.
     */
    distinct?: Enumerable<ImpresaScalarFieldEnum>
  }

  /**
   * impresa findFirst
   */
  export interface impresaFindFirstArgs extends impresaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * impresa findFirstOrThrow
   */
  export type impresaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the impresa
     */
    select?: impresaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: impresaInclude | null
    /**
     * Filter, which impresa to fetch.
     */
    where?: impresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of impresas to fetch.
     */
    orderBy?: Enumerable<impresaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for impresas.
     */
    cursor?: impresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` impresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` impresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of impresas.
     */
    distinct?: Enumerable<ImpresaScalarFieldEnum>
  }


  /**
   * impresa findMany
   */
  export type impresaFindManyArgs = {
    /**
     * Select specific fields to fetch from the impresa
     */
    select?: impresaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: impresaInclude | null
    /**
     * Filter, which impresas to fetch.
     */
    where?: impresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of impresas to fetch.
     */
    orderBy?: Enumerable<impresaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing impresas.
     */
    cursor?: impresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` impresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` impresas.
     */
    skip?: number
    distinct?: Enumerable<ImpresaScalarFieldEnum>
  }


  /**
   * impresa create
   */
  export type impresaCreateArgs = {
    /**
     * Select specific fields to fetch from the impresa
     */
    select?: impresaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: impresaInclude | null
    /**
     * The data needed to create a impresa.
     */
    data: XOR<impresaCreateInput, impresaUncheckedCreateInput>
  }


  /**
   * impresa createMany
   */
  export type impresaCreateManyArgs = {
    /**
     * The data used to create many impresas.
     */
    data: Enumerable<impresaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * impresa update
   */
  export type impresaUpdateArgs = {
    /**
     * Select specific fields to fetch from the impresa
     */
    select?: impresaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: impresaInclude | null
    /**
     * The data needed to update a impresa.
     */
    data: XOR<impresaUpdateInput, impresaUncheckedUpdateInput>
    /**
     * Choose, which impresa to update.
     */
    where: impresaWhereUniqueInput
  }


  /**
   * impresa updateMany
   */
  export type impresaUpdateManyArgs = {
    /**
     * The data used to update impresas.
     */
    data: XOR<impresaUpdateManyMutationInput, impresaUncheckedUpdateManyInput>
    /**
     * Filter which impresas to update
     */
    where?: impresaWhereInput
  }


  /**
   * impresa upsert
   */
  export type impresaUpsertArgs = {
    /**
     * Select specific fields to fetch from the impresa
     */
    select?: impresaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: impresaInclude | null
    /**
     * The filter to search for the impresa to update in case it exists.
     */
    where: impresaWhereUniqueInput
    /**
     * In case the impresa found by the `where` argument doesn't exist, create a new impresa with this data.
     */
    create: XOR<impresaCreateInput, impresaUncheckedCreateInput>
    /**
     * In case the impresa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<impresaUpdateInput, impresaUncheckedUpdateInput>
  }


  /**
   * impresa delete
   */
  export type impresaDeleteArgs = {
    /**
     * Select specific fields to fetch from the impresa
     */
    select?: impresaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: impresaInclude | null
    /**
     * Filter which impresa to delete.
     */
    where: impresaWhereUniqueInput
  }


  /**
   * impresa deleteMany
   */
  export type impresaDeleteManyArgs = {
    /**
     * Filter which impresas to delete
     */
    where?: impresaWhereInput
  }


  /**
   * impresa.lavoro
   */
  export type impresa$lavoroArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    where?: lavoroWhereInput
    orderBy?: Enumerable<lavoroOrderByWithRelationInput>
    cursor?: lavoroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LavoroScalarFieldEnum>
  }


  /**
   * impresa.lavorostorico
   */
  export type impresa$lavorostoricoArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    where?: lavorostoricoWhereInput
    orderBy?: Enumerable<lavorostoricoOrderByWithRelationInput>
    cursor?: lavorostoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LavorostoricoScalarFieldEnum>
  }


  /**
   * impresa without action
   */
  export type impresaArgs = {
    /**
     * Select specific fields to fetch from the impresa
     */
    select?: impresaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: impresaInclude | null
  }



  /**
   * Model lavoro
   */


  export type AggregateLavoro = {
    _count: LavoroCountAggregateOutputType | null
    _avg: LavoroAvgAggregateOutputType | null
    _sum: LavoroSumAggregateOutputType | null
    _min: LavoroMinAggregateOutputType | null
    _max: LavoroMaxAggregateOutputType | null
  }

  export type LavoroAvgAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idEvento: number | null
    idPratica: number | null
    idPOI: number | null
    idUtente: number | null
    categoriaLavoro: number | null
    dettaglioLavoro: number | null
    contabilitaLavoro: number | null
    attrezzaturaLavoro: number | null
    mezzoLavoro: number | null
    personaleLavoro: number | null
    idUtenteStato: number | null
    sospeso: number | null
    tempo_sospensione: number | null
    impresaEsecutrice: number | null
  }

  export type LavoroSumAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idEvento: number | null
    idPratica: number | null
    idPOI: number | null
    idUtente: number | null
    categoriaLavoro: number | null
    dettaglioLavoro: number | null
    contabilitaLavoro: number | null
    attrezzaturaLavoro: number | null
    mezzoLavoro: number | null
    personaleLavoro: number | null
    idUtenteStato: number | null
    sospeso: number | null
    tempo_sospensione: number | null
    impresaEsecutrice: number | null
  }

  export type LavoroMinAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idEvento: number | null
    idPratica: number | null
    idPOI: number | null
    idUtente: number | null
    dataCreazione: string | null
    dataModifica: string | null
    dataChiusura: string | null
    localizzazioneDichiarata: string | null
    categoriaLavoro: number | null
    dettaglioLavoro: number | null
    noteLavoro: string | null
    contabilitaLavoro: number | null
    attrezzaturaLavoro: number | null
    mezzoLavoro: number | null
    personaleLavoro: number | null
    dataModificaStato: string | null
    stato: string | null
    notaStato: string | null
    idUtenteStato: number | null
    localizzazioneDichiarataQuartiere: string | null
    statoCorrenteLavoro: string | null
    del: string | null
    dataInizioProgrammata: string | null
    dataInizioEffettiva: string | null
    dataInizioMassima: string | null
    dataFineProgrammata: string | null
    dataFineEffettiva: string | null
    dataFineMassima: string | null
    delOggettiCatasto: string | null
    quantita: string | null
    operatore: string | null
    sospeso: number | null
    dataora_ini_sospensione: string | null
    dataora_fine_sospensione: string | null
    tempo_sospensione: number | null
    note_sospensione: string | null
    impresaEsecutrice: number | null
    segnaleticatemporanea: string | null
    tipolavoro: string | null
    statoMessaInSicurezza: string | null
    dataMessaInSicurezza: string | null
    notePubbliche: string | null
  }

  export type LavoroMaxAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idEvento: number | null
    idPratica: number | null
    idPOI: number | null
    idUtente: number | null
    dataCreazione: string | null
    dataModifica: string | null
    dataChiusura: string | null
    localizzazioneDichiarata: string | null
    categoriaLavoro: number | null
    dettaglioLavoro: number | null
    noteLavoro: string | null
    contabilitaLavoro: number | null
    attrezzaturaLavoro: number | null
    mezzoLavoro: number | null
    personaleLavoro: number | null
    dataModificaStato: string | null
    stato: string | null
    notaStato: string | null
    idUtenteStato: number | null
    localizzazioneDichiarataQuartiere: string | null
    statoCorrenteLavoro: string | null
    del: string | null
    dataInizioProgrammata: string | null
    dataInizioEffettiva: string | null
    dataInizioMassima: string | null
    dataFineProgrammata: string | null
    dataFineEffettiva: string | null
    dataFineMassima: string | null
    delOggettiCatasto: string | null
    quantita: string | null
    operatore: string | null
    sospeso: number | null
    dataora_ini_sospensione: string | null
    dataora_fine_sospensione: string | null
    tempo_sospensione: number | null
    note_sospensione: string | null
    impresaEsecutrice: number | null
    segnaleticatemporanea: string | null
    tipolavoro: string | null
    statoMessaInSicurezza: string | null
    dataMessaInSicurezza: string | null
    notePubbliche: string | null
  }

  export type LavoroCountAggregateOutputType = {
    id: number
    idAppalto: number
    idEvento: number
    idPratica: number
    idPOI: number
    idUtente: number
    dataCreazione: number
    dataModifica: number
    dataChiusura: number
    localizzazioneDichiarata: number
    categoriaLavoro: number
    dettaglioLavoro: number
    noteLavoro: number
    contabilitaLavoro: number
    attrezzaturaLavoro: number
    mezzoLavoro: number
    personaleLavoro: number
    dataModificaStato: number
    stato: number
    notaStato: number
    idUtenteStato: number
    localizzazioneDichiarataQuartiere: number
    statoCorrenteLavoro: number
    del: number
    dataInizioProgrammata: number
    dataInizioEffettiva: number
    dataInizioMassima: number
    dataFineProgrammata: number
    dataFineEffettiva: number
    dataFineMassima: number
    delOggettiCatasto: number
    quantita: number
    operatore: number
    sospeso: number
    dataora_ini_sospensione: number
    dataora_fine_sospensione: number
    tempo_sospensione: number
    note_sospensione: number
    impresaEsecutrice: number
    segnaleticatemporanea: number
    tipolavoro: number
    statoMessaInSicurezza: number
    dataMessaInSicurezza: number
    notePubbliche: number
    _all: number
  }


  export type LavoroAvgAggregateInputType = {
    id?: true
    idAppalto?: true
    idEvento?: true
    idPratica?: true
    idPOI?: true
    idUtente?: true
    categoriaLavoro?: true
    dettaglioLavoro?: true
    contabilitaLavoro?: true
    attrezzaturaLavoro?: true
    mezzoLavoro?: true
    personaleLavoro?: true
    idUtenteStato?: true
    sospeso?: true
    tempo_sospensione?: true
    impresaEsecutrice?: true
  }

  export type LavoroSumAggregateInputType = {
    id?: true
    idAppalto?: true
    idEvento?: true
    idPratica?: true
    idPOI?: true
    idUtente?: true
    categoriaLavoro?: true
    dettaglioLavoro?: true
    contabilitaLavoro?: true
    attrezzaturaLavoro?: true
    mezzoLavoro?: true
    personaleLavoro?: true
    idUtenteStato?: true
    sospeso?: true
    tempo_sospensione?: true
    impresaEsecutrice?: true
  }

  export type LavoroMinAggregateInputType = {
    id?: true
    idAppalto?: true
    idEvento?: true
    idPratica?: true
    idPOI?: true
    idUtente?: true
    dataCreazione?: true
    dataModifica?: true
    dataChiusura?: true
    localizzazioneDichiarata?: true
    categoriaLavoro?: true
    dettaglioLavoro?: true
    noteLavoro?: true
    contabilitaLavoro?: true
    attrezzaturaLavoro?: true
    mezzoLavoro?: true
    personaleLavoro?: true
    dataModificaStato?: true
    stato?: true
    notaStato?: true
    idUtenteStato?: true
    localizzazioneDichiarataQuartiere?: true
    statoCorrenteLavoro?: true
    del?: true
    dataInizioProgrammata?: true
    dataInizioEffettiva?: true
    dataInizioMassima?: true
    dataFineProgrammata?: true
    dataFineEffettiva?: true
    dataFineMassima?: true
    delOggettiCatasto?: true
    quantita?: true
    operatore?: true
    sospeso?: true
    dataora_ini_sospensione?: true
    dataora_fine_sospensione?: true
    tempo_sospensione?: true
    note_sospensione?: true
    impresaEsecutrice?: true
    segnaleticatemporanea?: true
    tipolavoro?: true
    statoMessaInSicurezza?: true
    dataMessaInSicurezza?: true
    notePubbliche?: true
  }

  export type LavoroMaxAggregateInputType = {
    id?: true
    idAppalto?: true
    idEvento?: true
    idPratica?: true
    idPOI?: true
    idUtente?: true
    dataCreazione?: true
    dataModifica?: true
    dataChiusura?: true
    localizzazioneDichiarata?: true
    categoriaLavoro?: true
    dettaglioLavoro?: true
    noteLavoro?: true
    contabilitaLavoro?: true
    attrezzaturaLavoro?: true
    mezzoLavoro?: true
    personaleLavoro?: true
    dataModificaStato?: true
    stato?: true
    notaStato?: true
    idUtenteStato?: true
    localizzazioneDichiarataQuartiere?: true
    statoCorrenteLavoro?: true
    del?: true
    dataInizioProgrammata?: true
    dataInizioEffettiva?: true
    dataInizioMassima?: true
    dataFineProgrammata?: true
    dataFineEffettiva?: true
    dataFineMassima?: true
    delOggettiCatasto?: true
    quantita?: true
    operatore?: true
    sospeso?: true
    dataora_ini_sospensione?: true
    dataora_fine_sospensione?: true
    tempo_sospensione?: true
    note_sospensione?: true
    impresaEsecutrice?: true
    segnaleticatemporanea?: true
    tipolavoro?: true
    statoMessaInSicurezza?: true
    dataMessaInSicurezza?: true
    notePubbliche?: true
  }

  export type LavoroCountAggregateInputType = {
    id?: true
    idAppalto?: true
    idEvento?: true
    idPratica?: true
    idPOI?: true
    idUtente?: true
    dataCreazione?: true
    dataModifica?: true
    dataChiusura?: true
    localizzazioneDichiarata?: true
    categoriaLavoro?: true
    dettaglioLavoro?: true
    noteLavoro?: true
    contabilitaLavoro?: true
    attrezzaturaLavoro?: true
    mezzoLavoro?: true
    personaleLavoro?: true
    dataModificaStato?: true
    stato?: true
    notaStato?: true
    idUtenteStato?: true
    localizzazioneDichiarataQuartiere?: true
    statoCorrenteLavoro?: true
    del?: true
    dataInizioProgrammata?: true
    dataInizioEffettiva?: true
    dataInizioMassima?: true
    dataFineProgrammata?: true
    dataFineEffettiva?: true
    dataFineMassima?: true
    delOggettiCatasto?: true
    quantita?: true
    operatore?: true
    sospeso?: true
    dataora_ini_sospensione?: true
    dataora_fine_sospensione?: true
    tempo_sospensione?: true
    note_sospensione?: true
    impresaEsecutrice?: true
    segnaleticatemporanea?: true
    tipolavoro?: true
    statoMessaInSicurezza?: true
    dataMessaInSicurezza?: true
    notePubbliche?: true
    _all?: true
  }

  export type LavoroAggregateArgs = {
    /**
     * Filter which lavoro to aggregate.
     */
    where?: lavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lavoros to fetch.
     */
    orderBy?: Enumerable<lavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: lavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lavoros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned lavoros
    **/
    _count?: true | LavoroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LavoroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LavoroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LavoroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LavoroMaxAggregateInputType
  }

  export type GetLavoroAggregateType<T extends LavoroAggregateArgs> = {
        [P in keyof T & keyof AggregateLavoro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLavoro[P]>
      : GetScalarType<T[P], AggregateLavoro[P]>
  }




  export type LavoroGroupByArgs = {
    where?: lavoroWhereInput
    orderBy?: Enumerable<lavoroOrderByWithAggregationInput>
    by: LavoroScalarFieldEnum[]
    having?: lavoroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LavoroCountAggregateInputType | true
    _avg?: LavoroAvgAggregateInputType
    _sum?: LavoroSumAggregateInputType
    _min?: LavoroMinAggregateInputType
    _max?: LavoroMaxAggregateInputType
  }


  export type LavoroGroupByOutputType = {
    id: number
    idAppalto: number | null
    idEvento: number | null
    idPratica: number | null
    idPOI: number | null
    idUtente: number | null
    dataCreazione: string | null
    dataModifica: string | null
    dataChiusura: string | null
    localizzazioneDichiarata: string | null
    categoriaLavoro: number | null
    dettaglioLavoro: number | null
    noteLavoro: string | null
    contabilitaLavoro: number | null
    attrezzaturaLavoro: number | null
    mezzoLavoro: number | null
    personaleLavoro: number | null
    dataModificaStato: string | null
    stato: string | null
    notaStato: string | null
    idUtenteStato: number | null
    localizzazioneDichiarataQuartiere: string | null
    statoCorrenteLavoro: string | null
    del: string | null
    dataInizioProgrammata: string | null
    dataInizioEffettiva: string | null
    dataInizioMassima: string | null
    dataFineProgrammata: string | null
    dataFineEffettiva: string | null
    dataFineMassima: string | null
    delOggettiCatasto: string | null
    quantita: string | null
    operatore: string | null
    sospeso: number | null
    dataora_ini_sospensione: string | null
    dataora_fine_sospensione: string | null
    tempo_sospensione: number | null
    note_sospensione: string | null
    impresaEsecutrice: number | null
    segnaleticatemporanea: string | null
    tipolavoro: string | null
    statoMessaInSicurezza: string | null
    dataMessaInSicurezza: string | null
    notePubbliche: string | null
    _count: LavoroCountAggregateOutputType | null
    _avg: LavoroAvgAggregateOutputType | null
    _sum: LavoroSumAggregateOutputType | null
    _min: LavoroMinAggregateOutputType | null
    _max: LavoroMaxAggregateOutputType | null
  }

  type GetLavoroGroupByPayload<T extends LavoroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<LavoroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LavoroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LavoroGroupByOutputType[P]>
            : GetScalarType<T[P], LavoroGroupByOutputType[P]>
        }
      >
    >


  export type lavoroSelect = {
    id?: boolean
    idAppalto?: boolean
    idEvento?: boolean
    idPratica?: boolean
    idPOI?: boolean
    idUtente?: boolean
    dataCreazione?: boolean
    dataModifica?: boolean
    dataChiusura?: boolean
    localizzazioneDichiarata?: boolean
    categoriaLavoro?: boolean
    dettaglioLavoro?: boolean
    noteLavoro?: boolean
    contabilitaLavoro?: boolean
    attrezzaturaLavoro?: boolean
    mezzoLavoro?: boolean
    personaleLavoro?: boolean
    dataModificaStato?: boolean
    stato?: boolean
    notaStato?: boolean
    idUtenteStato?: boolean
    localizzazioneDichiarataQuartiere?: boolean
    statoCorrenteLavoro?: boolean
    del?: boolean
    dataInizioProgrammata?: boolean
    dataInizioEffettiva?: boolean
    dataInizioMassima?: boolean
    dataFineProgrammata?: boolean
    dataFineEffettiva?: boolean
    dataFineMassima?: boolean
    delOggettiCatasto?: boolean
    quantita?: boolean
    operatore?: boolean
    sospeso?: boolean
    dataora_ini_sospensione?: boolean
    dataora_fine_sospensione?: boolean
    tempo_sospensione?: boolean
    note_sospensione?: boolean
    impresaEsecutrice?: boolean
    segnaleticatemporanea?: boolean
    tipolavoro?: boolean
    statoMessaInSicurezza?: boolean
    dataMessaInSicurezza?: boolean
    notePubbliche?: boolean
    catastolinker?: boolean | lavoro$catastolinkerArgs
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategorialavoro?: boolean | sottocategorialavoroArgs
    utenti_lavoro_idUtenteStatoToutenti?: boolean | utentiArgs
    utenti_lavoro_idUtenteToutenti?: boolean | utentiArgs
    impresa?: boolean | impresaArgs
    _count?: boolean | LavoroCountOutputTypeArgs
  }


  export type lavoroInclude = {
    catastolinker?: boolean | lavoro$catastolinkerArgs
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategorialavoro?: boolean | sottocategorialavoroArgs
    utenti_lavoro_idUtenteStatoToutenti?: boolean | utentiArgs
    utenti_lavoro_idUtenteToutenti?: boolean | utentiArgs
    impresa?: boolean | impresaArgs
    _count?: boolean | LavoroCountOutputTypeArgs
  }

  export type lavoroGetPayload<S extends boolean | null | undefined | lavoroArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? lavoro :
    S extends undefined ? never :
    S extends { include: any } & (lavoroArgs | lavoroFindManyArgs)
    ? lavoro  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'catastolinker' ? Array < catastolinkerGetPayload<S['include'][P]>>  :
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['include'][P]> | null :
        P extends 'sottocategorialavoro' ? sottocategorialavoroGetPayload<S['include'][P]> | null :
        P extends 'utenti_lavoro_idUtenteStatoToutenti' ? utentiGetPayload<S['include'][P]> | null :
        P extends 'utenti_lavoro_idUtenteToutenti' ? utentiGetPayload<S['include'][P]> | null :
        P extends 'impresa' ? impresaGetPayload<S['include'][P]> | null :
        P extends '_count' ? LavoroCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (lavoroArgs | lavoroFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'catastolinker' ? Array < catastolinkerGetPayload<S['select'][P]>>  :
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['select'][P]> | null :
        P extends 'sottocategorialavoro' ? sottocategorialavoroGetPayload<S['select'][P]> | null :
        P extends 'utenti_lavoro_idUtenteStatoToutenti' ? utentiGetPayload<S['select'][P]> | null :
        P extends 'utenti_lavoro_idUtenteToutenti' ? utentiGetPayload<S['select'][P]> | null :
        P extends 'impresa' ? impresaGetPayload<S['select'][P]> | null :
        P extends '_count' ? LavoroCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof lavoro ? lavoro[P] : never
  } 
      : lavoro


  type lavoroCountArgs = 
    Omit<lavoroFindManyArgs, 'select' | 'include'> & {
      select?: LavoroCountAggregateInputType | true
    }

  export interface lavoroDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Lavoro that matches the filter.
     * @param {lavoroFindUniqueArgs} args - Arguments to find a Lavoro
     * @example
     * // Get one Lavoro
     * const lavoro = await prisma.lavoro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends lavoroFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, lavoroFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'lavoro'> extends True ? Prisma__lavoroClient<lavoroGetPayload<T>> : Prisma__lavoroClient<lavoroGetPayload<T> | null, null>

    /**
     * Find one Lavoro that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {lavoroFindUniqueOrThrowArgs} args - Arguments to find a Lavoro
     * @example
     * // Get one Lavoro
     * const lavoro = await prisma.lavoro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends lavoroFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, lavoroFindUniqueOrThrowArgs>
    ): Prisma__lavoroClient<lavoroGetPayload<T>>

    /**
     * Find the first Lavoro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lavoroFindFirstArgs} args - Arguments to find a Lavoro
     * @example
     * // Get one Lavoro
     * const lavoro = await prisma.lavoro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends lavoroFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, lavoroFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'lavoro'> extends True ? Prisma__lavoroClient<lavoroGetPayload<T>> : Prisma__lavoroClient<lavoroGetPayload<T> | null, null>

    /**
     * Find the first Lavoro that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lavoroFindFirstOrThrowArgs} args - Arguments to find a Lavoro
     * @example
     * // Get one Lavoro
     * const lavoro = await prisma.lavoro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends lavoroFindFirstOrThrowArgs>(
      args?: SelectSubset<T, lavoroFindFirstOrThrowArgs>
    ): Prisma__lavoroClient<lavoroGetPayload<T>>

    /**
     * Find zero or more Lavoros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lavoroFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Lavoros
     * const lavoros = await prisma.lavoro.findMany()
     * 
     * // Get first 10 Lavoros
     * const lavoros = await prisma.lavoro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const lavoroWithIdOnly = await prisma.lavoro.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends lavoroFindManyArgs>(
      args?: SelectSubset<T, lavoroFindManyArgs>
    ): Prisma.PrismaPromise<Array<lavoroGetPayload<T>>>

    /**
     * Create a Lavoro.
     * @param {lavoroCreateArgs} args - Arguments to create a Lavoro.
     * @example
     * // Create one Lavoro
     * const Lavoro = await prisma.lavoro.create({
     *   data: {
     *     // ... data to create a Lavoro
     *   }
     * })
     * 
    **/
    create<T extends lavoroCreateArgs>(
      args: SelectSubset<T, lavoroCreateArgs>
    ): Prisma__lavoroClient<lavoroGetPayload<T>>

    /**
     * Create many Lavoros.
     *     @param {lavoroCreateManyArgs} args - Arguments to create many Lavoros.
     *     @example
     *     // Create many Lavoros
     *     const lavoro = await prisma.lavoro.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends lavoroCreateManyArgs>(
      args?: SelectSubset<T, lavoroCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Lavoro.
     * @param {lavoroDeleteArgs} args - Arguments to delete one Lavoro.
     * @example
     * // Delete one Lavoro
     * const Lavoro = await prisma.lavoro.delete({
     *   where: {
     *     // ... filter to delete one Lavoro
     *   }
     * })
     * 
    **/
    delete<T extends lavoroDeleteArgs>(
      args: SelectSubset<T, lavoroDeleteArgs>
    ): Prisma__lavoroClient<lavoroGetPayload<T>>

    /**
     * Update one Lavoro.
     * @param {lavoroUpdateArgs} args - Arguments to update one Lavoro.
     * @example
     * // Update one Lavoro
     * const lavoro = await prisma.lavoro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends lavoroUpdateArgs>(
      args: SelectSubset<T, lavoroUpdateArgs>
    ): Prisma__lavoroClient<lavoroGetPayload<T>>

    /**
     * Delete zero or more Lavoros.
     * @param {lavoroDeleteManyArgs} args - Arguments to filter Lavoros to delete.
     * @example
     * // Delete a few Lavoros
     * const { count } = await prisma.lavoro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends lavoroDeleteManyArgs>(
      args?: SelectSubset<T, lavoroDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lavoros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lavoroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Lavoros
     * const lavoro = await prisma.lavoro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends lavoroUpdateManyArgs>(
      args: SelectSubset<T, lavoroUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Lavoro.
     * @param {lavoroUpsertArgs} args - Arguments to update or create a Lavoro.
     * @example
     * // Update or create a Lavoro
     * const lavoro = await prisma.lavoro.upsert({
     *   create: {
     *     // ... data to create a Lavoro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lavoro we want to update
     *   }
     * })
    **/
    upsert<T extends lavoroUpsertArgs>(
      args: SelectSubset<T, lavoroUpsertArgs>
    ): Prisma__lavoroClient<lavoroGetPayload<T>>

    /**
     * Count the number of Lavoros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lavoroCountArgs} args - Arguments to filter Lavoros to count.
     * @example
     * // Count the number of Lavoros
     * const count = await prisma.lavoro.count({
     *   where: {
     *     // ... the filter for the Lavoros we want to count
     *   }
     * })
    **/
    count<T extends lavoroCountArgs>(
      args?: Subset<T, lavoroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LavoroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lavoro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LavoroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LavoroAggregateArgs>(args: Subset<T, LavoroAggregateArgs>): Prisma.PrismaPromise<GetLavoroAggregateType<T>>

    /**
     * Group by Lavoro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LavoroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LavoroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LavoroGroupByArgs['orderBy'] }
        : { orderBy?: LavoroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LavoroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLavoroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for lavoro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__lavoroClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    catastolinker<T extends lavoro$catastolinkerArgs= {}>(args?: Subset<T, lavoro$catastolinkerArgs>): Prisma.PrismaPromise<Array<catastolinkerGetPayload<T>>| Null>;

    categoriaanomalia<T extends categoriaanomaliaArgs= {}>(args?: Subset<T, categoriaanomaliaArgs>): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T> | Null>;

    sottocategorialavoro<T extends sottocategorialavoroArgs= {}>(args?: Subset<T, sottocategorialavoroArgs>): Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T> | Null>;

    utenti_lavoro_idUtenteStatoToutenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    utenti_lavoro_idUtenteToutenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    impresa<T extends impresaArgs= {}>(args?: Subset<T, impresaArgs>): Prisma__impresaClient<impresaGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * lavoro base type for findUnique actions
   */
  export type lavoroFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    /**
     * Filter, which lavoro to fetch.
     */
    where: lavoroWhereUniqueInput
  }

  /**
   * lavoro findUnique
   */
  export interface lavoroFindUniqueArgs extends lavoroFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * lavoro findUniqueOrThrow
   */
  export type lavoroFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    /**
     * Filter, which lavoro to fetch.
     */
    where: lavoroWhereUniqueInput
  }


  /**
   * lavoro base type for findFirst actions
   */
  export type lavoroFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    /**
     * Filter, which lavoro to fetch.
     */
    where?: lavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lavoros to fetch.
     */
    orderBy?: Enumerable<lavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for lavoros.
     */
    cursor?: lavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lavoros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of lavoros.
     */
    distinct?: Enumerable<LavoroScalarFieldEnum>
  }

  /**
   * lavoro findFirst
   */
  export interface lavoroFindFirstArgs extends lavoroFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * lavoro findFirstOrThrow
   */
  export type lavoroFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    /**
     * Filter, which lavoro to fetch.
     */
    where?: lavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lavoros to fetch.
     */
    orderBy?: Enumerable<lavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for lavoros.
     */
    cursor?: lavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lavoros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of lavoros.
     */
    distinct?: Enumerable<LavoroScalarFieldEnum>
  }


  /**
   * lavoro findMany
   */
  export type lavoroFindManyArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    /**
     * Filter, which lavoros to fetch.
     */
    where?: lavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lavoros to fetch.
     */
    orderBy?: Enumerable<lavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing lavoros.
     */
    cursor?: lavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lavoros.
     */
    skip?: number
    distinct?: Enumerable<LavoroScalarFieldEnum>
  }


  /**
   * lavoro create
   */
  export type lavoroCreateArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    /**
     * The data needed to create a lavoro.
     */
    data: XOR<lavoroCreateInput, lavoroUncheckedCreateInput>
  }


  /**
   * lavoro createMany
   */
  export type lavoroCreateManyArgs = {
    /**
     * The data used to create many lavoros.
     */
    data: Enumerable<lavoroCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * lavoro update
   */
  export type lavoroUpdateArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    /**
     * The data needed to update a lavoro.
     */
    data: XOR<lavoroUpdateInput, lavoroUncheckedUpdateInput>
    /**
     * Choose, which lavoro to update.
     */
    where: lavoroWhereUniqueInput
  }


  /**
   * lavoro updateMany
   */
  export type lavoroUpdateManyArgs = {
    /**
     * The data used to update lavoros.
     */
    data: XOR<lavoroUpdateManyMutationInput, lavoroUncheckedUpdateManyInput>
    /**
     * Filter which lavoros to update
     */
    where?: lavoroWhereInput
  }


  /**
   * lavoro upsert
   */
  export type lavoroUpsertArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    /**
     * The filter to search for the lavoro to update in case it exists.
     */
    where: lavoroWhereUniqueInput
    /**
     * In case the lavoro found by the `where` argument doesn't exist, create a new lavoro with this data.
     */
    create: XOR<lavoroCreateInput, lavoroUncheckedCreateInput>
    /**
     * In case the lavoro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<lavoroUpdateInput, lavoroUncheckedUpdateInput>
  }


  /**
   * lavoro delete
   */
  export type lavoroDeleteArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    /**
     * Filter which lavoro to delete.
     */
    where: lavoroWhereUniqueInput
  }


  /**
   * lavoro deleteMany
   */
  export type lavoroDeleteManyArgs = {
    /**
     * Filter which lavoros to delete
     */
    where?: lavoroWhereInput
  }


  /**
   * lavoro.catastolinker
   */
  export type lavoro$catastolinkerArgs = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
    where?: catastolinkerWhereInput
    orderBy?: Enumerable<catastolinkerOrderByWithRelationInput>
    cursor?: catastolinkerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<CatastolinkerScalarFieldEnum>
  }


  /**
   * lavoro without action
   */
  export type lavoroArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
  }



  /**
   * Model lavorostorico
   */


  export type AggregateLavorostorico = {
    _count: LavorostoricoCountAggregateOutputType | null
    _avg: LavorostoricoAvgAggregateOutputType | null
    _sum: LavorostoricoSumAggregateOutputType | null
    _min: LavorostoricoMinAggregateOutputType | null
    _max: LavorostoricoMaxAggregateOutputType | null
  }

  export type LavorostoricoAvgAggregateOutputType = {
    id: number | null
    idLavoro: number | null
    idAppalto: number | null
    idEvento: number | null
    idPratica: number | null
    idPOI: number | null
    idUtente: number | null
    categoriaLavoro: number | null
    dettaglioLavoro: number | null
    contabilitaLavoro: number | null
    attrezzaturaLavoro: number | null
    mezzoLavoro: number | null
    personaleLavoro: number | null
    idUtenteStato: number | null
    sospeso: number | null
    tempo_sospensione: number | null
    impresaEsecutrice: number | null
  }

  export type LavorostoricoSumAggregateOutputType = {
    id: number | null
    idLavoro: number | null
    idAppalto: number | null
    idEvento: number | null
    idPratica: number | null
    idPOI: number | null
    idUtente: number | null
    categoriaLavoro: number | null
    dettaglioLavoro: number | null
    contabilitaLavoro: number | null
    attrezzaturaLavoro: number | null
    mezzoLavoro: number | null
    personaleLavoro: number | null
    idUtenteStato: number | null
    sospeso: number | null
    tempo_sospensione: number | null
    impresaEsecutrice: number | null
  }

  export type LavorostoricoMinAggregateOutputType = {
    id: number | null
    idLavoro: number | null
    idAppalto: number | null
    idEvento: number | null
    idPratica: number | null
    idPOI: number | null
    idUtente: number | null
    dataCreazione: string | null
    dataModifica: string | null
    dataChiusura: string | null
    localizzazioneDichiarata: string | null
    categoriaLavoro: number | null
    dettaglioLavoro: number | null
    noteLavoro: string | null
    contabilitaLavoro: number | null
    attrezzaturaLavoro: number | null
    mezzoLavoro: number | null
    personaleLavoro: number | null
    dataModificaStato: string | null
    stato: string | null
    notaStato: string | null
    idUtenteStato: number | null
    sospeso: number | null
    dataora_ini_sospensione: string | null
    dataora_fine_sospensione: string | null
    tempo_sospensione: number | null
    note_sospensione: string | null
    dataInizioProgrammata: string | null
    dataInizioEffettiva: string | null
    dataInizioMassima: string | null
    dataFineProgrammata: string | null
    dataFineEffettiva: string | null
    dataFineMassima: string | null
    localizzazioneDichiarataQuartiere: string | null
    statoCorrenteLavoro: string | null
    delOggettiCatasto: string | null
    del: string | null
    quantita: string | null
    operatore: string | null
    impresaEsecutrice: number | null
    segnaleticatemporanea: string | null
    tipolavoro: string | null
    statoMessaInSicurezza: string | null
    dataMessaInSicurezza: string | null
    flgCambioStato: string | null
    notePubbliche: string | null
  }

  export type LavorostoricoMaxAggregateOutputType = {
    id: number | null
    idLavoro: number | null
    idAppalto: number | null
    idEvento: number | null
    idPratica: number | null
    idPOI: number | null
    idUtente: number | null
    dataCreazione: string | null
    dataModifica: string | null
    dataChiusura: string | null
    localizzazioneDichiarata: string | null
    categoriaLavoro: number | null
    dettaglioLavoro: number | null
    noteLavoro: string | null
    contabilitaLavoro: number | null
    attrezzaturaLavoro: number | null
    mezzoLavoro: number | null
    personaleLavoro: number | null
    dataModificaStato: string | null
    stato: string | null
    notaStato: string | null
    idUtenteStato: number | null
    sospeso: number | null
    dataora_ini_sospensione: string | null
    dataora_fine_sospensione: string | null
    tempo_sospensione: number | null
    note_sospensione: string | null
    dataInizioProgrammata: string | null
    dataInizioEffettiva: string | null
    dataInizioMassima: string | null
    dataFineProgrammata: string | null
    dataFineEffettiva: string | null
    dataFineMassima: string | null
    localizzazioneDichiarataQuartiere: string | null
    statoCorrenteLavoro: string | null
    delOggettiCatasto: string | null
    del: string | null
    quantita: string | null
    operatore: string | null
    impresaEsecutrice: number | null
    segnaleticatemporanea: string | null
    tipolavoro: string | null
    statoMessaInSicurezza: string | null
    dataMessaInSicurezza: string | null
    flgCambioStato: string | null
    notePubbliche: string | null
  }

  export type LavorostoricoCountAggregateOutputType = {
    id: number
    idLavoro: number
    idAppalto: number
    idEvento: number
    idPratica: number
    idPOI: number
    idUtente: number
    dataCreazione: number
    dataModifica: number
    dataChiusura: number
    localizzazioneDichiarata: number
    categoriaLavoro: number
    dettaglioLavoro: number
    noteLavoro: number
    contabilitaLavoro: number
    attrezzaturaLavoro: number
    mezzoLavoro: number
    personaleLavoro: number
    dataModificaStato: number
    stato: number
    notaStato: number
    idUtenteStato: number
    sospeso: number
    dataora_ini_sospensione: number
    dataora_fine_sospensione: number
    tempo_sospensione: number
    note_sospensione: number
    dataInizioProgrammata: number
    dataInizioEffettiva: number
    dataInizioMassima: number
    dataFineProgrammata: number
    dataFineEffettiva: number
    dataFineMassima: number
    localizzazioneDichiarataQuartiere: number
    statoCorrenteLavoro: number
    delOggettiCatasto: number
    del: number
    quantita: number
    operatore: number
    impresaEsecutrice: number
    segnaleticatemporanea: number
    tipolavoro: number
    statoMessaInSicurezza: number
    dataMessaInSicurezza: number
    flgCambioStato: number
    notePubbliche: number
    _all: number
  }


  export type LavorostoricoAvgAggregateInputType = {
    id?: true
    idLavoro?: true
    idAppalto?: true
    idEvento?: true
    idPratica?: true
    idPOI?: true
    idUtente?: true
    categoriaLavoro?: true
    dettaglioLavoro?: true
    contabilitaLavoro?: true
    attrezzaturaLavoro?: true
    mezzoLavoro?: true
    personaleLavoro?: true
    idUtenteStato?: true
    sospeso?: true
    tempo_sospensione?: true
    impresaEsecutrice?: true
  }

  export type LavorostoricoSumAggregateInputType = {
    id?: true
    idLavoro?: true
    idAppalto?: true
    idEvento?: true
    idPratica?: true
    idPOI?: true
    idUtente?: true
    categoriaLavoro?: true
    dettaglioLavoro?: true
    contabilitaLavoro?: true
    attrezzaturaLavoro?: true
    mezzoLavoro?: true
    personaleLavoro?: true
    idUtenteStato?: true
    sospeso?: true
    tempo_sospensione?: true
    impresaEsecutrice?: true
  }

  export type LavorostoricoMinAggregateInputType = {
    id?: true
    idLavoro?: true
    idAppalto?: true
    idEvento?: true
    idPratica?: true
    idPOI?: true
    idUtente?: true
    dataCreazione?: true
    dataModifica?: true
    dataChiusura?: true
    localizzazioneDichiarata?: true
    categoriaLavoro?: true
    dettaglioLavoro?: true
    noteLavoro?: true
    contabilitaLavoro?: true
    attrezzaturaLavoro?: true
    mezzoLavoro?: true
    personaleLavoro?: true
    dataModificaStato?: true
    stato?: true
    notaStato?: true
    idUtenteStato?: true
    sospeso?: true
    dataora_ini_sospensione?: true
    dataora_fine_sospensione?: true
    tempo_sospensione?: true
    note_sospensione?: true
    dataInizioProgrammata?: true
    dataInizioEffettiva?: true
    dataInizioMassima?: true
    dataFineProgrammata?: true
    dataFineEffettiva?: true
    dataFineMassima?: true
    localizzazioneDichiarataQuartiere?: true
    statoCorrenteLavoro?: true
    delOggettiCatasto?: true
    del?: true
    quantita?: true
    operatore?: true
    impresaEsecutrice?: true
    segnaleticatemporanea?: true
    tipolavoro?: true
    statoMessaInSicurezza?: true
    dataMessaInSicurezza?: true
    flgCambioStato?: true
    notePubbliche?: true
  }

  export type LavorostoricoMaxAggregateInputType = {
    id?: true
    idLavoro?: true
    idAppalto?: true
    idEvento?: true
    idPratica?: true
    idPOI?: true
    idUtente?: true
    dataCreazione?: true
    dataModifica?: true
    dataChiusura?: true
    localizzazioneDichiarata?: true
    categoriaLavoro?: true
    dettaglioLavoro?: true
    noteLavoro?: true
    contabilitaLavoro?: true
    attrezzaturaLavoro?: true
    mezzoLavoro?: true
    personaleLavoro?: true
    dataModificaStato?: true
    stato?: true
    notaStato?: true
    idUtenteStato?: true
    sospeso?: true
    dataora_ini_sospensione?: true
    dataora_fine_sospensione?: true
    tempo_sospensione?: true
    note_sospensione?: true
    dataInizioProgrammata?: true
    dataInizioEffettiva?: true
    dataInizioMassima?: true
    dataFineProgrammata?: true
    dataFineEffettiva?: true
    dataFineMassima?: true
    localizzazioneDichiarataQuartiere?: true
    statoCorrenteLavoro?: true
    delOggettiCatasto?: true
    del?: true
    quantita?: true
    operatore?: true
    impresaEsecutrice?: true
    segnaleticatemporanea?: true
    tipolavoro?: true
    statoMessaInSicurezza?: true
    dataMessaInSicurezza?: true
    flgCambioStato?: true
    notePubbliche?: true
  }

  export type LavorostoricoCountAggregateInputType = {
    id?: true
    idLavoro?: true
    idAppalto?: true
    idEvento?: true
    idPratica?: true
    idPOI?: true
    idUtente?: true
    dataCreazione?: true
    dataModifica?: true
    dataChiusura?: true
    localizzazioneDichiarata?: true
    categoriaLavoro?: true
    dettaglioLavoro?: true
    noteLavoro?: true
    contabilitaLavoro?: true
    attrezzaturaLavoro?: true
    mezzoLavoro?: true
    personaleLavoro?: true
    dataModificaStato?: true
    stato?: true
    notaStato?: true
    idUtenteStato?: true
    sospeso?: true
    dataora_ini_sospensione?: true
    dataora_fine_sospensione?: true
    tempo_sospensione?: true
    note_sospensione?: true
    dataInizioProgrammata?: true
    dataInizioEffettiva?: true
    dataInizioMassima?: true
    dataFineProgrammata?: true
    dataFineEffettiva?: true
    dataFineMassima?: true
    localizzazioneDichiarataQuartiere?: true
    statoCorrenteLavoro?: true
    delOggettiCatasto?: true
    del?: true
    quantita?: true
    operatore?: true
    impresaEsecutrice?: true
    segnaleticatemporanea?: true
    tipolavoro?: true
    statoMessaInSicurezza?: true
    dataMessaInSicurezza?: true
    flgCambioStato?: true
    notePubbliche?: true
    _all?: true
  }

  export type LavorostoricoAggregateArgs = {
    /**
     * Filter which lavorostorico to aggregate.
     */
    where?: lavorostoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lavorostoricos to fetch.
     */
    orderBy?: Enumerable<lavorostoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: lavorostoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lavorostoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lavorostoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned lavorostoricos
    **/
    _count?: true | LavorostoricoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LavorostoricoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LavorostoricoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LavorostoricoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LavorostoricoMaxAggregateInputType
  }

  export type GetLavorostoricoAggregateType<T extends LavorostoricoAggregateArgs> = {
        [P in keyof T & keyof AggregateLavorostorico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLavorostorico[P]>
      : GetScalarType<T[P], AggregateLavorostorico[P]>
  }




  export type LavorostoricoGroupByArgs = {
    where?: lavorostoricoWhereInput
    orderBy?: Enumerable<lavorostoricoOrderByWithAggregationInput>
    by: LavorostoricoScalarFieldEnum[]
    having?: lavorostoricoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LavorostoricoCountAggregateInputType | true
    _avg?: LavorostoricoAvgAggregateInputType
    _sum?: LavorostoricoSumAggregateInputType
    _min?: LavorostoricoMinAggregateInputType
    _max?: LavorostoricoMaxAggregateInputType
  }


  export type LavorostoricoGroupByOutputType = {
    id: number
    idLavoro: number | null
    idAppalto: number | null
    idEvento: number | null
    idPratica: number | null
    idPOI: number | null
    idUtente: number | null
    dataCreazione: string | null
    dataModifica: string | null
    dataChiusura: string | null
    localizzazioneDichiarata: string | null
    categoriaLavoro: number | null
    dettaglioLavoro: number | null
    noteLavoro: string | null
    contabilitaLavoro: number | null
    attrezzaturaLavoro: number | null
    mezzoLavoro: number | null
    personaleLavoro: number | null
    dataModificaStato: string | null
    stato: string | null
    notaStato: string | null
    idUtenteStato: number | null
    sospeso: number | null
    dataora_ini_sospensione: string | null
    dataora_fine_sospensione: string | null
    tempo_sospensione: number | null
    note_sospensione: string | null
    dataInizioProgrammata: string | null
    dataInizioEffettiva: string | null
    dataInizioMassima: string | null
    dataFineProgrammata: string | null
    dataFineEffettiva: string | null
    dataFineMassima: string | null
    localizzazioneDichiarataQuartiere: string | null
    statoCorrenteLavoro: string | null
    delOggettiCatasto: string | null
    del: string | null
    quantita: string | null
    operatore: string | null
    impresaEsecutrice: number | null
    segnaleticatemporanea: string | null
    tipolavoro: string | null
    statoMessaInSicurezza: string | null
    dataMessaInSicurezza: string | null
    flgCambioStato: string | null
    notePubbliche: string | null
    _count: LavorostoricoCountAggregateOutputType | null
    _avg: LavorostoricoAvgAggregateOutputType | null
    _sum: LavorostoricoSumAggregateOutputType | null
    _min: LavorostoricoMinAggregateOutputType | null
    _max: LavorostoricoMaxAggregateOutputType | null
  }

  type GetLavorostoricoGroupByPayload<T extends LavorostoricoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<LavorostoricoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LavorostoricoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LavorostoricoGroupByOutputType[P]>
            : GetScalarType<T[P], LavorostoricoGroupByOutputType[P]>
        }
      >
    >


  export type lavorostoricoSelect = {
    id?: boolean
    idLavoro?: boolean
    idAppalto?: boolean
    idEvento?: boolean
    idPratica?: boolean
    idPOI?: boolean
    idUtente?: boolean
    dataCreazione?: boolean
    dataModifica?: boolean
    dataChiusura?: boolean
    localizzazioneDichiarata?: boolean
    categoriaLavoro?: boolean
    dettaglioLavoro?: boolean
    noteLavoro?: boolean
    contabilitaLavoro?: boolean
    attrezzaturaLavoro?: boolean
    mezzoLavoro?: boolean
    personaleLavoro?: boolean
    dataModificaStato?: boolean
    stato?: boolean
    notaStato?: boolean
    idUtenteStato?: boolean
    sospeso?: boolean
    dataora_ini_sospensione?: boolean
    dataora_fine_sospensione?: boolean
    tempo_sospensione?: boolean
    note_sospensione?: boolean
    dataInizioProgrammata?: boolean
    dataInizioEffettiva?: boolean
    dataInizioMassima?: boolean
    dataFineProgrammata?: boolean
    dataFineEffettiva?: boolean
    dataFineMassima?: boolean
    localizzazioneDichiarataQuartiere?: boolean
    statoCorrenteLavoro?: boolean
    delOggettiCatasto?: boolean
    del?: boolean
    quantita?: boolean
    operatore?: boolean
    impresaEsecutrice?: boolean
    segnaleticatemporanea?: boolean
    tipolavoro?: boolean
    statoMessaInSicurezza?: boolean
    dataMessaInSicurezza?: boolean
    flgCambioStato?: boolean
    notePubbliche?: boolean
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategorialavoro?: boolean | sottocategorialavoroArgs
    utenti_lavorostorico_idUtenteStatoToutenti?: boolean | utentiArgs
    utenti_lavorostorico_idUtenteToutenti?: boolean | utentiArgs
    impresa?: boolean | impresaArgs
  }


  export type lavorostoricoInclude = {
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategorialavoro?: boolean | sottocategorialavoroArgs
    utenti_lavorostorico_idUtenteStatoToutenti?: boolean | utentiArgs
    utenti_lavorostorico_idUtenteToutenti?: boolean | utentiArgs
    impresa?: boolean | impresaArgs
  }

  export type lavorostoricoGetPayload<S extends boolean | null | undefined | lavorostoricoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? lavorostorico :
    S extends undefined ? never :
    S extends { include: any } & (lavorostoricoArgs | lavorostoricoFindManyArgs)
    ? lavorostorico  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['include'][P]> | null :
        P extends 'sottocategorialavoro' ? sottocategorialavoroGetPayload<S['include'][P]> | null :
        P extends 'utenti_lavorostorico_idUtenteStatoToutenti' ? utentiGetPayload<S['include'][P]> | null :
        P extends 'utenti_lavorostorico_idUtenteToutenti' ? utentiGetPayload<S['include'][P]> | null :
        P extends 'impresa' ? impresaGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (lavorostoricoArgs | lavorostoricoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['select'][P]> | null :
        P extends 'sottocategorialavoro' ? sottocategorialavoroGetPayload<S['select'][P]> | null :
        P extends 'utenti_lavorostorico_idUtenteStatoToutenti' ? utentiGetPayload<S['select'][P]> | null :
        P extends 'utenti_lavorostorico_idUtenteToutenti' ? utentiGetPayload<S['select'][P]> | null :
        P extends 'impresa' ? impresaGetPayload<S['select'][P]> | null :  P extends keyof lavorostorico ? lavorostorico[P] : never
  } 
      : lavorostorico


  type lavorostoricoCountArgs = 
    Omit<lavorostoricoFindManyArgs, 'select' | 'include'> & {
      select?: LavorostoricoCountAggregateInputType | true
    }

  export interface lavorostoricoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Lavorostorico that matches the filter.
     * @param {lavorostoricoFindUniqueArgs} args - Arguments to find a Lavorostorico
     * @example
     * // Get one Lavorostorico
     * const lavorostorico = await prisma.lavorostorico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends lavorostoricoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, lavorostoricoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'lavorostorico'> extends True ? Prisma__lavorostoricoClient<lavorostoricoGetPayload<T>> : Prisma__lavorostoricoClient<lavorostoricoGetPayload<T> | null, null>

    /**
     * Find one Lavorostorico that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {lavorostoricoFindUniqueOrThrowArgs} args - Arguments to find a Lavorostorico
     * @example
     * // Get one Lavorostorico
     * const lavorostorico = await prisma.lavorostorico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends lavorostoricoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, lavorostoricoFindUniqueOrThrowArgs>
    ): Prisma__lavorostoricoClient<lavorostoricoGetPayload<T>>

    /**
     * Find the first Lavorostorico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lavorostoricoFindFirstArgs} args - Arguments to find a Lavorostorico
     * @example
     * // Get one Lavorostorico
     * const lavorostorico = await prisma.lavorostorico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends lavorostoricoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, lavorostoricoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'lavorostorico'> extends True ? Prisma__lavorostoricoClient<lavorostoricoGetPayload<T>> : Prisma__lavorostoricoClient<lavorostoricoGetPayload<T> | null, null>

    /**
     * Find the first Lavorostorico that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lavorostoricoFindFirstOrThrowArgs} args - Arguments to find a Lavorostorico
     * @example
     * // Get one Lavorostorico
     * const lavorostorico = await prisma.lavorostorico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends lavorostoricoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, lavorostoricoFindFirstOrThrowArgs>
    ): Prisma__lavorostoricoClient<lavorostoricoGetPayload<T>>

    /**
     * Find zero or more Lavorostoricos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lavorostoricoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Lavorostoricos
     * const lavorostoricos = await prisma.lavorostorico.findMany()
     * 
     * // Get first 10 Lavorostoricos
     * const lavorostoricos = await prisma.lavorostorico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const lavorostoricoWithIdOnly = await prisma.lavorostorico.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends lavorostoricoFindManyArgs>(
      args?: SelectSubset<T, lavorostoricoFindManyArgs>
    ): Prisma.PrismaPromise<Array<lavorostoricoGetPayload<T>>>

    /**
     * Create a Lavorostorico.
     * @param {lavorostoricoCreateArgs} args - Arguments to create a Lavorostorico.
     * @example
     * // Create one Lavorostorico
     * const Lavorostorico = await prisma.lavorostorico.create({
     *   data: {
     *     // ... data to create a Lavorostorico
     *   }
     * })
     * 
    **/
    create<T extends lavorostoricoCreateArgs>(
      args: SelectSubset<T, lavorostoricoCreateArgs>
    ): Prisma__lavorostoricoClient<lavorostoricoGetPayload<T>>

    /**
     * Create many Lavorostoricos.
     *     @param {lavorostoricoCreateManyArgs} args - Arguments to create many Lavorostoricos.
     *     @example
     *     // Create many Lavorostoricos
     *     const lavorostorico = await prisma.lavorostorico.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends lavorostoricoCreateManyArgs>(
      args?: SelectSubset<T, lavorostoricoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Lavorostorico.
     * @param {lavorostoricoDeleteArgs} args - Arguments to delete one Lavorostorico.
     * @example
     * // Delete one Lavorostorico
     * const Lavorostorico = await prisma.lavorostorico.delete({
     *   where: {
     *     // ... filter to delete one Lavorostorico
     *   }
     * })
     * 
    **/
    delete<T extends lavorostoricoDeleteArgs>(
      args: SelectSubset<T, lavorostoricoDeleteArgs>
    ): Prisma__lavorostoricoClient<lavorostoricoGetPayload<T>>

    /**
     * Update one Lavorostorico.
     * @param {lavorostoricoUpdateArgs} args - Arguments to update one Lavorostorico.
     * @example
     * // Update one Lavorostorico
     * const lavorostorico = await prisma.lavorostorico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends lavorostoricoUpdateArgs>(
      args: SelectSubset<T, lavorostoricoUpdateArgs>
    ): Prisma__lavorostoricoClient<lavorostoricoGetPayload<T>>

    /**
     * Delete zero or more Lavorostoricos.
     * @param {lavorostoricoDeleteManyArgs} args - Arguments to filter Lavorostoricos to delete.
     * @example
     * // Delete a few Lavorostoricos
     * const { count } = await prisma.lavorostorico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends lavorostoricoDeleteManyArgs>(
      args?: SelectSubset<T, lavorostoricoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lavorostoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lavorostoricoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Lavorostoricos
     * const lavorostorico = await prisma.lavorostorico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends lavorostoricoUpdateManyArgs>(
      args: SelectSubset<T, lavorostoricoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Lavorostorico.
     * @param {lavorostoricoUpsertArgs} args - Arguments to update or create a Lavorostorico.
     * @example
     * // Update or create a Lavorostorico
     * const lavorostorico = await prisma.lavorostorico.upsert({
     *   create: {
     *     // ... data to create a Lavorostorico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lavorostorico we want to update
     *   }
     * })
    **/
    upsert<T extends lavorostoricoUpsertArgs>(
      args: SelectSubset<T, lavorostoricoUpsertArgs>
    ): Prisma__lavorostoricoClient<lavorostoricoGetPayload<T>>

    /**
     * Count the number of Lavorostoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lavorostoricoCountArgs} args - Arguments to filter Lavorostoricos to count.
     * @example
     * // Count the number of Lavorostoricos
     * const count = await prisma.lavorostorico.count({
     *   where: {
     *     // ... the filter for the Lavorostoricos we want to count
     *   }
     * })
    **/
    count<T extends lavorostoricoCountArgs>(
      args?: Subset<T, lavorostoricoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LavorostoricoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lavorostorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LavorostoricoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LavorostoricoAggregateArgs>(args: Subset<T, LavorostoricoAggregateArgs>): Prisma.PrismaPromise<GetLavorostoricoAggregateType<T>>

    /**
     * Group by Lavorostorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LavorostoricoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LavorostoricoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LavorostoricoGroupByArgs['orderBy'] }
        : { orderBy?: LavorostoricoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LavorostoricoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLavorostoricoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for lavorostorico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__lavorostoricoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    categoriaanomalia<T extends categoriaanomaliaArgs= {}>(args?: Subset<T, categoriaanomaliaArgs>): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T> | Null>;

    sottocategorialavoro<T extends sottocategorialavoroArgs= {}>(args?: Subset<T, sottocategorialavoroArgs>): Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T> | Null>;

    utenti_lavorostorico_idUtenteStatoToutenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    utenti_lavorostorico_idUtenteToutenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    impresa<T extends impresaArgs= {}>(args?: Subset<T, impresaArgs>): Prisma__impresaClient<impresaGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * lavorostorico base type for findUnique actions
   */
  export type lavorostoricoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    /**
     * Filter, which lavorostorico to fetch.
     */
    where: lavorostoricoWhereUniqueInput
  }

  /**
   * lavorostorico findUnique
   */
  export interface lavorostoricoFindUniqueArgs extends lavorostoricoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * lavorostorico findUniqueOrThrow
   */
  export type lavorostoricoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    /**
     * Filter, which lavorostorico to fetch.
     */
    where: lavorostoricoWhereUniqueInput
  }


  /**
   * lavorostorico base type for findFirst actions
   */
  export type lavorostoricoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    /**
     * Filter, which lavorostorico to fetch.
     */
    where?: lavorostoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lavorostoricos to fetch.
     */
    orderBy?: Enumerable<lavorostoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for lavorostoricos.
     */
    cursor?: lavorostoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lavorostoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lavorostoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of lavorostoricos.
     */
    distinct?: Enumerable<LavorostoricoScalarFieldEnum>
  }

  /**
   * lavorostorico findFirst
   */
  export interface lavorostoricoFindFirstArgs extends lavorostoricoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * lavorostorico findFirstOrThrow
   */
  export type lavorostoricoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    /**
     * Filter, which lavorostorico to fetch.
     */
    where?: lavorostoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lavorostoricos to fetch.
     */
    orderBy?: Enumerable<lavorostoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for lavorostoricos.
     */
    cursor?: lavorostoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lavorostoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lavorostoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of lavorostoricos.
     */
    distinct?: Enumerable<LavorostoricoScalarFieldEnum>
  }


  /**
   * lavorostorico findMany
   */
  export type lavorostoricoFindManyArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    /**
     * Filter, which lavorostoricos to fetch.
     */
    where?: lavorostoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lavorostoricos to fetch.
     */
    orderBy?: Enumerable<lavorostoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing lavorostoricos.
     */
    cursor?: lavorostoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lavorostoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lavorostoricos.
     */
    skip?: number
    distinct?: Enumerable<LavorostoricoScalarFieldEnum>
  }


  /**
   * lavorostorico create
   */
  export type lavorostoricoCreateArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    /**
     * The data needed to create a lavorostorico.
     */
    data: XOR<lavorostoricoCreateInput, lavorostoricoUncheckedCreateInput>
  }


  /**
   * lavorostorico createMany
   */
  export type lavorostoricoCreateManyArgs = {
    /**
     * The data used to create many lavorostoricos.
     */
    data: Enumerable<lavorostoricoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * lavorostorico update
   */
  export type lavorostoricoUpdateArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    /**
     * The data needed to update a lavorostorico.
     */
    data: XOR<lavorostoricoUpdateInput, lavorostoricoUncheckedUpdateInput>
    /**
     * Choose, which lavorostorico to update.
     */
    where: lavorostoricoWhereUniqueInput
  }


  /**
   * lavorostorico updateMany
   */
  export type lavorostoricoUpdateManyArgs = {
    /**
     * The data used to update lavorostoricos.
     */
    data: XOR<lavorostoricoUpdateManyMutationInput, lavorostoricoUncheckedUpdateManyInput>
    /**
     * Filter which lavorostoricos to update
     */
    where?: lavorostoricoWhereInput
  }


  /**
   * lavorostorico upsert
   */
  export type lavorostoricoUpsertArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    /**
     * The filter to search for the lavorostorico to update in case it exists.
     */
    where: lavorostoricoWhereUniqueInput
    /**
     * In case the lavorostorico found by the `where` argument doesn't exist, create a new lavorostorico with this data.
     */
    create: XOR<lavorostoricoCreateInput, lavorostoricoUncheckedCreateInput>
    /**
     * In case the lavorostorico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<lavorostoricoUpdateInput, lavorostoricoUncheckedUpdateInput>
  }


  /**
   * lavorostorico delete
   */
  export type lavorostoricoDeleteArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    /**
     * Filter which lavorostorico to delete.
     */
    where: lavorostoricoWhereUniqueInput
  }


  /**
   * lavorostorico deleteMany
   */
  export type lavorostoricoDeleteManyArgs = {
    /**
     * Filter which lavorostoricos to delete
     */
    where?: lavorostoricoWhereInput
  }


  /**
   * lavorostorico without action
   */
  export type lavorostoricoArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
  }



  /**
   * Model livelliservizio
   */


  export type AggregateLivelliservizio = {
    _count: LivelliservizioCountAggregateOutputType | null
    _avg: LivelliservizioAvgAggregateOutputType | null
    _sum: LivelliservizioSumAggregateOutputType | null
    _min: LivelliservizioMinAggregateOutputType | null
    _max: LivelliservizioMaxAggregateOutputType | null
  }

  export type LivelliservizioAvgAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idUtente: number | null
    idLds: number | null
    idSegnalazione: number | null
    idLavoro: number | null
    elaborato: number | null
    idSchedulatore: number | null
  }

  export type LivelliservizioSumAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idUtente: number | null
    idLds: number | null
    idSegnalazione: number | null
    idLavoro: number | null
    elaborato: number | null
    idSchedulatore: number | null
  }

  export type LivelliservizioMinAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idUtente: number | null
    dataModifica: string | null
    idLds: number | null
    risultato: string | null
    detrazioneEffettivo: string | null
    premioEffettivo: string | null
    chiave: string | null
    unita: string | null
    idSegnalazione: number | null
    idLavoro: number | null
    dataIntervalloDa: string | null
    dataIntervalloA: string | null
    dataRichiesta: string | null
    dataInizioEffettivaLavoro: string | null
    dataChiusuraSegnalazione: string | null
    dataFineMassima: string | null
    elaborato: number | null
    idSchedulatore: number | null
    tipolavoro: string | null
    note: string | null
    dataCreazioneSegnalazione: string | null
  }

  export type LivelliservizioMaxAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idUtente: number | null
    dataModifica: string | null
    idLds: number | null
    risultato: string | null
    detrazioneEffettivo: string | null
    premioEffettivo: string | null
    chiave: string | null
    unita: string | null
    idSegnalazione: number | null
    idLavoro: number | null
    dataIntervalloDa: string | null
    dataIntervalloA: string | null
    dataRichiesta: string | null
    dataInizioEffettivaLavoro: string | null
    dataChiusuraSegnalazione: string | null
    dataFineMassima: string | null
    elaborato: number | null
    idSchedulatore: number | null
    tipolavoro: string | null
    note: string | null
    dataCreazioneSegnalazione: string | null
  }

  export type LivelliservizioCountAggregateOutputType = {
    id: number
    idAppalto: number
    idUtente: number
    dataModifica: number
    idLds: number
    risultato: number
    detrazioneEffettivo: number
    premioEffettivo: number
    chiave: number
    unita: number
    idSegnalazione: number
    idLavoro: number
    dataIntervalloDa: number
    dataIntervalloA: number
    dataRichiesta: number
    dataInizioEffettivaLavoro: number
    dataChiusuraSegnalazione: number
    dataFineMassima: number
    elaborato: number
    idSchedulatore: number
    tipolavoro: number
    note: number
    dataCreazioneSegnalazione: number
    _all: number
  }


  export type LivelliservizioAvgAggregateInputType = {
    id?: true
    idAppalto?: true
    idUtente?: true
    idLds?: true
    idSegnalazione?: true
    idLavoro?: true
    elaborato?: true
    idSchedulatore?: true
  }

  export type LivelliservizioSumAggregateInputType = {
    id?: true
    idAppalto?: true
    idUtente?: true
    idLds?: true
    idSegnalazione?: true
    idLavoro?: true
    elaborato?: true
    idSchedulatore?: true
  }

  export type LivelliservizioMinAggregateInputType = {
    id?: true
    idAppalto?: true
    idUtente?: true
    dataModifica?: true
    idLds?: true
    risultato?: true
    detrazioneEffettivo?: true
    premioEffettivo?: true
    chiave?: true
    unita?: true
    idSegnalazione?: true
    idLavoro?: true
    dataIntervalloDa?: true
    dataIntervalloA?: true
    dataRichiesta?: true
    dataInizioEffettivaLavoro?: true
    dataChiusuraSegnalazione?: true
    dataFineMassima?: true
    elaborato?: true
    idSchedulatore?: true
    tipolavoro?: true
    note?: true
    dataCreazioneSegnalazione?: true
  }

  export type LivelliservizioMaxAggregateInputType = {
    id?: true
    idAppalto?: true
    idUtente?: true
    dataModifica?: true
    idLds?: true
    risultato?: true
    detrazioneEffettivo?: true
    premioEffettivo?: true
    chiave?: true
    unita?: true
    idSegnalazione?: true
    idLavoro?: true
    dataIntervalloDa?: true
    dataIntervalloA?: true
    dataRichiesta?: true
    dataInizioEffettivaLavoro?: true
    dataChiusuraSegnalazione?: true
    dataFineMassima?: true
    elaborato?: true
    idSchedulatore?: true
    tipolavoro?: true
    note?: true
    dataCreazioneSegnalazione?: true
  }

  export type LivelliservizioCountAggregateInputType = {
    id?: true
    idAppalto?: true
    idUtente?: true
    dataModifica?: true
    idLds?: true
    risultato?: true
    detrazioneEffettivo?: true
    premioEffettivo?: true
    chiave?: true
    unita?: true
    idSegnalazione?: true
    idLavoro?: true
    dataIntervalloDa?: true
    dataIntervalloA?: true
    dataRichiesta?: true
    dataInizioEffettivaLavoro?: true
    dataChiusuraSegnalazione?: true
    dataFineMassima?: true
    elaborato?: true
    idSchedulatore?: true
    tipolavoro?: true
    note?: true
    dataCreazioneSegnalazione?: true
    _all?: true
  }

  export type LivelliservizioAggregateArgs = {
    /**
     * Filter which livelliservizio to aggregate.
     */
    where?: livelliservizioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliservizios to fetch.
     */
    orderBy?: Enumerable<livelliservizioOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: livelliservizioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliservizios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliservizios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned livelliservizios
    **/
    _count?: true | LivelliservizioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LivelliservizioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LivelliservizioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LivelliservizioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LivelliservizioMaxAggregateInputType
  }

  export type GetLivelliservizioAggregateType<T extends LivelliservizioAggregateArgs> = {
        [P in keyof T & keyof AggregateLivelliservizio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLivelliservizio[P]>
      : GetScalarType<T[P], AggregateLivelliservizio[P]>
  }




  export type LivelliservizioGroupByArgs = {
    where?: livelliservizioWhereInput
    orderBy?: Enumerable<livelliservizioOrderByWithAggregationInput>
    by: LivelliservizioScalarFieldEnum[]
    having?: livelliservizioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LivelliservizioCountAggregateInputType | true
    _avg?: LivelliservizioAvgAggregateInputType
    _sum?: LivelliservizioSumAggregateInputType
    _min?: LivelliservizioMinAggregateInputType
    _max?: LivelliservizioMaxAggregateInputType
  }


  export type LivelliservizioGroupByOutputType = {
    id: number
    idAppalto: number | null
    idUtente: number | null
    dataModifica: string | null
    idLds: number | null
    risultato: string | null
    detrazioneEffettivo: string | null
    premioEffettivo: string | null
    chiave: string | null
    unita: string | null
    idSegnalazione: number | null
    idLavoro: number | null
    dataIntervalloDa: string | null
    dataIntervalloA: string | null
    dataRichiesta: string | null
    dataInizioEffettivaLavoro: string | null
    dataChiusuraSegnalazione: string | null
    dataFineMassima: string | null
    elaborato: number | null
    idSchedulatore: number | null
    tipolavoro: string | null
    note: string | null
    dataCreazioneSegnalazione: string | null
    _count: LivelliservizioCountAggregateOutputType | null
    _avg: LivelliservizioAvgAggregateOutputType | null
    _sum: LivelliservizioSumAggregateOutputType | null
    _min: LivelliservizioMinAggregateOutputType | null
    _max: LivelliservizioMaxAggregateOutputType | null
  }

  type GetLivelliservizioGroupByPayload<T extends LivelliservizioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<LivelliservizioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LivelliservizioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LivelliservizioGroupByOutputType[P]>
            : GetScalarType<T[P], LivelliservizioGroupByOutputType[P]>
        }
      >
    >


  export type livelliservizioSelect = {
    id?: boolean
    idAppalto?: boolean
    idUtente?: boolean
    dataModifica?: boolean
    idLds?: boolean
    risultato?: boolean
    detrazioneEffettivo?: boolean
    premioEffettivo?: boolean
    chiave?: boolean
    unita?: boolean
    idSegnalazione?: boolean
    idLavoro?: boolean
    dataIntervalloDa?: boolean
    dataIntervalloA?: boolean
    dataRichiesta?: boolean
    dataInizioEffettivaLavoro?: boolean
    dataChiusuraSegnalazione?: boolean
    dataFineMassima?: boolean
    elaborato?: boolean
    idSchedulatore?: boolean
    tipolavoro?: boolean
    note?: boolean
    dataCreazioneSegnalazione?: boolean
    livelliserviziodescrizione?: boolean | livelliserviziodescrizioneArgs
    utenti?: boolean | utentiArgs
  }


  export type livelliservizioInclude = {
    livelliserviziodescrizione?: boolean | livelliserviziodescrizioneArgs
    utenti?: boolean | utentiArgs
  }

  export type livelliservizioGetPayload<S extends boolean | null | undefined | livelliservizioArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? livelliservizio :
    S extends undefined ? never :
    S extends { include: any } & (livelliservizioArgs | livelliservizioFindManyArgs)
    ? livelliservizio  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'livelliserviziodescrizione' ? livelliserviziodescrizioneGetPayload<S['include'][P]> | null :
        P extends 'utenti' ? utentiGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (livelliservizioArgs | livelliservizioFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'livelliserviziodescrizione' ? livelliserviziodescrizioneGetPayload<S['select'][P]> | null :
        P extends 'utenti' ? utentiGetPayload<S['select'][P]> | null :  P extends keyof livelliservizio ? livelliservizio[P] : never
  } 
      : livelliservizio


  type livelliservizioCountArgs = 
    Omit<livelliservizioFindManyArgs, 'select' | 'include'> & {
      select?: LivelliservizioCountAggregateInputType | true
    }

  export interface livelliservizioDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Livelliservizio that matches the filter.
     * @param {livelliservizioFindUniqueArgs} args - Arguments to find a Livelliservizio
     * @example
     * // Get one Livelliservizio
     * const livelliservizio = await prisma.livelliservizio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends livelliservizioFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, livelliservizioFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'livelliservizio'> extends True ? Prisma__livelliservizioClient<livelliservizioGetPayload<T>> : Prisma__livelliservizioClient<livelliservizioGetPayload<T> | null, null>

    /**
     * Find one Livelliservizio that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {livelliservizioFindUniqueOrThrowArgs} args - Arguments to find a Livelliservizio
     * @example
     * // Get one Livelliservizio
     * const livelliservizio = await prisma.livelliservizio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends livelliservizioFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, livelliservizioFindUniqueOrThrowArgs>
    ): Prisma__livelliservizioClient<livelliservizioGetPayload<T>>

    /**
     * Find the first Livelliservizio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliservizioFindFirstArgs} args - Arguments to find a Livelliservizio
     * @example
     * // Get one Livelliservizio
     * const livelliservizio = await prisma.livelliservizio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends livelliservizioFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, livelliservizioFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'livelliservizio'> extends True ? Prisma__livelliservizioClient<livelliservizioGetPayload<T>> : Prisma__livelliservizioClient<livelliservizioGetPayload<T> | null, null>

    /**
     * Find the first Livelliservizio that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliservizioFindFirstOrThrowArgs} args - Arguments to find a Livelliservizio
     * @example
     * // Get one Livelliservizio
     * const livelliservizio = await prisma.livelliservizio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends livelliservizioFindFirstOrThrowArgs>(
      args?: SelectSubset<T, livelliservizioFindFirstOrThrowArgs>
    ): Prisma__livelliservizioClient<livelliservizioGetPayload<T>>

    /**
     * Find zero or more Livelliservizios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliservizioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Livelliservizios
     * const livelliservizios = await prisma.livelliservizio.findMany()
     * 
     * // Get first 10 Livelliservizios
     * const livelliservizios = await prisma.livelliservizio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const livelliservizioWithIdOnly = await prisma.livelliservizio.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends livelliservizioFindManyArgs>(
      args?: SelectSubset<T, livelliservizioFindManyArgs>
    ): Prisma.PrismaPromise<Array<livelliservizioGetPayload<T>>>

    /**
     * Create a Livelliservizio.
     * @param {livelliservizioCreateArgs} args - Arguments to create a Livelliservizio.
     * @example
     * // Create one Livelliservizio
     * const Livelliservizio = await prisma.livelliservizio.create({
     *   data: {
     *     // ... data to create a Livelliservizio
     *   }
     * })
     * 
    **/
    create<T extends livelliservizioCreateArgs>(
      args: SelectSubset<T, livelliservizioCreateArgs>
    ): Prisma__livelliservizioClient<livelliservizioGetPayload<T>>

    /**
     * Create many Livelliservizios.
     *     @param {livelliservizioCreateManyArgs} args - Arguments to create many Livelliservizios.
     *     @example
     *     // Create many Livelliservizios
     *     const livelliservizio = await prisma.livelliservizio.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends livelliservizioCreateManyArgs>(
      args?: SelectSubset<T, livelliservizioCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Livelliservizio.
     * @param {livelliservizioDeleteArgs} args - Arguments to delete one Livelliservizio.
     * @example
     * // Delete one Livelliservizio
     * const Livelliservizio = await prisma.livelliservizio.delete({
     *   where: {
     *     // ... filter to delete one Livelliservizio
     *   }
     * })
     * 
    **/
    delete<T extends livelliservizioDeleteArgs>(
      args: SelectSubset<T, livelliservizioDeleteArgs>
    ): Prisma__livelliservizioClient<livelliservizioGetPayload<T>>

    /**
     * Update one Livelliservizio.
     * @param {livelliservizioUpdateArgs} args - Arguments to update one Livelliservizio.
     * @example
     * // Update one Livelliservizio
     * const livelliservizio = await prisma.livelliservizio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends livelliservizioUpdateArgs>(
      args: SelectSubset<T, livelliservizioUpdateArgs>
    ): Prisma__livelliservizioClient<livelliservizioGetPayload<T>>

    /**
     * Delete zero or more Livelliservizios.
     * @param {livelliservizioDeleteManyArgs} args - Arguments to filter Livelliservizios to delete.
     * @example
     * // Delete a few Livelliservizios
     * const { count } = await prisma.livelliservizio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends livelliservizioDeleteManyArgs>(
      args?: SelectSubset<T, livelliservizioDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Livelliservizios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliservizioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Livelliservizios
     * const livelliservizio = await prisma.livelliservizio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends livelliservizioUpdateManyArgs>(
      args: SelectSubset<T, livelliservizioUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Livelliservizio.
     * @param {livelliservizioUpsertArgs} args - Arguments to update or create a Livelliservizio.
     * @example
     * // Update or create a Livelliservizio
     * const livelliservizio = await prisma.livelliservizio.upsert({
     *   create: {
     *     // ... data to create a Livelliservizio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Livelliservizio we want to update
     *   }
     * })
    **/
    upsert<T extends livelliservizioUpsertArgs>(
      args: SelectSubset<T, livelliservizioUpsertArgs>
    ): Prisma__livelliservizioClient<livelliservizioGetPayload<T>>

    /**
     * Count the number of Livelliservizios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliservizioCountArgs} args - Arguments to filter Livelliservizios to count.
     * @example
     * // Count the number of Livelliservizios
     * const count = await prisma.livelliservizio.count({
     *   where: {
     *     // ... the filter for the Livelliservizios we want to count
     *   }
     * })
    **/
    count<T extends livelliservizioCountArgs>(
      args?: Subset<T, livelliservizioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LivelliservizioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Livelliservizio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivelliservizioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LivelliservizioAggregateArgs>(args: Subset<T, LivelliservizioAggregateArgs>): Prisma.PrismaPromise<GetLivelliservizioAggregateType<T>>

    /**
     * Group by Livelliservizio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivelliservizioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LivelliservizioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LivelliservizioGroupByArgs['orderBy'] }
        : { orderBy?: LivelliservizioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LivelliservizioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLivelliservizioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for livelliservizio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__livelliservizioClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    livelliserviziodescrizione<T extends livelliserviziodescrizioneArgs= {}>(args?: Subset<T, livelliserviziodescrizioneArgs>): Prisma__livelliserviziodescrizioneClient<livelliserviziodescrizioneGetPayload<T> | Null>;

    utenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * livelliservizio base type for findUnique actions
   */
  export type livelliservizioFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the livelliservizio
     */
    select?: livelliservizioSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliservizioInclude | null
    /**
     * Filter, which livelliservizio to fetch.
     */
    where: livelliservizioWhereUniqueInput
  }

  /**
   * livelliservizio findUnique
   */
  export interface livelliservizioFindUniqueArgs extends livelliservizioFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * livelliservizio findUniqueOrThrow
   */
  export type livelliservizioFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the livelliservizio
     */
    select?: livelliservizioSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliservizioInclude | null
    /**
     * Filter, which livelliservizio to fetch.
     */
    where: livelliservizioWhereUniqueInput
  }


  /**
   * livelliservizio base type for findFirst actions
   */
  export type livelliservizioFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the livelliservizio
     */
    select?: livelliservizioSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliservizioInclude | null
    /**
     * Filter, which livelliservizio to fetch.
     */
    where?: livelliservizioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliservizios to fetch.
     */
    orderBy?: Enumerable<livelliservizioOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for livelliservizios.
     */
    cursor?: livelliservizioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliservizios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliservizios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of livelliservizios.
     */
    distinct?: Enumerable<LivelliservizioScalarFieldEnum>
  }

  /**
   * livelliservizio findFirst
   */
  export interface livelliservizioFindFirstArgs extends livelliservizioFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * livelliservizio findFirstOrThrow
   */
  export type livelliservizioFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the livelliservizio
     */
    select?: livelliservizioSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliservizioInclude | null
    /**
     * Filter, which livelliservizio to fetch.
     */
    where?: livelliservizioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliservizios to fetch.
     */
    orderBy?: Enumerable<livelliservizioOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for livelliservizios.
     */
    cursor?: livelliservizioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliservizios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliservizios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of livelliservizios.
     */
    distinct?: Enumerable<LivelliservizioScalarFieldEnum>
  }


  /**
   * livelliservizio findMany
   */
  export type livelliservizioFindManyArgs = {
    /**
     * Select specific fields to fetch from the livelliservizio
     */
    select?: livelliservizioSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliservizioInclude | null
    /**
     * Filter, which livelliservizios to fetch.
     */
    where?: livelliservizioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliservizios to fetch.
     */
    orderBy?: Enumerable<livelliservizioOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing livelliservizios.
     */
    cursor?: livelliservizioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliservizios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliservizios.
     */
    skip?: number
    distinct?: Enumerable<LivelliservizioScalarFieldEnum>
  }


  /**
   * livelliservizio create
   */
  export type livelliservizioCreateArgs = {
    /**
     * Select specific fields to fetch from the livelliservizio
     */
    select?: livelliservizioSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliservizioInclude | null
    /**
     * The data needed to create a livelliservizio.
     */
    data: XOR<livelliservizioCreateInput, livelliservizioUncheckedCreateInput>
  }


  /**
   * livelliservizio createMany
   */
  export type livelliservizioCreateManyArgs = {
    /**
     * The data used to create many livelliservizios.
     */
    data: Enumerable<livelliservizioCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * livelliservizio update
   */
  export type livelliservizioUpdateArgs = {
    /**
     * Select specific fields to fetch from the livelliservizio
     */
    select?: livelliservizioSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliservizioInclude | null
    /**
     * The data needed to update a livelliservizio.
     */
    data: XOR<livelliservizioUpdateInput, livelliservizioUncheckedUpdateInput>
    /**
     * Choose, which livelliservizio to update.
     */
    where: livelliservizioWhereUniqueInput
  }


  /**
   * livelliservizio updateMany
   */
  export type livelliservizioUpdateManyArgs = {
    /**
     * The data used to update livelliservizios.
     */
    data: XOR<livelliservizioUpdateManyMutationInput, livelliservizioUncheckedUpdateManyInput>
    /**
     * Filter which livelliservizios to update
     */
    where?: livelliservizioWhereInput
  }


  /**
   * livelliservizio upsert
   */
  export type livelliservizioUpsertArgs = {
    /**
     * Select specific fields to fetch from the livelliservizio
     */
    select?: livelliservizioSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliservizioInclude | null
    /**
     * The filter to search for the livelliservizio to update in case it exists.
     */
    where: livelliservizioWhereUniqueInput
    /**
     * In case the livelliservizio found by the `where` argument doesn't exist, create a new livelliservizio with this data.
     */
    create: XOR<livelliservizioCreateInput, livelliservizioUncheckedCreateInput>
    /**
     * In case the livelliservizio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<livelliservizioUpdateInput, livelliservizioUncheckedUpdateInput>
  }


  /**
   * livelliservizio delete
   */
  export type livelliservizioDeleteArgs = {
    /**
     * Select specific fields to fetch from the livelliservizio
     */
    select?: livelliservizioSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliservizioInclude | null
    /**
     * Filter which livelliservizio to delete.
     */
    where: livelliservizioWhereUniqueInput
  }


  /**
   * livelliservizio deleteMany
   */
  export type livelliservizioDeleteManyArgs = {
    /**
     * Filter which livelliservizios to delete
     */
    where?: livelliservizioWhereInput
  }


  /**
   * livelliservizio without action
   */
  export type livelliservizioArgs = {
    /**
     * Select specific fields to fetch from the livelliservizio
     */
    select?: livelliservizioSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliservizioInclude | null
  }



  /**
   * Model livelliserviziocanone
   */


  export type AggregateLivelliserviziocanone = {
    _count: LivelliserviziocanoneCountAggregateOutputType | null
    _avg: LivelliserviziocanoneAvgAggregateOutputType | null
    _sum: LivelliserviziocanoneSumAggregateOutputType | null
    _min: LivelliserviziocanoneMinAggregateOutputType | null
    _max: LivelliserviziocanoneMaxAggregateOutputType | null
  }

  export type LivelliserviziocanoneAvgAggregateOutputType = {
    id: number | null
    idLds: number | null
    semestre: number | null
    trimestre: number | null
    canoneCalcoloLdS: number | null
  }

  export type LivelliserviziocanoneSumAggregateOutputType = {
    id: number | null
    idLds: number | null
    semestre: number | null
    trimestre: number | null
    canoneCalcoloLdS: number | null
  }

  export type LivelliserviziocanoneMinAggregateOutputType = {
    id: number | null
    idLds: number | null
    anno: string | null
    semestre: number | null
    trimestre: number | null
    canoneCalcoloLdS: number | null
  }

  export type LivelliserviziocanoneMaxAggregateOutputType = {
    id: number | null
    idLds: number | null
    anno: string | null
    semestre: number | null
    trimestre: number | null
    canoneCalcoloLdS: number | null
  }

  export type LivelliserviziocanoneCountAggregateOutputType = {
    id: number
    idLds: number
    anno: number
    semestre: number
    trimestre: number
    canoneCalcoloLdS: number
    _all: number
  }


  export type LivelliserviziocanoneAvgAggregateInputType = {
    id?: true
    idLds?: true
    semestre?: true
    trimestre?: true
    canoneCalcoloLdS?: true
  }

  export type LivelliserviziocanoneSumAggregateInputType = {
    id?: true
    idLds?: true
    semestre?: true
    trimestre?: true
    canoneCalcoloLdS?: true
  }

  export type LivelliserviziocanoneMinAggregateInputType = {
    id?: true
    idLds?: true
    anno?: true
    semestre?: true
    trimestre?: true
    canoneCalcoloLdS?: true
  }

  export type LivelliserviziocanoneMaxAggregateInputType = {
    id?: true
    idLds?: true
    anno?: true
    semestre?: true
    trimestre?: true
    canoneCalcoloLdS?: true
  }

  export type LivelliserviziocanoneCountAggregateInputType = {
    id?: true
    idLds?: true
    anno?: true
    semestre?: true
    trimestre?: true
    canoneCalcoloLdS?: true
    _all?: true
  }

  export type LivelliserviziocanoneAggregateArgs = {
    /**
     * Filter which livelliserviziocanone to aggregate.
     */
    where?: livelliserviziocanoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliserviziocanones to fetch.
     */
    orderBy?: Enumerable<livelliserviziocanoneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: livelliserviziocanoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliserviziocanones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliserviziocanones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned livelliserviziocanones
    **/
    _count?: true | LivelliserviziocanoneCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LivelliserviziocanoneAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LivelliserviziocanoneSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LivelliserviziocanoneMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LivelliserviziocanoneMaxAggregateInputType
  }

  export type GetLivelliserviziocanoneAggregateType<T extends LivelliserviziocanoneAggregateArgs> = {
        [P in keyof T & keyof AggregateLivelliserviziocanone]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLivelliserviziocanone[P]>
      : GetScalarType<T[P], AggregateLivelliserviziocanone[P]>
  }




  export type LivelliserviziocanoneGroupByArgs = {
    where?: livelliserviziocanoneWhereInput
    orderBy?: Enumerable<livelliserviziocanoneOrderByWithAggregationInput>
    by: LivelliserviziocanoneScalarFieldEnum[]
    having?: livelliserviziocanoneScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LivelliserviziocanoneCountAggregateInputType | true
    _avg?: LivelliserviziocanoneAvgAggregateInputType
    _sum?: LivelliserviziocanoneSumAggregateInputType
    _min?: LivelliserviziocanoneMinAggregateInputType
    _max?: LivelliserviziocanoneMaxAggregateInputType
  }


  export type LivelliserviziocanoneGroupByOutputType = {
    id: number
    idLds: number | null
    anno: string | null
    semestre: number | null
    trimestre: number | null
    canoneCalcoloLdS: number | null
    _count: LivelliserviziocanoneCountAggregateOutputType | null
    _avg: LivelliserviziocanoneAvgAggregateOutputType | null
    _sum: LivelliserviziocanoneSumAggregateOutputType | null
    _min: LivelliserviziocanoneMinAggregateOutputType | null
    _max: LivelliserviziocanoneMaxAggregateOutputType | null
  }

  type GetLivelliserviziocanoneGroupByPayload<T extends LivelliserviziocanoneGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<LivelliserviziocanoneGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LivelliserviziocanoneGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LivelliserviziocanoneGroupByOutputType[P]>
            : GetScalarType<T[P], LivelliserviziocanoneGroupByOutputType[P]>
        }
      >
    >


  export type livelliserviziocanoneSelect = {
    id?: boolean
    idLds?: boolean
    anno?: boolean
    semestre?: boolean
    trimestre?: boolean
    canoneCalcoloLdS?: boolean
  }


  export type livelliserviziocanoneGetPayload<S extends boolean | null | undefined | livelliserviziocanoneArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? livelliserviziocanone :
    S extends undefined ? never :
    S extends { include: any } & (livelliserviziocanoneArgs | livelliserviziocanoneFindManyArgs)
    ? livelliserviziocanone 
    : S extends { select: any } & (livelliserviziocanoneArgs | livelliserviziocanoneFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof livelliserviziocanone ? livelliserviziocanone[P] : never
  } 
      : livelliserviziocanone


  type livelliserviziocanoneCountArgs = 
    Omit<livelliserviziocanoneFindManyArgs, 'select' | 'include'> & {
      select?: LivelliserviziocanoneCountAggregateInputType | true
    }

  export interface livelliserviziocanoneDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Livelliserviziocanone that matches the filter.
     * @param {livelliserviziocanoneFindUniqueArgs} args - Arguments to find a Livelliserviziocanone
     * @example
     * // Get one Livelliserviziocanone
     * const livelliserviziocanone = await prisma.livelliserviziocanone.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends livelliserviziocanoneFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, livelliserviziocanoneFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'livelliserviziocanone'> extends True ? Prisma__livelliserviziocanoneClient<livelliserviziocanoneGetPayload<T>> : Prisma__livelliserviziocanoneClient<livelliserviziocanoneGetPayload<T> | null, null>

    /**
     * Find one Livelliserviziocanone that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {livelliserviziocanoneFindUniqueOrThrowArgs} args - Arguments to find a Livelliserviziocanone
     * @example
     * // Get one Livelliserviziocanone
     * const livelliserviziocanone = await prisma.livelliserviziocanone.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends livelliserviziocanoneFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, livelliserviziocanoneFindUniqueOrThrowArgs>
    ): Prisma__livelliserviziocanoneClient<livelliserviziocanoneGetPayload<T>>

    /**
     * Find the first Livelliserviziocanone that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliserviziocanoneFindFirstArgs} args - Arguments to find a Livelliserviziocanone
     * @example
     * // Get one Livelliserviziocanone
     * const livelliserviziocanone = await prisma.livelliserviziocanone.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends livelliserviziocanoneFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, livelliserviziocanoneFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'livelliserviziocanone'> extends True ? Prisma__livelliserviziocanoneClient<livelliserviziocanoneGetPayload<T>> : Prisma__livelliserviziocanoneClient<livelliserviziocanoneGetPayload<T> | null, null>

    /**
     * Find the first Livelliserviziocanone that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliserviziocanoneFindFirstOrThrowArgs} args - Arguments to find a Livelliserviziocanone
     * @example
     * // Get one Livelliserviziocanone
     * const livelliserviziocanone = await prisma.livelliserviziocanone.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends livelliserviziocanoneFindFirstOrThrowArgs>(
      args?: SelectSubset<T, livelliserviziocanoneFindFirstOrThrowArgs>
    ): Prisma__livelliserviziocanoneClient<livelliserviziocanoneGetPayload<T>>

    /**
     * Find zero or more Livelliserviziocanones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliserviziocanoneFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Livelliserviziocanones
     * const livelliserviziocanones = await prisma.livelliserviziocanone.findMany()
     * 
     * // Get first 10 Livelliserviziocanones
     * const livelliserviziocanones = await prisma.livelliserviziocanone.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const livelliserviziocanoneWithIdOnly = await prisma.livelliserviziocanone.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends livelliserviziocanoneFindManyArgs>(
      args?: SelectSubset<T, livelliserviziocanoneFindManyArgs>
    ): Prisma.PrismaPromise<Array<livelliserviziocanoneGetPayload<T>>>

    /**
     * Create a Livelliserviziocanone.
     * @param {livelliserviziocanoneCreateArgs} args - Arguments to create a Livelliserviziocanone.
     * @example
     * // Create one Livelliserviziocanone
     * const Livelliserviziocanone = await prisma.livelliserviziocanone.create({
     *   data: {
     *     // ... data to create a Livelliserviziocanone
     *   }
     * })
     * 
    **/
    create<T extends livelliserviziocanoneCreateArgs>(
      args: SelectSubset<T, livelliserviziocanoneCreateArgs>
    ): Prisma__livelliserviziocanoneClient<livelliserviziocanoneGetPayload<T>>

    /**
     * Create many Livelliserviziocanones.
     *     @param {livelliserviziocanoneCreateManyArgs} args - Arguments to create many Livelliserviziocanones.
     *     @example
     *     // Create many Livelliserviziocanones
     *     const livelliserviziocanone = await prisma.livelliserviziocanone.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends livelliserviziocanoneCreateManyArgs>(
      args?: SelectSubset<T, livelliserviziocanoneCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Livelliserviziocanone.
     * @param {livelliserviziocanoneDeleteArgs} args - Arguments to delete one Livelliserviziocanone.
     * @example
     * // Delete one Livelliserviziocanone
     * const Livelliserviziocanone = await prisma.livelliserviziocanone.delete({
     *   where: {
     *     // ... filter to delete one Livelliserviziocanone
     *   }
     * })
     * 
    **/
    delete<T extends livelliserviziocanoneDeleteArgs>(
      args: SelectSubset<T, livelliserviziocanoneDeleteArgs>
    ): Prisma__livelliserviziocanoneClient<livelliserviziocanoneGetPayload<T>>

    /**
     * Update one Livelliserviziocanone.
     * @param {livelliserviziocanoneUpdateArgs} args - Arguments to update one Livelliserviziocanone.
     * @example
     * // Update one Livelliserviziocanone
     * const livelliserviziocanone = await prisma.livelliserviziocanone.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends livelliserviziocanoneUpdateArgs>(
      args: SelectSubset<T, livelliserviziocanoneUpdateArgs>
    ): Prisma__livelliserviziocanoneClient<livelliserviziocanoneGetPayload<T>>

    /**
     * Delete zero or more Livelliserviziocanones.
     * @param {livelliserviziocanoneDeleteManyArgs} args - Arguments to filter Livelliserviziocanones to delete.
     * @example
     * // Delete a few Livelliserviziocanones
     * const { count } = await prisma.livelliserviziocanone.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends livelliserviziocanoneDeleteManyArgs>(
      args?: SelectSubset<T, livelliserviziocanoneDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Livelliserviziocanones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliserviziocanoneUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Livelliserviziocanones
     * const livelliserviziocanone = await prisma.livelliserviziocanone.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends livelliserviziocanoneUpdateManyArgs>(
      args: SelectSubset<T, livelliserviziocanoneUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Livelliserviziocanone.
     * @param {livelliserviziocanoneUpsertArgs} args - Arguments to update or create a Livelliserviziocanone.
     * @example
     * // Update or create a Livelliserviziocanone
     * const livelliserviziocanone = await prisma.livelliserviziocanone.upsert({
     *   create: {
     *     // ... data to create a Livelliserviziocanone
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Livelliserviziocanone we want to update
     *   }
     * })
    **/
    upsert<T extends livelliserviziocanoneUpsertArgs>(
      args: SelectSubset<T, livelliserviziocanoneUpsertArgs>
    ): Prisma__livelliserviziocanoneClient<livelliserviziocanoneGetPayload<T>>

    /**
     * Count the number of Livelliserviziocanones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliserviziocanoneCountArgs} args - Arguments to filter Livelliserviziocanones to count.
     * @example
     * // Count the number of Livelliserviziocanones
     * const count = await prisma.livelliserviziocanone.count({
     *   where: {
     *     // ... the filter for the Livelliserviziocanones we want to count
     *   }
     * })
    **/
    count<T extends livelliserviziocanoneCountArgs>(
      args?: Subset<T, livelliserviziocanoneCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LivelliserviziocanoneCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Livelliserviziocanone.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivelliserviziocanoneAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LivelliserviziocanoneAggregateArgs>(args: Subset<T, LivelliserviziocanoneAggregateArgs>): Prisma.PrismaPromise<GetLivelliserviziocanoneAggregateType<T>>

    /**
     * Group by Livelliserviziocanone.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivelliserviziocanoneGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LivelliserviziocanoneGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LivelliserviziocanoneGroupByArgs['orderBy'] }
        : { orderBy?: LivelliserviziocanoneGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LivelliserviziocanoneGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLivelliserviziocanoneGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for livelliserviziocanone.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__livelliserviziocanoneClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * livelliserviziocanone base type for findUnique actions
   */
  export type livelliserviziocanoneFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the livelliserviziocanone
     */
    select?: livelliserviziocanoneSelect | null
    /**
     * Filter, which livelliserviziocanone to fetch.
     */
    where: livelliserviziocanoneWhereUniqueInput
  }

  /**
   * livelliserviziocanone findUnique
   */
  export interface livelliserviziocanoneFindUniqueArgs extends livelliserviziocanoneFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * livelliserviziocanone findUniqueOrThrow
   */
  export type livelliserviziocanoneFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziocanone
     */
    select?: livelliserviziocanoneSelect | null
    /**
     * Filter, which livelliserviziocanone to fetch.
     */
    where: livelliserviziocanoneWhereUniqueInput
  }


  /**
   * livelliserviziocanone base type for findFirst actions
   */
  export type livelliserviziocanoneFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the livelliserviziocanone
     */
    select?: livelliserviziocanoneSelect | null
    /**
     * Filter, which livelliserviziocanone to fetch.
     */
    where?: livelliserviziocanoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliserviziocanones to fetch.
     */
    orderBy?: Enumerable<livelliserviziocanoneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for livelliserviziocanones.
     */
    cursor?: livelliserviziocanoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliserviziocanones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliserviziocanones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of livelliserviziocanones.
     */
    distinct?: Enumerable<LivelliserviziocanoneScalarFieldEnum>
  }

  /**
   * livelliserviziocanone findFirst
   */
  export interface livelliserviziocanoneFindFirstArgs extends livelliserviziocanoneFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * livelliserviziocanone findFirstOrThrow
   */
  export type livelliserviziocanoneFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziocanone
     */
    select?: livelliserviziocanoneSelect | null
    /**
     * Filter, which livelliserviziocanone to fetch.
     */
    where?: livelliserviziocanoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliserviziocanones to fetch.
     */
    orderBy?: Enumerable<livelliserviziocanoneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for livelliserviziocanones.
     */
    cursor?: livelliserviziocanoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliserviziocanones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliserviziocanones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of livelliserviziocanones.
     */
    distinct?: Enumerable<LivelliserviziocanoneScalarFieldEnum>
  }


  /**
   * livelliserviziocanone findMany
   */
  export type livelliserviziocanoneFindManyArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziocanone
     */
    select?: livelliserviziocanoneSelect | null
    /**
     * Filter, which livelliserviziocanones to fetch.
     */
    where?: livelliserviziocanoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliserviziocanones to fetch.
     */
    orderBy?: Enumerable<livelliserviziocanoneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing livelliserviziocanones.
     */
    cursor?: livelliserviziocanoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliserviziocanones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliserviziocanones.
     */
    skip?: number
    distinct?: Enumerable<LivelliserviziocanoneScalarFieldEnum>
  }


  /**
   * livelliserviziocanone create
   */
  export type livelliserviziocanoneCreateArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziocanone
     */
    select?: livelliserviziocanoneSelect | null
    /**
     * The data needed to create a livelliserviziocanone.
     */
    data: XOR<livelliserviziocanoneCreateInput, livelliserviziocanoneUncheckedCreateInput>
  }


  /**
   * livelliserviziocanone createMany
   */
  export type livelliserviziocanoneCreateManyArgs = {
    /**
     * The data used to create many livelliserviziocanones.
     */
    data: Enumerable<livelliserviziocanoneCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * livelliserviziocanone update
   */
  export type livelliserviziocanoneUpdateArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziocanone
     */
    select?: livelliserviziocanoneSelect | null
    /**
     * The data needed to update a livelliserviziocanone.
     */
    data: XOR<livelliserviziocanoneUpdateInput, livelliserviziocanoneUncheckedUpdateInput>
    /**
     * Choose, which livelliserviziocanone to update.
     */
    where: livelliserviziocanoneWhereUniqueInput
  }


  /**
   * livelliserviziocanone updateMany
   */
  export type livelliserviziocanoneUpdateManyArgs = {
    /**
     * The data used to update livelliserviziocanones.
     */
    data: XOR<livelliserviziocanoneUpdateManyMutationInput, livelliserviziocanoneUncheckedUpdateManyInput>
    /**
     * Filter which livelliserviziocanones to update
     */
    where?: livelliserviziocanoneWhereInput
  }


  /**
   * livelliserviziocanone upsert
   */
  export type livelliserviziocanoneUpsertArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziocanone
     */
    select?: livelliserviziocanoneSelect | null
    /**
     * The filter to search for the livelliserviziocanone to update in case it exists.
     */
    where: livelliserviziocanoneWhereUniqueInput
    /**
     * In case the livelliserviziocanone found by the `where` argument doesn't exist, create a new livelliserviziocanone with this data.
     */
    create: XOR<livelliserviziocanoneCreateInput, livelliserviziocanoneUncheckedCreateInput>
    /**
     * In case the livelliserviziocanone was found with the provided `where` argument, update it with this data.
     */
    update: XOR<livelliserviziocanoneUpdateInput, livelliserviziocanoneUncheckedUpdateInput>
  }


  /**
   * livelliserviziocanone delete
   */
  export type livelliserviziocanoneDeleteArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziocanone
     */
    select?: livelliserviziocanoneSelect | null
    /**
     * Filter which livelliserviziocanone to delete.
     */
    where: livelliserviziocanoneWhereUniqueInput
  }


  /**
   * livelliserviziocanone deleteMany
   */
  export type livelliserviziocanoneDeleteManyArgs = {
    /**
     * Filter which livelliserviziocanones to delete
     */
    where?: livelliserviziocanoneWhereInput
  }


  /**
   * livelliserviziocanone without action
   */
  export type livelliserviziocanoneArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziocanone
     */
    select?: livelliserviziocanoneSelect | null
  }



  /**
   * Model livelliserviziodescrizione
   */


  export type AggregateLivelliserviziodescrizione = {
    _count: LivelliserviziodescrizioneCountAggregateOutputType | null
    _avg: LivelliserviziodescrizioneAvgAggregateOutputType | null
    _sum: LivelliserviziodescrizioneSumAggregateOutputType | null
    _min: LivelliserviziodescrizioneMinAggregateOutputType | null
    _max: LivelliserviziodescrizioneMaxAggregateOutputType | null
  }

  export type LivelliserviziodescrizioneAvgAggregateOutputType = {
    id: number | null
    penaleUnitaria: number | null
  }

  export type LivelliserviziodescrizioneSumAggregateOutputType = {
    id: number | null
    penaleUnitaria: number | null
  }

  export type LivelliserviziodescrizioneMinAggregateOutputType = {
    id: number | null
    ambito: string | null
    lds: string | null
    parametroValutazione: string | null
    ldsOT: string | null
    ldsCPT: string | null
    indiceScostamento: string | null
    penaleUnitaria: number | null
    controllo: string | null
    note: string | null
    tipo: string | null
    funzione: string | null
    tipoEstrazione: string | null
  }

  export type LivelliserviziodescrizioneMaxAggregateOutputType = {
    id: number | null
    ambito: string | null
    lds: string | null
    parametroValutazione: string | null
    ldsOT: string | null
    ldsCPT: string | null
    indiceScostamento: string | null
    penaleUnitaria: number | null
    controllo: string | null
    note: string | null
    tipo: string | null
    funzione: string | null
    tipoEstrazione: string | null
  }

  export type LivelliserviziodescrizioneCountAggregateOutputType = {
    id: number
    ambito: number
    lds: number
    parametroValutazione: number
    ldsOT: number
    ldsCPT: number
    indiceScostamento: number
    penaleUnitaria: number
    controllo: number
    note: number
    tipo: number
    funzione: number
    tipoEstrazione: number
    _all: number
  }


  export type LivelliserviziodescrizioneAvgAggregateInputType = {
    id?: true
    penaleUnitaria?: true
  }

  export type LivelliserviziodescrizioneSumAggregateInputType = {
    id?: true
    penaleUnitaria?: true
  }

  export type LivelliserviziodescrizioneMinAggregateInputType = {
    id?: true
    ambito?: true
    lds?: true
    parametroValutazione?: true
    ldsOT?: true
    ldsCPT?: true
    indiceScostamento?: true
    penaleUnitaria?: true
    controllo?: true
    note?: true
    tipo?: true
    funzione?: true
    tipoEstrazione?: true
  }

  export type LivelliserviziodescrizioneMaxAggregateInputType = {
    id?: true
    ambito?: true
    lds?: true
    parametroValutazione?: true
    ldsOT?: true
    ldsCPT?: true
    indiceScostamento?: true
    penaleUnitaria?: true
    controllo?: true
    note?: true
    tipo?: true
    funzione?: true
    tipoEstrazione?: true
  }

  export type LivelliserviziodescrizioneCountAggregateInputType = {
    id?: true
    ambito?: true
    lds?: true
    parametroValutazione?: true
    ldsOT?: true
    ldsCPT?: true
    indiceScostamento?: true
    penaleUnitaria?: true
    controllo?: true
    note?: true
    tipo?: true
    funzione?: true
    tipoEstrazione?: true
    _all?: true
  }

  export type LivelliserviziodescrizioneAggregateArgs = {
    /**
     * Filter which livelliserviziodescrizione to aggregate.
     */
    where?: livelliserviziodescrizioneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliserviziodescriziones to fetch.
     */
    orderBy?: Enumerable<livelliserviziodescrizioneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: livelliserviziodescrizioneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliserviziodescriziones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliserviziodescriziones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned livelliserviziodescriziones
    **/
    _count?: true | LivelliserviziodescrizioneCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LivelliserviziodescrizioneAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LivelliserviziodescrizioneSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LivelliserviziodescrizioneMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LivelliserviziodescrizioneMaxAggregateInputType
  }

  export type GetLivelliserviziodescrizioneAggregateType<T extends LivelliserviziodescrizioneAggregateArgs> = {
        [P in keyof T & keyof AggregateLivelliserviziodescrizione]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLivelliserviziodescrizione[P]>
      : GetScalarType<T[P], AggregateLivelliserviziodescrizione[P]>
  }




  export type LivelliserviziodescrizioneGroupByArgs = {
    where?: livelliserviziodescrizioneWhereInput
    orderBy?: Enumerable<livelliserviziodescrizioneOrderByWithAggregationInput>
    by: LivelliserviziodescrizioneScalarFieldEnum[]
    having?: livelliserviziodescrizioneScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LivelliserviziodescrizioneCountAggregateInputType | true
    _avg?: LivelliserviziodescrizioneAvgAggregateInputType
    _sum?: LivelliserviziodescrizioneSumAggregateInputType
    _min?: LivelliserviziodescrizioneMinAggregateInputType
    _max?: LivelliserviziodescrizioneMaxAggregateInputType
  }


  export type LivelliserviziodescrizioneGroupByOutputType = {
    id: number
    ambito: string | null
    lds: string | null
    parametroValutazione: string | null
    ldsOT: string | null
    ldsCPT: string | null
    indiceScostamento: string | null
    penaleUnitaria: number | null
    controllo: string | null
    note: string | null
    tipo: string | null
    funzione: string | null
    tipoEstrazione: string | null
    _count: LivelliserviziodescrizioneCountAggregateOutputType | null
    _avg: LivelliserviziodescrizioneAvgAggregateOutputType | null
    _sum: LivelliserviziodescrizioneSumAggregateOutputType | null
    _min: LivelliserviziodescrizioneMinAggregateOutputType | null
    _max: LivelliserviziodescrizioneMaxAggregateOutputType | null
  }

  type GetLivelliserviziodescrizioneGroupByPayload<T extends LivelliserviziodescrizioneGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<LivelliserviziodescrizioneGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LivelliserviziodescrizioneGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LivelliserviziodescrizioneGroupByOutputType[P]>
            : GetScalarType<T[P], LivelliserviziodescrizioneGroupByOutputType[P]>
        }
      >
    >


  export type livelliserviziodescrizioneSelect = {
    id?: boolean
    ambito?: boolean
    lds?: boolean
    parametroValutazione?: boolean
    ldsOT?: boolean
    ldsCPT?: boolean
    indiceScostamento?: boolean
    penaleUnitaria?: boolean
    controllo?: boolean
    note?: boolean
    tipo?: boolean
    funzione?: boolean
    tipoEstrazione?: boolean
    livelliservizio?: boolean | livelliserviziodescrizione$livelliservizioArgs
    _count?: boolean | LivelliserviziodescrizioneCountOutputTypeArgs
  }


  export type livelliserviziodescrizioneInclude = {
    livelliservizio?: boolean | livelliserviziodescrizione$livelliservizioArgs
    _count?: boolean | LivelliserviziodescrizioneCountOutputTypeArgs
  }

  export type livelliserviziodescrizioneGetPayload<S extends boolean | null | undefined | livelliserviziodescrizioneArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? livelliserviziodescrizione :
    S extends undefined ? never :
    S extends { include: any } & (livelliserviziodescrizioneArgs | livelliserviziodescrizioneFindManyArgs)
    ? livelliserviziodescrizione  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'livelliservizio' ? Array < livelliservizioGetPayload<S['include'][P]>>  :
        P extends '_count' ? LivelliserviziodescrizioneCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (livelliserviziodescrizioneArgs | livelliserviziodescrizioneFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'livelliservizio' ? Array < livelliservizioGetPayload<S['select'][P]>>  :
        P extends '_count' ? LivelliserviziodescrizioneCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof livelliserviziodescrizione ? livelliserviziodescrizione[P] : never
  } 
      : livelliserviziodescrizione


  type livelliserviziodescrizioneCountArgs = 
    Omit<livelliserviziodescrizioneFindManyArgs, 'select' | 'include'> & {
      select?: LivelliserviziodescrizioneCountAggregateInputType | true
    }

  export interface livelliserviziodescrizioneDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Livelliserviziodescrizione that matches the filter.
     * @param {livelliserviziodescrizioneFindUniqueArgs} args - Arguments to find a Livelliserviziodescrizione
     * @example
     * // Get one Livelliserviziodescrizione
     * const livelliserviziodescrizione = await prisma.livelliserviziodescrizione.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends livelliserviziodescrizioneFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, livelliserviziodescrizioneFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'livelliserviziodescrizione'> extends True ? Prisma__livelliserviziodescrizioneClient<livelliserviziodescrizioneGetPayload<T>> : Prisma__livelliserviziodescrizioneClient<livelliserviziodescrizioneGetPayload<T> | null, null>

    /**
     * Find one Livelliserviziodescrizione that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {livelliserviziodescrizioneFindUniqueOrThrowArgs} args - Arguments to find a Livelliserviziodescrizione
     * @example
     * // Get one Livelliserviziodescrizione
     * const livelliserviziodescrizione = await prisma.livelliserviziodescrizione.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends livelliserviziodescrizioneFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, livelliserviziodescrizioneFindUniqueOrThrowArgs>
    ): Prisma__livelliserviziodescrizioneClient<livelliserviziodescrizioneGetPayload<T>>

    /**
     * Find the first Livelliserviziodescrizione that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliserviziodescrizioneFindFirstArgs} args - Arguments to find a Livelliserviziodescrizione
     * @example
     * // Get one Livelliserviziodescrizione
     * const livelliserviziodescrizione = await prisma.livelliserviziodescrizione.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends livelliserviziodescrizioneFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, livelliserviziodescrizioneFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'livelliserviziodescrizione'> extends True ? Prisma__livelliserviziodescrizioneClient<livelliserviziodescrizioneGetPayload<T>> : Prisma__livelliserviziodescrizioneClient<livelliserviziodescrizioneGetPayload<T> | null, null>

    /**
     * Find the first Livelliserviziodescrizione that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliserviziodescrizioneFindFirstOrThrowArgs} args - Arguments to find a Livelliserviziodescrizione
     * @example
     * // Get one Livelliserviziodescrizione
     * const livelliserviziodescrizione = await prisma.livelliserviziodescrizione.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends livelliserviziodescrizioneFindFirstOrThrowArgs>(
      args?: SelectSubset<T, livelliserviziodescrizioneFindFirstOrThrowArgs>
    ): Prisma__livelliserviziodescrizioneClient<livelliserviziodescrizioneGetPayload<T>>

    /**
     * Find zero or more Livelliserviziodescriziones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliserviziodescrizioneFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Livelliserviziodescriziones
     * const livelliserviziodescriziones = await prisma.livelliserviziodescrizione.findMany()
     * 
     * // Get first 10 Livelliserviziodescriziones
     * const livelliserviziodescriziones = await prisma.livelliserviziodescrizione.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const livelliserviziodescrizioneWithIdOnly = await prisma.livelliserviziodescrizione.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends livelliserviziodescrizioneFindManyArgs>(
      args?: SelectSubset<T, livelliserviziodescrizioneFindManyArgs>
    ): Prisma.PrismaPromise<Array<livelliserviziodescrizioneGetPayload<T>>>

    /**
     * Create a Livelliserviziodescrizione.
     * @param {livelliserviziodescrizioneCreateArgs} args - Arguments to create a Livelliserviziodescrizione.
     * @example
     * // Create one Livelliserviziodescrizione
     * const Livelliserviziodescrizione = await prisma.livelliserviziodescrizione.create({
     *   data: {
     *     // ... data to create a Livelliserviziodescrizione
     *   }
     * })
     * 
    **/
    create<T extends livelliserviziodescrizioneCreateArgs>(
      args: SelectSubset<T, livelliserviziodescrizioneCreateArgs>
    ): Prisma__livelliserviziodescrizioneClient<livelliserviziodescrizioneGetPayload<T>>

    /**
     * Create many Livelliserviziodescriziones.
     *     @param {livelliserviziodescrizioneCreateManyArgs} args - Arguments to create many Livelliserviziodescriziones.
     *     @example
     *     // Create many Livelliserviziodescriziones
     *     const livelliserviziodescrizione = await prisma.livelliserviziodescrizione.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends livelliserviziodescrizioneCreateManyArgs>(
      args?: SelectSubset<T, livelliserviziodescrizioneCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Livelliserviziodescrizione.
     * @param {livelliserviziodescrizioneDeleteArgs} args - Arguments to delete one Livelliserviziodescrizione.
     * @example
     * // Delete one Livelliserviziodescrizione
     * const Livelliserviziodescrizione = await prisma.livelliserviziodescrizione.delete({
     *   where: {
     *     // ... filter to delete one Livelliserviziodescrizione
     *   }
     * })
     * 
    **/
    delete<T extends livelliserviziodescrizioneDeleteArgs>(
      args: SelectSubset<T, livelliserviziodescrizioneDeleteArgs>
    ): Prisma__livelliserviziodescrizioneClient<livelliserviziodescrizioneGetPayload<T>>

    /**
     * Update one Livelliserviziodescrizione.
     * @param {livelliserviziodescrizioneUpdateArgs} args - Arguments to update one Livelliserviziodescrizione.
     * @example
     * // Update one Livelliserviziodescrizione
     * const livelliserviziodescrizione = await prisma.livelliserviziodescrizione.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends livelliserviziodescrizioneUpdateArgs>(
      args: SelectSubset<T, livelliserviziodescrizioneUpdateArgs>
    ): Prisma__livelliserviziodescrizioneClient<livelliserviziodescrizioneGetPayload<T>>

    /**
     * Delete zero or more Livelliserviziodescriziones.
     * @param {livelliserviziodescrizioneDeleteManyArgs} args - Arguments to filter Livelliserviziodescriziones to delete.
     * @example
     * // Delete a few Livelliserviziodescriziones
     * const { count } = await prisma.livelliserviziodescrizione.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends livelliserviziodescrizioneDeleteManyArgs>(
      args?: SelectSubset<T, livelliserviziodescrizioneDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Livelliserviziodescriziones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliserviziodescrizioneUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Livelliserviziodescriziones
     * const livelliserviziodescrizione = await prisma.livelliserviziodescrizione.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends livelliserviziodescrizioneUpdateManyArgs>(
      args: SelectSubset<T, livelliserviziodescrizioneUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Livelliserviziodescrizione.
     * @param {livelliserviziodescrizioneUpsertArgs} args - Arguments to update or create a Livelliserviziodescrizione.
     * @example
     * // Update or create a Livelliserviziodescrizione
     * const livelliserviziodescrizione = await prisma.livelliserviziodescrizione.upsert({
     *   create: {
     *     // ... data to create a Livelliserviziodescrizione
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Livelliserviziodescrizione we want to update
     *   }
     * })
    **/
    upsert<T extends livelliserviziodescrizioneUpsertArgs>(
      args: SelectSubset<T, livelliserviziodescrizioneUpsertArgs>
    ): Prisma__livelliserviziodescrizioneClient<livelliserviziodescrizioneGetPayload<T>>

    /**
     * Count the number of Livelliserviziodescriziones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliserviziodescrizioneCountArgs} args - Arguments to filter Livelliserviziodescriziones to count.
     * @example
     * // Count the number of Livelliserviziodescriziones
     * const count = await prisma.livelliserviziodescrizione.count({
     *   where: {
     *     // ... the filter for the Livelliserviziodescriziones we want to count
     *   }
     * })
    **/
    count<T extends livelliserviziodescrizioneCountArgs>(
      args?: Subset<T, livelliserviziodescrizioneCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LivelliserviziodescrizioneCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Livelliserviziodescrizione.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivelliserviziodescrizioneAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LivelliserviziodescrizioneAggregateArgs>(args: Subset<T, LivelliserviziodescrizioneAggregateArgs>): Prisma.PrismaPromise<GetLivelliserviziodescrizioneAggregateType<T>>

    /**
     * Group by Livelliserviziodescrizione.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivelliserviziodescrizioneGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LivelliserviziodescrizioneGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LivelliserviziodescrizioneGroupByArgs['orderBy'] }
        : { orderBy?: LivelliserviziodescrizioneGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LivelliserviziodescrizioneGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLivelliserviziodescrizioneGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for livelliserviziodescrizione.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__livelliserviziodescrizioneClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    livelliservizio<T extends livelliserviziodescrizione$livelliservizioArgs= {}>(args?: Subset<T, livelliserviziodescrizione$livelliservizioArgs>): Prisma.PrismaPromise<Array<livelliservizioGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * livelliserviziodescrizione base type for findUnique actions
   */
  export type livelliserviziodescrizioneFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the livelliserviziodescrizione
     */
    select?: livelliserviziodescrizioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliserviziodescrizioneInclude | null
    /**
     * Filter, which livelliserviziodescrizione to fetch.
     */
    where: livelliserviziodescrizioneWhereUniqueInput
  }

  /**
   * livelliserviziodescrizione findUnique
   */
  export interface livelliserviziodescrizioneFindUniqueArgs extends livelliserviziodescrizioneFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * livelliserviziodescrizione findUniqueOrThrow
   */
  export type livelliserviziodescrizioneFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziodescrizione
     */
    select?: livelliserviziodescrizioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliserviziodescrizioneInclude | null
    /**
     * Filter, which livelliserviziodescrizione to fetch.
     */
    where: livelliserviziodescrizioneWhereUniqueInput
  }


  /**
   * livelliserviziodescrizione base type for findFirst actions
   */
  export type livelliserviziodescrizioneFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the livelliserviziodescrizione
     */
    select?: livelliserviziodescrizioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliserviziodescrizioneInclude | null
    /**
     * Filter, which livelliserviziodescrizione to fetch.
     */
    where?: livelliserviziodescrizioneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliserviziodescriziones to fetch.
     */
    orderBy?: Enumerable<livelliserviziodescrizioneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for livelliserviziodescriziones.
     */
    cursor?: livelliserviziodescrizioneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliserviziodescriziones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliserviziodescriziones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of livelliserviziodescriziones.
     */
    distinct?: Enumerable<LivelliserviziodescrizioneScalarFieldEnum>
  }

  /**
   * livelliserviziodescrizione findFirst
   */
  export interface livelliserviziodescrizioneFindFirstArgs extends livelliserviziodescrizioneFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * livelliserviziodescrizione findFirstOrThrow
   */
  export type livelliserviziodescrizioneFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziodescrizione
     */
    select?: livelliserviziodescrizioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliserviziodescrizioneInclude | null
    /**
     * Filter, which livelliserviziodescrizione to fetch.
     */
    where?: livelliserviziodescrizioneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliserviziodescriziones to fetch.
     */
    orderBy?: Enumerable<livelliserviziodescrizioneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for livelliserviziodescriziones.
     */
    cursor?: livelliserviziodescrizioneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliserviziodescriziones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliserviziodescriziones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of livelliserviziodescriziones.
     */
    distinct?: Enumerable<LivelliserviziodescrizioneScalarFieldEnum>
  }


  /**
   * livelliserviziodescrizione findMany
   */
  export type livelliserviziodescrizioneFindManyArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziodescrizione
     */
    select?: livelliserviziodescrizioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliserviziodescrizioneInclude | null
    /**
     * Filter, which livelliserviziodescriziones to fetch.
     */
    where?: livelliserviziodescrizioneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliserviziodescriziones to fetch.
     */
    orderBy?: Enumerable<livelliserviziodescrizioneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing livelliserviziodescriziones.
     */
    cursor?: livelliserviziodescrizioneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliserviziodescriziones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliserviziodescriziones.
     */
    skip?: number
    distinct?: Enumerable<LivelliserviziodescrizioneScalarFieldEnum>
  }


  /**
   * livelliserviziodescrizione create
   */
  export type livelliserviziodescrizioneCreateArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziodescrizione
     */
    select?: livelliserviziodescrizioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliserviziodescrizioneInclude | null
    /**
     * The data needed to create a livelliserviziodescrizione.
     */
    data: XOR<livelliserviziodescrizioneCreateInput, livelliserviziodescrizioneUncheckedCreateInput>
  }


  /**
   * livelliserviziodescrizione createMany
   */
  export type livelliserviziodescrizioneCreateManyArgs = {
    /**
     * The data used to create many livelliserviziodescriziones.
     */
    data: Enumerable<livelliserviziodescrizioneCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * livelliserviziodescrizione update
   */
  export type livelliserviziodescrizioneUpdateArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziodescrizione
     */
    select?: livelliserviziodescrizioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliserviziodescrizioneInclude | null
    /**
     * The data needed to update a livelliserviziodescrizione.
     */
    data: XOR<livelliserviziodescrizioneUpdateInput, livelliserviziodescrizioneUncheckedUpdateInput>
    /**
     * Choose, which livelliserviziodescrizione to update.
     */
    where: livelliserviziodescrizioneWhereUniqueInput
  }


  /**
   * livelliserviziodescrizione updateMany
   */
  export type livelliserviziodescrizioneUpdateManyArgs = {
    /**
     * The data used to update livelliserviziodescriziones.
     */
    data: XOR<livelliserviziodescrizioneUpdateManyMutationInput, livelliserviziodescrizioneUncheckedUpdateManyInput>
    /**
     * Filter which livelliserviziodescriziones to update
     */
    where?: livelliserviziodescrizioneWhereInput
  }


  /**
   * livelliserviziodescrizione upsert
   */
  export type livelliserviziodescrizioneUpsertArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziodescrizione
     */
    select?: livelliserviziodescrizioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliserviziodescrizioneInclude | null
    /**
     * The filter to search for the livelliserviziodescrizione to update in case it exists.
     */
    where: livelliserviziodescrizioneWhereUniqueInput
    /**
     * In case the livelliserviziodescrizione found by the `where` argument doesn't exist, create a new livelliserviziodescrizione with this data.
     */
    create: XOR<livelliserviziodescrizioneCreateInput, livelliserviziodescrizioneUncheckedCreateInput>
    /**
     * In case the livelliserviziodescrizione was found with the provided `where` argument, update it with this data.
     */
    update: XOR<livelliserviziodescrizioneUpdateInput, livelliserviziodescrizioneUncheckedUpdateInput>
  }


  /**
   * livelliserviziodescrizione delete
   */
  export type livelliserviziodescrizioneDeleteArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziodescrizione
     */
    select?: livelliserviziodescrizioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliserviziodescrizioneInclude | null
    /**
     * Filter which livelliserviziodescrizione to delete.
     */
    where: livelliserviziodescrizioneWhereUniqueInput
  }


  /**
   * livelliserviziodescrizione deleteMany
   */
  export type livelliserviziodescrizioneDeleteManyArgs = {
    /**
     * Filter which livelliserviziodescriziones to delete
     */
    where?: livelliserviziodescrizioneWhereInput
  }


  /**
   * livelliserviziodescrizione.livelliservizio
   */
  export type livelliserviziodescrizione$livelliservizioArgs = {
    /**
     * Select specific fields to fetch from the livelliservizio
     */
    select?: livelliservizioSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliservizioInclude | null
    where?: livelliservizioWhereInput
    orderBy?: Enumerable<livelliservizioOrderByWithRelationInput>
    cursor?: livelliservizioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LivelliservizioScalarFieldEnum>
  }


  /**
   * livelliserviziodescrizione without action
   */
  export type livelliserviziodescrizioneArgs = {
    /**
     * Select specific fields to fetch from the livelliserviziodescrizione
     */
    select?: livelliserviziodescrizioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliserviziodescrizioneInclude | null
  }



  /**
   * Model livelliservizioschedulatore
   */


  export type AggregateLivelliservizioschedulatore = {
    _count: LivelliservizioschedulatoreCountAggregateOutputType | null
    _avg: LivelliservizioschedulatoreAvgAggregateOutputType | null
    _sum: LivelliservizioschedulatoreSumAggregateOutputType | null
    _min: LivelliservizioschedulatoreMinAggregateOutputType | null
    _max: LivelliservizioschedulatoreMaxAggregateOutputType | null
  }

  export type LivelliservizioschedulatoreAvgAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    anno: number | null
    semestre: number | null
    idUtente: number | null
  }

  export type LivelliservizioschedulatoreSumAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    anno: number | null
    semestre: number | null
    idUtente: number | null
  }

  export type LivelliservizioschedulatoreMinAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    tipologia: string | null
    anno: number | null
    semestre: number | null
    stato: string | null
    idUtente: number | null
    dataCreazione: string | null
  }

  export type LivelliservizioschedulatoreMaxAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    tipologia: string | null
    anno: number | null
    semestre: number | null
    stato: string | null
    idUtente: number | null
    dataCreazione: string | null
  }

  export type LivelliservizioschedulatoreCountAggregateOutputType = {
    id: number
    idAppalto: number
    tipologia: number
    anno: number
    semestre: number
    stato: number
    idUtente: number
    dataCreazione: number
    _all: number
  }


  export type LivelliservizioschedulatoreAvgAggregateInputType = {
    id?: true
    idAppalto?: true
    anno?: true
    semestre?: true
    idUtente?: true
  }

  export type LivelliservizioschedulatoreSumAggregateInputType = {
    id?: true
    idAppalto?: true
    anno?: true
    semestre?: true
    idUtente?: true
  }

  export type LivelliservizioschedulatoreMinAggregateInputType = {
    id?: true
    idAppalto?: true
    tipologia?: true
    anno?: true
    semestre?: true
    stato?: true
    idUtente?: true
    dataCreazione?: true
  }

  export type LivelliservizioschedulatoreMaxAggregateInputType = {
    id?: true
    idAppalto?: true
    tipologia?: true
    anno?: true
    semestre?: true
    stato?: true
    idUtente?: true
    dataCreazione?: true
  }

  export type LivelliservizioschedulatoreCountAggregateInputType = {
    id?: true
    idAppalto?: true
    tipologia?: true
    anno?: true
    semestre?: true
    stato?: true
    idUtente?: true
    dataCreazione?: true
    _all?: true
  }

  export type LivelliservizioschedulatoreAggregateArgs = {
    /**
     * Filter which livelliservizioschedulatore to aggregate.
     */
    where?: livelliservizioschedulatoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliservizioschedulatores to fetch.
     */
    orderBy?: Enumerable<livelliservizioschedulatoreOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: livelliservizioschedulatoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliservizioschedulatores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliservizioschedulatores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned livelliservizioschedulatores
    **/
    _count?: true | LivelliservizioschedulatoreCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LivelliservizioschedulatoreAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LivelliservizioschedulatoreSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LivelliservizioschedulatoreMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LivelliservizioschedulatoreMaxAggregateInputType
  }

  export type GetLivelliservizioschedulatoreAggregateType<T extends LivelliservizioschedulatoreAggregateArgs> = {
        [P in keyof T & keyof AggregateLivelliservizioschedulatore]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLivelliservizioschedulatore[P]>
      : GetScalarType<T[P], AggregateLivelliservizioschedulatore[P]>
  }




  export type LivelliservizioschedulatoreGroupByArgs = {
    where?: livelliservizioschedulatoreWhereInput
    orderBy?: Enumerable<livelliservizioschedulatoreOrderByWithAggregationInput>
    by: LivelliservizioschedulatoreScalarFieldEnum[]
    having?: livelliservizioschedulatoreScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LivelliservizioschedulatoreCountAggregateInputType | true
    _avg?: LivelliservizioschedulatoreAvgAggregateInputType
    _sum?: LivelliservizioschedulatoreSumAggregateInputType
    _min?: LivelliservizioschedulatoreMinAggregateInputType
    _max?: LivelliservizioschedulatoreMaxAggregateInputType
  }


  export type LivelliservizioschedulatoreGroupByOutputType = {
    id: number
    idAppalto: number | null
    tipologia: string | null
    anno: number | null
    semestre: number | null
    stato: string | null
    idUtente: number | null
    dataCreazione: string | null
    _count: LivelliservizioschedulatoreCountAggregateOutputType | null
    _avg: LivelliservizioschedulatoreAvgAggregateOutputType | null
    _sum: LivelliservizioschedulatoreSumAggregateOutputType | null
    _min: LivelliservizioschedulatoreMinAggregateOutputType | null
    _max: LivelliservizioschedulatoreMaxAggregateOutputType | null
  }

  type GetLivelliservizioschedulatoreGroupByPayload<T extends LivelliservizioschedulatoreGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<LivelliservizioschedulatoreGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LivelliservizioschedulatoreGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LivelliservizioschedulatoreGroupByOutputType[P]>
            : GetScalarType<T[P], LivelliservizioschedulatoreGroupByOutputType[P]>
        }
      >
    >


  export type livelliservizioschedulatoreSelect = {
    id?: boolean
    idAppalto?: boolean
    tipologia?: boolean
    anno?: boolean
    semestre?: boolean
    stato?: boolean
    idUtente?: boolean
    dataCreazione?: boolean
  }


  export type livelliservizioschedulatoreGetPayload<S extends boolean | null | undefined | livelliservizioschedulatoreArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? livelliservizioschedulatore :
    S extends undefined ? never :
    S extends { include: any } & (livelliservizioschedulatoreArgs | livelliservizioschedulatoreFindManyArgs)
    ? livelliservizioschedulatore 
    : S extends { select: any } & (livelliservizioschedulatoreArgs | livelliservizioschedulatoreFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof livelliservizioschedulatore ? livelliservizioschedulatore[P] : never
  } 
      : livelliservizioschedulatore


  type livelliservizioschedulatoreCountArgs = 
    Omit<livelliservizioschedulatoreFindManyArgs, 'select' | 'include'> & {
      select?: LivelliservizioschedulatoreCountAggregateInputType | true
    }

  export interface livelliservizioschedulatoreDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Livelliservizioschedulatore that matches the filter.
     * @param {livelliservizioschedulatoreFindUniqueArgs} args - Arguments to find a Livelliservizioschedulatore
     * @example
     * // Get one Livelliservizioschedulatore
     * const livelliservizioschedulatore = await prisma.livelliservizioschedulatore.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends livelliservizioschedulatoreFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, livelliservizioschedulatoreFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'livelliservizioschedulatore'> extends True ? Prisma__livelliservizioschedulatoreClient<livelliservizioschedulatoreGetPayload<T>> : Prisma__livelliservizioschedulatoreClient<livelliservizioschedulatoreGetPayload<T> | null, null>

    /**
     * Find one Livelliservizioschedulatore that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {livelliservizioschedulatoreFindUniqueOrThrowArgs} args - Arguments to find a Livelliservizioschedulatore
     * @example
     * // Get one Livelliservizioschedulatore
     * const livelliservizioschedulatore = await prisma.livelliservizioschedulatore.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends livelliservizioschedulatoreFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, livelliservizioschedulatoreFindUniqueOrThrowArgs>
    ): Prisma__livelliservizioschedulatoreClient<livelliservizioschedulatoreGetPayload<T>>

    /**
     * Find the first Livelliservizioschedulatore that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliservizioschedulatoreFindFirstArgs} args - Arguments to find a Livelliservizioschedulatore
     * @example
     * // Get one Livelliservizioschedulatore
     * const livelliservizioschedulatore = await prisma.livelliservizioschedulatore.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends livelliservizioschedulatoreFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, livelliservizioschedulatoreFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'livelliservizioschedulatore'> extends True ? Prisma__livelliservizioschedulatoreClient<livelliservizioschedulatoreGetPayload<T>> : Prisma__livelliservizioschedulatoreClient<livelliservizioschedulatoreGetPayload<T> | null, null>

    /**
     * Find the first Livelliservizioschedulatore that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliservizioschedulatoreFindFirstOrThrowArgs} args - Arguments to find a Livelliservizioschedulatore
     * @example
     * // Get one Livelliservizioschedulatore
     * const livelliservizioschedulatore = await prisma.livelliservizioschedulatore.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends livelliservizioschedulatoreFindFirstOrThrowArgs>(
      args?: SelectSubset<T, livelliservizioschedulatoreFindFirstOrThrowArgs>
    ): Prisma__livelliservizioschedulatoreClient<livelliservizioschedulatoreGetPayload<T>>

    /**
     * Find zero or more Livelliservizioschedulatores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliservizioschedulatoreFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Livelliservizioschedulatores
     * const livelliservizioschedulatores = await prisma.livelliservizioschedulatore.findMany()
     * 
     * // Get first 10 Livelliservizioschedulatores
     * const livelliservizioschedulatores = await prisma.livelliservizioschedulatore.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const livelliservizioschedulatoreWithIdOnly = await prisma.livelliservizioschedulatore.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends livelliservizioschedulatoreFindManyArgs>(
      args?: SelectSubset<T, livelliservizioschedulatoreFindManyArgs>
    ): Prisma.PrismaPromise<Array<livelliservizioschedulatoreGetPayload<T>>>

    /**
     * Create a Livelliservizioschedulatore.
     * @param {livelliservizioschedulatoreCreateArgs} args - Arguments to create a Livelliservizioschedulatore.
     * @example
     * // Create one Livelliservizioschedulatore
     * const Livelliservizioschedulatore = await prisma.livelliservizioschedulatore.create({
     *   data: {
     *     // ... data to create a Livelliservizioschedulatore
     *   }
     * })
     * 
    **/
    create<T extends livelliservizioschedulatoreCreateArgs>(
      args: SelectSubset<T, livelliservizioschedulatoreCreateArgs>
    ): Prisma__livelliservizioschedulatoreClient<livelliservizioschedulatoreGetPayload<T>>

    /**
     * Create many Livelliservizioschedulatores.
     *     @param {livelliservizioschedulatoreCreateManyArgs} args - Arguments to create many Livelliservizioschedulatores.
     *     @example
     *     // Create many Livelliservizioschedulatores
     *     const livelliservizioschedulatore = await prisma.livelliservizioschedulatore.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends livelliservizioschedulatoreCreateManyArgs>(
      args?: SelectSubset<T, livelliservizioschedulatoreCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Livelliservizioschedulatore.
     * @param {livelliservizioschedulatoreDeleteArgs} args - Arguments to delete one Livelliservizioschedulatore.
     * @example
     * // Delete one Livelliservizioschedulatore
     * const Livelliservizioschedulatore = await prisma.livelliservizioschedulatore.delete({
     *   where: {
     *     // ... filter to delete one Livelliservizioschedulatore
     *   }
     * })
     * 
    **/
    delete<T extends livelliservizioschedulatoreDeleteArgs>(
      args: SelectSubset<T, livelliservizioschedulatoreDeleteArgs>
    ): Prisma__livelliservizioschedulatoreClient<livelliservizioschedulatoreGetPayload<T>>

    /**
     * Update one Livelliservizioschedulatore.
     * @param {livelliservizioschedulatoreUpdateArgs} args - Arguments to update one Livelliservizioschedulatore.
     * @example
     * // Update one Livelliservizioschedulatore
     * const livelliservizioschedulatore = await prisma.livelliservizioschedulatore.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends livelliservizioschedulatoreUpdateArgs>(
      args: SelectSubset<T, livelliservizioschedulatoreUpdateArgs>
    ): Prisma__livelliservizioschedulatoreClient<livelliservizioschedulatoreGetPayload<T>>

    /**
     * Delete zero or more Livelliservizioschedulatores.
     * @param {livelliservizioschedulatoreDeleteManyArgs} args - Arguments to filter Livelliservizioschedulatores to delete.
     * @example
     * // Delete a few Livelliservizioschedulatores
     * const { count } = await prisma.livelliservizioschedulatore.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends livelliservizioschedulatoreDeleteManyArgs>(
      args?: SelectSubset<T, livelliservizioschedulatoreDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Livelliservizioschedulatores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliservizioschedulatoreUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Livelliservizioschedulatores
     * const livelliservizioschedulatore = await prisma.livelliservizioschedulatore.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends livelliservizioschedulatoreUpdateManyArgs>(
      args: SelectSubset<T, livelliservizioschedulatoreUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Livelliservizioschedulatore.
     * @param {livelliservizioschedulatoreUpsertArgs} args - Arguments to update or create a Livelliservizioschedulatore.
     * @example
     * // Update or create a Livelliservizioschedulatore
     * const livelliservizioschedulatore = await prisma.livelliservizioschedulatore.upsert({
     *   create: {
     *     // ... data to create a Livelliservizioschedulatore
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Livelliservizioschedulatore we want to update
     *   }
     * })
    **/
    upsert<T extends livelliservizioschedulatoreUpsertArgs>(
      args: SelectSubset<T, livelliservizioschedulatoreUpsertArgs>
    ): Prisma__livelliservizioschedulatoreClient<livelliservizioschedulatoreGetPayload<T>>

    /**
     * Count the number of Livelliservizioschedulatores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {livelliservizioschedulatoreCountArgs} args - Arguments to filter Livelliservizioschedulatores to count.
     * @example
     * // Count the number of Livelliservizioschedulatores
     * const count = await prisma.livelliservizioschedulatore.count({
     *   where: {
     *     // ... the filter for the Livelliservizioschedulatores we want to count
     *   }
     * })
    **/
    count<T extends livelliservizioschedulatoreCountArgs>(
      args?: Subset<T, livelliservizioschedulatoreCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LivelliservizioschedulatoreCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Livelliservizioschedulatore.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivelliservizioschedulatoreAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LivelliservizioschedulatoreAggregateArgs>(args: Subset<T, LivelliservizioschedulatoreAggregateArgs>): Prisma.PrismaPromise<GetLivelliservizioschedulatoreAggregateType<T>>

    /**
     * Group by Livelliservizioschedulatore.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivelliservizioschedulatoreGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LivelliservizioschedulatoreGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LivelliservizioschedulatoreGroupByArgs['orderBy'] }
        : { orderBy?: LivelliservizioschedulatoreGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LivelliservizioschedulatoreGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLivelliservizioschedulatoreGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for livelliservizioschedulatore.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__livelliservizioschedulatoreClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * livelliservizioschedulatore base type for findUnique actions
   */
  export type livelliservizioschedulatoreFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the livelliservizioschedulatore
     */
    select?: livelliservizioschedulatoreSelect | null
    /**
     * Filter, which livelliservizioschedulatore to fetch.
     */
    where: livelliservizioschedulatoreWhereUniqueInput
  }

  /**
   * livelliservizioschedulatore findUnique
   */
  export interface livelliservizioschedulatoreFindUniqueArgs extends livelliservizioschedulatoreFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * livelliservizioschedulatore findUniqueOrThrow
   */
  export type livelliservizioschedulatoreFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the livelliservizioschedulatore
     */
    select?: livelliservizioschedulatoreSelect | null
    /**
     * Filter, which livelliservizioschedulatore to fetch.
     */
    where: livelliservizioschedulatoreWhereUniqueInput
  }


  /**
   * livelliservizioschedulatore base type for findFirst actions
   */
  export type livelliservizioschedulatoreFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the livelliservizioschedulatore
     */
    select?: livelliservizioschedulatoreSelect | null
    /**
     * Filter, which livelliservizioschedulatore to fetch.
     */
    where?: livelliservizioschedulatoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliservizioschedulatores to fetch.
     */
    orderBy?: Enumerable<livelliservizioschedulatoreOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for livelliservizioschedulatores.
     */
    cursor?: livelliservizioschedulatoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliservizioschedulatores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliservizioschedulatores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of livelliservizioschedulatores.
     */
    distinct?: Enumerable<LivelliservizioschedulatoreScalarFieldEnum>
  }

  /**
   * livelliservizioschedulatore findFirst
   */
  export interface livelliservizioschedulatoreFindFirstArgs extends livelliservizioschedulatoreFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * livelliservizioschedulatore findFirstOrThrow
   */
  export type livelliservizioschedulatoreFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the livelliservizioschedulatore
     */
    select?: livelliservizioschedulatoreSelect | null
    /**
     * Filter, which livelliservizioschedulatore to fetch.
     */
    where?: livelliservizioschedulatoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliservizioschedulatores to fetch.
     */
    orderBy?: Enumerable<livelliservizioschedulatoreOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for livelliservizioschedulatores.
     */
    cursor?: livelliservizioschedulatoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliservizioschedulatores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliservizioschedulatores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of livelliservizioschedulatores.
     */
    distinct?: Enumerable<LivelliservizioschedulatoreScalarFieldEnum>
  }


  /**
   * livelliservizioschedulatore findMany
   */
  export type livelliservizioschedulatoreFindManyArgs = {
    /**
     * Select specific fields to fetch from the livelliservizioschedulatore
     */
    select?: livelliservizioschedulatoreSelect | null
    /**
     * Filter, which livelliservizioschedulatores to fetch.
     */
    where?: livelliservizioschedulatoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of livelliservizioschedulatores to fetch.
     */
    orderBy?: Enumerable<livelliservizioschedulatoreOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing livelliservizioschedulatores.
     */
    cursor?: livelliservizioschedulatoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` livelliservizioschedulatores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` livelliservizioschedulatores.
     */
    skip?: number
    distinct?: Enumerable<LivelliservizioschedulatoreScalarFieldEnum>
  }


  /**
   * livelliservizioschedulatore create
   */
  export type livelliservizioschedulatoreCreateArgs = {
    /**
     * Select specific fields to fetch from the livelliservizioschedulatore
     */
    select?: livelliservizioschedulatoreSelect | null
    /**
     * The data needed to create a livelliservizioschedulatore.
     */
    data: XOR<livelliservizioschedulatoreCreateInput, livelliservizioschedulatoreUncheckedCreateInput>
  }


  /**
   * livelliservizioschedulatore createMany
   */
  export type livelliservizioschedulatoreCreateManyArgs = {
    /**
     * The data used to create many livelliservizioschedulatores.
     */
    data: Enumerable<livelliservizioschedulatoreCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * livelliservizioschedulatore update
   */
  export type livelliservizioschedulatoreUpdateArgs = {
    /**
     * Select specific fields to fetch from the livelliservizioschedulatore
     */
    select?: livelliservizioschedulatoreSelect | null
    /**
     * The data needed to update a livelliservizioschedulatore.
     */
    data: XOR<livelliservizioschedulatoreUpdateInput, livelliservizioschedulatoreUncheckedUpdateInput>
    /**
     * Choose, which livelliservizioschedulatore to update.
     */
    where: livelliservizioschedulatoreWhereUniqueInput
  }


  /**
   * livelliservizioschedulatore updateMany
   */
  export type livelliservizioschedulatoreUpdateManyArgs = {
    /**
     * The data used to update livelliservizioschedulatores.
     */
    data: XOR<livelliservizioschedulatoreUpdateManyMutationInput, livelliservizioschedulatoreUncheckedUpdateManyInput>
    /**
     * Filter which livelliservizioschedulatores to update
     */
    where?: livelliservizioschedulatoreWhereInput
  }


  /**
   * livelliservizioschedulatore upsert
   */
  export type livelliservizioschedulatoreUpsertArgs = {
    /**
     * Select specific fields to fetch from the livelliservizioschedulatore
     */
    select?: livelliservizioschedulatoreSelect | null
    /**
     * The filter to search for the livelliservizioschedulatore to update in case it exists.
     */
    where: livelliservizioschedulatoreWhereUniqueInput
    /**
     * In case the livelliservizioschedulatore found by the `where` argument doesn't exist, create a new livelliservizioschedulatore with this data.
     */
    create: XOR<livelliservizioschedulatoreCreateInput, livelliservizioschedulatoreUncheckedCreateInput>
    /**
     * In case the livelliservizioschedulatore was found with the provided `where` argument, update it with this data.
     */
    update: XOR<livelliservizioschedulatoreUpdateInput, livelliservizioschedulatoreUncheckedUpdateInput>
  }


  /**
   * livelliservizioschedulatore delete
   */
  export type livelliservizioschedulatoreDeleteArgs = {
    /**
     * Select specific fields to fetch from the livelliservizioschedulatore
     */
    select?: livelliservizioschedulatoreSelect | null
    /**
     * Filter which livelliservizioschedulatore to delete.
     */
    where: livelliservizioschedulatoreWhereUniqueInput
  }


  /**
   * livelliservizioschedulatore deleteMany
   */
  export type livelliservizioschedulatoreDeleteManyArgs = {
    /**
     * Filter which livelliservizioschedulatores to delete
     */
    where?: livelliservizioschedulatoreWhereInput
  }


  /**
   * livelliservizioschedulatore without action
   */
  export type livelliservizioschedulatoreArgs = {
    /**
     * Select specific fields to fetch from the livelliservizioschedulatore
     */
    select?: livelliservizioschedulatoreSelect | null
  }



  /**
   * Model mezzo
   */


  export type AggregateMezzo = {
    _count: MezzoCountAggregateOutputType | null
    _avg: MezzoAvgAggregateOutputType | null
    _sum: MezzoSumAggregateOutputType | null
    _min: MezzoMinAggregateOutputType | null
    _max: MezzoMaxAggregateOutputType | null
  }

  export type MezzoAvgAggregateOutputType = {
    id: number | null
    tipologiaMezzo: number | null
  }

  export type MezzoSumAggregateOutputType = {
    id: number | null
    tipologiaMezzo: number | null
  }

  export type MezzoMinAggregateOutputType = {
    id: number | null
    tipologiaMezzo: number | null
    descrizione: string | null
    dataModifica: string | null
  }

  export type MezzoMaxAggregateOutputType = {
    id: number | null
    tipologiaMezzo: number | null
    descrizione: string | null
    dataModifica: string | null
  }

  export type MezzoCountAggregateOutputType = {
    id: number
    tipologiaMezzo: number
    descrizione: number
    dataModifica: number
    _all: number
  }


  export type MezzoAvgAggregateInputType = {
    id?: true
    tipologiaMezzo?: true
  }

  export type MezzoSumAggregateInputType = {
    id?: true
    tipologiaMezzo?: true
  }

  export type MezzoMinAggregateInputType = {
    id?: true
    tipologiaMezzo?: true
    descrizione?: true
    dataModifica?: true
  }

  export type MezzoMaxAggregateInputType = {
    id?: true
    tipologiaMezzo?: true
    descrizione?: true
    dataModifica?: true
  }

  export type MezzoCountAggregateInputType = {
    id?: true
    tipologiaMezzo?: true
    descrizione?: true
    dataModifica?: true
    _all?: true
  }

  export type MezzoAggregateArgs = {
    /**
     * Filter which mezzo to aggregate.
     */
    where?: mezzoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mezzos to fetch.
     */
    orderBy?: Enumerable<mezzoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mezzoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mezzos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mezzos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mezzos
    **/
    _count?: true | MezzoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MezzoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MezzoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MezzoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MezzoMaxAggregateInputType
  }

  export type GetMezzoAggregateType<T extends MezzoAggregateArgs> = {
        [P in keyof T & keyof AggregateMezzo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMezzo[P]>
      : GetScalarType<T[P], AggregateMezzo[P]>
  }




  export type MezzoGroupByArgs = {
    where?: mezzoWhereInput
    orderBy?: Enumerable<mezzoOrderByWithAggregationInput>
    by: MezzoScalarFieldEnum[]
    having?: mezzoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MezzoCountAggregateInputType | true
    _avg?: MezzoAvgAggregateInputType
    _sum?: MezzoSumAggregateInputType
    _min?: MezzoMinAggregateInputType
    _max?: MezzoMaxAggregateInputType
  }


  export type MezzoGroupByOutputType = {
    id: number
    tipologiaMezzo: number | null
    descrizione: string | null
    dataModifica: string | null
    _count: MezzoCountAggregateOutputType | null
    _avg: MezzoAvgAggregateOutputType | null
    _sum: MezzoSumAggregateOutputType | null
    _min: MezzoMinAggregateOutputType | null
    _max: MezzoMaxAggregateOutputType | null
  }

  type GetMezzoGroupByPayload<T extends MezzoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<MezzoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MezzoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MezzoGroupByOutputType[P]>
            : GetScalarType<T[P], MezzoGroupByOutputType[P]>
        }
      >
    >


  export type mezzoSelect = {
    id?: boolean
    tipologiaMezzo?: boolean
    descrizione?: boolean
    dataModifica?: boolean
  }


  export type mezzoGetPayload<S extends boolean | null | undefined | mezzoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? mezzo :
    S extends undefined ? never :
    S extends { include: any } & (mezzoArgs | mezzoFindManyArgs)
    ? mezzo 
    : S extends { select: any } & (mezzoArgs | mezzoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof mezzo ? mezzo[P] : never
  } 
      : mezzo


  type mezzoCountArgs = 
    Omit<mezzoFindManyArgs, 'select' | 'include'> & {
      select?: MezzoCountAggregateInputType | true
    }

  export interface mezzoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Mezzo that matches the filter.
     * @param {mezzoFindUniqueArgs} args - Arguments to find a Mezzo
     * @example
     * // Get one Mezzo
     * const mezzo = await prisma.mezzo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends mezzoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, mezzoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'mezzo'> extends True ? Prisma__mezzoClient<mezzoGetPayload<T>> : Prisma__mezzoClient<mezzoGetPayload<T> | null, null>

    /**
     * Find one Mezzo that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {mezzoFindUniqueOrThrowArgs} args - Arguments to find a Mezzo
     * @example
     * // Get one Mezzo
     * const mezzo = await prisma.mezzo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends mezzoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, mezzoFindUniqueOrThrowArgs>
    ): Prisma__mezzoClient<mezzoGetPayload<T>>

    /**
     * Find the first Mezzo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mezzoFindFirstArgs} args - Arguments to find a Mezzo
     * @example
     * // Get one Mezzo
     * const mezzo = await prisma.mezzo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends mezzoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, mezzoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'mezzo'> extends True ? Prisma__mezzoClient<mezzoGetPayload<T>> : Prisma__mezzoClient<mezzoGetPayload<T> | null, null>

    /**
     * Find the first Mezzo that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mezzoFindFirstOrThrowArgs} args - Arguments to find a Mezzo
     * @example
     * // Get one Mezzo
     * const mezzo = await prisma.mezzo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends mezzoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, mezzoFindFirstOrThrowArgs>
    ): Prisma__mezzoClient<mezzoGetPayload<T>>

    /**
     * Find zero or more Mezzos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mezzoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mezzos
     * const mezzos = await prisma.mezzo.findMany()
     * 
     * // Get first 10 Mezzos
     * const mezzos = await prisma.mezzo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mezzoWithIdOnly = await prisma.mezzo.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends mezzoFindManyArgs>(
      args?: SelectSubset<T, mezzoFindManyArgs>
    ): Prisma.PrismaPromise<Array<mezzoGetPayload<T>>>

    /**
     * Create a Mezzo.
     * @param {mezzoCreateArgs} args - Arguments to create a Mezzo.
     * @example
     * // Create one Mezzo
     * const Mezzo = await prisma.mezzo.create({
     *   data: {
     *     // ... data to create a Mezzo
     *   }
     * })
     * 
    **/
    create<T extends mezzoCreateArgs>(
      args: SelectSubset<T, mezzoCreateArgs>
    ): Prisma__mezzoClient<mezzoGetPayload<T>>

    /**
     * Create many Mezzos.
     *     @param {mezzoCreateManyArgs} args - Arguments to create many Mezzos.
     *     @example
     *     // Create many Mezzos
     *     const mezzo = await prisma.mezzo.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends mezzoCreateManyArgs>(
      args?: SelectSubset<T, mezzoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Mezzo.
     * @param {mezzoDeleteArgs} args - Arguments to delete one Mezzo.
     * @example
     * // Delete one Mezzo
     * const Mezzo = await prisma.mezzo.delete({
     *   where: {
     *     // ... filter to delete one Mezzo
     *   }
     * })
     * 
    **/
    delete<T extends mezzoDeleteArgs>(
      args: SelectSubset<T, mezzoDeleteArgs>
    ): Prisma__mezzoClient<mezzoGetPayload<T>>

    /**
     * Update one Mezzo.
     * @param {mezzoUpdateArgs} args - Arguments to update one Mezzo.
     * @example
     * // Update one Mezzo
     * const mezzo = await prisma.mezzo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends mezzoUpdateArgs>(
      args: SelectSubset<T, mezzoUpdateArgs>
    ): Prisma__mezzoClient<mezzoGetPayload<T>>

    /**
     * Delete zero or more Mezzos.
     * @param {mezzoDeleteManyArgs} args - Arguments to filter Mezzos to delete.
     * @example
     * // Delete a few Mezzos
     * const { count } = await prisma.mezzo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends mezzoDeleteManyArgs>(
      args?: SelectSubset<T, mezzoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mezzos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mezzoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mezzos
     * const mezzo = await prisma.mezzo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends mezzoUpdateManyArgs>(
      args: SelectSubset<T, mezzoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Mezzo.
     * @param {mezzoUpsertArgs} args - Arguments to update or create a Mezzo.
     * @example
     * // Update or create a Mezzo
     * const mezzo = await prisma.mezzo.upsert({
     *   create: {
     *     // ... data to create a Mezzo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mezzo we want to update
     *   }
     * })
    **/
    upsert<T extends mezzoUpsertArgs>(
      args: SelectSubset<T, mezzoUpsertArgs>
    ): Prisma__mezzoClient<mezzoGetPayload<T>>

    /**
     * Count the number of Mezzos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mezzoCountArgs} args - Arguments to filter Mezzos to count.
     * @example
     * // Count the number of Mezzos
     * const count = await prisma.mezzo.count({
     *   where: {
     *     // ... the filter for the Mezzos we want to count
     *   }
     * })
    **/
    count<T extends mezzoCountArgs>(
      args?: Subset<T, mezzoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MezzoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mezzo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MezzoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MezzoAggregateArgs>(args: Subset<T, MezzoAggregateArgs>): Prisma.PrismaPromise<GetMezzoAggregateType<T>>

    /**
     * Group by Mezzo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MezzoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MezzoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MezzoGroupByArgs['orderBy'] }
        : { orderBy?: MezzoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MezzoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMezzoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for mezzo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__mezzoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * mezzo base type for findUnique actions
   */
  export type mezzoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the mezzo
     */
    select?: mezzoSelect | null
    /**
     * Filter, which mezzo to fetch.
     */
    where: mezzoWhereUniqueInput
  }

  /**
   * mezzo findUnique
   */
  export interface mezzoFindUniqueArgs extends mezzoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * mezzo findUniqueOrThrow
   */
  export type mezzoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the mezzo
     */
    select?: mezzoSelect | null
    /**
     * Filter, which mezzo to fetch.
     */
    where: mezzoWhereUniqueInput
  }


  /**
   * mezzo base type for findFirst actions
   */
  export type mezzoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the mezzo
     */
    select?: mezzoSelect | null
    /**
     * Filter, which mezzo to fetch.
     */
    where?: mezzoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mezzos to fetch.
     */
    orderBy?: Enumerable<mezzoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mezzos.
     */
    cursor?: mezzoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mezzos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mezzos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mezzos.
     */
    distinct?: Enumerable<MezzoScalarFieldEnum>
  }

  /**
   * mezzo findFirst
   */
  export interface mezzoFindFirstArgs extends mezzoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * mezzo findFirstOrThrow
   */
  export type mezzoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the mezzo
     */
    select?: mezzoSelect | null
    /**
     * Filter, which mezzo to fetch.
     */
    where?: mezzoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mezzos to fetch.
     */
    orderBy?: Enumerable<mezzoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mezzos.
     */
    cursor?: mezzoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mezzos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mezzos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mezzos.
     */
    distinct?: Enumerable<MezzoScalarFieldEnum>
  }


  /**
   * mezzo findMany
   */
  export type mezzoFindManyArgs = {
    /**
     * Select specific fields to fetch from the mezzo
     */
    select?: mezzoSelect | null
    /**
     * Filter, which mezzos to fetch.
     */
    where?: mezzoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mezzos to fetch.
     */
    orderBy?: Enumerable<mezzoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mezzos.
     */
    cursor?: mezzoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mezzos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mezzos.
     */
    skip?: number
    distinct?: Enumerable<MezzoScalarFieldEnum>
  }


  /**
   * mezzo create
   */
  export type mezzoCreateArgs = {
    /**
     * Select specific fields to fetch from the mezzo
     */
    select?: mezzoSelect | null
    /**
     * The data needed to create a mezzo.
     */
    data: XOR<mezzoCreateInput, mezzoUncheckedCreateInput>
  }


  /**
   * mezzo createMany
   */
  export type mezzoCreateManyArgs = {
    /**
     * The data used to create many mezzos.
     */
    data: Enumerable<mezzoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * mezzo update
   */
  export type mezzoUpdateArgs = {
    /**
     * Select specific fields to fetch from the mezzo
     */
    select?: mezzoSelect | null
    /**
     * The data needed to update a mezzo.
     */
    data: XOR<mezzoUpdateInput, mezzoUncheckedUpdateInput>
    /**
     * Choose, which mezzo to update.
     */
    where: mezzoWhereUniqueInput
  }


  /**
   * mezzo updateMany
   */
  export type mezzoUpdateManyArgs = {
    /**
     * The data used to update mezzos.
     */
    data: XOR<mezzoUpdateManyMutationInput, mezzoUncheckedUpdateManyInput>
    /**
     * Filter which mezzos to update
     */
    where?: mezzoWhereInput
  }


  /**
   * mezzo upsert
   */
  export type mezzoUpsertArgs = {
    /**
     * Select specific fields to fetch from the mezzo
     */
    select?: mezzoSelect | null
    /**
     * The filter to search for the mezzo to update in case it exists.
     */
    where: mezzoWhereUniqueInput
    /**
     * In case the mezzo found by the `where` argument doesn't exist, create a new mezzo with this data.
     */
    create: XOR<mezzoCreateInput, mezzoUncheckedCreateInput>
    /**
     * In case the mezzo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mezzoUpdateInput, mezzoUncheckedUpdateInput>
  }


  /**
   * mezzo delete
   */
  export type mezzoDeleteArgs = {
    /**
     * Select specific fields to fetch from the mezzo
     */
    select?: mezzoSelect | null
    /**
     * Filter which mezzo to delete.
     */
    where: mezzoWhereUniqueInput
  }


  /**
   * mezzo deleteMany
   */
  export type mezzoDeleteManyArgs = {
    /**
     * Filter which mezzos to delete
     */
    where?: mezzoWhereInput
  }


  /**
   * mezzo without action
   */
  export type mezzoArgs = {
    /**
     * Select specific fields to fetch from the mezzo
     */
    select?: mezzoSelect | null
  }



  /**
   * Model oggetto
   */


  export type AggregateOggetto = {
    _count: OggettoCountAggregateOutputType | null
    _avg: OggettoAvgAggregateOutputType | null
    _sum: OggettoSumAggregateOutputType | null
    _min: OggettoMinAggregateOutputType | null
    _max: OggettoMaxAggregateOutputType | null
  }

  export type OggettoAvgAggregateOutputType = {
    id: number | null
    catastoId: number | null
  }

  export type OggettoSumAggregateOutputType = {
    id: number | null
    catastoId: number | null
  }

  export type OggettoMinAggregateOutputType = {
    id: number | null
    catastoId: number | null
  }

  export type OggettoMaxAggregateOutputType = {
    id: number | null
    catastoId: number | null
  }

  export type OggettoCountAggregateOutputType = {
    id: number
    catastoId: number
    _all: number
  }


  export type OggettoAvgAggregateInputType = {
    id?: true
    catastoId?: true
  }

  export type OggettoSumAggregateInputType = {
    id?: true
    catastoId?: true
  }

  export type OggettoMinAggregateInputType = {
    id?: true
    catastoId?: true
  }

  export type OggettoMaxAggregateInputType = {
    id?: true
    catastoId?: true
  }

  export type OggettoCountAggregateInputType = {
    id?: true
    catastoId?: true
    _all?: true
  }

  export type OggettoAggregateArgs = {
    /**
     * Filter which oggetto to aggregate.
     */
    where?: oggettoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oggettos to fetch.
     */
    orderBy?: Enumerable<oggettoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: oggettoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oggettos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oggettos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned oggettos
    **/
    _count?: true | OggettoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OggettoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OggettoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OggettoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OggettoMaxAggregateInputType
  }

  export type GetOggettoAggregateType<T extends OggettoAggregateArgs> = {
        [P in keyof T & keyof AggregateOggetto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOggetto[P]>
      : GetScalarType<T[P], AggregateOggetto[P]>
  }




  export type OggettoGroupByArgs = {
    where?: oggettoWhereInput
    orderBy?: Enumerable<oggettoOrderByWithAggregationInput>
    by: OggettoScalarFieldEnum[]
    having?: oggettoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OggettoCountAggregateInputType | true
    _avg?: OggettoAvgAggregateInputType
    _sum?: OggettoSumAggregateInputType
    _min?: OggettoMinAggregateInputType
    _max?: OggettoMaxAggregateInputType
  }


  export type OggettoGroupByOutputType = {
    id: number
    catastoId: number | null
    _count: OggettoCountAggregateOutputType | null
    _avg: OggettoAvgAggregateOutputType | null
    _sum: OggettoSumAggregateOutputType | null
    _min: OggettoMinAggregateOutputType | null
    _max: OggettoMaxAggregateOutputType | null
  }

  type GetOggettoGroupByPayload<T extends OggettoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<OggettoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OggettoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OggettoGroupByOutputType[P]>
            : GetScalarType<T[P], OggettoGroupByOutputType[P]>
        }
      >
    >


  export type oggettoSelect = {
    id?: boolean
    catastoId?: boolean
  }


  export type oggettoGetPayload<S extends boolean | null | undefined | oggettoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? oggetto :
    S extends undefined ? never :
    S extends { include: any } & (oggettoArgs | oggettoFindManyArgs)
    ? oggetto 
    : S extends { select: any } & (oggettoArgs | oggettoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof oggetto ? oggetto[P] : never
  } 
      : oggetto


  type oggettoCountArgs = 
    Omit<oggettoFindManyArgs, 'select' | 'include'> & {
      select?: OggettoCountAggregateInputType | true
    }

  export interface oggettoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Oggetto that matches the filter.
     * @param {oggettoFindUniqueArgs} args - Arguments to find a Oggetto
     * @example
     * // Get one Oggetto
     * const oggetto = await prisma.oggetto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends oggettoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, oggettoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'oggetto'> extends True ? Prisma__oggettoClient<oggettoGetPayload<T>> : Prisma__oggettoClient<oggettoGetPayload<T> | null, null>

    /**
     * Find one Oggetto that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {oggettoFindUniqueOrThrowArgs} args - Arguments to find a Oggetto
     * @example
     * // Get one Oggetto
     * const oggetto = await prisma.oggetto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends oggettoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, oggettoFindUniqueOrThrowArgs>
    ): Prisma__oggettoClient<oggettoGetPayload<T>>

    /**
     * Find the first Oggetto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oggettoFindFirstArgs} args - Arguments to find a Oggetto
     * @example
     * // Get one Oggetto
     * const oggetto = await prisma.oggetto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends oggettoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, oggettoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'oggetto'> extends True ? Prisma__oggettoClient<oggettoGetPayload<T>> : Prisma__oggettoClient<oggettoGetPayload<T> | null, null>

    /**
     * Find the first Oggetto that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oggettoFindFirstOrThrowArgs} args - Arguments to find a Oggetto
     * @example
     * // Get one Oggetto
     * const oggetto = await prisma.oggetto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends oggettoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, oggettoFindFirstOrThrowArgs>
    ): Prisma__oggettoClient<oggettoGetPayload<T>>

    /**
     * Find zero or more Oggettos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oggettoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Oggettos
     * const oggettos = await prisma.oggetto.findMany()
     * 
     * // Get first 10 Oggettos
     * const oggettos = await prisma.oggetto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const oggettoWithIdOnly = await prisma.oggetto.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends oggettoFindManyArgs>(
      args?: SelectSubset<T, oggettoFindManyArgs>
    ): Prisma.PrismaPromise<Array<oggettoGetPayload<T>>>

    /**
     * Create a Oggetto.
     * @param {oggettoCreateArgs} args - Arguments to create a Oggetto.
     * @example
     * // Create one Oggetto
     * const Oggetto = await prisma.oggetto.create({
     *   data: {
     *     // ... data to create a Oggetto
     *   }
     * })
     * 
    **/
    create<T extends oggettoCreateArgs>(
      args: SelectSubset<T, oggettoCreateArgs>
    ): Prisma__oggettoClient<oggettoGetPayload<T>>

    /**
     * Create many Oggettos.
     *     @param {oggettoCreateManyArgs} args - Arguments to create many Oggettos.
     *     @example
     *     // Create many Oggettos
     *     const oggetto = await prisma.oggetto.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends oggettoCreateManyArgs>(
      args?: SelectSubset<T, oggettoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Oggetto.
     * @param {oggettoDeleteArgs} args - Arguments to delete one Oggetto.
     * @example
     * // Delete one Oggetto
     * const Oggetto = await prisma.oggetto.delete({
     *   where: {
     *     // ... filter to delete one Oggetto
     *   }
     * })
     * 
    **/
    delete<T extends oggettoDeleteArgs>(
      args: SelectSubset<T, oggettoDeleteArgs>
    ): Prisma__oggettoClient<oggettoGetPayload<T>>

    /**
     * Update one Oggetto.
     * @param {oggettoUpdateArgs} args - Arguments to update one Oggetto.
     * @example
     * // Update one Oggetto
     * const oggetto = await prisma.oggetto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends oggettoUpdateArgs>(
      args: SelectSubset<T, oggettoUpdateArgs>
    ): Prisma__oggettoClient<oggettoGetPayload<T>>

    /**
     * Delete zero or more Oggettos.
     * @param {oggettoDeleteManyArgs} args - Arguments to filter Oggettos to delete.
     * @example
     * // Delete a few Oggettos
     * const { count } = await prisma.oggetto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends oggettoDeleteManyArgs>(
      args?: SelectSubset<T, oggettoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oggettos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oggettoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Oggettos
     * const oggetto = await prisma.oggetto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends oggettoUpdateManyArgs>(
      args: SelectSubset<T, oggettoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Oggetto.
     * @param {oggettoUpsertArgs} args - Arguments to update or create a Oggetto.
     * @example
     * // Update or create a Oggetto
     * const oggetto = await prisma.oggetto.upsert({
     *   create: {
     *     // ... data to create a Oggetto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Oggetto we want to update
     *   }
     * })
    **/
    upsert<T extends oggettoUpsertArgs>(
      args: SelectSubset<T, oggettoUpsertArgs>
    ): Prisma__oggettoClient<oggettoGetPayload<T>>

    /**
     * Count the number of Oggettos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oggettoCountArgs} args - Arguments to filter Oggettos to count.
     * @example
     * // Count the number of Oggettos
     * const count = await prisma.oggetto.count({
     *   where: {
     *     // ... the filter for the Oggettos we want to count
     *   }
     * })
    **/
    count<T extends oggettoCountArgs>(
      args?: Subset<T, oggettoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OggettoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Oggetto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OggettoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OggettoAggregateArgs>(args: Subset<T, OggettoAggregateArgs>): Prisma.PrismaPromise<GetOggettoAggregateType<T>>

    /**
     * Group by Oggetto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OggettoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OggettoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OggettoGroupByArgs['orderBy'] }
        : { orderBy?: OggettoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OggettoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOggettoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for oggetto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__oggettoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * oggetto base type for findUnique actions
   */
  export type oggettoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the oggetto
     */
    select?: oggettoSelect | null
    /**
     * Filter, which oggetto to fetch.
     */
    where: oggettoWhereUniqueInput
  }

  /**
   * oggetto findUnique
   */
  export interface oggettoFindUniqueArgs extends oggettoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * oggetto findUniqueOrThrow
   */
  export type oggettoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the oggetto
     */
    select?: oggettoSelect | null
    /**
     * Filter, which oggetto to fetch.
     */
    where: oggettoWhereUniqueInput
  }


  /**
   * oggetto base type for findFirst actions
   */
  export type oggettoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the oggetto
     */
    select?: oggettoSelect | null
    /**
     * Filter, which oggetto to fetch.
     */
    where?: oggettoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oggettos to fetch.
     */
    orderBy?: Enumerable<oggettoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oggettos.
     */
    cursor?: oggettoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oggettos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oggettos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oggettos.
     */
    distinct?: Enumerable<OggettoScalarFieldEnum>
  }

  /**
   * oggetto findFirst
   */
  export interface oggettoFindFirstArgs extends oggettoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * oggetto findFirstOrThrow
   */
  export type oggettoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the oggetto
     */
    select?: oggettoSelect | null
    /**
     * Filter, which oggetto to fetch.
     */
    where?: oggettoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oggettos to fetch.
     */
    orderBy?: Enumerable<oggettoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oggettos.
     */
    cursor?: oggettoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oggettos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oggettos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oggettos.
     */
    distinct?: Enumerable<OggettoScalarFieldEnum>
  }


  /**
   * oggetto findMany
   */
  export type oggettoFindManyArgs = {
    /**
     * Select specific fields to fetch from the oggetto
     */
    select?: oggettoSelect | null
    /**
     * Filter, which oggettos to fetch.
     */
    where?: oggettoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oggettos to fetch.
     */
    orderBy?: Enumerable<oggettoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing oggettos.
     */
    cursor?: oggettoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oggettos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oggettos.
     */
    skip?: number
    distinct?: Enumerable<OggettoScalarFieldEnum>
  }


  /**
   * oggetto create
   */
  export type oggettoCreateArgs = {
    /**
     * Select specific fields to fetch from the oggetto
     */
    select?: oggettoSelect | null
    /**
     * The data needed to create a oggetto.
     */
    data: XOR<oggettoCreateInput, oggettoUncheckedCreateInput>
  }


  /**
   * oggetto createMany
   */
  export type oggettoCreateManyArgs = {
    /**
     * The data used to create many oggettos.
     */
    data: Enumerable<oggettoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * oggetto update
   */
  export type oggettoUpdateArgs = {
    /**
     * Select specific fields to fetch from the oggetto
     */
    select?: oggettoSelect | null
    /**
     * The data needed to update a oggetto.
     */
    data: XOR<oggettoUpdateInput, oggettoUncheckedUpdateInput>
    /**
     * Choose, which oggetto to update.
     */
    where: oggettoWhereUniqueInput
  }


  /**
   * oggetto updateMany
   */
  export type oggettoUpdateManyArgs = {
    /**
     * The data used to update oggettos.
     */
    data: XOR<oggettoUpdateManyMutationInput, oggettoUncheckedUpdateManyInput>
    /**
     * Filter which oggettos to update
     */
    where?: oggettoWhereInput
  }


  /**
   * oggetto upsert
   */
  export type oggettoUpsertArgs = {
    /**
     * Select specific fields to fetch from the oggetto
     */
    select?: oggettoSelect | null
    /**
     * The filter to search for the oggetto to update in case it exists.
     */
    where: oggettoWhereUniqueInput
    /**
     * In case the oggetto found by the `where` argument doesn't exist, create a new oggetto with this data.
     */
    create: XOR<oggettoCreateInput, oggettoUncheckedCreateInput>
    /**
     * In case the oggetto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<oggettoUpdateInput, oggettoUncheckedUpdateInput>
  }


  /**
   * oggetto delete
   */
  export type oggettoDeleteArgs = {
    /**
     * Select specific fields to fetch from the oggetto
     */
    select?: oggettoSelect | null
    /**
     * Filter which oggetto to delete.
     */
    where: oggettoWhereUniqueInput
  }


  /**
   * oggetto deleteMany
   */
  export type oggettoDeleteManyArgs = {
    /**
     * Filter which oggettos to delete
     */
    where?: oggettoWhereInput
  }


  /**
   * oggetto without action
   */
  export type oggettoArgs = {
    /**
     * Select specific fields to fetch from the oggetto
     */
    select?: oggettoSelect | null
  }



  /**
   * Model oggettocivetta
   */


  export type AggregateOggettocivetta = {
    _count: OggettocivettaCountAggregateOutputType | null
    _avg: OggettocivettaAvgAggregateOutputType | null
    _sum: OggettocivettaSumAggregateOutputType | null
    _min: OggettocivettaMinAggregateOutputType | null
    _max: OggettocivettaMaxAggregateOutputType | null
  }

  export type OggettocivettaAvgAggregateOutputType = {
    id: number | null
    idSegnalazione: number | null
    idOggettoCatasto: number | null
    idAppalto: number | null
    idUtente: number | null
    idRifCivetta: number | null
  }

  export type OggettocivettaSumAggregateOutputType = {
    id: number | null
    idSegnalazione: number | null
    idOggettoCatasto: number | null
    idAppalto: number | null
    idUtente: number | null
    idRifCivetta: number | null
  }

  export type OggettocivettaMinAggregateOutputType = {
    id: number | null
    idSegnalazione: number | null
    idOggettoCatasto: number | null
    idAppalto: number | null
    idUtente: number | null
    dataModifica: string | null
    idRifCivetta: number | null
  }

  export type OggettocivettaMaxAggregateOutputType = {
    id: number | null
    idSegnalazione: number | null
    idOggettoCatasto: number | null
    idAppalto: number | null
    idUtente: number | null
    dataModifica: string | null
    idRifCivetta: number | null
  }

  export type OggettocivettaCountAggregateOutputType = {
    id: number
    idSegnalazione: number
    idOggettoCatasto: number
    idAppalto: number
    idUtente: number
    dataModifica: number
    idRifCivetta: number
    _all: number
  }


  export type OggettocivettaAvgAggregateInputType = {
    id?: true
    idSegnalazione?: true
    idOggettoCatasto?: true
    idAppalto?: true
    idUtente?: true
    idRifCivetta?: true
  }

  export type OggettocivettaSumAggregateInputType = {
    id?: true
    idSegnalazione?: true
    idOggettoCatasto?: true
    idAppalto?: true
    idUtente?: true
    idRifCivetta?: true
  }

  export type OggettocivettaMinAggregateInputType = {
    id?: true
    idSegnalazione?: true
    idOggettoCatasto?: true
    idAppalto?: true
    idUtente?: true
    dataModifica?: true
    idRifCivetta?: true
  }

  export type OggettocivettaMaxAggregateInputType = {
    id?: true
    idSegnalazione?: true
    idOggettoCatasto?: true
    idAppalto?: true
    idUtente?: true
    dataModifica?: true
    idRifCivetta?: true
  }

  export type OggettocivettaCountAggregateInputType = {
    id?: true
    idSegnalazione?: true
    idOggettoCatasto?: true
    idAppalto?: true
    idUtente?: true
    dataModifica?: true
    idRifCivetta?: true
    _all?: true
  }

  export type OggettocivettaAggregateArgs = {
    /**
     * Filter which oggettocivetta to aggregate.
     */
    where?: oggettocivettaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oggettocivettas to fetch.
     */
    orderBy?: Enumerable<oggettocivettaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: oggettocivettaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oggettocivettas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oggettocivettas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned oggettocivettas
    **/
    _count?: true | OggettocivettaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OggettocivettaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OggettocivettaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OggettocivettaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OggettocivettaMaxAggregateInputType
  }

  export type GetOggettocivettaAggregateType<T extends OggettocivettaAggregateArgs> = {
        [P in keyof T & keyof AggregateOggettocivetta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOggettocivetta[P]>
      : GetScalarType<T[P], AggregateOggettocivetta[P]>
  }




  export type OggettocivettaGroupByArgs = {
    where?: oggettocivettaWhereInput
    orderBy?: Enumerable<oggettocivettaOrderByWithAggregationInput>
    by: OggettocivettaScalarFieldEnum[]
    having?: oggettocivettaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OggettocivettaCountAggregateInputType | true
    _avg?: OggettocivettaAvgAggregateInputType
    _sum?: OggettocivettaSumAggregateInputType
    _min?: OggettocivettaMinAggregateInputType
    _max?: OggettocivettaMaxAggregateInputType
  }


  export type OggettocivettaGroupByOutputType = {
    id: number
    idSegnalazione: number | null
    idOggettoCatasto: number | null
    idAppalto: number | null
    idUtente: number | null
    dataModifica: string | null
    idRifCivetta: number | null
    _count: OggettocivettaCountAggregateOutputType | null
    _avg: OggettocivettaAvgAggregateOutputType | null
    _sum: OggettocivettaSumAggregateOutputType | null
    _min: OggettocivettaMinAggregateOutputType | null
    _max: OggettocivettaMaxAggregateOutputType | null
  }

  type GetOggettocivettaGroupByPayload<T extends OggettocivettaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<OggettocivettaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OggettocivettaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OggettocivettaGroupByOutputType[P]>
            : GetScalarType<T[P], OggettocivettaGroupByOutputType[P]>
        }
      >
    >


  export type oggettocivettaSelect = {
    id?: boolean
    idSegnalazione?: boolean
    idOggettoCatasto?: boolean
    idAppalto?: boolean
    idUtente?: boolean
    dataModifica?: boolean
    idRifCivetta?: boolean
    utenti?: boolean | utentiArgs
  }


  export type oggettocivettaInclude = {
    utenti?: boolean | utentiArgs
  }

  export type oggettocivettaGetPayload<S extends boolean | null | undefined | oggettocivettaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? oggettocivetta :
    S extends undefined ? never :
    S extends { include: any } & (oggettocivettaArgs | oggettocivettaFindManyArgs)
    ? oggettocivetta  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'utenti' ? utentiGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (oggettocivettaArgs | oggettocivettaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'utenti' ? utentiGetPayload<S['select'][P]> | null :  P extends keyof oggettocivetta ? oggettocivetta[P] : never
  } 
      : oggettocivetta


  type oggettocivettaCountArgs = 
    Omit<oggettocivettaFindManyArgs, 'select' | 'include'> & {
      select?: OggettocivettaCountAggregateInputType | true
    }

  export interface oggettocivettaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Oggettocivetta that matches the filter.
     * @param {oggettocivettaFindUniqueArgs} args - Arguments to find a Oggettocivetta
     * @example
     * // Get one Oggettocivetta
     * const oggettocivetta = await prisma.oggettocivetta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends oggettocivettaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, oggettocivettaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'oggettocivetta'> extends True ? Prisma__oggettocivettaClient<oggettocivettaGetPayload<T>> : Prisma__oggettocivettaClient<oggettocivettaGetPayload<T> | null, null>

    /**
     * Find one Oggettocivetta that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {oggettocivettaFindUniqueOrThrowArgs} args - Arguments to find a Oggettocivetta
     * @example
     * // Get one Oggettocivetta
     * const oggettocivetta = await prisma.oggettocivetta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends oggettocivettaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, oggettocivettaFindUniqueOrThrowArgs>
    ): Prisma__oggettocivettaClient<oggettocivettaGetPayload<T>>

    /**
     * Find the first Oggettocivetta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oggettocivettaFindFirstArgs} args - Arguments to find a Oggettocivetta
     * @example
     * // Get one Oggettocivetta
     * const oggettocivetta = await prisma.oggettocivetta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends oggettocivettaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, oggettocivettaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'oggettocivetta'> extends True ? Prisma__oggettocivettaClient<oggettocivettaGetPayload<T>> : Prisma__oggettocivettaClient<oggettocivettaGetPayload<T> | null, null>

    /**
     * Find the first Oggettocivetta that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oggettocivettaFindFirstOrThrowArgs} args - Arguments to find a Oggettocivetta
     * @example
     * // Get one Oggettocivetta
     * const oggettocivetta = await prisma.oggettocivetta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends oggettocivettaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, oggettocivettaFindFirstOrThrowArgs>
    ): Prisma__oggettocivettaClient<oggettocivettaGetPayload<T>>

    /**
     * Find zero or more Oggettocivettas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oggettocivettaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Oggettocivettas
     * const oggettocivettas = await prisma.oggettocivetta.findMany()
     * 
     * // Get first 10 Oggettocivettas
     * const oggettocivettas = await prisma.oggettocivetta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const oggettocivettaWithIdOnly = await prisma.oggettocivetta.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends oggettocivettaFindManyArgs>(
      args?: SelectSubset<T, oggettocivettaFindManyArgs>
    ): Prisma.PrismaPromise<Array<oggettocivettaGetPayload<T>>>

    /**
     * Create a Oggettocivetta.
     * @param {oggettocivettaCreateArgs} args - Arguments to create a Oggettocivetta.
     * @example
     * // Create one Oggettocivetta
     * const Oggettocivetta = await prisma.oggettocivetta.create({
     *   data: {
     *     // ... data to create a Oggettocivetta
     *   }
     * })
     * 
    **/
    create<T extends oggettocivettaCreateArgs>(
      args: SelectSubset<T, oggettocivettaCreateArgs>
    ): Prisma__oggettocivettaClient<oggettocivettaGetPayload<T>>

    /**
     * Create many Oggettocivettas.
     *     @param {oggettocivettaCreateManyArgs} args - Arguments to create many Oggettocivettas.
     *     @example
     *     // Create many Oggettocivettas
     *     const oggettocivetta = await prisma.oggettocivetta.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends oggettocivettaCreateManyArgs>(
      args?: SelectSubset<T, oggettocivettaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Oggettocivetta.
     * @param {oggettocivettaDeleteArgs} args - Arguments to delete one Oggettocivetta.
     * @example
     * // Delete one Oggettocivetta
     * const Oggettocivetta = await prisma.oggettocivetta.delete({
     *   where: {
     *     // ... filter to delete one Oggettocivetta
     *   }
     * })
     * 
    **/
    delete<T extends oggettocivettaDeleteArgs>(
      args: SelectSubset<T, oggettocivettaDeleteArgs>
    ): Prisma__oggettocivettaClient<oggettocivettaGetPayload<T>>

    /**
     * Update one Oggettocivetta.
     * @param {oggettocivettaUpdateArgs} args - Arguments to update one Oggettocivetta.
     * @example
     * // Update one Oggettocivetta
     * const oggettocivetta = await prisma.oggettocivetta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends oggettocivettaUpdateArgs>(
      args: SelectSubset<T, oggettocivettaUpdateArgs>
    ): Prisma__oggettocivettaClient<oggettocivettaGetPayload<T>>

    /**
     * Delete zero or more Oggettocivettas.
     * @param {oggettocivettaDeleteManyArgs} args - Arguments to filter Oggettocivettas to delete.
     * @example
     * // Delete a few Oggettocivettas
     * const { count } = await prisma.oggettocivetta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends oggettocivettaDeleteManyArgs>(
      args?: SelectSubset<T, oggettocivettaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oggettocivettas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oggettocivettaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Oggettocivettas
     * const oggettocivetta = await prisma.oggettocivetta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends oggettocivettaUpdateManyArgs>(
      args: SelectSubset<T, oggettocivettaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Oggettocivetta.
     * @param {oggettocivettaUpsertArgs} args - Arguments to update or create a Oggettocivetta.
     * @example
     * // Update or create a Oggettocivetta
     * const oggettocivetta = await prisma.oggettocivetta.upsert({
     *   create: {
     *     // ... data to create a Oggettocivetta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Oggettocivetta we want to update
     *   }
     * })
    **/
    upsert<T extends oggettocivettaUpsertArgs>(
      args: SelectSubset<T, oggettocivettaUpsertArgs>
    ): Prisma__oggettocivettaClient<oggettocivettaGetPayload<T>>

    /**
     * Count the number of Oggettocivettas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oggettocivettaCountArgs} args - Arguments to filter Oggettocivettas to count.
     * @example
     * // Count the number of Oggettocivettas
     * const count = await prisma.oggettocivetta.count({
     *   where: {
     *     // ... the filter for the Oggettocivettas we want to count
     *   }
     * })
    **/
    count<T extends oggettocivettaCountArgs>(
      args?: Subset<T, oggettocivettaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OggettocivettaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Oggettocivetta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OggettocivettaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OggettocivettaAggregateArgs>(args: Subset<T, OggettocivettaAggregateArgs>): Prisma.PrismaPromise<GetOggettocivettaAggregateType<T>>

    /**
     * Group by Oggettocivetta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OggettocivettaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OggettocivettaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OggettocivettaGroupByArgs['orderBy'] }
        : { orderBy?: OggettocivettaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OggettocivettaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOggettocivettaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for oggettocivetta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__oggettocivettaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    utenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * oggettocivetta base type for findUnique actions
   */
  export type oggettocivettaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the oggettocivetta
     */
    select?: oggettocivettaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: oggettocivettaInclude | null
    /**
     * Filter, which oggettocivetta to fetch.
     */
    where: oggettocivettaWhereUniqueInput
  }

  /**
   * oggettocivetta findUnique
   */
  export interface oggettocivettaFindUniqueArgs extends oggettocivettaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * oggettocivetta findUniqueOrThrow
   */
  export type oggettocivettaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the oggettocivetta
     */
    select?: oggettocivettaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: oggettocivettaInclude | null
    /**
     * Filter, which oggettocivetta to fetch.
     */
    where: oggettocivettaWhereUniqueInput
  }


  /**
   * oggettocivetta base type for findFirst actions
   */
  export type oggettocivettaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the oggettocivetta
     */
    select?: oggettocivettaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: oggettocivettaInclude | null
    /**
     * Filter, which oggettocivetta to fetch.
     */
    where?: oggettocivettaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oggettocivettas to fetch.
     */
    orderBy?: Enumerable<oggettocivettaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oggettocivettas.
     */
    cursor?: oggettocivettaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oggettocivettas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oggettocivettas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oggettocivettas.
     */
    distinct?: Enumerable<OggettocivettaScalarFieldEnum>
  }

  /**
   * oggettocivetta findFirst
   */
  export interface oggettocivettaFindFirstArgs extends oggettocivettaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * oggettocivetta findFirstOrThrow
   */
  export type oggettocivettaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the oggettocivetta
     */
    select?: oggettocivettaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: oggettocivettaInclude | null
    /**
     * Filter, which oggettocivetta to fetch.
     */
    where?: oggettocivettaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oggettocivettas to fetch.
     */
    orderBy?: Enumerable<oggettocivettaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oggettocivettas.
     */
    cursor?: oggettocivettaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oggettocivettas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oggettocivettas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oggettocivettas.
     */
    distinct?: Enumerable<OggettocivettaScalarFieldEnum>
  }


  /**
   * oggettocivetta findMany
   */
  export type oggettocivettaFindManyArgs = {
    /**
     * Select specific fields to fetch from the oggettocivetta
     */
    select?: oggettocivettaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: oggettocivettaInclude | null
    /**
     * Filter, which oggettocivettas to fetch.
     */
    where?: oggettocivettaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oggettocivettas to fetch.
     */
    orderBy?: Enumerable<oggettocivettaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing oggettocivettas.
     */
    cursor?: oggettocivettaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oggettocivettas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oggettocivettas.
     */
    skip?: number
    distinct?: Enumerable<OggettocivettaScalarFieldEnum>
  }


  /**
   * oggettocivetta create
   */
  export type oggettocivettaCreateArgs = {
    /**
     * Select specific fields to fetch from the oggettocivetta
     */
    select?: oggettocivettaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: oggettocivettaInclude | null
    /**
     * The data needed to create a oggettocivetta.
     */
    data: XOR<oggettocivettaCreateInput, oggettocivettaUncheckedCreateInput>
  }


  /**
   * oggettocivetta createMany
   */
  export type oggettocivettaCreateManyArgs = {
    /**
     * The data used to create many oggettocivettas.
     */
    data: Enumerable<oggettocivettaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * oggettocivetta update
   */
  export type oggettocivettaUpdateArgs = {
    /**
     * Select specific fields to fetch from the oggettocivetta
     */
    select?: oggettocivettaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: oggettocivettaInclude | null
    /**
     * The data needed to update a oggettocivetta.
     */
    data: XOR<oggettocivettaUpdateInput, oggettocivettaUncheckedUpdateInput>
    /**
     * Choose, which oggettocivetta to update.
     */
    where: oggettocivettaWhereUniqueInput
  }


  /**
   * oggettocivetta updateMany
   */
  export type oggettocivettaUpdateManyArgs = {
    /**
     * The data used to update oggettocivettas.
     */
    data: XOR<oggettocivettaUpdateManyMutationInput, oggettocivettaUncheckedUpdateManyInput>
    /**
     * Filter which oggettocivettas to update
     */
    where?: oggettocivettaWhereInput
  }


  /**
   * oggettocivetta upsert
   */
  export type oggettocivettaUpsertArgs = {
    /**
     * Select specific fields to fetch from the oggettocivetta
     */
    select?: oggettocivettaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: oggettocivettaInclude | null
    /**
     * The filter to search for the oggettocivetta to update in case it exists.
     */
    where: oggettocivettaWhereUniqueInput
    /**
     * In case the oggettocivetta found by the `where` argument doesn't exist, create a new oggettocivetta with this data.
     */
    create: XOR<oggettocivettaCreateInput, oggettocivettaUncheckedCreateInput>
    /**
     * In case the oggettocivetta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<oggettocivettaUpdateInput, oggettocivettaUncheckedUpdateInput>
  }


  /**
   * oggettocivetta delete
   */
  export type oggettocivettaDeleteArgs = {
    /**
     * Select specific fields to fetch from the oggettocivetta
     */
    select?: oggettocivettaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: oggettocivettaInclude | null
    /**
     * Filter which oggettocivetta to delete.
     */
    where: oggettocivettaWhereUniqueInput
  }


  /**
   * oggettocivetta deleteMany
   */
  export type oggettocivettaDeleteManyArgs = {
    /**
     * Filter which oggettocivettas to delete
     */
    where?: oggettocivettaWhereInput
  }


  /**
   * oggettocivetta without action
   */
  export type oggettocivettaArgs = {
    /**
     * Select specific fields to fetch from the oggettocivetta
     */
    select?: oggettocivettaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: oggettocivettaInclude | null
  }



  /**
   * Model personale
   */


  export type AggregatePersonale = {
    _count: PersonaleCountAggregateOutputType | null
    _avg: PersonaleAvgAggregateOutputType | null
    _sum: PersonaleSumAggregateOutputType | null
    _min: PersonaleMinAggregateOutputType | null
    _max: PersonaleMaxAggregateOutputType | null
  }

  export type PersonaleAvgAggregateOutputType = {
    id: number | null
    idUtente: number | null
    tipologiaPersonale: number | null
  }

  export type PersonaleSumAggregateOutputType = {
    id: number | null
    idUtente: number | null
    tipologiaPersonale: number | null
  }

  export type PersonaleMinAggregateOutputType = {
    id: number | null
    idUtente: number | null
    tipologiaPersonale: number | null
    descrizione: string | null
    dataModifica: string | null
  }

  export type PersonaleMaxAggregateOutputType = {
    id: number | null
    idUtente: number | null
    tipologiaPersonale: number | null
    descrizione: string | null
    dataModifica: string | null
  }

  export type PersonaleCountAggregateOutputType = {
    id: number
    idUtente: number
    tipologiaPersonale: number
    descrizione: number
    dataModifica: number
    _all: number
  }


  export type PersonaleAvgAggregateInputType = {
    id?: true
    idUtente?: true
    tipologiaPersonale?: true
  }

  export type PersonaleSumAggregateInputType = {
    id?: true
    idUtente?: true
    tipologiaPersonale?: true
  }

  export type PersonaleMinAggregateInputType = {
    id?: true
    idUtente?: true
    tipologiaPersonale?: true
    descrizione?: true
    dataModifica?: true
  }

  export type PersonaleMaxAggregateInputType = {
    id?: true
    idUtente?: true
    tipologiaPersonale?: true
    descrizione?: true
    dataModifica?: true
  }

  export type PersonaleCountAggregateInputType = {
    id?: true
    idUtente?: true
    tipologiaPersonale?: true
    descrizione?: true
    dataModifica?: true
    _all?: true
  }

  export type PersonaleAggregateArgs = {
    /**
     * Filter which personale to aggregate.
     */
    where?: personaleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personales to fetch.
     */
    orderBy?: Enumerable<personaleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: personaleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned personales
    **/
    _count?: true | PersonaleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PersonaleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PersonaleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PersonaleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PersonaleMaxAggregateInputType
  }

  export type GetPersonaleAggregateType<T extends PersonaleAggregateArgs> = {
        [P in keyof T & keyof AggregatePersonale]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePersonale[P]>
      : GetScalarType<T[P], AggregatePersonale[P]>
  }




  export type PersonaleGroupByArgs = {
    where?: personaleWhereInput
    orderBy?: Enumerable<personaleOrderByWithAggregationInput>
    by: PersonaleScalarFieldEnum[]
    having?: personaleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PersonaleCountAggregateInputType | true
    _avg?: PersonaleAvgAggregateInputType
    _sum?: PersonaleSumAggregateInputType
    _min?: PersonaleMinAggregateInputType
    _max?: PersonaleMaxAggregateInputType
  }


  export type PersonaleGroupByOutputType = {
    id: number
    idUtente: number | null
    tipologiaPersonale: number | null
    descrizione: string | null
    dataModifica: string | null
    _count: PersonaleCountAggregateOutputType | null
    _avg: PersonaleAvgAggregateOutputType | null
    _sum: PersonaleSumAggregateOutputType | null
    _min: PersonaleMinAggregateOutputType | null
    _max: PersonaleMaxAggregateOutputType | null
  }

  type GetPersonaleGroupByPayload<T extends PersonaleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<PersonaleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PersonaleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PersonaleGroupByOutputType[P]>
            : GetScalarType<T[P], PersonaleGroupByOutputType[P]>
        }
      >
    >


  export type personaleSelect = {
    id?: boolean
    idUtente?: boolean
    tipologiaPersonale?: boolean
    descrizione?: boolean
    dataModifica?: boolean
  }


  export type personaleGetPayload<S extends boolean | null | undefined | personaleArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? personale :
    S extends undefined ? never :
    S extends { include: any } & (personaleArgs | personaleFindManyArgs)
    ? personale 
    : S extends { select: any } & (personaleArgs | personaleFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof personale ? personale[P] : never
  } 
      : personale


  type personaleCountArgs = 
    Omit<personaleFindManyArgs, 'select' | 'include'> & {
      select?: PersonaleCountAggregateInputType | true
    }

  export interface personaleDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Personale that matches the filter.
     * @param {personaleFindUniqueArgs} args - Arguments to find a Personale
     * @example
     * // Get one Personale
     * const personale = await prisma.personale.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends personaleFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, personaleFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'personale'> extends True ? Prisma__personaleClient<personaleGetPayload<T>> : Prisma__personaleClient<personaleGetPayload<T> | null, null>

    /**
     * Find one Personale that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {personaleFindUniqueOrThrowArgs} args - Arguments to find a Personale
     * @example
     * // Get one Personale
     * const personale = await prisma.personale.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends personaleFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, personaleFindUniqueOrThrowArgs>
    ): Prisma__personaleClient<personaleGetPayload<T>>

    /**
     * Find the first Personale that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personaleFindFirstArgs} args - Arguments to find a Personale
     * @example
     * // Get one Personale
     * const personale = await prisma.personale.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends personaleFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, personaleFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'personale'> extends True ? Prisma__personaleClient<personaleGetPayload<T>> : Prisma__personaleClient<personaleGetPayload<T> | null, null>

    /**
     * Find the first Personale that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personaleFindFirstOrThrowArgs} args - Arguments to find a Personale
     * @example
     * // Get one Personale
     * const personale = await prisma.personale.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends personaleFindFirstOrThrowArgs>(
      args?: SelectSubset<T, personaleFindFirstOrThrowArgs>
    ): Prisma__personaleClient<personaleGetPayload<T>>

    /**
     * Find zero or more Personales that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personaleFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Personales
     * const personales = await prisma.personale.findMany()
     * 
     * // Get first 10 Personales
     * const personales = await prisma.personale.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const personaleWithIdOnly = await prisma.personale.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends personaleFindManyArgs>(
      args?: SelectSubset<T, personaleFindManyArgs>
    ): Prisma.PrismaPromise<Array<personaleGetPayload<T>>>

    /**
     * Create a Personale.
     * @param {personaleCreateArgs} args - Arguments to create a Personale.
     * @example
     * // Create one Personale
     * const Personale = await prisma.personale.create({
     *   data: {
     *     // ... data to create a Personale
     *   }
     * })
     * 
    **/
    create<T extends personaleCreateArgs>(
      args: SelectSubset<T, personaleCreateArgs>
    ): Prisma__personaleClient<personaleGetPayload<T>>

    /**
     * Create many Personales.
     *     @param {personaleCreateManyArgs} args - Arguments to create many Personales.
     *     @example
     *     // Create many Personales
     *     const personale = await prisma.personale.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends personaleCreateManyArgs>(
      args?: SelectSubset<T, personaleCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Personale.
     * @param {personaleDeleteArgs} args - Arguments to delete one Personale.
     * @example
     * // Delete one Personale
     * const Personale = await prisma.personale.delete({
     *   where: {
     *     // ... filter to delete one Personale
     *   }
     * })
     * 
    **/
    delete<T extends personaleDeleteArgs>(
      args: SelectSubset<T, personaleDeleteArgs>
    ): Prisma__personaleClient<personaleGetPayload<T>>

    /**
     * Update one Personale.
     * @param {personaleUpdateArgs} args - Arguments to update one Personale.
     * @example
     * // Update one Personale
     * const personale = await prisma.personale.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends personaleUpdateArgs>(
      args: SelectSubset<T, personaleUpdateArgs>
    ): Prisma__personaleClient<personaleGetPayload<T>>

    /**
     * Delete zero or more Personales.
     * @param {personaleDeleteManyArgs} args - Arguments to filter Personales to delete.
     * @example
     * // Delete a few Personales
     * const { count } = await prisma.personale.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends personaleDeleteManyArgs>(
      args?: SelectSubset<T, personaleDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Personales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personaleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Personales
     * const personale = await prisma.personale.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends personaleUpdateManyArgs>(
      args: SelectSubset<T, personaleUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Personale.
     * @param {personaleUpsertArgs} args - Arguments to update or create a Personale.
     * @example
     * // Update or create a Personale
     * const personale = await prisma.personale.upsert({
     *   create: {
     *     // ... data to create a Personale
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Personale we want to update
     *   }
     * })
    **/
    upsert<T extends personaleUpsertArgs>(
      args: SelectSubset<T, personaleUpsertArgs>
    ): Prisma__personaleClient<personaleGetPayload<T>>

    /**
     * Count the number of Personales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personaleCountArgs} args - Arguments to filter Personales to count.
     * @example
     * // Count the number of Personales
     * const count = await prisma.personale.count({
     *   where: {
     *     // ... the filter for the Personales we want to count
     *   }
     * })
    **/
    count<T extends personaleCountArgs>(
      args?: Subset<T, personaleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PersonaleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Personale.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PersonaleAggregateArgs>(args: Subset<T, PersonaleAggregateArgs>): Prisma.PrismaPromise<GetPersonaleAggregateType<T>>

    /**
     * Group by Personale.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PersonaleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PersonaleGroupByArgs['orderBy'] }
        : { orderBy?: PersonaleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PersonaleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPersonaleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for personale.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__personaleClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * personale base type for findUnique actions
   */
  export type personaleFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the personale
     */
    select?: personaleSelect | null
    /**
     * Filter, which personale to fetch.
     */
    where: personaleWhereUniqueInput
  }

  /**
   * personale findUnique
   */
  export interface personaleFindUniqueArgs extends personaleFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * personale findUniqueOrThrow
   */
  export type personaleFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the personale
     */
    select?: personaleSelect | null
    /**
     * Filter, which personale to fetch.
     */
    where: personaleWhereUniqueInput
  }


  /**
   * personale base type for findFirst actions
   */
  export type personaleFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the personale
     */
    select?: personaleSelect | null
    /**
     * Filter, which personale to fetch.
     */
    where?: personaleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personales to fetch.
     */
    orderBy?: Enumerable<personaleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for personales.
     */
    cursor?: personaleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of personales.
     */
    distinct?: Enumerable<PersonaleScalarFieldEnum>
  }

  /**
   * personale findFirst
   */
  export interface personaleFindFirstArgs extends personaleFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * personale findFirstOrThrow
   */
  export type personaleFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the personale
     */
    select?: personaleSelect | null
    /**
     * Filter, which personale to fetch.
     */
    where?: personaleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personales to fetch.
     */
    orderBy?: Enumerable<personaleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for personales.
     */
    cursor?: personaleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of personales.
     */
    distinct?: Enumerable<PersonaleScalarFieldEnum>
  }


  /**
   * personale findMany
   */
  export type personaleFindManyArgs = {
    /**
     * Select specific fields to fetch from the personale
     */
    select?: personaleSelect | null
    /**
     * Filter, which personales to fetch.
     */
    where?: personaleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personales to fetch.
     */
    orderBy?: Enumerable<personaleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing personales.
     */
    cursor?: personaleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personales.
     */
    skip?: number
    distinct?: Enumerable<PersonaleScalarFieldEnum>
  }


  /**
   * personale create
   */
  export type personaleCreateArgs = {
    /**
     * Select specific fields to fetch from the personale
     */
    select?: personaleSelect | null
    /**
     * The data needed to create a personale.
     */
    data: XOR<personaleCreateInput, personaleUncheckedCreateInput>
  }


  /**
   * personale createMany
   */
  export type personaleCreateManyArgs = {
    /**
     * The data used to create many personales.
     */
    data: Enumerable<personaleCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * personale update
   */
  export type personaleUpdateArgs = {
    /**
     * Select specific fields to fetch from the personale
     */
    select?: personaleSelect | null
    /**
     * The data needed to update a personale.
     */
    data: XOR<personaleUpdateInput, personaleUncheckedUpdateInput>
    /**
     * Choose, which personale to update.
     */
    where: personaleWhereUniqueInput
  }


  /**
   * personale updateMany
   */
  export type personaleUpdateManyArgs = {
    /**
     * The data used to update personales.
     */
    data: XOR<personaleUpdateManyMutationInput, personaleUncheckedUpdateManyInput>
    /**
     * Filter which personales to update
     */
    where?: personaleWhereInput
  }


  /**
   * personale upsert
   */
  export type personaleUpsertArgs = {
    /**
     * Select specific fields to fetch from the personale
     */
    select?: personaleSelect | null
    /**
     * The filter to search for the personale to update in case it exists.
     */
    where: personaleWhereUniqueInput
    /**
     * In case the personale found by the `where` argument doesn't exist, create a new personale with this data.
     */
    create: XOR<personaleCreateInput, personaleUncheckedCreateInput>
    /**
     * In case the personale was found with the provided `where` argument, update it with this data.
     */
    update: XOR<personaleUpdateInput, personaleUncheckedUpdateInput>
  }


  /**
   * personale delete
   */
  export type personaleDeleteArgs = {
    /**
     * Select specific fields to fetch from the personale
     */
    select?: personaleSelect | null
    /**
     * Filter which personale to delete.
     */
    where: personaleWhereUniqueInput
  }


  /**
   * personale deleteMany
   */
  export type personaleDeleteManyArgs = {
    /**
     * Filter which personales to delete
     */
    where?: personaleWhereInput
  }


  /**
   * personale without action
   */
  export type personaleArgs = {
    /**
     * Select specific fields to fetch from the personale
     */
    select?: personaleSelect | null
  }



  /**
   * Model poi
   */


  export type AggregatePoi = {
    _count: PoiCountAggregateOutputType | null
    _avg: PoiAvgAggregateOutputType | null
    _sum: PoiSumAggregateOutputType | null
    _min: PoiMinAggregateOutputType | null
    _max: PoiMaxAggregateOutputType | null
  }

  export type PoiAvgAggregateOutputType = {
    id: number | null
    idAppalto: number | null
  }

  export type PoiSumAggregateOutputType = {
    id: number | null
    idAppalto: number | null
  }

  export type PoiMinAggregateOutputType = {
    id: number | null
    descrizione: string | null
    dataInizio: string | null
    dataFine: string | null
    idAppalto: number | null
    notePOI: string | null
  }

  export type PoiMaxAggregateOutputType = {
    id: number | null
    descrizione: string | null
    dataInizio: string | null
    dataFine: string | null
    idAppalto: number | null
    notePOI: string | null
  }

  export type PoiCountAggregateOutputType = {
    id: number
    descrizione: number
    dataInizio: number
    dataFine: number
    idAppalto: number
    notePOI: number
    _all: number
  }


  export type PoiAvgAggregateInputType = {
    id?: true
    idAppalto?: true
  }

  export type PoiSumAggregateInputType = {
    id?: true
    idAppalto?: true
  }

  export type PoiMinAggregateInputType = {
    id?: true
    descrizione?: true
    dataInizio?: true
    dataFine?: true
    idAppalto?: true
    notePOI?: true
  }

  export type PoiMaxAggregateInputType = {
    id?: true
    descrizione?: true
    dataInizio?: true
    dataFine?: true
    idAppalto?: true
    notePOI?: true
  }

  export type PoiCountAggregateInputType = {
    id?: true
    descrizione?: true
    dataInizio?: true
    dataFine?: true
    idAppalto?: true
    notePOI?: true
    _all?: true
  }

  export type PoiAggregateArgs = {
    /**
     * Filter which poi to aggregate.
     */
    where?: poiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pois to fetch.
     */
    orderBy?: Enumerable<poiOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: poiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pois from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pois.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pois
    **/
    _count?: true | PoiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PoiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PoiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PoiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PoiMaxAggregateInputType
  }

  export type GetPoiAggregateType<T extends PoiAggregateArgs> = {
        [P in keyof T & keyof AggregatePoi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePoi[P]>
      : GetScalarType<T[P], AggregatePoi[P]>
  }




  export type PoiGroupByArgs = {
    where?: poiWhereInput
    orderBy?: Enumerable<poiOrderByWithAggregationInput>
    by: PoiScalarFieldEnum[]
    having?: poiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PoiCountAggregateInputType | true
    _avg?: PoiAvgAggregateInputType
    _sum?: PoiSumAggregateInputType
    _min?: PoiMinAggregateInputType
    _max?: PoiMaxAggregateInputType
  }


  export type PoiGroupByOutputType = {
    id: number
    descrizione: string | null
    dataInizio: string | null
    dataFine: string | null
    idAppalto: number | null
    notePOI: string | null
    _count: PoiCountAggregateOutputType | null
    _avg: PoiAvgAggregateOutputType | null
    _sum: PoiSumAggregateOutputType | null
    _min: PoiMinAggregateOutputType | null
    _max: PoiMaxAggregateOutputType | null
  }

  type GetPoiGroupByPayload<T extends PoiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<PoiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PoiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PoiGroupByOutputType[P]>
            : GetScalarType<T[P], PoiGroupByOutputType[P]>
        }
      >
    >


  export type poiSelect = {
    id?: boolean
    descrizione?: boolean
    dataInizio?: boolean
    dataFine?: boolean
    idAppalto?: boolean
    notePOI?: boolean
  }


  export type poiGetPayload<S extends boolean | null | undefined | poiArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? poi :
    S extends undefined ? never :
    S extends { include: any } & (poiArgs | poiFindManyArgs)
    ? poi 
    : S extends { select: any } & (poiArgs | poiFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof poi ? poi[P] : never
  } 
      : poi


  type poiCountArgs = 
    Omit<poiFindManyArgs, 'select' | 'include'> & {
      select?: PoiCountAggregateInputType | true
    }

  export interface poiDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Poi that matches the filter.
     * @param {poiFindUniqueArgs} args - Arguments to find a Poi
     * @example
     * // Get one Poi
     * const poi = await prisma.poi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends poiFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, poiFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'poi'> extends True ? Prisma__poiClient<poiGetPayload<T>> : Prisma__poiClient<poiGetPayload<T> | null, null>

    /**
     * Find one Poi that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {poiFindUniqueOrThrowArgs} args - Arguments to find a Poi
     * @example
     * // Get one Poi
     * const poi = await prisma.poi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends poiFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, poiFindUniqueOrThrowArgs>
    ): Prisma__poiClient<poiGetPayload<T>>

    /**
     * Find the first Poi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {poiFindFirstArgs} args - Arguments to find a Poi
     * @example
     * // Get one Poi
     * const poi = await prisma.poi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends poiFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, poiFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'poi'> extends True ? Prisma__poiClient<poiGetPayload<T>> : Prisma__poiClient<poiGetPayload<T> | null, null>

    /**
     * Find the first Poi that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {poiFindFirstOrThrowArgs} args - Arguments to find a Poi
     * @example
     * // Get one Poi
     * const poi = await prisma.poi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends poiFindFirstOrThrowArgs>(
      args?: SelectSubset<T, poiFindFirstOrThrowArgs>
    ): Prisma__poiClient<poiGetPayload<T>>

    /**
     * Find zero or more Pois that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {poiFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pois
     * const pois = await prisma.poi.findMany()
     * 
     * // Get first 10 Pois
     * const pois = await prisma.poi.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const poiWithIdOnly = await prisma.poi.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends poiFindManyArgs>(
      args?: SelectSubset<T, poiFindManyArgs>
    ): Prisma.PrismaPromise<Array<poiGetPayload<T>>>

    /**
     * Create a Poi.
     * @param {poiCreateArgs} args - Arguments to create a Poi.
     * @example
     * // Create one Poi
     * const Poi = await prisma.poi.create({
     *   data: {
     *     // ... data to create a Poi
     *   }
     * })
     * 
    **/
    create<T extends poiCreateArgs>(
      args: SelectSubset<T, poiCreateArgs>
    ): Prisma__poiClient<poiGetPayload<T>>

    /**
     * Create many Pois.
     *     @param {poiCreateManyArgs} args - Arguments to create many Pois.
     *     @example
     *     // Create many Pois
     *     const poi = await prisma.poi.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends poiCreateManyArgs>(
      args?: SelectSubset<T, poiCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Poi.
     * @param {poiDeleteArgs} args - Arguments to delete one Poi.
     * @example
     * // Delete one Poi
     * const Poi = await prisma.poi.delete({
     *   where: {
     *     // ... filter to delete one Poi
     *   }
     * })
     * 
    **/
    delete<T extends poiDeleteArgs>(
      args: SelectSubset<T, poiDeleteArgs>
    ): Prisma__poiClient<poiGetPayload<T>>

    /**
     * Update one Poi.
     * @param {poiUpdateArgs} args - Arguments to update one Poi.
     * @example
     * // Update one Poi
     * const poi = await prisma.poi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends poiUpdateArgs>(
      args: SelectSubset<T, poiUpdateArgs>
    ): Prisma__poiClient<poiGetPayload<T>>

    /**
     * Delete zero or more Pois.
     * @param {poiDeleteManyArgs} args - Arguments to filter Pois to delete.
     * @example
     * // Delete a few Pois
     * const { count } = await prisma.poi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends poiDeleteManyArgs>(
      args?: SelectSubset<T, poiDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pois.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {poiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pois
     * const poi = await prisma.poi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends poiUpdateManyArgs>(
      args: SelectSubset<T, poiUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Poi.
     * @param {poiUpsertArgs} args - Arguments to update or create a Poi.
     * @example
     * // Update or create a Poi
     * const poi = await prisma.poi.upsert({
     *   create: {
     *     // ... data to create a Poi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Poi we want to update
     *   }
     * })
    **/
    upsert<T extends poiUpsertArgs>(
      args: SelectSubset<T, poiUpsertArgs>
    ): Prisma__poiClient<poiGetPayload<T>>

    /**
     * Count the number of Pois.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {poiCountArgs} args - Arguments to filter Pois to count.
     * @example
     * // Count the number of Pois
     * const count = await prisma.poi.count({
     *   where: {
     *     // ... the filter for the Pois we want to count
     *   }
     * })
    **/
    count<T extends poiCountArgs>(
      args?: Subset<T, poiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PoiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Poi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PoiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PoiAggregateArgs>(args: Subset<T, PoiAggregateArgs>): Prisma.PrismaPromise<GetPoiAggregateType<T>>

    /**
     * Group by Poi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PoiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PoiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PoiGroupByArgs['orderBy'] }
        : { orderBy?: PoiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PoiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPoiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for poi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__poiClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * poi base type for findUnique actions
   */
  export type poiFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the poi
     */
    select?: poiSelect | null
    /**
     * Filter, which poi to fetch.
     */
    where: poiWhereUniqueInput
  }

  /**
   * poi findUnique
   */
  export interface poiFindUniqueArgs extends poiFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * poi findUniqueOrThrow
   */
  export type poiFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the poi
     */
    select?: poiSelect | null
    /**
     * Filter, which poi to fetch.
     */
    where: poiWhereUniqueInput
  }


  /**
   * poi base type for findFirst actions
   */
  export type poiFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the poi
     */
    select?: poiSelect | null
    /**
     * Filter, which poi to fetch.
     */
    where?: poiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pois to fetch.
     */
    orderBy?: Enumerable<poiOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pois.
     */
    cursor?: poiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pois from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pois.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pois.
     */
    distinct?: Enumerable<PoiScalarFieldEnum>
  }

  /**
   * poi findFirst
   */
  export interface poiFindFirstArgs extends poiFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * poi findFirstOrThrow
   */
  export type poiFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the poi
     */
    select?: poiSelect | null
    /**
     * Filter, which poi to fetch.
     */
    where?: poiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pois to fetch.
     */
    orderBy?: Enumerable<poiOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pois.
     */
    cursor?: poiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pois from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pois.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pois.
     */
    distinct?: Enumerable<PoiScalarFieldEnum>
  }


  /**
   * poi findMany
   */
  export type poiFindManyArgs = {
    /**
     * Select specific fields to fetch from the poi
     */
    select?: poiSelect | null
    /**
     * Filter, which pois to fetch.
     */
    where?: poiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pois to fetch.
     */
    orderBy?: Enumerable<poiOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pois.
     */
    cursor?: poiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pois from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pois.
     */
    skip?: number
    distinct?: Enumerable<PoiScalarFieldEnum>
  }


  /**
   * poi create
   */
  export type poiCreateArgs = {
    /**
     * Select specific fields to fetch from the poi
     */
    select?: poiSelect | null
    /**
     * The data needed to create a poi.
     */
    data: XOR<poiCreateInput, poiUncheckedCreateInput>
  }


  /**
   * poi createMany
   */
  export type poiCreateManyArgs = {
    /**
     * The data used to create many pois.
     */
    data: Enumerable<poiCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * poi update
   */
  export type poiUpdateArgs = {
    /**
     * Select specific fields to fetch from the poi
     */
    select?: poiSelect | null
    /**
     * The data needed to update a poi.
     */
    data: XOR<poiUpdateInput, poiUncheckedUpdateInput>
    /**
     * Choose, which poi to update.
     */
    where: poiWhereUniqueInput
  }


  /**
   * poi updateMany
   */
  export type poiUpdateManyArgs = {
    /**
     * The data used to update pois.
     */
    data: XOR<poiUpdateManyMutationInput, poiUncheckedUpdateManyInput>
    /**
     * Filter which pois to update
     */
    where?: poiWhereInput
  }


  /**
   * poi upsert
   */
  export type poiUpsertArgs = {
    /**
     * Select specific fields to fetch from the poi
     */
    select?: poiSelect | null
    /**
     * The filter to search for the poi to update in case it exists.
     */
    where: poiWhereUniqueInput
    /**
     * In case the poi found by the `where` argument doesn't exist, create a new poi with this data.
     */
    create: XOR<poiCreateInput, poiUncheckedCreateInput>
    /**
     * In case the poi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<poiUpdateInput, poiUncheckedUpdateInput>
  }


  /**
   * poi delete
   */
  export type poiDeleteArgs = {
    /**
     * Select specific fields to fetch from the poi
     */
    select?: poiSelect | null
    /**
     * Filter which poi to delete.
     */
    where: poiWhereUniqueInput
  }


  /**
   * poi deleteMany
   */
  export type poiDeleteManyArgs = {
    /**
     * Filter which pois to delete
     */
    where?: poiWhereInput
  }


  /**
   * poi without action
   */
  export type poiArgs = {
    /**
     * Select specific fields to fetch from the poi
     */
    select?: poiSelect | null
  }



  /**
   * Model pratica
   */


  export type AggregatePratica = {
    _count: PraticaCountAggregateOutputType | null
    _avg: PraticaAvgAggregateOutputType | null
    _sum: PraticaSumAggregateOutputType | null
    _min: PraticaMinAggregateOutputType | null
    _max: PraticaMaxAggregateOutputType | null
  }

  export type PraticaAvgAggregateOutputType = {
    id: number | null
    idUtente: number | null
    idAppalto: number | null
  }

  export type PraticaSumAggregateOutputType = {
    id: number | null
    idUtente: number | null
    idAppalto: number | null
  }

  export type PraticaMinAggregateOutputType = {
    id: number | null
    idUtente: number | null
    idAppalto: number | null
    dataModifica: string | null
    dataChiusura: string | null
    nomePratica: string | null
    localizzazioneDichiarataQuartiere: string | null
    localizzazioneDichiarata: string | null
    notePratica: string | null
    importoPratica: string | null
    del: string | null
    dataCreazione: string | null
    statoCorrentePratica: string | null
    delLavori: string | null
  }

  export type PraticaMaxAggregateOutputType = {
    id: number | null
    idUtente: number | null
    idAppalto: number | null
    dataModifica: string | null
    dataChiusura: string | null
    nomePratica: string | null
    localizzazioneDichiarataQuartiere: string | null
    localizzazioneDichiarata: string | null
    notePratica: string | null
    importoPratica: string | null
    del: string | null
    dataCreazione: string | null
    statoCorrentePratica: string | null
    delLavori: string | null
  }

  export type PraticaCountAggregateOutputType = {
    id: number
    idUtente: number
    idAppalto: number
    dataModifica: number
    dataChiusura: number
    nomePratica: number
    localizzazioneDichiarataQuartiere: number
    localizzazioneDichiarata: number
    notePratica: number
    importoPratica: number
    del: number
    dataCreazione: number
    statoCorrentePratica: number
    delLavori: number
    _all: number
  }


  export type PraticaAvgAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
  }

  export type PraticaSumAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
  }

  export type PraticaMinAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
    dataModifica?: true
    dataChiusura?: true
    nomePratica?: true
    localizzazioneDichiarataQuartiere?: true
    localizzazioneDichiarata?: true
    notePratica?: true
    importoPratica?: true
    del?: true
    dataCreazione?: true
    statoCorrentePratica?: true
    delLavori?: true
  }

  export type PraticaMaxAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
    dataModifica?: true
    dataChiusura?: true
    nomePratica?: true
    localizzazioneDichiarataQuartiere?: true
    localizzazioneDichiarata?: true
    notePratica?: true
    importoPratica?: true
    del?: true
    dataCreazione?: true
    statoCorrentePratica?: true
    delLavori?: true
  }

  export type PraticaCountAggregateInputType = {
    id?: true
    idUtente?: true
    idAppalto?: true
    dataModifica?: true
    dataChiusura?: true
    nomePratica?: true
    localizzazioneDichiarataQuartiere?: true
    localizzazioneDichiarata?: true
    notePratica?: true
    importoPratica?: true
    del?: true
    dataCreazione?: true
    statoCorrentePratica?: true
    delLavori?: true
    _all?: true
  }

  export type PraticaAggregateArgs = {
    /**
     * Filter which pratica to aggregate.
     */
    where?: praticaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of praticas to fetch.
     */
    orderBy?: Enumerable<praticaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: praticaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` praticas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` praticas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned praticas
    **/
    _count?: true | PraticaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PraticaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PraticaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PraticaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PraticaMaxAggregateInputType
  }

  export type GetPraticaAggregateType<T extends PraticaAggregateArgs> = {
        [P in keyof T & keyof AggregatePratica]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePratica[P]>
      : GetScalarType<T[P], AggregatePratica[P]>
  }




  export type PraticaGroupByArgs = {
    where?: praticaWhereInput
    orderBy?: Enumerable<praticaOrderByWithAggregationInput>
    by: PraticaScalarFieldEnum[]
    having?: praticaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PraticaCountAggregateInputType | true
    _avg?: PraticaAvgAggregateInputType
    _sum?: PraticaSumAggregateInputType
    _min?: PraticaMinAggregateInputType
    _max?: PraticaMaxAggregateInputType
  }


  export type PraticaGroupByOutputType = {
    id: number
    idUtente: number | null
    idAppalto: number | null
    dataModifica: string | null
    dataChiusura: string | null
    nomePratica: string | null
    localizzazioneDichiarataQuartiere: string | null
    localizzazioneDichiarata: string | null
    notePratica: string | null
    importoPratica: string | null
    del: string | null
    dataCreazione: string | null
    statoCorrentePratica: string | null
    delLavori: string | null
    _count: PraticaCountAggregateOutputType | null
    _avg: PraticaAvgAggregateOutputType | null
    _sum: PraticaSumAggregateOutputType | null
    _min: PraticaMinAggregateOutputType | null
    _max: PraticaMaxAggregateOutputType | null
  }

  type GetPraticaGroupByPayload<T extends PraticaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<PraticaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PraticaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PraticaGroupByOutputType[P]>
            : GetScalarType<T[P], PraticaGroupByOutputType[P]>
        }
      >
    >


  export type praticaSelect = {
    id?: boolean
    idUtente?: boolean
    idAppalto?: boolean
    dataModifica?: boolean
    dataChiusura?: boolean
    nomePratica?: boolean
    localizzazioneDichiarataQuartiere?: boolean
    localizzazioneDichiarata?: boolean
    notePratica?: boolean
    importoPratica?: boolean
    del?: boolean
    dataCreazione?: boolean
    statoCorrentePratica?: boolean
    delLavori?: boolean
    catastolinker?: boolean | pratica$catastolinkerArgs
    utenti?: boolean | utentiArgs
    _count?: boolean | PraticaCountOutputTypeArgs
  }


  export type praticaInclude = {
    catastolinker?: boolean | pratica$catastolinkerArgs
    utenti?: boolean | utentiArgs
    _count?: boolean | PraticaCountOutputTypeArgs
  }

  export type praticaGetPayload<S extends boolean | null | undefined | praticaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? pratica :
    S extends undefined ? never :
    S extends { include: any } & (praticaArgs | praticaFindManyArgs)
    ? pratica  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'catastolinker' ? Array < catastolinkerGetPayload<S['include'][P]>>  :
        P extends 'utenti' ? utentiGetPayload<S['include'][P]> | null :
        P extends '_count' ? PraticaCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (praticaArgs | praticaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'catastolinker' ? Array < catastolinkerGetPayload<S['select'][P]>>  :
        P extends 'utenti' ? utentiGetPayload<S['select'][P]> | null :
        P extends '_count' ? PraticaCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof pratica ? pratica[P] : never
  } 
      : pratica


  type praticaCountArgs = 
    Omit<praticaFindManyArgs, 'select' | 'include'> & {
      select?: PraticaCountAggregateInputType | true
    }

  export interface praticaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Pratica that matches the filter.
     * @param {praticaFindUniqueArgs} args - Arguments to find a Pratica
     * @example
     * // Get one Pratica
     * const pratica = await prisma.pratica.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends praticaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, praticaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'pratica'> extends True ? Prisma__praticaClient<praticaGetPayload<T>> : Prisma__praticaClient<praticaGetPayload<T> | null, null>

    /**
     * Find one Pratica that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {praticaFindUniqueOrThrowArgs} args - Arguments to find a Pratica
     * @example
     * // Get one Pratica
     * const pratica = await prisma.pratica.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends praticaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, praticaFindUniqueOrThrowArgs>
    ): Prisma__praticaClient<praticaGetPayload<T>>

    /**
     * Find the first Pratica that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {praticaFindFirstArgs} args - Arguments to find a Pratica
     * @example
     * // Get one Pratica
     * const pratica = await prisma.pratica.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends praticaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, praticaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'pratica'> extends True ? Prisma__praticaClient<praticaGetPayload<T>> : Prisma__praticaClient<praticaGetPayload<T> | null, null>

    /**
     * Find the first Pratica that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {praticaFindFirstOrThrowArgs} args - Arguments to find a Pratica
     * @example
     * // Get one Pratica
     * const pratica = await prisma.pratica.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends praticaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, praticaFindFirstOrThrowArgs>
    ): Prisma__praticaClient<praticaGetPayload<T>>

    /**
     * Find zero or more Praticas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {praticaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Praticas
     * const praticas = await prisma.pratica.findMany()
     * 
     * // Get first 10 Praticas
     * const praticas = await prisma.pratica.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const praticaWithIdOnly = await prisma.pratica.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends praticaFindManyArgs>(
      args?: SelectSubset<T, praticaFindManyArgs>
    ): Prisma.PrismaPromise<Array<praticaGetPayload<T>>>

    /**
     * Create a Pratica.
     * @param {praticaCreateArgs} args - Arguments to create a Pratica.
     * @example
     * // Create one Pratica
     * const Pratica = await prisma.pratica.create({
     *   data: {
     *     // ... data to create a Pratica
     *   }
     * })
     * 
    **/
    create<T extends praticaCreateArgs>(
      args: SelectSubset<T, praticaCreateArgs>
    ): Prisma__praticaClient<praticaGetPayload<T>>

    /**
     * Create many Praticas.
     *     @param {praticaCreateManyArgs} args - Arguments to create many Praticas.
     *     @example
     *     // Create many Praticas
     *     const pratica = await prisma.pratica.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends praticaCreateManyArgs>(
      args?: SelectSubset<T, praticaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Pratica.
     * @param {praticaDeleteArgs} args - Arguments to delete one Pratica.
     * @example
     * // Delete one Pratica
     * const Pratica = await prisma.pratica.delete({
     *   where: {
     *     // ... filter to delete one Pratica
     *   }
     * })
     * 
    **/
    delete<T extends praticaDeleteArgs>(
      args: SelectSubset<T, praticaDeleteArgs>
    ): Prisma__praticaClient<praticaGetPayload<T>>

    /**
     * Update one Pratica.
     * @param {praticaUpdateArgs} args - Arguments to update one Pratica.
     * @example
     * // Update one Pratica
     * const pratica = await prisma.pratica.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends praticaUpdateArgs>(
      args: SelectSubset<T, praticaUpdateArgs>
    ): Prisma__praticaClient<praticaGetPayload<T>>

    /**
     * Delete zero or more Praticas.
     * @param {praticaDeleteManyArgs} args - Arguments to filter Praticas to delete.
     * @example
     * // Delete a few Praticas
     * const { count } = await prisma.pratica.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends praticaDeleteManyArgs>(
      args?: SelectSubset<T, praticaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Praticas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {praticaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Praticas
     * const pratica = await prisma.pratica.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends praticaUpdateManyArgs>(
      args: SelectSubset<T, praticaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pratica.
     * @param {praticaUpsertArgs} args - Arguments to update or create a Pratica.
     * @example
     * // Update or create a Pratica
     * const pratica = await prisma.pratica.upsert({
     *   create: {
     *     // ... data to create a Pratica
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pratica we want to update
     *   }
     * })
    **/
    upsert<T extends praticaUpsertArgs>(
      args: SelectSubset<T, praticaUpsertArgs>
    ): Prisma__praticaClient<praticaGetPayload<T>>

    /**
     * Count the number of Praticas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {praticaCountArgs} args - Arguments to filter Praticas to count.
     * @example
     * // Count the number of Praticas
     * const count = await prisma.pratica.count({
     *   where: {
     *     // ... the filter for the Praticas we want to count
     *   }
     * })
    **/
    count<T extends praticaCountArgs>(
      args?: Subset<T, praticaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PraticaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pratica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PraticaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PraticaAggregateArgs>(args: Subset<T, PraticaAggregateArgs>): Prisma.PrismaPromise<GetPraticaAggregateType<T>>

    /**
     * Group by Pratica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PraticaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PraticaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PraticaGroupByArgs['orderBy'] }
        : { orderBy?: PraticaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PraticaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPraticaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for pratica.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__praticaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    catastolinker<T extends pratica$catastolinkerArgs= {}>(args?: Subset<T, pratica$catastolinkerArgs>): Prisma.PrismaPromise<Array<catastolinkerGetPayload<T>>| Null>;

    utenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * pratica base type for findUnique actions
   */
  export type praticaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the pratica
     */
    select?: praticaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticaInclude | null
    /**
     * Filter, which pratica to fetch.
     */
    where: praticaWhereUniqueInput
  }

  /**
   * pratica findUnique
   */
  export interface praticaFindUniqueArgs extends praticaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * pratica findUniqueOrThrow
   */
  export type praticaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the pratica
     */
    select?: praticaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticaInclude | null
    /**
     * Filter, which pratica to fetch.
     */
    where: praticaWhereUniqueInput
  }


  /**
   * pratica base type for findFirst actions
   */
  export type praticaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the pratica
     */
    select?: praticaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticaInclude | null
    /**
     * Filter, which pratica to fetch.
     */
    where?: praticaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of praticas to fetch.
     */
    orderBy?: Enumerable<praticaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for praticas.
     */
    cursor?: praticaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` praticas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` praticas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of praticas.
     */
    distinct?: Enumerable<PraticaScalarFieldEnum>
  }

  /**
   * pratica findFirst
   */
  export interface praticaFindFirstArgs extends praticaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * pratica findFirstOrThrow
   */
  export type praticaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the pratica
     */
    select?: praticaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticaInclude | null
    /**
     * Filter, which pratica to fetch.
     */
    where?: praticaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of praticas to fetch.
     */
    orderBy?: Enumerable<praticaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for praticas.
     */
    cursor?: praticaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` praticas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` praticas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of praticas.
     */
    distinct?: Enumerable<PraticaScalarFieldEnum>
  }


  /**
   * pratica findMany
   */
  export type praticaFindManyArgs = {
    /**
     * Select specific fields to fetch from the pratica
     */
    select?: praticaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticaInclude | null
    /**
     * Filter, which praticas to fetch.
     */
    where?: praticaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of praticas to fetch.
     */
    orderBy?: Enumerable<praticaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing praticas.
     */
    cursor?: praticaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` praticas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` praticas.
     */
    skip?: number
    distinct?: Enumerable<PraticaScalarFieldEnum>
  }


  /**
   * pratica create
   */
  export type praticaCreateArgs = {
    /**
     * Select specific fields to fetch from the pratica
     */
    select?: praticaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticaInclude | null
    /**
     * The data needed to create a pratica.
     */
    data: XOR<praticaCreateInput, praticaUncheckedCreateInput>
  }


  /**
   * pratica createMany
   */
  export type praticaCreateManyArgs = {
    /**
     * The data used to create many praticas.
     */
    data: Enumerable<praticaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * pratica update
   */
  export type praticaUpdateArgs = {
    /**
     * Select specific fields to fetch from the pratica
     */
    select?: praticaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticaInclude | null
    /**
     * The data needed to update a pratica.
     */
    data: XOR<praticaUpdateInput, praticaUncheckedUpdateInput>
    /**
     * Choose, which pratica to update.
     */
    where: praticaWhereUniqueInput
  }


  /**
   * pratica updateMany
   */
  export type praticaUpdateManyArgs = {
    /**
     * The data used to update praticas.
     */
    data: XOR<praticaUpdateManyMutationInput, praticaUncheckedUpdateManyInput>
    /**
     * Filter which praticas to update
     */
    where?: praticaWhereInput
  }


  /**
   * pratica upsert
   */
  export type praticaUpsertArgs = {
    /**
     * Select specific fields to fetch from the pratica
     */
    select?: praticaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticaInclude | null
    /**
     * The filter to search for the pratica to update in case it exists.
     */
    where: praticaWhereUniqueInput
    /**
     * In case the pratica found by the `where` argument doesn't exist, create a new pratica with this data.
     */
    create: XOR<praticaCreateInput, praticaUncheckedCreateInput>
    /**
     * In case the pratica was found with the provided `where` argument, update it with this data.
     */
    update: XOR<praticaUpdateInput, praticaUncheckedUpdateInput>
  }


  /**
   * pratica delete
   */
  export type praticaDeleteArgs = {
    /**
     * Select specific fields to fetch from the pratica
     */
    select?: praticaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticaInclude | null
    /**
     * Filter which pratica to delete.
     */
    where: praticaWhereUniqueInput
  }


  /**
   * pratica deleteMany
   */
  export type praticaDeleteManyArgs = {
    /**
     * Filter which praticas to delete
     */
    where?: praticaWhereInput
  }


  /**
   * pratica.catastolinker
   */
  export type pratica$catastolinkerArgs = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
    where?: catastolinkerWhereInput
    orderBy?: Enumerable<catastolinkerOrderByWithRelationInput>
    cursor?: catastolinkerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<CatastolinkerScalarFieldEnum>
  }


  /**
   * pratica without action
   */
  export type praticaArgs = {
    /**
     * Select specific fields to fetch from the pratica
     */
    select?: praticaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticaInclude | null
  }



  /**
   * Model praticastorico
   */


  export type AggregatePraticastorico = {
    _count: PraticastoricoCountAggregateOutputType | null
    _avg: PraticastoricoAvgAggregateOutputType | null
    _sum: PraticastoricoSumAggregateOutputType | null
    _min: PraticastoricoMinAggregateOutputType | null
    _max: PraticastoricoMaxAggregateOutputType | null
  }

  export type PraticastoricoAvgAggregateOutputType = {
    id: number | null
    idPratica: number | null
    idAppalto: number | null
    idUtente: number | null
  }

  export type PraticastoricoSumAggregateOutputType = {
    id: number | null
    idPratica: number | null
    idAppalto: number | null
    idUtente: number | null
  }

  export type PraticastoricoMinAggregateOutputType = {
    id: number | null
    idPratica: number | null
    idAppalto: number | null
    idUtente: number | null
    nomePratica: string | null
    localizzazioneDichiarataQuartiere: string | null
    localizzazioneDichiarata: string | null
    dataModifica: string | null
    dataChiusura: string | null
    notePratica: string | null
    importoPratica: string | null
    del: string | null
    dataCreazione: string | null
    statoCorrentePratica: string | null
    delLavori: string | null
  }

  export type PraticastoricoMaxAggregateOutputType = {
    id: number | null
    idPratica: number | null
    idAppalto: number | null
    idUtente: number | null
    nomePratica: string | null
    localizzazioneDichiarataQuartiere: string | null
    localizzazioneDichiarata: string | null
    dataModifica: string | null
    dataChiusura: string | null
    notePratica: string | null
    importoPratica: string | null
    del: string | null
    dataCreazione: string | null
    statoCorrentePratica: string | null
    delLavori: string | null
  }

  export type PraticastoricoCountAggregateOutputType = {
    id: number
    idPratica: number
    idAppalto: number
    idUtente: number
    nomePratica: number
    localizzazioneDichiarataQuartiere: number
    localizzazioneDichiarata: number
    dataModifica: number
    dataChiusura: number
    notePratica: number
    importoPratica: number
    del: number
    dataCreazione: number
    statoCorrentePratica: number
    delLavori: number
    _all: number
  }


  export type PraticastoricoAvgAggregateInputType = {
    id?: true
    idPratica?: true
    idAppalto?: true
    idUtente?: true
  }

  export type PraticastoricoSumAggregateInputType = {
    id?: true
    idPratica?: true
    idAppalto?: true
    idUtente?: true
  }

  export type PraticastoricoMinAggregateInputType = {
    id?: true
    idPratica?: true
    idAppalto?: true
    idUtente?: true
    nomePratica?: true
    localizzazioneDichiarataQuartiere?: true
    localizzazioneDichiarata?: true
    dataModifica?: true
    dataChiusura?: true
    notePratica?: true
    importoPratica?: true
    del?: true
    dataCreazione?: true
    statoCorrentePratica?: true
    delLavori?: true
  }

  export type PraticastoricoMaxAggregateInputType = {
    id?: true
    idPratica?: true
    idAppalto?: true
    idUtente?: true
    nomePratica?: true
    localizzazioneDichiarataQuartiere?: true
    localizzazioneDichiarata?: true
    dataModifica?: true
    dataChiusura?: true
    notePratica?: true
    importoPratica?: true
    del?: true
    dataCreazione?: true
    statoCorrentePratica?: true
    delLavori?: true
  }

  export type PraticastoricoCountAggregateInputType = {
    id?: true
    idPratica?: true
    idAppalto?: true
    idUtente?: true
    nomePratica?: true
    localizzazioneDichiarataQuartiere?: true
    localizzazioneDichiarata?: true
    dataModifica?: true
    dataChiusura?: true
    notePratica?: true
    importoPratica?: true
    del?: true
    dataCreazione?: true
    statoCorrentePratica?: true
    delLavori?: true
    _all?: true
  }

  export type PraticastoricoAggregateArgs = {
    /**
     * Filter which praticastorico to aggregate.
     */
    where?: praticastoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of praticastoricos to fetch.
     */
    orderBy?: Enumerable<praticastoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: praticastoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` praticastoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` praticastoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned praticastoricos
    **/
    _count?: true | PraticastoricoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PraticastoricoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PraticastoricoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PraticastoricoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PraticastoricoMaxAggregateInputType
  }

  export type GetPraticastoricoAggregateType<T extends PraticastoricoAggregateArgs> = {
        [P in keyof T & keyof AggregatePraticastorico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePraticastorico[P]>
      : GetScalarType<T[P], AggregatePraticastorico[P]>
  }




  export type PraticastoricoGroupByArgs = {
    where?: praticastoricoWhereInput
    orderBy?: Enumerable<praticastoricoOrderByWithAggregationInput>
    by: PraticastoricoScalarFieldEnum[]
    having?: praticastoricoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PraticastoricoCountAggregateInputType | true
    _avg?: PraticastoricoAvgAggregateInputType
    _sum?: PraticastoricoSumAggregateInputType
    _min?: PraticastoricoMinAggregateInputType
    _max?: PraticastoricoMaxAggregateInputType
  }


  export type PraticastoricoGroupByOutputType = {
    id: number
    idPratica: number | null
    idAppalto: number | null
    idUtente: number | null
    nomePratica: string | null
    localizzazioneDichiarataQuartiere: string | null
    localizzazioneDichiarata: string | null
    dataModifica: string | null
    dataChiusura: string | null
    notePratica: string | null
    importoPratica: string | null
    del: string | null
    dataCreazione: string | null
    statoCorrentePratica: string | null
    delLavori: string | null
    _count: PraticastoricoCountAggregateOutputType | null
    _avg: PraticastoricoAvgAggregateOutputType | null
    _sum: PraticastoricoSumAggregateOutputType | null
    _min: PraticastoricoMinAggregateOutputType | null
    _max: PraticastoricoMaxAggregateOutputType | null
  }

  type GetPraticastoricoGroupByPayload<T extends PraticastoricoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<PraticastoricoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PraticastoricoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PraticastoricoGroupByOutputType[P]>
            : GetScalarType<T[P], PraticastoricoGroupByOutputType[P]>
        }
      >
    >


  export type praticastoricoSelect = {
    id?: boolean
    idPratica?: boolean
    idAppalto?: boolean
    idUtente?: boolean
    nomePratica?: boolean
    localizzazioneDichiarataQuartiere?: boolean
    localizzazioneDichiarata?: boolean
    dataModifica?: boolean
    dataChiusura?: boolean
    notePratica?: boolean
    importoPratica?: boolean
    del?: boolean
    dataCreazione?: boolean
    statoCorrentePratica?: boolean
    delLavori?: boolean
    utenti?: boolean | utentiArgs
  }


  export type praticastoricoInclude = {
    utenti?: boolean | utentiArgs
  }

  export type praticastoricoGetPayload<S extends boolean | null | undefined | praticastoricoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? praticastorico :
    S extends undefined ? never :
    S extends { include: any } & (praticastoricoArgs | praticastoricoFindManyArgs)
    ? praticastorico  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'utenti' ? utentiGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (praticastoricoArgs | praticastoricoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'utenti' ? utentiGetPayload<S['select'][P]> | null :  P extends keyof praticastorico ? praticastorico[P] : never
  } 
      : praticastorico


  type praticastoricoCountArgs = 
    Omit<praticastoricoFindManyArgs, 'select' | 'include'> & {
      select?: PraticastoricoCountAggregateInputType | true
    }

  export interface praticastoricoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Praticastorico that matches the filter.
     * @param {praticastoricoFindUniqueArgs} args - Arguments to find a Praticastorico
     * @example
     * // Get one Praticastorico
     * const praticastorico = await prisma.praticastorico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends praticastoricoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, praticastoricoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'praticastorico'> extends True ? Prisma__praticastoricoClient<praticastoricoGetPayload<T>> : Prisma__praticastoricoClient<praticastoricoGetPayload<T> | null, null>

    /**
     * Find one Praticastorico that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {praticastoricoFindUniqueOrThrowArgs} args - Arguments to find a Praticastorico
     * @example
     * // Get one Praticastorico
     * const praticastorico = await prisma.praticastorico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends praticastoricoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, praticastoricoFindUniqueOrThrowArgs>
    ): Prisma__praticastoricoClient<praticastoricoGetPayload<T>>

    /**
     * Find the first Praticastorico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {praticastoricoFindFirstArgs} args - Arguments to find a Praticastorico
     * @example
     * // Get one Praticastorico
     * const praticastorico = await prisma.praticastorico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends praticastoricoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, praticastoricoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'praticastorico'> extends True ? Prisma__praticastoricoClient<praticastoricoGetPayload<T>> : Prisma__praticastoricoClient<praticastoricoGetPayload<T> | null, null>

    /**
     * Find the first Praticastorico that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {praticastoricoFindFirstOrThrowArgs} args - Arguments to find a Praticastorico
     * @example
     * // Get one Praticastorico
     * const praticastorico = await prisma.praticastorico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends praticastoricoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, praticastoricoFindFirstOrThrowArgs>
    ): Prisma__praticastoricoClient<praticastoricoGetPayload<T>>

    /**
     * Find zero or more Praticastoricos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {praticastoricoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Praticastoricos
     * const praticastoricos = await prisma.praticastorico.findMany()
     * 
     * // Get first 10 Praticastoricos
     * const praticastoricos = await prisma.praticastorico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const praticastoricoWithIdOnly = await prisma.praticastorico.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends praticastoricoFindManyArgs>(
      args?: SelectSubset<T, praticastoricoFindManyArgs>
    ): Prisma.PrismaPromise<Array<praticastoricoGetPayload<T>>>

    /**
     * Create a Praticastorico.
     * @param {praticastoricoCreateArgs} args - Arguments to create a Praticastorico.
     * @example
     * // Create one Praticastorico
     * const Praticastorico = await prisma.praticastorico.create({
     *   data: {
     *     // ... data to create a Praticastorico
     *   }
     * })
     * 
    **/
    create<T extends praticastoricoCreateArgs>(
      args: SelectSubset<T, praticastoricoCreateArgs>
    ): Prisma__praticastoricoClient<praticastoricoGetPayload<T>>

    /**
     * Create many Praticastoricos.
     *     @param {praticastoricoCreateManyArgs} args - Arguments to create many Praticastoricos.
     *     @example
     *     // Create many Praticastoricos
     *     const praticastorico = await prisma.praticastorico.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends praticastoricoCreateManyArgs>(
      args?: SelectSubset<T, praticastoricoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Praticastorico.
     * @param {praticastoricoDeleteArgs} args - Arguments to delete one Praticastorico.
     * @example
     * // Delete one Praticastorico
     * const Praticastorico = await prisma.praticastorico.delete({
     *   where: {
     *     // ... filter to delete one Praticastorico
     *   }
     * })
     * 
    **/
    delete<T extends praticastoricoDeleteArgs>(
      args: SelectSubset<T, praticastoricoDeleteArgs>
    ): Prisma__praticastoricoClient<praticastoricoGetPayload<T>>

    /**
     * Update one Praticastorico.
     * @param {praticastoricoUpdateArgs} args - Arguments to update one Praticastorico.
     * @example
     * // Update one Praticastorico
     * const praticastorico = await prisma.praticastorico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends praticastoricoUpdateArgs>(
      args: SelectSubset<T, praticastoricoUpdateArgs>
    ): Prisma__praticastoricoClient<praticastoricoGetPayload<T>>

    /**
     * Delete zero or more Praticastoricos.
     * @param {praticastoricoDeleteManyArgs} args - Arguments to filter Praticastoricos to delete.
     * @example
     * // Delete a few Praticastoricos
     * const { count } = await prisma.praticastorico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends praticastoricoDeleteManyArgs>(
      args?: SelectSubset<T, praticastoricoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Praticastoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {praticastoricoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Praticastoricos
     * const praticastorico = await prisma.praticastorico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends praticastoricoUpdateManyArgs>(
      args: SelectSubset<T, praticastoricoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Praticastorico.
     * @param {praticastoricoUpsertArgs} args - Arguments to update or create a Praticastorico.
     * @example
     * // Update or create a Praticastorico
     * const praticastorico = await prisma.praticastorico.upsert({
     *   create: {
     *     // ... data to create a Praticastorico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Praticastorico we want to update
     *   }
     * })
    **/
    upsert<T extends praticastoricoUpsertArgs>(
      args: SelectSubset<T, praticastoricoUpsertArgs>
    ): Prisma__praticastoricoClient<praticastoricoGetPayload<T>>

    /**
     * Count the number of Praticastoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {praticastoricoCountArgs} args - Arguments to filter Praticastoricos to count.
     * @example
     * // Count the number of Praticastoricos
     * const count = await prisma.praticastorico.count({
     *   where: {
     *     // ... the filter for the Praticastoricos we want to count
     *   }
     * })
    **/
    count<T extends praticastoricoCountArgs>(
      args?: Subset<T, praticastoricoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PraticastoricoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Praticastorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PraticastoricoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PraticastoricoAggregateArgs>(args: Subset<T, PraticastoricoAggregateArgs>): Prisma.PrismaPromise<GetPraticastoricoAggregateType<T>>

    /**
     * Group by Praticastorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PraticastoricoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PraticastoricoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PraticastoricoGroupByArgs['orderBy'] }
        : { orderBy?: PraticastoricoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PraticastoricoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPraticastoricoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for praticastorico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__praticastoricoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    utenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * praticastorico base type for findUnique actions
   */
  export type praticastoricoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the praticastorico
     */
    select?: praticastoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticastoricoInclude | null
    /**
     * Filter, which praticastorico to fetch.
     */
    where: praticastoricoWhereUniqueInput
  }

  /**
   * praticastorico findUnique
   */
  export interface praticastoricoFindUniqueArgs extends praticastoricoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * praticastorico findUniqueOrThrow
   */
  export type praticastoricoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the praticastorico
     */
    select?: praticastoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticastoricoInclude | null
    /**
     * Filter, which praticastorico to fetch.
     */
    where: praticastoricoWhereUniqueInput
  }


  /**
   * praticastorico base type for findFirst actions
   */
  export type praticastoricoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the praticastorico
     */
    select?: praticastoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticastoricoInclude | null
    /**
     * Filter, which praticastorico to fetch.
     */
    where?: praticastoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of praticastoricos to fetch.
     */
    orderBy?: Enumerable<praticastoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for praticastoricos.
     */
    cursor?: praticastoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` praticastoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` praticastoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of praticastoricos.
     */
    distinct?: Enumerable<PraticastoricoScalarFieldEnum>
  }

  /**
   * praticastorico findFirst
   */
  export interface praticastoricoFindFirstArgs extends praticastoricoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * praticastorico findFirstOrThrow
   */
  export type praticastoricoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the praticastorico
     */
    select?: praticastoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticastoricoInclude | null
    /**
     * Filter, which praticastorico to fetch.
     */
    where?: praticastoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of praticastoricos to fetch.
     */
    orderBy?: Enumerable<praticastoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for praticastoricos.
     */
    cursor?: praticastoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` praticastoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` praticastoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of praticastoricos.
     */
    distinct?: Enumerable<PraticastoricoScalarFieldEnum>
  }


  /**
   * praticastorico findMany
   */
  export type praticastoricoFindManyArgs = {
    /**
     * Select specific fields to fetch from the praticastorico
     */
    select?: praticastoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticastoricoInclude | null
    /**
     * Filter, which praticastoricos to fetch.
     */
    where?: praticastoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of praticastoricos to fetch.
     */
    orderBy?: Enumerable<praticastoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing praticastoricos.
     */
    cursor?: praticastoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` praticastoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` praticastoricos.
     */
    skip?: number
    distinct?: Enumerable<PraticastoricoScalarFieldEnum>
  }


  /**
   * praticastorico create
   */
  export type praticastoricoCreateArgs = {
    /**
     * Select specific fields to fetch from the praticastorico
     */
    select?: praticastoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticastoricoInclude | null
    /**
     * The data needed to create a praticastorico.
     */
    data: XOR<praticastoricoCreateInput, praticastoricoUncheckedCreateInput>
  }


  /**
   * praticastorico createMany
   */
  export type praticastoricoCreateManyArgs = {
    /**
     * The data used to create many praticastoricos.
     */
    data: Enumerable<praticastoricoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * praticastorico update
   */
  export type praticastoricoUpdateArgs = {
    /**
     * Select specific fields to fetch from the praticastorico
     */
    select?: praticastoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticastoricoInclude | null
    /**
     * The data needed to update a praticastorico.
     */
    data: XOR<praticastoricoUpdateInput, praticastoricoUncheckedUpdateInput>
    /**
     * Choose, which praticastorico to update.
     */
    where: praticastoricoWhereUniqueInput
  }


  /**
   * praticastorico updateMany
   */
  export type praticastoricoUpdateManyArgs = {
    /**
     * The data used to update praticastoricos.
     */
    data: XOR<praticastoricoUpdateManyMutationInput, praticastoricoUncheckedUpdateManyInput>
    /**
     * Filter which praticastoricos to update
     */
    where?: praticastoricoWhereInput
  }


  /**
   * praticastorico upsert
   */
  export type praticastoricoUpsertArgs = {
    /**
     * Select specific fields to fetch from the praticastorico
     */
    select?: praticastoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticastoricoInclude | null
    /**
     * The filter to search for the praticastorico to update in case it exists.
     */
    where: praticastoricoWhereUniqueInput
    /**
     * In case the praticastorico found by the `where` argument doesn't exist, create a new praticastorico with this data.
     */
    create: XOR<praticastoricoCreateInput, praticastoricoUncheckedCreateInput>
    /**
     * In case the praticastorico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<praticastoricoUpdateInput, praticastoricoUncheckedUpdateInput>
  }


  /**
   * praticastorico delete
   */
  export type praticastoricoDeleteArgs = {
    /**
     * Select specific fields to fetch from the praticastorico
     */
    select?: praticastoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticastoricoInclude | null
    /**
     * Filter which praticastorico to delete.
     */
    where: praticastoricoWhereUniqueInput
  }


  /**
   * praticastorico deleteMany
   */
  export type praticastoricoDeleteManyArgs = {
    /**
     * Filter which praticastoricos to delete
     */
    where?: praticastoricoWhereInput
  }


  /**
   * praticastorico without action
   */
  export type praticastoricoArgs = {
    /**
     * Select specific fields to fetch from the praticastorico
     */
    select?: praticastoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticastoricoInclude | null
  }



  /**
   * Model prezzario
   */


  export type AggregatePrezzario = {
    _count: PrezzarioCountAggregateOutputType | null
    _avg: PrezzarioAvgAggregateOutputType | null
    _sum: PrezzarioSumAggregateOutputType | null
    _min: PrezzarioMinAggregateOutputType | null
    _max: PrezzarioMaxAggregateOutputType | null
  }

  export type PrezzarioAvgAggregateOutputType = {
    id: number | null
  }

  export type PrezzarioSumAggregateOutputType = {
    id: number | null
  }

  export type PrezzarioMinAggregateOutputType = {
    id: number | null
    descrizione: string | null
    unitaDiMisura: string | null
    prezzo: string | null
  }

  export type PrezzarioMaxAggregateOutputType = {
    id: number | null
    descrizione: string | null
    unitaDiMisura: string | null
    prezzo: string | null
  }

  export type PrezzarioCountAggregateOutputType = {
    id: number
    descrizione: number
    unitaDiMisura: number
    prezzo: number
    _all: number
  }


  export type PrezzarioAvgAggregateInputType = {
    id?: true
  }

  export type PrezzarioSumAggregateInputType = {
    id?: true
  }

  export type PrezzarioMinAggregateInputType = {
    id?: true
    descrizione?: true
    unitaDiMisura?: true
    prezzo?: true
  }

  export type PrezzarioMaxAggregateInputType = {
    id?: true
    descrizione?: true
    unitaDiMisura?: true
    prezzo?: true
  }

  export type PrezzarioCountAggregateInputType = {
    id?: true
    descrizione?: true
    unitaDiMisura?: true
    prezzo?: true
    _all?: true
  }

  export type PrezzarioAggregateArgs = {
    /**
     * Filter which prezzario to aggregate.
     */
    where?: prezzarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of prezzarios to fetch.
     */
    orderBy?: Enumerable<prezzarioOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: prezzarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` prezzarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` prezzarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned prezzarios
    **/
    _count?: true | PrezzarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PrezzarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PrezzarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PrezzarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PrezzarioMaxAggregateInputType
  }

  export type GetPrezzarioAggregateType<T extends PrezzarioAggregateArgs> = {
        [P in keyof T & keyof AggregatePrezzario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrezzario[P]>
      : GetScalarType<T[P], AggregatePrezzario[P]>
  }




  export type PrezzarioGroupByArgs = {
    where?: prezzarioWhereInput
    orderBy?: Enumerable<prezzarioOrderByWithAggregationInput>
    by: PrezzarioScalarFieldEnum[]
    having?: prezzarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PrezzarioCountAggregateInputType | true
    _avg?: PrezzarioAvgAggregateInputType
    _sum?: PrezzarioSumAggregateInputType
    _min?: PrezzarioMinAggregateInputType
    _max?: PrezzarioMaxAggregateInputType
  }


  export type PrezzarioGroupByOutputType = {
    id: number
    descrizione: string | null
    unitaDiMisura: string | null
    prezzo: string | null
    _count: PrezzarioCountAggregateOutputType | null
    _avg: PrezzarioAvgAggregateOutputType | null
    _sum: PrezzarioSumAggregateOutputType | null
    _min: PrezzarioMinAggregateOutputType | null
    _max: PrezzarioMaxAggregateOutputType | null
  }

  type GetPrezzarioGroupByPayload<T extends PrezzarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<PrezzarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PrezzarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PrezzarioGroupByOutputType[P]>
            : GetScalarType<T[P], PrezzarioGroupByOutputType[P]>
        }
      >
    >


  export type prezzarioSelect = {
    id?: boolean
    descrizione?: boolean
    unitaDiMisura?: boolean
    prezzo?: boolean
  }


  export type prezzarioGetPayload<S extends boolean | null | undefined | prezzarioArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? prezzario :
    S extends undefined ? never :
    S extends { include: any } & (prezzarioArgs | prezzarioFindManyArgs)
    ? prezzario 
    : S extends { select: any } & (prezzarioArgs | prezzarioFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof prezzario ? prezzario[P] : never
  } 
      : prezzario


  type prezzarioCountArgs = 
    Omit<prezzarioFindManyArgs, 'select' | 'include'> & {
      select?: PrezzarioCountAggregateInputType | true
    }

  export interface prezzarioDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Prezzario that matches the filter.
     * @param {prezzarioFindUniqueArgs} args - Arguments to find a Prezzario
     * @example
     * // Get one Prezzario
     * const prezzario = await prisma.prezzario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends prezzarioFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, prezzarioFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'prezzario'> extends True ? Prisma__prezzarioClient<prezzarioGetPayload<T>> : Prisma__prezzarioClient<prezzarioGetPayload<T> | null, null>

    /**
     * Find one Prezzario that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {prezzarioFindUniqueOrThrowArgs} args - Arguments to find a Prezzario
     * @example
     * // Get one Prezzario
     * const prezzario = await prisma.prezzario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends prezzarioFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, prezzarioFindUniqueOrThrowArgs>
    ): Prisma__prezzarioClient<prezzarioGetPayload<T>>

    /**
     * Find the first Prezzario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {prezzarioFindFirstArgs} args - Arguments to find a Prezzario
     * @example
     * // Get one Prezzario
     * const prezzario = await prisma.prezzario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends prezzarioFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, prezzarioFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'prezzario'> extends True ? Prisma__prezzarioClient<prezzarioGetPayload<T>> : Prisma__prezzarioClient<prezzarioGetPayload<T> | null, null>

    /**
     * Find the first Prezzario that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {prezzarioFindFirstOrThrowArgs} args - Arguments to find a Prezzario
     * @example
     * // Get one Prezzario
     * const prezzario = await prisma.prezzario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends prezzarioFindFirstOrThrowArgs>(
      args?: SelectSubset<T, prezzarioFindFirstOrThrowArgs>
    ): Prisma__prezzarioClient<prezzarioGetPayload<T>>

    /**
     * Find zero or more Prezzarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {prezzarioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Prezzarios
     * const prezzarios = await prisma.prezzario.findMany()
     * 
     * // Get first 10 Prezzarios
     * const prezzarios = await prisma.prezzario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const prezzarioWithIdOnly = await prisma.prezzario.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends prezzarioFindManyArgs>(
      args?: SelectSubset<T, prezzarioFindManyArgs>
    ): Prisma.PrismaPromise<Array<prezzarioGetPayload<T>>>

    /**
     * Create a Prezzario.
     * @param {prezzarioCreateArgs} args - Arguments to create a Prezzario.
     * @example
     * // Create one Prezzario
     * const Prezzario = await prisma.prezzario.create({
     *   data: {
     *     // ... data to create a Prezzario
     *   }
     * })
     * 
    **/
    create<T extends prezzarioCreateArgs>(
      args: SelectSubset<T, prezzarioCreateArgs>
    ): Prisma__prezzarioClient<prezzarioGetPayload<T>>

    /**
     * Create many Prezzarios.
     *     @param {prezzarioCreateManyArgs} args - Arguments to create many Prezzarios.
     *     @example
     *     // Create many Prezzarios
     *     const prezzario = await prisma.prezzario.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends prezzarioCreateManyArgs>(
      args?: SelectSubset<T, prezzarioCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Prezzario.
     * @param {prezzarioDeleteArgs} args - Arguments to delete one Prezzario.
     * @example
     * // Delete one Prezzario
     * const Prezzario = await prisma.prezzario.delete({
     *   where: {
     *     // ... filter to delete one Prezzario
     *   }
     * })
     * 
    **/
    delete<T extends prezzarioDeleteArgs>(
      args: SelectSubset<T, prezzarioDeleteArgs>
    ): Prisma__prezzarioClient<prezzarioGetPayload<T>>

    /**
     * Update one Prezzario.
     * @param {prezzarioUpdateArgs} args - Arguments to update one Prezzario.
     * @example
     * // Update one Prezzario
     * const prezzario = await prisma.prezzario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends prezzarioUpdateArgs>(
      args: SelectSubset<T, prezzarioUpdateArgs>
    ): Prisma__prezzarioClient<prezzarioGetPayload<T>>

    /**
     * Delete zero or more Prezzarios.
     * @param {prezzarioDeleteManyArgs} args - Arguments to filter Prezzarios to delete.
     * @example
     * // Delete a few Prezzarios
     * const { count } = await prisma.prezzario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends prezzarioDeleteManyArgs>(
      args?: SelectSubset<T, prezzarioDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prezzarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {prezzarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Prezzarios
     * const prezzario = await prisma.prezzario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends prezzarioUpdateManyArgs>(
      args: SelectSubset<T, prezzarioUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Prezzario.
     * @param {prezzarioUpsertArgs} args - Arguments to update or create a Prezzario.
     * @example
     * // Update or create a Prezzario
     * const prezzario = await prisma.prezzario.upsert({
     *   create: {
     *     // ... data to create a Prezzario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Prezzario we want to update
     *   }
     * })
    **/
    upsert<T extends prezzarioUpsertArgs>(
      args: SelectSubset<T, prezzarioUpsertArgs>
    ): Prisma__prezzarioClient<prezzarioGetPayload<T>>

    /**
     * Count the number of Prezzarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {prezzarioCountArgs} args - Arguments to filter Prezzarios to count.
     * @example
     * // Count the number of Prezzarios
     * const count = await prisma.prezzario.count({
     *   where: {
     *     // ... the filter for the Prezzarios we want to count
     *   }
     * })
    **/
    count<T extends prezzarioCountArgs>(
      args?: Subset<T, prezzarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PrezzarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Prezzario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrezzarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PrezzarioAggregateArgs>(args: Subset<T, PrezzarioAggregateArgs>): Prisma.PrismaPromise<GetPrezzarioAggregateType<T>>

    /**
     * Group by Prezzario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrezzarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PrezzarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PrezzarioGroupByArgs['orderBy'] }
        : { orderBy?: PrezzarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PrezzarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPrezzarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for prezzario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__prezzarioClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * prezzario base type for findUnique actions
   */
  export type prezzarioFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the prezzario
     */
    select?: prezzarioSelect | null
    /**
     * Filter, which prezzario to fetch.
     */
    where: prezzarioWhereUniqueInput
  }

  /**
   * prezzario findUnique
   */
  export interface prezzarioFindUniqueArgs extends prezzarioFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * prezzario findUniqueOrThrow
   */
  export type prezzarioFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the prezzario
     */
    select?: prezzarioSelect | null
    /**
     * Filter, which prezzario to fetch.
     */
    where: prezzarioWhereUniqueInput
  }


  /**
   * prezzario base type for findFirst actions
   */
  export type prezzarioFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the prezzario
     */
    select?: prezzarioSelect | null
    /**
     * Filter, which prezzario to fetch.
     */
    where?: prezzarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of prezzarios to fetch.
     */
    orderBy?: Enumerable<prezzarioOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for prezzarios.
     */
    cursor?: prezzarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` prezzarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` prezzarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of prezzarios.
     */
    distinct?: Enumerable<PrezzarioScalarFieldEnum>
  }

  /**
   * prezzario findFirst
   */
  export interface prezzarioFindFirstArgs extends prezzarioFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * prezzario findFirstOrThrow
   */
  export type prezzarioFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the prezzario
     */
    select?: prezzarioSelect | null
    /**
     * Filter, which prezzario to fetch.
     */
    where?: prezzarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of prezzarios to fetch.
     */
    orderBy?: Enumerable<prezzarioOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for prezzarios.
     */
    cursor?: prezzarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` prezzarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` prezzarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of prezzarios.
     */
    distinct?: Enumerable<PrezzarioScalarFieldEnum>
  }


  /**
   * prezzario findMany
   */
  export type prezzarioFindManyArgs = {
    /**
     * Select specific fields to fetch from the prezzario
     */
    select?: prezzarioSelect | null
    /**
     * Filter, which prezzarios to fetch.
     */
    where?: prezzarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of prezzarios to fetch.
     */
    orderBy?: Enumerable<prezzarioOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing prezzarios.
     */
    cursor?: prezzarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` prezzarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` prezzarios.
     */
    skip?: number
    distinct?: Enumerable<PrezzarioScalarFieldEnum>
  }


  /**
   * prezzario create
   */
  export type prezzarioCreateArgs = {
    /**
     * Select specific fields to fetch from the prezzario
     */
    select?: prezzarioSelect | null
    /**
     * The data needed to create a prezzario.
     */
    data: XOR<prezzarioCreateInput, prezzarioUncheckedCreateInput>
  }


  /**
   * prezzario createMany
   */
  export type prezzarioCreateManyArgs = {
    /**
     * The data used to create many prezzarios.
     */
    data: Enumerable<prezzarioCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * prezzario update
   */
  export type prezzarioUpdateArgs = {
    /**
     * Select specific fields to fetch from the prezzario
     */
    select?: prezzarioSelect | null
    /**
     * The data needed to update a prezzario.
     */
    data: XOR<prezzarioUpdateInput, prezzarioUncheckedUpdateInput>
    /**
     * Choose, which prezzario to update.
     */
    where: prezzarioWhereUniqueInput
  }


  /**
   * prezzario updateMany
   */
  export type prezzarioUpdateManyArgs = {
    /**
     * The data used to update prezzarios.
     */
    data: XOR<prezzarioUpdateManyMutationInput, prezzarioUncheckedUpdateManyInput>
    /**
     * Filter which prezzarios to update
     */
    where?: prezzarioWhereInput
  }


  /**
   * prezzario upsert
   */
  export type prezzarioUpsertArgs = {
    /**
     * Select specific fields to fetch from the prezzario
     */
    select?: prezzarioSelect | null
    /**
     * The filter to search for the prezzario to update in case it exists.
     */
    where: prezzarioWhereUniqueInput
    /**
     * In case the prezzario found by the `where` argument doesn't exist, create a new prezzario with this data.
     */
    create: XOR<prezzarioCreateInput, prezzarioUncheckedCreateInput>
    /**
     * In case the prezzario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<prezzarioUpdateInput, prezzarioUncheckedUpdateInput>
  }


  /**
   * prezzario delete
   */
  export type prezzarioDeleteArgs = {
    /**
     * Select specific fields to fetch from the prezzario
     */
    select?: prezzarioSelect | null
    /**
     * Filter which prezzario to delete.
     */
    where: prezzarioWhereUniqueInput
  }


  /**
   * prezzario deleteMany
   */
  export type prezzarioDeleteManyArgs = {
    /**
     * Filter which prezzarios to delete
     */
    where?: prezzarioWhereInput
  }


  /**
   * prezzario without action
   */
  export type prezzarioArgs = {
    /**
     * Select specific fields to fetch from the prezzario
     */
    select?: prezzarioSelect | null
  }



  /**
   * Model registrorichiedente
   */


  export type AggregateRegistrorichiedente = {
    _count: RegistrorichiedenteCountAggregateOutputType | null
    _avg: RegistrorichiedenteAvgAggregateOutputType | null
    _sum: RegistrorichiedenteSumAggregateOutputType | null
    _min: RegistrorichiedenteMinAggregateOutputType | null
    _max: RegistrorichiedenteMaxAggregateOutputType | null
  }

  export type RegistrorichiedenteAvgAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idUtente: number | null
    idSegnalazione: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    idSegnalazioneGetico: number | null
  }

  export type RegistrorichiedenteSumAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idUtente: number | null
    idSegnalazione: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    idSegnalazioneGetico: number | null
  }

  export type RegistrorichiedenteMinAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    noteSegnalatore: string | null
    dataCreazione: string | null
    dataModifica: string | null
    dataRichiesta: string | null
    localizzazioneNote: string | null
    descrizioneAnomalia: string | null
    idUtente: number | null
    idSegnalazione: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    idSegnalazioneGetico: number | null
    del: string | null
  }

  export type RegistrorichiedenteMaxAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    noteSegnalatore: string | null
    dataCreazione: string | null
    dataModifica: string | null
    dataRichiesta: string | null
    localizzazioneNote: string | null
    descrizioneAnomalia: string | null
    idUtente: number | null
    idSegnalazione: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    idSegnalazioneGetico: number | null
    del: string | null
  }

  export type RegistrorichiedenteCountAggregateOutputType = {
    id: number
    idAppalto: number
    noteSegnalatore: number
    dataCreazione: number
    dataModifica: number
    dataRichiesta: number
    localizzazioneNote: number
    descrizioneAnomalia: number
    idUtente: number
    idSegnalazione: number
    idSegnalatore: number
    fonteSegnalazione: number
    idSegnalazioneGetico: number
    del: number
    _all: number
  }


  export type RegistrorichiedenteAvgAggregateInputType = {
    id?: true
    idAppalto?: true
    idUtente?: true
    idSegnalazione?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    idSegnalazioneGetico?: true
  }

  export type RegistrorichiedenteSumAggregateInputType = {
    id?: true
    idAppalto?: true
    idUtente?: true
    idSegnalazione?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    idSegnalazioneGetico?: true
  }

  export type RegistrorichiedenteMinAggregateInputType = {
    id?: true
    idAppalto?: true
    noteSegnalatore?: true
    dataCreazione?: true
    dataModifica?: true
    dataRichiesta?: true
    localizzazioneNote?: true
    descrizioneAnomalia?: true
    idUtente?: true
    idSegnalazione?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    idSegnalazioneGetico?: true
    del?: true
  }

  export type RegistrorichiedenteMaxAggregateInputType = {
    id?: true
    idAppalto?: true
    noteSegnalatore?: true
    dataCreazione?: true
    dataModifica?: true
    dataRichiesta?: true
    localizzazioneNote?: true
    descrizioneAnomalia?: true
    idUtente?: true
    idSegnalazione?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    idSegnalazioneGetico?: true
    del?: true
  }

  export type RegistrorichiedenteCountAggregateInputType = {
    id?: true
    idAppalto?: true
    noteSegnalatore?: true
    dataCreazione?: true
    dataModifica?: true
    dataRichiesta?: true
    localizzazioneNote?: true
    descrizioneAnomalia?: true
    idUtente?: true
    idSegnalazione?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    idSegnalazioneGetico?: true
    del?: true
    _all?: true
  }

  export type RegistrorichiedenteAggregateArgs = {
    /**
     * Filter which registrorichiedente to aggregate.
     */
    where?: registrorichiedenteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registrorichiedentes to fetch.
     */
    orderBy?: Enumerable<registrorichiedenteOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: registrorichiedenteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registrorichiedentes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registrorichiedentes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned registrorichiedentes
    **/
    _count?: true | RegistrorichiedenteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistrorichiedenteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistrorichiedenteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistrorichiedenteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistrorichiedenteMaxAggregateInputType
  }

  export type GetRegistrorichiedenteAggregateType<T extends RegistrorichiedenteAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistrorichiedente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistrorichiedente[P]>
      : GetScalarType<T[P], AggregateRegistrorichiedente[P]>
  }




  export type RegistrorichiedenteGroupByArgs = {
    where?: registrorichiedenteWhereInput
    orderBy?: Enumerable<registrorichiedenteOrderByWithAggregationInput>
    by: RegistrorichiedenteScalarFieldEnum[]
    having?: registrorichiedenteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistrorichiedenteCountAggregateInputType | true
    _avg?: RegistrorichiedenteAvgAggregateInputType
    _sum?: RegistrorichiedenteSumAggregateInputType
    _min?: RegistrorichiedenteMinAggregateInputType
    _max?: RegistrorichiedenteMaxAggregateInputType
  }


  export type RegistrorichiedenteGroupByOutputType = {
    id: number
    idAppalto: number | null
    noteSegnalatore: string | null
    dataCreazione: string | null
    dataModifica: string | null
    dataRichiesta: string | null
    localizzazioneNote: string | null
    descrizioneAnomalia: string | null
    idUtente: number | null
    idSegnalazione: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    idSegnalazioneGetico: number | null
    del: string | null
    _count: RegistrorichiedenteCountAggregateOutputType | null
    _avg: RegistrorichiedenteAvgAggregateOutputType | null
    _sum: RegistrorichiedenteSumAggregateOutputType | null
    _min: RegistrorichiedenteMinAggregateOutputType | null
    _max: RegistrorichiedenteMaxAggregateOutputType | null
  }

  type GetRegistrorichiedenteGroupByPayload<T extends RegistrorichiedenteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<RegistrorichiedenteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistrorichiedenteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistrorichiedenteGroupByOutputType[P]>
            : GetScalarType<T[P], RegistrorichiedenteGroupByOutputType[P]>
        }
      >
    >


  export type registrorichiedenteSelect = {
    id?: boolean
    idAppalto?: boolean
    noteSegnalatore?: boolean
    dataCreazione?: boolean
    dataModifica?: boolean
    dataRichiesta?: boolean
    localizzazioneNote?: boolean
    descrizioneAnomalia?: boolean
    idUtente?: boolean
    idSegnalazione?: boolean
    idSegnalatore?: boolean
    fonteSegnalazione?: boolean
    idSegnalazioneGetico?: boolean
    del?: boolean
    fonti?: boolean | fontiArgs
    segnalatore?: boolean | segnalatoreArgs
    segnalazione_getico?: boolean | segnalazione_geticoArgs
    utenti?: boolean | utentiArgs
  }


  export type registrorichiedenteInclude = {
    fonti?: boolean | fontiArgs
    segnalatore?: boolean | segnalatoreArgs
    segnalazione_getico?: boolean | segnalazione_geticoArgs
    utenti?: boolean | utentiArgs
  }

  export type registrorichiedenteGetPayload<S extends boolean | null | undefined | registrorichiedenteArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? registrorichiedente :
    S extends undefined ? never :
    S extends { include: any } & (registrorichiedenteArgs | registrorichiedenteFindManyArgs)
    ? registrorichiedente  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'fonti' ? fontiGetPayload<S['include'][P]> | null :
        P extends 'segnalatore' ? segnalatoreGetPayload<S['include'][P]> | null :
        P extends 'segnalazione_getico' ? segnalazione_geticoGetPayload<S['include'][P]> | null :
        P extends 'utenti' ? utentiGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (registrorichiedenteArgs | registrorichiedenteFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'fonti' ? fontiGetPayload<S['select'][P]> | null :
        P extends 'segnalatore' ? segnalatoreGetPayload<S['select'][P]> | null :
        P extends 'segnalazione_getico' ? segnalazione_geticoGetPayload<S['select'][P]> | null :
        P extends 'utenti' ? utentiGetPayload<S['select'][P]> | null :  P extends keyof registrorichiedente ? registrorichiedente[P] : never
  } 
      : registrorichiedente


  type registrorichiedenteCountArgs = 
    Omit<registrorichiedenteFindManyArgs, 'select' | 'include'> & {
      select?: RegistrorichiedenteCountAggregateInputType | true
    }

  export interface registrorichiedenteDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Registrorichiedente that matches the filter.
     * @param {registrorichiedenteFindUniqueArgs} args - Arguments to find a Registrorichiedente
     * @example
     * // Get one Registrorichiedente
     * const registrorichiedente = await prisma.registrorichiedente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends registrorichiedenteFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, registrorichiedenteFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'registrorichiedente'> extends True ? Prisma__registrorichiedenteClient<registrorichiedenteGetPayload<T>> : Prisma__registrorichiedenteClient<registrorichiedenteGetPayload<T> | null, null>

    /**
     * Find one Registrorichiedente that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {registrorichiedenteFindUniqueOrThrowArgs} args - Arguments to find a Registrorichiedente
     * @example
     * // Get one Registrorichiedente
     * const registrorichiedente = await prisma.registrorichiedente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends registrorichiedenteFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, registrorichiedenteFindUniqueOrThrowArgs>
    ): Prisma__registrorichiedenteClient<registrorichiedenteGetPayload<T>>

    /**
     * Find the first Registrorichiedente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registrorichiedenteFindFirstArgs} args - Arguments to find a Registrorichiedente
     * @example
     * // Get one Registrorichiedente
     * const registrorichiedente = await prisma.registrorichiedente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends registrorichiedenteFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, registrorichiedenteFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'registrorichiedente'> extends True ? Prisma__registrorichiedenteClient<registrorichiedenteGetPayload<T>> : Prisma__registrorichiedenteClient<registrorichiedenteGetPayload<T> | null, null>

    /**
     * Find the first Registrorichiedente that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registrorichiedenteFindFirstOrThrowArgs} args - Arguments to find a Registrorichiedente
     * @example
     * // Get one Registrorichiedente
     * const registrorichiedente = await prisma.registrorichiedente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends registrorichiedenteFindFirstOrThrowArgs>(
      args?: SelectSubset<T, registrorichiedenteFindFirstOrThrowArgs>
    ): Prisma__registrorichiedenteClient<registrorichiedenteGetPayload<T>>

    /**
     * Find zero or more Registrorichiedentes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registrorichiedenteFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Registrorichiedentes
     * const registrorichiedentes = await prisma.registrorichiedente.findMany()
     * 
     * // Get first 10 Registrorichiedentes
     * const registrorichiedentes = await prisma.registrorichiedente.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registrorichiedenteWithIdOnly = await prisma.registrorichiedente.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends registrorichiedenteFindManyArgs>(
      args?: SelectSubset<T, registrorichiedenteFindManyArgs>
    ): Prisma.PrismaPromise<Array<registrorichiedenteGetPayload<T>>>

    /**
     * Create a Registrorichiedente.
     * @param {registrorichiedenteCreateArgs} args - Arguments to create a Registrorichiedente.
     * @example
     * // Create one Registrorichiedente
     * const Registrorichiedente = await prisma.registrorichiedente.create({
     *   data: {
     *     // ... data to create a Registrorichiedente
     *   }
     * })
     * 
    **/
    create<T extends registrorichiedenteCreateArgs>(
      args: SelectSubset<T, registrorichiedenteCreateArgs>
    ): Prisma__registrorichiedenteClient<registrorichiedenteGetPayload<T>>

    /**
     * Create many Registrorichiedentes.
     *     @param {registrorichiedenteCreateManyArgs} args - Arguments to create many Registrorichiedentes.
     *     @example
     *     // Create many Registrorichiedentes
     *     const registrorichiedente = await prisma.registrorichiedente.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends registrorichiedenteCreateManyArgs>(
      args?: SelectSubset<T, registrorichiedenteCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Registrorichiedente.
     * @param {registrorichiedenteDeleteArgs} args - Arguments to delete one Registrorichiedente.
     * @example
     * // Delete one Registrorichiedente
     * const Registrorichiedente = await prisma.registrorichiedente.delete({
     *   where: {
     *     // ... filter to delete one Registrorichiedente
     *   }
     * })
     * 
    **/
    delete<T extends registrorichiedenteDeleteArgs>(
      args: SelectSubset<T, registrorichiedenteDeleteArgs>
    ): Prisma__registrorichiedenteClient<registrorichiedenteGetPayload<T>>

    /**
     * Update one Registrorichiedente.
     * @param {registrorichiedenteUpdateArgs} args - Arguments to update one Registrorichiedente.
     * @example
     * // Update one Registrorichiedente
     * const registrorichiedente = await prisma.registrorichiedente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends registrorichiedenteUpdateArgs>(
      args: SelectSubset<T, registrorichiedenteUpdateArgs>
    ): Prisma__registrorichiedenteClient<registrorichiedenteGetPayload<T>>

    /**
     * Delete zero or more Registrorichiedentes.
     * @param {registrorichiedenteDeleteManyArgs} args - Arguments to filter Registrorichiedentes to delete.
     * @example
     * // Delete a few Registrorichiedentes
     * const { count } = await prisma.registrorichiedente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends registrorichiedenteDeleteManyArgs>(
      args?: SelectSubset<T, registrorichiedenteDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Registrorichiedentes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registrorichiedenteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Registrorichiedentes
     * const registrorichiedente = await prisma.registrorichiedente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends registrorichiedenteUpdateManyArgs>(
      args: SelectSubset<T, registrorichiedenteUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Registrorichiedente.
     * @param {registrorichiedenteUpsertArgs} args - Arguments to update or create a Registrorichiedente.
     * @example
     * // Update or create a Registrorichiedente
     * const registrorichiedente = await prisma.registrorichiedente.upsert({
     *   create: {
     *     // ... data to create a Registrorichiedente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Registrorichiedente we want to update
     *   }
     * })
    **/
    upsert<T extends registrorichiedenteUpsertArgs>(
      args: SelectSubset<T, registrorichiedenteUpsertArgs>
    ): Prisma__registrorichiedenteClient<registrorichiedenteGetPayload<T>>

    /**
     * Count the number of Registrorichiedentes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registrorichiedenteCountArgs} args - Arguments to filter Registrorichiedentes to count.
     * @example
     * // Count the number of Registrorichiedentes
     * const count = await prisma.registrorichiedente.count({
     *   where: {
     *     // ... the filter for the Registrorichiedentes we want to count
     *   }
     * })
    **/
    count<T extends registrorichiedenteCountArgs>(
      args?: Subset<T, registrorichiedenteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistrorichiedenteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Registrorichiedente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistrorichiedenteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistrorichiedenteAggregateArgs>(args: Subset<T, RegistrorichiedenteAggregateArgs>): Prisma.PrismaPromise<GetRegistrorichiedenteAggregateType<T>>

    /**
     * Group by Registrorichiedente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistrorichiedenteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistrorichiedenteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistrorichiedenteGroupByArgs['orderBy'] }
        : { orderBy?: RegistrorichiedenteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistrorichiedenteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistrorichiedenteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for registrorichiedente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__registrorichiedenteClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    fonti<T extends fontiArgs= {}>(args?: Subset<T, fontiArgs>): Prisma__fontiClient<fontiGetPayload<T> | Null>;

    segnalatore<T extends segnalatoreArgs= {}>(args?: Subset<T, segnalatoreArgs>): Prisma__segnalatoreClient<segnalatoreGetPayload<T> | Null>;

    segnalazione_getico<T extends segnalazione_geticoArgs= {}>(args?: Subset<T, segnalazione_geticoArgs>): Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T> | Null>;

    utenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * registrorichiedente base type for findUnique actions
   */
  export type registrorichiedenteFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    /**
     * Filter, which registrorichiedente to fetch.
     */
    where: registrorichiedenteWhereUniqueInput
  }

  /**
   * registrorichiedente findUnique
   */
  export interface registrorichiedenteFindUniqueArgs extends registrorichiedenteFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * registrorichiedente findUniqueOrThrow
   */
  export type registrorichiedenteFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    /**
     * Filter, which registrorichiedente to fetch.
     */
    where: registrorichiedenteWhereUniqueInput
  }


  /**
   * registrorichiedente base type for findFirst actions
   */
  export type registrorichiedenteFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    /**
     * Filter, which registrorichiedente to fetch.
     */
    where?: registrorichiedenteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registrorichiedentes to fetch.
     */
    orderBy?: Enumerable<registrorichiedenteOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for registrorichiedentes.
     */
    cursor?: registrorichiedenteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registrorichiedentes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registrorichiedentes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of registrorichiedentes.
     */
    distinct?: Enumerable<RegistrorichiedenteScalarFieldEnum>
  }

  /**
   * registrorichiedente findFirst
   */
  export interface registrorichiedenteFindFirstArgs extends registrorichiedenteFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * registrorichiedente findFirstOrThrow
   */
  export type registrorichiedenteFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    /**
     * Filter, which registrorichiedente to fetch.
     */
    where?: registrorichiedenteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registrorichiedentes to fetch.
     */
    orderBy?: Enumerable<registrorichiedenteOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for registrorichiedentes.
     */
    cursor?: registrorichiedenteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registrorichiedentes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registrorichiedentes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of registrorichiedentes.
     */
    distinct?: Enumerable<RegistrorichiedenteScalarFieldEnum>
  }


  /**
   * registrorichiedente findMany
   */
  export type registrorichiedenteFindManyArgs = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    /**
     * Filter, which registrorichiedentes to fetch.
     */
    where?: registrorichiedenteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registrorichiedentes to fetch.
     */
    orderBy?: Enumerable<registrorichiedenteOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing registrorichiedentes.
     */
    cursor?: registrorichiedenteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registrorichiedentes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registrorichiedentes.
     */
    skip?: number
    distinct?: Enumerable<RegistrorichiedenteScalarFieldEnum>
  }


  /**
   * registrorichiedente create
   */
  export type registrorichiedenteCreateArgs = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    /**
     * The data needed to create a registrorichiedente.
     */
    data: XOR<registrorichiedenteCreateInput, registrorichiedenteUncheckedCreateInput>
  }


  /**
   * registrorichiedente createMany
   */
  export type registrorichiedenteCreateManyArgs = {
    /**
     * The data used to create many registrorichiedentes.
     */
    data: Enumerable<registrorichiedenteCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * registrorichiedente update
   */
  export type registrorichiedenteUpdateArgs = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    /**
     * The data needed to update a registrorichiedente.
     */
    data: XOR<registrorichiedenteUpdateInput, registrorichiedenteUncheckedUpdateInput>
    /**
     * Choose, which registrorichiedente to update.
     */
    where: registrorichiedenteWhereUniqueInput
  }


  /**
   * registrorichiedente updateMany
   */
  export type registrorichiedenteUpdateManyArgs = {
    /**
     * The data used to update registrorichiedentes.
     */
    data: XOR<registrorichiedenteUpdateManyMutationInput, registrorichiedenteUncheckedUpdateManyInput>
    /**
     * Filter which registrorichiedentes to update
     */
    where?: registrorichiedenteWhereInput
  }


  /**
   * registrorichiedente upsert
   */
  export type registrorichiedenteUpsertArgs = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    /**
     * The filter to search for the registrorichiedente to update in case it exists.
     */
    where: registrorichiedenteWhereUniqueInput
    /**
     * In case the registrorichiedente found by the `where` argument doesn't exist, create a new registrorichiedente with this data.
     */
    create: XOR<registrorichiedenteCreateInput, registrorichiedenteUncheckedCreateInput>
    /**
     * In case the registrorichiedente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<registrorichiedenteUpdateInput, registrorichiedenteUncheckedUpdateInput>
  }


  /**
   * registrorichiedente delete
   */
  export type registrorichiedenteDeleteArgs = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    /**
     * Filter which registrorichiedente to delete.
     */
    where: registrorichiedenteWhereUniqueInput
  }


  /**
   * registrorichiedente deleteMany
   */
  export type registrorichiedenteDeleteManyArgs = {
    /**
     * Filter which registrorichiedentes to delete
     */
    where?: registrorichiedenteWhereInput
  }


  /**
   * registrorichiedente without action
   */
  export type registrorichiedenteArgs = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
  }



  /**
   * Model segnalatore
   */


  export type AggregateSegnalatore = {
    _count: SegnalatoreCountAggregateOutputType | null
    _avg: SegnalatoreAvgAggregateOutputType | null
    _sum: SegnalatoreSumAggregateOutputType | null
    _min: SegnalatoreMinAggregateOutputType | null
    _max: SegnalatoreMaxAggregateOutputType | null
  }

  export type SegnalatoreAvgAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    tipoSegnalatore: number | null
  }

  export type SegnalatoreSumAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    tipoSegnalatore: number | null
  }

  export type SegnalatoreMinAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    tipoSegnalatore: number | null
    nomeSegnalatore: string | null
    cognomeSegnalatore: string | null
    telefonoSegnalatore: string | null
    emailSegnalatore: string | null
    cellulareSegnalatore: string | null
    pecSegnalatore: string | null
  }

  export type SegnalatoreMaxAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    tipoSegnalatore: number | null
    nomeSegnalatore: string | null
    cognomeSegnalatore: string | null
    telefonoSegnalatore: string | null
    emailSegnalatore: string | null
    cellulareSegnalatore: string | null
    pecSegnalatore: string | null
  }

  export type SegnalatoreCountAggregateOutputType = {
    id: number
    idAppalto: number
    tipoSegnalatore: number
    nomeSegnalatore: number
    cognomeSegnalatore: number
    telefonoSegnalatore: number
    emailSegnalatore: number
    cellulareSegnalatore: number
    pecSegnalatore: number
    _all: number
  }


  export type SegnalatoreAvgAggregateInputType = {
    id?: true
    idAppalto?: true
    tipoSegnalatore?: true
  }

  export type SegnalatoreSumAggregateInputType = {
    id?: true
    idAppalto?: true
    tipoSegnalatore?: true
  }

  export type SegnalatoreMinAggregateInputType = {
    id?: true
    idAppalto?: true
    tipoSegnalatore?: true
    nomeSegnalatore?: true
    cognomeSegnalatore?: true
    telefonoSegnalatore?: true
    emailSegnalatore?: true
    cellulareSegnalatore?: true
    pecSegnalatore?: true
  }

  export type SegnalatoreMaxAggregateInputType = {
    id?: true
    idAppalto?: true
    tipoSegnalatore?: true
    nomeSegnalatore?: true
    cognomeSegnalatore?: true
    telefonoSegnalatore?: true
    emailSegnalatore?: true
    cellulareSegnalatore?: true
    pecSegnalatore?: true
  }

  export type SegnalatoreCountAggregateInputType = {
    id?: true
    idAppalto?: true
    tipoSegnalatore?: true
    nomeSegnalatore?: true
    cognomeSegnalatore?: true
    telefonoSegnalatore?: true
    emailSegnalatore?: true
    cellulareSegnalatore?: true
    pecSegnalatore?: true
    _all?: true
  }

  export type SegnalatoreAggregateArgs = {
    /**
     * Filter which segnalatore to aggregate.
     */
    where?: segnalatoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalatores to fetch.
     */
    orderBy?: Enumerable<segnalatoreOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: segnalatoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalatores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalatores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned segnalatores
    **/
    _count?: true | SegnalatoreCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SegnalatoreAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SegnalatoreSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SegnalatoreMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SegnalatoreMaxAggregateInputType
  }

  export type GetSegnalatoreAggregateType<T extends SegnalatoreAggregateArgs> = {
        [P in keyof T & keyof AggregateSegnalatore]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSegnalatore[P]>
      : GetScalarType<T[P], AggregateSegnalatore[P]>
  }




  export type SegnalatoreGroupByArgs = {
    where?: segnalatoreWhereInput
    orderBy?: Enumerable<segnalatoreOrderByWithAggregationInput>
    by: SegnalatoreScalarFieldEnum[]
    having?: segnalatoreScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SegnalatoreCountAggregateInputType | true
    _avg?: SegnalatoreAvgAggregateInputType
    _sum?: SegnalatoreSumAggregateInputType
    _min?: SegnalatoreMinAggregateInputType
    _max?: SegnalatoreMaxAggregateInputType
  }


  export type SegnalatoreGroupByOutputType = {
    id: number
    idAppalto: number | null
    tipoSegnalatore: number | null
    nomeSegnalatore: string | null
    cognomeSegnalatore: string | null
    telefonoSegnalatore: string | null
    emailSegnalatore: string | null
    cellulareSegnalatore: string | null
    pecSegnalatore: string | null
    _count: SegnalatoreCountAggregateOutputType | null
    _avg: SegnalatoreAvgAggregateOutputType | null
    _sum: SegnalatoreSumAggregateOutputType | null
    _min: SegnalatoreMinAggregateOutputType | null
    _max: SegnalatoreMaxAggregateOutputType | null
  }

  type GetSegnalatoreGroupByPayload<T extends SegnalatoreGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<SegnalatoreGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SegnalatoreGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SegnalatoreGroupByOutputType[P]>
            : GetScalarType<T[P], SegnalatoreGroupByOutputType[P]>
        }
      >
    >


  export type segnalatoreSelect = {
    id?: boolean
    idAppalto?: boolean
    tipoSegnalatore?: boolean
    nomeSegnalatore?: boolean
    cognomeSegnalatore?: boolean
    telefonoSegnalatore?: boolean
    emailSegnalatore?: boolean
    cellulareSegnalatore?: boolean
    pecSegnalatore?: boolean
    registrorichiedente?: boolean | segnalatore$registrorichiedenteArgs
    segnalazione?: boolean | segnalatore$segnalazioneArgs
    segnalazionestorico?: boolean | segnalatore$segnalazionestoricoArgs
    _count?: boolean | SegnalatoreCountOutputTypeArgs
  }


  export type segnalatoreInclude = {
    registrorichiedente?: boolean | segnalatore$registrorichiedenteArgs
    segnalazione?: boolean | segnalatore$segnalazioneArgs
    segnalazionestorico?: boolean | segnalatore$segnalazionestoricoArgs
    _count?: boolean | SegnalatoreCountOutputTypeArgs
  }

  export type segnalatoreGetPayload<S extends boolean | null | undefined | segnalatoreArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? segnalatore :
    S extends undefined ? never :
    S extends { include: any } & (segnalatoreArgs | segnalatoreFindManyArgs)
    ? segnalatore  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'registrorichiedente' ? Array < registrorichiedenteGetPayload<S['include'][P]>>  :
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['include'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['include'][P]>>  :
        P extends '_count' ? SegnalatoreCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (segnalatoreArgs | segnalatoreFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'registrorichiedente' ? Array < registrorichiedenteGetPayload<S['select'][P]>>  :
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['select'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['select'][P]>>  :
        P extends '_count' ? SegnalatoreCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof segnalatore ? segnalatore[P] : never
  } 
      : segnalatore


  type segnalatoreCountArgs = 
    Omit<segnalatoreFindManyArgs, 'select' | 'include'> & {
      select?: SegnalatoreCountAggregateInputType | true
    }

  export interface segnalatoreDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Segnalatore that matches the filter.
     * @param {segnalatoreFindUniqueArgs} args - Arguments to find a Segnalatore
     * @example
     * // Get one Segnalatore
     * const segnalatore = await prisma.segnalatore.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends segnalatoreFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, segnalatoreFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'segnalatore'> extends True ? Prisma__segnalatoreClient<segnalatoreGetPayload<T>> : Prisma__segnalatoreClient<segnalatoreGetPayload<T> | null, null>

    /**
     * Find one Segnalatore that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {segnalatoreFindUniqueOrThrowArgs} args - Arguments to find a Segnalatore
     * @example
     * // Get one Segnalatore
     * const segnalatore = await prisma.segnalatore.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends segnalatoreFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, segnalatoreFindUniqueOrThrowArgs>
    ): Prisma__segnalatoreClient<segnalatoreGetPayload<T>>

    /**
     * Find the first Segnalatore that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalatoreFindFirstArgs} args - Arguments to find a Segnalatore
     * @example
     * // Get one Segnalatore
     * const segnalatore = await prisma.segnalatore.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends segnalatoreFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, segnalatoreFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'segnalatore'> extends True ? Prisma__segnalatoreClient<segnalatoreGetPayload<T>> : Prisma__segnalatoreClient<segnalatoreGetPayload<T> | null, null>

    /**
     * Find the first Segnalatore that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalatoreFindFirstOrThrowArgs} args - Arguments to find a Segnalatore
     * @example
     * // Get one Segnalatore
     * const segnalatore = await prisma.segnalatore.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends segnalatoreFindFirstOrThrowArgs>(
      args?: SelectSubset<T, segnalatoreFindFirstOrThrowArgs>
    ): Prisma__segnalatoreClient<segnalatoreGetPayload<T>>

    /**
     * Find zero or more Segnalatores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalatoreFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Segnalatores
     * const segnalatores = await prisma.segnalatore.findMany()
     * 
     * // Get first 10 Segnalatores
     * const segnalatores = await prisma.segnalatore.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const segnalatoreWithIdOnly = await prisma.segnalatore.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends segnalatoreFindManyArgs>(
      args?: SelectSubset<T, segnalatoreFindManyArgs>
    ): Prisma.PrismaPromise<Array<segnalatoreGetPayload<T>>>

    /**
     * Create a Segnalatore.
     * @param {segnalatoreCreateArgs} args - Arguments to create a Segnalatore.
     * @example
     * // Create one Segnalatore
     * const Segnalatore = await prisma.segnalatore.create({
     *   data: {
     *     // ... data to create a Segnalatore
     *   }
     * })
     * 
    **/
    create<T extends segnalatoreCreateArgs>(
      args: SelectSubset<T, segnalatoreCreateArgs>
    ): Prisma__segnalatoreClient<segnalatoreGetPayload<T>>

    /**
     * Create many Segnalatores.
     *     @param {segnalatoreCreateManyArgs} args - Arguments to create many Segnalatores.
     *     @example
     *     // Create many Segnalatores
     *     const segnalatore = await prisma.segnalatore.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends segnalatoreCreateManyArgs>(
      args?: SelectSubset<T, segnalatoreCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Segnalatore.
     * @param {segnalatoreDeleteArgs} args - Arguments to delete one Segnalatore.
     * @example
     * // Delete one Segnalatore
     * const Segnalatore = await prisma.segnalatore.delete({
     *   where: {
     *     // ... filter to delete one Segnalatore
     *   }
     * })
     * 
    **/
    delete<T extends segnalatoreDeleteArgs>(
      args: SelectSubset<T, segnalatoreDeleteArgs>
    ): Prisma__segnalatoreClient<segnalatoreGetPayload<T>>

    /**
     * Update one Segnalatore.
     * @param {segnalatoreUpdateArgs} args - Arguments to update one Segnalatore.
     * @example
     * // Update one Segnalatore
     * const segnalatore = await prisma.segnalatore.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends segnalatoreUpdateArgs>(
      args: SelectSubset<T, segnalatoreUpdateArgs>
    ): Prisma__segnalatoreClient<segnalatoreGetPayload<T>>

    /**
     * Delete zero or more Segnalatores.
     * @param {segnalatoreDeleteManyArgs} args - Arguments to filter Segnalatores to delete.
     * @example
     * // Delete a few Segnalatores
     * const { count } = await prisma.segnalatore.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends segnalatoreDeleteManyArgs>(
      args?: SelectSubset<T, segnalatoreDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Segnalatores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalatoreUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Segnalatores
     * const segnalatore = await prisma.segnalatore.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends segnalatoreUpdateManyArgs>(
      args: SelectSubset<T, segnalatoreUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Segnalatore.
     * @param {segnalatoreUpsertArgs} args - Arguments to update or create a Segnalatore.
     * @example
     * // Update or create a Segnalatore
     * const segnalatore = await prisma.segnalatore.upsert({
     *   create: {
     *     // ... data to create a Segnalatore
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Segnalatore we want to update
     *   }
     * })
    **/
    upsert<T extends segnalatoreUpsertArgs>(
      args: SelectSubset<T, segnalatoreUpsertArgs>
    ): Prisma__segnalatoreClient<segnalatoreGetPayload<T>>

    /**
     * Count the number of Segnalatores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalatoreCountArgs} args - Arguments to filter Segnalatores to count.
     * @example
     * // Count the number of Segnalatores
     * const count = await prisma.segnalatore.count({
     *   where: {
     *     // ... the filter for the Segnalatores we want to count
     *   }
     * })
    **/
    count<T extends segnalatoreCountArgs>(
      args?: Subset<T, segnalatoreCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SegnalatoreCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Segnalatore.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegnalatoreAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SegnalatoreAggregateArgs>(args: Subset<T, SegnalatoreAggregateArgs>): Prisma.PrismaPromise<GetSegnalatoreAggregateType<T>>

    /**
     * Group by Segnalatore.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegnalatoreGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SegnalatoreGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SegnalatoreGroupByArgs['orderBy'] }
        : { orderBy?: SegnalatoreGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SegnalatoreGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSegnalatoreGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for segnalatore.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__segnalatoreClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    registrorichiedente<T extends segnalatore$registrorichiedenteArgs= {}>(args?: Subset<T, segnalatore$registrorichiedenteArgs>): Prisma.PrismaPromise<Array<registrorichiedenteGetPayload<T>>| Null>;

    segnalazione<T extends segnalatore$segnalazioneArgs= {}>(args?: Subset<T, segnalatore$segnalazioneArgs>): Prisma.PrismaPromise<Array<segnalazioneGetPayload<T>>| Null>;

    segnalazionestorico<T extends segnalatore$segnalazionestoricoArgs= {}>(args?: Subset<T, segnalatore$segnalazionestoricoArgs>): Prisma.PrismaPromise<Array<segnalazionestoricoGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * segnalatore base type for findUnique actions
   */
  export type segnalatoreFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the segnalatore
     */
    select?: segnalatoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalatoreInclude | null
    /**
     * Filter, which segnalatore to fetch.
     */
    where: segnalatoreWhereUniqueInput
  }

  /**
   * segnalatore findUnique
   */
  export interface segnalatoreFindUniqueArgs extends segnalatoreFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * segnalatore findUniqueOrThrow
   */
  export type segnalatoreFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the segnalatore
     */
    select?: segnalatoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalatoreInclude | null
    /**
     * Filter, which segnalatore to fetch.
     */
    where: segnalatoreWhereUniqueInput
  }


  /**
   * segnalatore base type for findFirst actions
   */
  export type segnalatoreFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the segnalatore
     */
    select?: segnalatoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalatoreInclude | null
    /**
     * Filter, which segnalatore to fetch.
     */
    where?: segnalatoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalatores to fetch.
     */
    orderBy?: Enumerable<segnalatoreOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for segnalatores.
     */
    cursor?: segnalatoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalatores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalatores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of segnalatores.
     */
    distinct?: Enumerable<SegnalatoreScalarFieldEnum>
  }

  /**
   * segnalatore findFirst
   */
  export interface segnalatoreFindFirstArgs extends segnalatoreFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * segnalatore findFirstOrThrow
   */
  export type segnalatoreFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the segnalatore
     */
    select?: segnalatoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalatoreInclude | null
    /**
     * Filter, which segnalatore to fetch.
     */
    where?: segnalatoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalatores to fetch.
     */
    orderBy?: Enumerable<segnalatoreOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for segnalatores.
     */
    cursor?: segnalatoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalatores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalatores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of segnalatores.
     */
    distinct?: Enumerable<SegnalatoreScalarFieldEnum>
  }


  /**
   * segnalatore findMany
   */
  export type segnalatoreFindManyArgs = {
    /**
     * Select specific fields to fetch from the segnalatore
     */
    select?: segnalatoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalatoreInclude | null
    /**
     * Filter, which segnalatores to fetch.
     */
    where?: segnalatoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalatores to fetch.
     */
    orderBy?: Enumerable<segnalatoreOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing segnalatores.
     */
    cursor?: segnalatoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalatores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalatores.
     */
    skip?: number
    distinct?: Enumerable<SegnalatoreScalarFieldEnum>
  }


  /**
   * segnalatore create
   */
  export type segnalatoreCreateArgs = {
    /**
     * Select specific fields to fetch from the segnalatore
     */
    select?: segnalatoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalatoreInclude | null
    /**
     * The data needed to create a segnalatore.
     */
    data: XOR<segnalatoreCreateInput, segnalatoreUncheckedCreateInput>
  }


  /**
   * segnalatore createMany
   */
  export type segnalatoreCreateManyArgs = {
    /**
     * The data used to create many segnalatores.
     */
    data: Enumerable<segnalatoreCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * segnalatore update
   */
  export type segnalatoreUpdateArgs = {
    /**
     * Select specific fields to fetch from the segnalatore
     */
    select?: segnalatoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalatoreInclude | null
    /**
     * The data needed to update a segnalatore.
     */
    data: XOR<segnalatoreUpdateInput, segnalatoreUncheckedUpdateInput>
    /**
     * Choose, which segnalatore to update.
     */
    where: segnalatoreWhereUniqueInput
  }


  /**
   * segnalatore updateMany
   */
  export type segnalatoreUpdateManyArgs = {
    /**
     * The data used to update segnalatores.
     */
    data: XOR<segnalatoreUpdateManyMutationInput, segnalatoreUncheckedUpdateManyInput>
    /**
     * Filter which segnalatores to update
     */
    where?: segnalatoreWhereInput
  }


  /**
   * segnalatore upsert
   */
  export type segnalatoreUpsertArgs = {
    /**
     * Select specific fields to fetch from the segnalatore
     */
    select?: segnalatoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalatoreInclude | null
    /**
     * The filter to search for the segnalatore to update in case it exists.
     */
    where: segnalatoreWhereUniqueInput
    /**
     * In case the segnalatore found by the `where` argument doesn't exist, create a new segnalatore with this data.
     */
    create: XOR<segnalatoreCreateInput, segnalatoreUncheckedCreateInput>
    /**
     * In case the segnalatore was found with the provided `where` argument, update it with this data.
     */
    update: XOR<segnalatoreUpdateInput, segnalatoreUncheckedUpdateInput>
  }


  /**
   * segnalatore delete
   */
  export type segnalatoreDeleteArgs = {
    /**
     * Select specific fields to fetch from the segnalatore
     */
    select?: segnalatoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalatoreInclude | null
    /**
     * Filter which segnalatore to delete.
     */
    where: segnalatoreWhereUniqueInput
  }


  /**
   * segnalatore deleteMany
   */
  export type segnalatoreDeleteManyArgs = {
    /**
     * Filter which segnalatores to delete
     */
    where?: segnalatoreWhereInput
  }


  /**
   * segnalatore.registrorichiedente
   */
  export type segnalatore$registrorichiedenteArgs = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    where?: registrorichiedenteWhereInput
    orderBy?: Enumerable<registrorichiedenteOrderByWithRelationInput>
    cursor?: registrorichiedenteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<RegistrorichiedenteScalarFieldEnum>
  }


  /**
   * segnalatore.segnalazione
   */
  export type segnalatore$segnalazioneArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    where?: segnalazioneWhereInput
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    cursor?: segnalazioneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * segnalatore.segnalazionestorico
   */
  export type segnalatore$segnalazionestoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    where?: segnalazionestoricoWhereInput
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    cursor?: segnalazionestoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * segnalatore without action
   */
  export type segnalatoreArgs = {
    /**
     * Select specific fields to fetch from the segnalatore
     */
    select?: segnalatoreSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalatoreInclude | null
  }



  /**
   * Model segnalazione
   */


  export type AggregateSegnalazione = {
    _count: SegnalazioneCountAggregateOutputType | null
    _avg: SegnalazioneAvgAggregateOutputType | null
    _sum: SegnalazioneSumAggregateOutputType | null
    _min: SegnalazioneMinAggregateOutputType | null
    _max: SegnalazioneMaxAggregateOutputType | null
  }

  export type SegnalazioneAvgAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    segnalatori: number | null
    idEvento: number | null
    idPratica: number | null
    idUtente: number | null
    idUtenteStato: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    categoriaAnomalia: number | null
    dettaglioAnomalia: number | null
    severitaEvento: number | null
    tipoEvento: number | null
    idTecnico: number | null
    idSegnalazioneGetico: number | null
    idTipoProvvedimento: number | null
  }

  export type SegnalazioneSumAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    segnalatori: number[] | null
    idEvento: number | null
    idPratica: number | null
    idUtente: number | null
    idUtenteStato: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    categoriaAnomalia: number | null
    dettaglioAnomalia: number | null
    severitaEvento: number | null
    tipoEvento: number | null
    idTecnico: number | null
    idSegnalazioneGetico: number | null
    idTipoProvvedimento: number | null
  }

  export type SegnalazioneMinAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    noteSegnalatore: string | null
    dataCreazione: string | null
    dataModifica: string | null
    dataRichiesta: string | null
    localizzazioneDichiarata: string | null
    localizzazioneDichiarataCivico: string | null
    localizzazioneNote: string | null
    descrizioneAnomalia: string | null
    commentoAnomalia: string | null
    idEvento: number | null
    idPratica: number | null
    dataModificaStato: string | null
    stato: string | null
    notaStato: string | null
    idUtente: number | null
    idUtenteStato: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    categoriaAnomalia: number | null
    dettaglioAnomalia: number | null
    severitaEvento: number | null
    tipoEvento: number | null
    idTecnico: number | null
    localizzazioneDichiarataQuartiere: string | null
    idLavoroAssociato: string | null
    dataChiusura: string | null
    statoCorrenteSegnalazione: string | null
    del: string | null
    idSegnalazioneGetico: number | null
    delOggettiCatasto: string | null
    sottoservizi: string | null
    sinistri: string | null
    richiestaSopralluogo: string | null
    numeroProvvedimento: string | null
    idTipoProvvedimento: number | null
  }

  export type SegnalazioneMaxAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    noteSegnalatore: string | null
    dataCreazione: string | null
    dataModifica: string | null
    dataRichiesta: string | null
    localizzazioneDichiarata: string | null
    localizzazioneDichiarataCivico: string | null
    localizzazioneNote: string | null
    descrizioneAnomalia: string | null
    commentoAnomalia: string | null
    idEvento: number | null
    idPratica: number | null
    dataModificaStato: string | null
    stato: string | null
    notaStato: string | null
    idUtente: number | null
    idUtenteStato: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    categoriaAnomalia: number | null
    dettaglioAnomalia: number | null
    severitaEvento: number | null
    tipoEvento: number | null
    idTecnico: number | null
    localizzazioneDichiarataQuartiere: string | null
    idLavoroAssociato: string | null
    dataChiusura: string | null
    statoCorrenteSegnalazione: string | null
    del: string | null
    idSegnalazioneGetico: number | null
    delOggettiCatasto: string | null
    sottoservizi: string | null
    sinistri: string | null
    richiestaSopralluogo: string | null
    numeroProvvedimento: string | null
    idTipoProvvedimento: number | null
  }

  export type SegnalazioneCountAggregateOutputType = {
    id: number
    idAppalto: number
    noteSegnalatore: number
    segnalatori: number
    dataCreazione: number
    dataModifica: number
    dataRichiesta: number
    localizzazioneDichiarata: number
    localizzazioneDichiarataCivico: number
    localizzazioneNote: number
    descrizioneAnomalia: number
    commentoAnomalia: number
    idEvento: number
    idPratica: number
    dataModificaStato: number
    stato: number
    notaStato: number
    idUtente: number
    idUtenteStato: number
    idSegnalatore: number
    fonteSegnalazione: number
    categoriaAnomalia: number
    dettaglioAnomalia: number
    severitaEvento: number
    tipoEvento: number
    idTecnico: number
    localizzazioneDichiarataQuartiere: number
    idLavoroAssociato: number
    dataChiusura: number
    statoCorrenteSegnalazione: number
    del: number
    idSegnalazioneGetico: number
    delOggettiCatasto: number
    sottoservizi: number
    sinistri: number
    richiestaSopralluogo: number
    numeroProvvedimento: number
    idTipoProvvedimento: number
    _all: number
  }


  export type SegnalazioneAvgAggregateInputType = {
    id?: true
    idAppalto?: true
    segnalatori?: true
    idEvento?: true
    idPratica?: true
    idUtente?: true
    idUtenteStato?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    categoriaAnomalia?: true
    dettaglioAnomalia?: true
    severitaEvento?: true
    tipoEvento?: true
    idTecnico?: true
    idSegnalazioneGetico?: true
    idTipoProvvedimento?: true
  }

  export type SegnalazioneSumAggregateInputType = {
    id?: true
    idAppalto?: true
    segnalatori?: true
    idEvento?: true
    idPratica?: true
    idUtente?: true
    idUtenteStato?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    categoriaAnomalia?: true
    dettaglioAnomalia?: true
    severitaEvento?: true
    tipoEvento?: true
    idTecnico?: true
    idSegnalazioneGetico?: true
    idTipoProvvedimento?: true
  }

  export type SegnalazioneMinAggregateInputType = {
    id?: true
    idAppalto?: true
    noteSegnalatore?: true
    dataCreazione?: true
    dataModifica?: true
    dataRichiesta?: true
    localizzazioneDichiarata?: true
    localizzazioneDichiarataCivico?: true
    localizzazioneNote?: true
    descrizioneAnomalia?: true
    commentoAnomalia?: true
    idEvento?: true
    idPratica?: true
    dataModificaStato?: true
    stato?: true
    notaStato?: true
    idUtente?: true
    idUtenteStato?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    categoriaAnomalia?: true
    dettaglioAnomalia?: true
    severitaEvento?: true
    tipoEvento?: true
    idTecnico?: true
    localizzazioneDichiarataQuartiere?: true
    idLavoroAssociato?: true
    dataChiusura?: true
    statoCorrenteSegnalazione?: true
    del?: true
    idSegnalazioneGetico?: true
    delOggettiCatasto?: true
    sottoservizi?: true
    sinistri?: true
    richiestaSopralluogo?: true
    numeroProvvedimento?: true
    idTipoProvvedimento?: true
  }

  export type SegnalazioneMaxAggregateInputType = {
    id?: true
    idAppalto?: true
    noteSegnalatore?: true
    dataCreazione?: true
    dataModifica?: true
    dataRichiesta?: true
    localizzazioneDichiarata?: true
    localizzazioneDichiarataCivico?: true
    localizzazioneNote?: true
    descrizioneAnomalia?: true
    commentoAnomalia?: true
    idEvento?: true
    idPratica?: true
    dataModificaStato?: true
    stato?: true
    notaStato?: true
    idUtente?: true
    idUtenteStato?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    categoriaAnomalia?: true
    dettaglioAnomalia?: true
    severitaEvento?: true
    tipoEvento?: true
    idTecnico?: true
    localizzazioneDichiarataQuartiere?: true
    idLavoroAssociato?: true
    dataChiusura?: true
    statoCorrenteSegnalazione?: true
    del?: true
    idSegnalazioneGetico?: true
    delOggettiCatasto?: true
    sottoservizi?: true
    sinistri?: true
    richiestaSopralluogo?: true
    numeroProvvedimento?: true
    idTipoProvvedimento?: true
  }

  export type SegnalazioneCountAggregateInputType = {
    id?: true
    idAppalto?: true
    noteSegnalatore?: true
    segnalatori?: true
    dataCreazione?: true
    dataModifica?: true
    dataRichiesta?: true
    localizzazioneDichiarata?: true
    localizzazioneDichiarataCivico?: true
    localizzazioneNote?: true
    descrizioneAnomalia?: true
    commentoAnomalia?: true
    idEvento?: true
    idPratica?: true
    dataModificaStato?: true
    stato?: true
    notaStato?: true
    idUtente?: true
    idUtenteStato?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    categoriaAnomalia?: true
    dettaglioAnomalia?: true
    severitaEvento?: true
    tipoEvento?: true
    idTecnico?: true
    localizzazioneDichiarataQuartiere?: true
    idLavoroAssociato?: true
    dataChiusura?: true
    statoCorrenteSegnalazione?: true
    del?: true
    idSegnalazioneGetico?: true
    delOggettiCatasto?: true
    sottoservizi?: true
    sinistri?: true
    richiestaSopralluogo?: true
    numeroProvvedimento?: true
    idTipoProvvedimento?: true
    _all?: true
  }

  export type SegnalazioneAggregateArgs = {
    /**
     * Filter which segnalazione to aggregate.
     */
    where?: segnalazioneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalaziones to fetch.
     */
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: segnalazioneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalaziones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalaziones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned segnalaziones
    **/
    _count?: true | SegnalazioneCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SegnalazioneAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SegnalazioneSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SegnalazioneMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SegnalazioneMaxAggregateInputType
  }

  export type GetSegnalazioneAggregateType<T extends SegnalazioneAggregateArgs> = {
        [P in keyof T & keyof AggregateSegnalazione]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSegnalazione[P]>
      : GetScalarType<T[P], AggregateSegnalazione[P]>
  }




  export type SegnalazioneGroupByArgs = {
    where?: segnalazioneWhereInput
    orderBy?: Enumerable<segnalazioneOrderByWithAggregationInput>
    by: SegnalazioneScalarFieldEnum[]
    having?: segnalazioneScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SegnalazioneCountAggregateInputType | true
    _avg?: SegnalazioneAvgAggregateInputType
    _sum?: SegnalazioneSumAggregateInputType
    _min?: SegnalazioneMinAggregateInputType
    _max?: SegnalazioneMaxAggregateInputType
  }


  export type SegnalazioneGroupByOutputType = {
    id: number
    idAppalto: number | null
    noteSegnalatore: string | null
    segnalatori: number[]
    dataCreazione: string | null
    dataModifica: string | null
    dataRichiesta: string | null
    localizzazioneDichiarata: string | null
    localizzazioneDichiarataCivico: string | null
    localizzazioneNote: string | null
    descrizioneAnomalia: string | null
    commentoAnomalia: string | null
    idEvento: number | null
    idPratica: number | null
    dataModificaStato: string | null
    stato: string | null
    notaStato: string | null
    idUtente: number | null
    idUtenteStato: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    categoriaAnomalia: number | null
    dettaglioAnomalia: number | null
    severitaEvento: number | null
    tipoEvento: number | null
    idTecnico: number | null
    localizzazioneDichiarataQuartiere: string | null
    idLavoroAssociato: string | null
    dataChiusura: string | null
    statoCorrenteSegnalazione: string | null
    del: string | null
    idSegnalazioneGetico: number | null
    delOggettiCatasto: string | null
    sottoservizi: string | null
    sinistri: string | null
    richiestaSopralluogo: string | null
    numeroProvvedimento: string | null
    idTipoProvvedimento: number | null
    _count: SegnalazioneCountAggregateOutputType | null
    _avg: SegnalazioneAvgAggregateOutputType | null
    _sum: SegnalazioneSumAggregateOutputType | null
    _min: SegnalazioneMinAggregateOutputType | null
    _max: SegnalazioneMaxAggregateOutputType | null
  }

  type GetSegnalazioneGroupByPayload<T extends SegnalazioneGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<SegnalazioneGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SegnalazioneGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SegnalazioneGroupByOutputType[P]>
            : GetScalarType<T[P], SegnalazioneGroupByOutputType[P]>
        }
      >
    >


  export type segnalazioneSelect = {
    id?: boolean
    idAppalto?: boolean
    noteSegnalatore?: boolean
    segnalatori?: boolean
    dataCreazione?: boolean
    dataModifica?: boolean
    dataRichiesta?: boolean
    localizzazioneDichiarata?: boolean
    localizzazioneDichiarataCivico?: boolean
    localizzazioneNote?: boolean
    descrizioneAnomalia?: boolean
    commentoAnomalia?: boolean
    idEvento?: boolean
    idPratica?: boolean
    dataModificaStato?: boolean
    stato?: boolean
    notaStato?: boolean
    idUtente?: boolean
    idUtenteStato?: boolean
    idSegnalatore?: boolean
    fonteSegnalazione?: boolean
    categoriaAnomalia?: boolean
    dettaglioAnomalia?: boolean
    severitaEvento?: boolean
    tipoEvento?: boolean
    idTecnico?: boolean
    localizzazioneDichiarataQuartiere?: boolean
    idLavoroAssociato?: boolean
    dataChiusura?: boolean
    statoCorrenteSegnalazione?: boolean
    del?: boolean
    idSegnalazioneGetico?: boolean
    delOggettiCatasto?: boolean
    sottoservizi?: boolean
    sinistri?: boolean
    richiestaSopralluogo?: boolean
    numeroProvvedimento?: boolean
    idTipoProvvedimento?: boolean
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategoriaanomalia?: boolean | sottocategoriaanomaliaArgs
    fonti?: boolean | fontiArgs
    segnalatore?: boolean | segnalatoreArgs
    segnalazione_getico?: boolean | segnalazione_geticoArgs
    tecnici?: boolean | tecniciArgs
    tipoprovvedimento?: boolean | tipoprovvedimentoArgs
    utenti_segnalazione_idUtenteStatoToutenti?: boolean | utentiArgs
    utenti_segnalazione_idUtenteToutenti?: boolean | utentiArgs
    tiposeverita?: boolean | tiposeveritaArgs
    tipoevento?: boolean | tipoeventoArgs
    segnalazionestatostorico?: boolean | segnalazione$segnalazionestatostoricoArgs
    _count?: boolean | SegnalazioneCountOutputTypeArgs
  }


  export type segnalazioneInclude = {
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategoriaanomalia?: boolean | sottocategoriaanomaliaArgs
    fonti?: boolean | fontiArgs
    segnalatore?: boolean | segnalatoreArgs
    segnalazione_getico?: boolean | segnalazione_geticoArgs
    tecnici?: boolean | tecniciArgs
    tipoprovvedimento?: boolean | tipoprovvedimentoArgs
    utenti_segnalazione_idUtenteStatoToutenti?: boolean | utentiArgs
    utenti_segnalazione_idUtenteToutenti?: boolean | utentiArgs
    tiposeverita?: boolean | tiposeveritaArgs
    tipoevento?: boolean | tipoeventoArgs
    segnalazionestatostorico?: boolean | segnalazione$segnalazionestatostoricoArgs
    _count?: boolean | SegnalazioneCountOutputTypeArgs
  }

  export type segnalazioneGetPayload<S extends boolean | null | undefined | segnalazioneArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? segnalazione :
    S extends undefined ? never :
    S extends { include: any } & (segnalazioneArgs | segnalazioneFindManyArgs)
    ? segnalazione  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['include'][P]> | null :
        P extends 'sottocategoriaanomalia' ? sottocategoriaanomaliaGetPayload<S['include'][P]> | null :
        P extends 'fonti' ? fontiGetPayload<S['include'][P]> | null :
        P extends 'segnalatore' ? segnalatoreGetPayload<S['include'][P]> | null :
        P extends 'segnalazione_getico' ? segnalazione_geticoGetPayload<S['include'][P]> | null :
        P extends 'tecnici' ? tecniciGetPayload<S['include'][P]> | null :
        P extends 'tipoprovvedimento' ? tipoprovvedimentoGetPayload<S['include'][P]> | null :
        P extends 'utenti_segnalazione_idUtenteStatoToutenti' ? utentiGetPayload<S['include'][P]> | null :
        P extends 'utenti_segnalazione_idUtenteToutenti' ? utentiGetPayload<S['include'][P]> | null :
        P extends 'tiposeverita' ? tiposeveritaGetPayload<S['include'][P]> | null :
        P extends 'tipoevento' ? tipoeventoGetPayload<S['include'][P]> | null :
        P extends 'segnalazionestatostorico' ? Array < segnalazionestatostoricoGetPayload<S['include'][P]>>  :
        P extends '_count' ? SegnalazioneCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (segnalazioneArgs | segnalazioneFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['select'][P]> | null :
        P extends 'sottocategoriaanomalia' ? sottocategoriaanomaliaGetPayload<S['select'][P]> | null :
        P extends 'fonti' ? fontiGetPayload<S['select'][P]> | null :
        P extends 'segnalatore' ? segnalatoreGetPayload<S['select'][P]> | null :
        P extends 'segnalazione_getico' ? segnalazione_geticoGetPayload<S['select'][P]> | null :
        P extends 'tecnici' ? tecniciGetPayload<S['select'][P]> | null :
        P extends 'tipoprovvedimento' ? tipoprovvedimentoGetPayload<S['select'][P]> | null :
        P extends 'utenti_segnalazione_idUtenteStatoToutenti' ? utentiGetPayload<S['select'][P]> | null :
        P extends 'utenti_segnalazione_idUtenteToutenti' ? utentiGetPayload<S['select'][P]> | null :
        P extends 'tiposeverita' ? tiposeveritaGetPayload<S['select'][P]> | null :
        P extends 'tipoevento' ? tipoeventoGetPayload<S['select'][P]> | null :
        P extends 'segnalazionestatostorico' ? Array < segnalazionestatostoricoGetPayload<S['select'][P]>>  :
        P extends '_count' ? SegnalazioneCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof segnalazione ? segnalazione[P] : never
  } 
      : segnalazione


  type segnalazioneCountArgs = 
    Omit<segnalazioneFindManyArgs, 'select' | 'include'> & {
      select?: SegnalazioneCountAggregateInputType | true
    }

  export interface segnalazioneDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Segnalazione that matches the filter.
     * @param {segnalazioneFindUniqueArgs} args - Arguments to find a Segnalazione
     * @example
     * // Get one Segnalazione
     * const segnalazione = await prisma.segnalazione.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends segnalazioneFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, segnalazioneFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'segnalazione'> extends True ? Prisma__segnalazioneClient<segnalazioneGetPayload<T>> : Prisma__segnalazioneClient<segnalazioneGetPayload<T> | null, null>

    /**
     * Find one Segnalazione that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {segnalazioneFindUniqueOrThrowArgs} args - Arguments to find a Segnalazione
     * @example
     * // Get one Segnalazione
     * const segnalazione = await prisma.segnalazione.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends segnalazioneFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, segnalazioneFindUniqueOrThrowArgs>
    ): Prisma__segnalazioneClient<segnalazioneGetPayload<T>>

    /**
     * Find the first Segnalazione that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazioneFindFirstArgs} args - Arguments to find a Segnalazione
     * @example
     * // Get one Segnalazione
     * const segnalazione = await prisma.segnalazione.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends segnalazioneFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, segnalazioneFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'segnalazione'> extends True ? Prisma__segnalazioneClient<segnalazioneGetPayload<T>> : Prisma__segnalazioneClient<segnalazioneGetPayload<T> | null, null>

    /**
     * Find the first Segnalazione that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazioneFindFirstOrThrowArgs} args - Arguments to find a Segnalazione
     * @example
     * // Get one Segnalazione
     * const segnalazione = await prisma.segnalazione.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends segnalazioneFindFirstOrThrowArgs>(
      args?: SelectSubset<T, segnalazioneFindFirstOrThrowArgs>
    ): Prisma__segnalazioneClient<segnalazioneGetPayload<T>>

    /**
     * Find zero or more Segnalaziones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazioneFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Segnalaziones
     * const segnalaziones = await prisma.segnalazione.findMany()
     * 
     * // Get first 10 Segnalaziones
     * const segnalaziones = await prisma.segnalazione.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const segnalazioneWithIdOnly = await prisma.segnalazione.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends segnalazioneFindManyArgs>(
      args?: SelectSubset<T, segnalazioneFindManyArgs>
    ): Prisma.PrismaPromise<Array<segnalazioneGetPayload<T>>>

    /**
     * Create a Segnalazione.
     * @param {segnalazioneCreateArgs} args - Arguments to create a Segnalazione.
     * @example
     * // Create one Segnalazione
     * const Segnalazione = await prisma.segnalazione.create({
     *   data: {
     *     // ... data to create a Segnalazione
     *   }
     * })
     * 
    **/
    create<T extends segnalazioneCreateArgs>(
      args: SelectSubset<T, segnalazioneCreateArgs>
    ): Prisma__segnalazioneClient<segnalazioneGetPayload<T>>

    /**
     * Create many Segnalaziones.
     *     @param {segnalazioneCreateManyArgs} args - Arguments to create many Segnalaziones.
     *     @example
     *     // Create many Segnalaziones
     *     const segnalazione = await prisma.segnalazione.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends segnalazioneCreateManyArgs>(
      args?: SelectSubset<T, segnalazioneCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Segnalazione.
     * @param {segnalazioneDeleteArgs} args - Arguments to delete one Segnalazione.
     * @example
     * // Delete one Segnalazione
     * const Segnalazione = await prisma.segnalazione.delete({
     *   where: {
     *     // ... filter to delete one Segnalazione
     *   }
     * })
     * 
    **/
    delete<T extends segnalazioneDeleteArgs>(
      args: SelectSubset<T, segnalazioneDeleteArgs>
    ): Prisma__segnalazioneClient<segnalazioneGetPayload<T>>

    /**
     * Update one Segnalazione.
     * @param {segnalazioneUpdateArgs} args - Arguments to update one Segnalazione.
     * @example
     * // Update one Segnalazione
     * const segnalazione = await prisma.segnalazione.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends segnalazioneUpdateArgs>(
      args: SelectSubset<T, segnalazioneUpdateArgs>
    ): Prisma__segnalazioneClient<segnalazioneGetPayload<T>>

    /**
     * Delete zero or more Segnalaziones.
     * @param {segnalazioneDeleteManyArgs} args - Arguments to filter Segnalaziones to delete.
     * @example
     * // Delete a few Segnalaziones
     * const { count } = await prisma.segnalazione.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends segnalazioneDeleteManyArgs>(
      args?: SelectSubset<T, segnalazioneDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Segnalaziones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazioneUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Segnalaziones
     * const segnalazione = await prisma.segnalazione.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends segnalazioneUpdateManyArgs>(
      args: SelectSubset<T, segnalazioneUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Segnalazione.
     * @param {segnalazioneUpsertArgs} args - Arguments to update or create a Segnalazione.
     * @example
     * // Update or create a Segnalazione
     * const segnalazione = await prisma.segnalazione.upsert({
     *   create: {
     *     // ... data to create a Segnalazione
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Segnalazione we want to update
     *   }
     * })
    **/
    upsert<T extends segnalazioneUpsertArgs>(
      args: SelectSubset<T, segnalazioneUpsertArgs>
    ): Prisma__segnalazioneClient<segnalazioneGetPayload<T>>

    /**
     * Count the number of Segnalaziones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazioneCountArgs} args - Arguments to filter Segnalaziones to count.
     * @example
     * // Count the number of Segnalaziones
     * const count = await prisma.segnalazione.count({
     *   where: {
     *     // ... the filter for the Segnalaziones we want to count
     *   }
     * })
    **/
    count<T extends segnalazioneCountArgs>(
      args?: Subset<T, segnalazioneCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SegnalazioneCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Segnalazione.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegnalazioneAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SegnalazioneAggregateArgs>(args: Subset<T, SegnalazioneAggregateArgs>): Prisma.PrismaPromise<GetSegnalazioneAggregateType<T>>

    /**
     * Group by Segnalazione.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegnalazioneGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SegnalazioneGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SegnalazioneGroupByArgs['orderBy'] }
        : { orderBy?: SegnalazioneGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SegnalazioneGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSegnalazioneGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for segnalazione.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__segnalazioneClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    categoriaanomalia<T extends categoriaanomaliaArgs= {}>(args?: Subset<T, categoriaanomaliaArgs>): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T> | Null>;

    sottocategoriaanomalia<T extends sottocategoriaanomaliaArgs= {}>(args?: Subset<T, sottocategoriaanomaliaArgs>): Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T> | Null>;

    fonti<T extends fontiArgs= {}>(args?: Subset<T, fontiArgs>): Prisma__fontiClient<fontiGetPayload<T> | Null>;

    segnalatore<T extends segnalatoreArgs= {}>(args?: Subset<T, segnalatoreArgs>): Prisma__segnalatoreClient<segnalatoreGetPayload<T> | Null>;

    segnalazione_getico<T extends segnalazione_geticoArgs= {}>(args?: Subset<T, segnalazione_geticoArgs>): Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T> | Null>;

    tecnici<T extends tecniciArgs= {}>(args?: Subset<T, tecniciArgs>): Prisma__tecniciClient<tecniciGetPayload<T> | Null>;

    tipoprovvedimento<T extends tipoprovvedimentoArgs= {}>(args?: Subset<T, tipoprovvedimentoArgs>): Prisma__tipoprovvedimentoClient<tipoprovvedimentoGetPayload<T> | Null>;

    utenti_segnalazione_idUtenteStatoToutenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    utenti_segnalazione_idUtenteToutenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    tiposeverita<T extends tiposeveritaArgs= {}>(args?: Subset<T, tiposeveritaArgs>): Prisma__tiposeveritaClient<tiposeveritaGetPayload<T> | Null>;

    tipoevento<T extends tipoeventoArgs= {}>(args?: Subset<T, tipoeventoArgs>): Prisma__tipoeventoClient<tipoeventoGetPayload<T> | Null>;

    segnalazionestatostorico<T extends segnalazione$segnalazionestatostoricoArgs= {}>(args?: Subset<T, segnalazione$segnalazionestatostoricoArgs>): Prisma.PrismaPromise<Array<segnalazionestatostoricoGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * segnalazione base type for findUnique actions
   */
  export type segnalazioneFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    /**
     * Filter, which segnalazione to fetch.
     */
    where: segnalazioneWhereUniqueInput
  }

  /**
   * segnalazione findUnique
   */
  export interface segnalazioneFindUniqueArgs extends segnalazioneFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * segnalazione findUniqueOrThrow
   */
  export type segnalazioneFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    /**
     * Filter, which segnalazione to fetch.
     */
    where: segnalazioneWhereUniqueInput
  }


  /**
   * segnalazione base type for findFirst actions
   */
  export type segnalazioneFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    /**
     * Filter, which segnalazione to fetch.
     */
    where?: segnalazioneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalaziones to fetch.
     */
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for segnalaziones.
     */
    cursor?: segnalazioneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalaziones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalaziones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of segnalaziones.
     */
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }

  /**
   * segnalazione findFirst
   */
  export interface segnalazioneFindFirstArgs extends segnalazioneFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * segnalazione findFirstOrThrow
   */
  export type segnalazioneFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    /**
     * Filter, which segnalazione to fetch.
     */
    where?: segnalazioneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalaziones to fetch.
     */
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for segnalaziones.
     */
    cursor?: segnalazioneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalaziones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalaziones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of segnalaziones.
     */
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * segnalazione findMany
   */
  export type segnalazioneFindManyArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    /**
     * Filter, which segnalaziones to fetch.
     */
    where?: segnalazioneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalaziones to fetch.
     */
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing segnalaziones.
     */
    cursor?: segnalazioneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalaziones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalaziones.
     */
    skip?: number
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * segnalazione create
   */
  export type segnalazioneCreateArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    /**
     * The data needed to create a segnalazione.
     */
    data: XOR<segnalazioneCreateInput, segnalazioneUncheckedCreateInput>
  }


  /**
   * segnalazione createMany
   */
  export type segnalazioneCreateManyArgs = {
    /**
     * The data used to create many segnalaziones.
     */
    data: Enumerable<segnalazioneCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * segnalazione update
   */
  export type segnalazioneUpdateArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    /**
     * The data needed to update a segnalazione.
     */
    data: XOR<segnalazioneUpdateInput, segnalazioneUncheckedUpdateInput>
    /**
     * Choose, which segnalazione to update.
     */
    where: segnalazioneWhereUniqueInput
  }


  /**
   * segnalazione updateMany
   */
  export type segnalazioneUpdateManyArgs = {
    /**
     * The data used to update segnalaziones.
     */
    data: XOR<segnalazioneUpdateManyMutationInput, segnalazioneUncheckedUpdateManyInput>
    /**
     * Filter which segnalaziones to update
     */
    where?: segnalazioneWhereInput
  }


  /**
   * segnalazione upsert
   */
  export type segnalazioneUpsertArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    /**
     * The filter to search for the segnalazione to update in case it exists.
     */
    where: segnalazioneWhereUniqueInput
    /**
     * In case the segnalazione found by the `where` argument doesn't exist, create a new segnalazione with this data.
     */
    create: XOR<segnalazioneCreateInput, segnalazioneUncheckedCreateInput>
    /**
     * In case the segnalazione was found with the provided `where` argument, update it with this data.
     */
    update: XOR<segnalazioneUpdateInput, segnalazioneUncheckedUpdateInput>
  }


  /**
   * segnalazione delete
   */
  export type segnalazioneDeleteArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    /**
     * Filter which segnalazione to delete.
     */
    where: segnalazioneWhereUniqueInput
  }


  /**
   * segnalazione deleteMany
   */
  export type segnalazioneDeleteManyArgs = {
    /**
     * Filter which segnalaziones to delete
     */
    where?: segnalazioneWhereInput
  }


  /**
   * segnalazione.segnalazionestatostorico
   */
  export type segnalazione$segnalazionestatostoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestatostorico
     */
    select?: segnalazionestatostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestatostoricoInclude | null
    where?: segnalazionestatostoricoWhereInput
    orderBy?: Enumerable<segnalazionestatostoricoOrderByWithRelationInput>
    cursor?: segnalazionestatostoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestatostoricoScalarFieldEnum>
  }


  /**
   * segnalazione without action
   */
  export type segnalazioneArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
  }



  /**
   * Model segnalazione_getico
   */


  export type AggregateSegnalazione_getico = {
    _count: Segnalazione_geticoCountAggregateOutputType | null
    _avg: Segnalazione_geticoAvgAggregateOutputType | null
    _sum: Segnalazione_geticoSumAggregateOutputType | null
    _min: Segnalazione_geticoMinAggregateOutputType | null
    _max: Segnalazione_geticoMaxAggregateOutputType | null
  }

  export type Segnalazione_geticoAvgAggregateOutputType = {
    id: number | null
  }

  export type Segnalazione_geticoSumAggregateOutputType = {
    id: number | null
  }

  export type Segnalazione_geticoMinAggregateOutputType = {
    id: number | null
    id_ticket: string | null
    segnalante_nome: string | null
    segnalante_cognome: string | null
    segnalante_email: string | null
    segnalante_telefono: string | null
    luogo_indirizzo: string | null
    luogo_civico: string | null
    luogo_ubicazione: string | null
    descrizione: string | null
    tipologia: string | null
    flg_stato: string | null
    luogo_quartiere: string | null
    dataRichiesta: string | null
    dataInoltro: string | null
    ufficioProvenienza: string | null
    luogo_civico2: string | null
    luogo_indirizzo2: string | null
    ufficio_inoltro: string | null
    json_uffici: string | null
    note_esito: string | null
    sopralluogo: string | null
    sopralluogo_note: string | null
    sopralluogo_effettuato: string | null
    sopralluogo_importato: string | null
    sopralluogo_catasto_json: string | null
  }

  export type Segnalazione_geticoMaxAggregateOutputType = {
    id: number | null
    id_ticket: string | null
    segnalante_nome: string | null
    segnalante_cognome: string | null
    segnalante_email: string | null
    segnalante_telefono: string | null
    luogo_indirizzo: string | null
    luogo_civico: string | null
    luogo_ubicazione: string | null
    descrizione: string | null
    tipologia: string | null
    flg_stato: string | null
    luogo_quartiere: string | null
    dataRichiesta: string | null
    dataInoltro: string | null
    ufficioProvenienza: string | null
    luogo_civico2: string | null
    luogo_indirizzo2: string | null
    ufficio_inoltro: string | null
    json_uffici: string | null
    note_esito: string | null
    sopralluogo: string | null
    sopralluogo_note: string | null
    sopralluogo_effettuato: string | null
    sopralluogo_importato: string | null
    sopralluogo_catasto_json: string | null
  }

  export type Segnalazione_geticoCountAggregateOutputType = {
    id: number
    id_ticket: number
    segnalante_nome: number
    segnalante_cognome: number
    segnalante_email: number
    segnalante_telefono: number
    luogo_indirizzo: number
    luogo_civico: number
    luogo_ubicazione: number
    descrizione: number
    tipologia: number
    flg_stato: number
    luogo_quartiere: number
    dataRichiesta: number
    dataInoltro: number
    ufficioProvenienza: number
    luogo_civico2: number
    luogo_indirizzo2: number
    ufficio_inoltro: number
    json_uffici: number
    note_esito: number
    sopralluogo: number
    sopralluogo_note: number
    sopralluogo_effettuato: number
    sopralluogo_importato: number
    sopralluogo_catasto_json: number
    _all: number
  }


  export type Segnalazione_geticoAvgAggregateInputType = {
    id?: true
  }

  export type Segnalazione_geticoSumAggregateInputType = {
    id?: true
  }

  export type Segnalazione_geticoMinAggregateInputType = {
    id?: true
    id_ticket?: true
    segnalante_nome?: true
    segnalante_cognome?: true
    segnalante_email?: true
    segnalante_telefono?: true
    luogo_indirizzo?: true
    luogo_civico?: true
    luogo_ubicazione?: true
    descrizione?: true
    tipologia?: true
    flg_stato?: true
    luogo_quartiere?: true
    dataRichiesta?: true
    dataInoltro?: true
    ufficioProvenienza?: true
    luogo_civico2?: true
    luogo_indirizzo2?: true
    ufficio_inoltro?: true
    json_uffici?: true
    note_esito?: true
    sopralluogo?: true
    sopralluogo_note?: true
    sopralluogo_effettuato?: true
    sopralluogo_importato?: true
    sopralluogo_catasto_json?: true
  }

  export type Segnalazione_geticoMaxAggregateInputType = {
    id?: true
    id_ticket?: true
    segnalante_nome?: true
    segnalante_cognome?: true
    segnalante_email?: true
    segnalante_telefono?: true
    luogo_indirizzo?: true
    luogo_civico?: true
    luogo_ubicazione?: true
    descrizione?: true
    tipologia?: true
    flg_stato?: true
    luogo_quartiere?: true
    dataRichiesta?: true
    dataInoltro?: true
    ufficioProvenienza?: true
    luogo_civico2?: true
    luogo_indirizzo2?: true
    ufficio_inoltro?: true
    json_uffici?: true
    note_esito?: true
    sopralluogo?: true
    sopralluogo_note?: true
    sopralluogo_effettuato?: true
    sopralluogo_importato?: true
    sopralluogo_catasto_json?: true
  }

  export type Segnalazione_geticoCountAggregateInputType = {
    id?: true
    id_ticket?: true
    segnalante_nome?: true
    segnalante_cognome?: true
    segnalante_email?: true
    segnalante_telefono?: true
    luogo_indirizzo?: true
    luogo_civico?: true
    luogo_ubicazione?: true
    descrizione?: true
    tipologia?: true
    flg_stato?: true
    luogo_quartiere?: true
    dataRichiesta?: true
    dataInoltro?: true
    ufficioProvenienza?: true
    luogo_civico2?: true
    luogo_indirizzo2?: true
    ufficio_inoltro?: true
    json_uffici?: true
    note_esito?: true
    sopralluogo?: true
    sopralluogo_note?: true
    sopralluogo_effettuato?: true
    sopralluogo_importato?: true
    sopralluogo_catasto_json?: true
    _all?: true
  }

  export type Segnalazione_geticoAggregateArgs = {
    /**
     * Filter which segnalazione_getico to aggregate.
     */
    where?: segnalazione_geticoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalazione_geticos to fetch.
     */
    orderBy?: Enumerable<segnalazione_geticoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: segnalazione_geticoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalazione_geticos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalazione_geticos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned segnalazione_geticos
    **/
    _count?: true | Segnalazione_geticoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Segnalazione_geticoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Segnalazione_geticoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Segnalazione_geticoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Segnalazione_geticoMaxAggregateInputType
  }

  export type GetSegnalazione_geticoAggregateType<T extends Segnalazione_geticoAggregateArgs> = {
        [P in keyof T & keyof AggregateSegnalazione_getico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSegnalazione_getico[P]>
      : GetScalarType<T[P], AggregateSegnalazione_getico[P]>
  }




  export type Segnalazione_geticoGroupByArgs = {
    where?: segnalazione_geticoWhereInput
    orderBy?: Enumerable<segnalazione_geticoOrderByWithAggregationInput>
    by: Segnalazione_geticoScalarFieldEnum[]
    having?: segnalazione_geticoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Segnalazione_geticoCountAggregateInputType | true
    _avg?: Segnalazione_geticoAvgAggregateInputType
    _sum?: Segnalazione_geticoSumAggregateInputType
    _min?: Segnalazione_geticoMinAggregateInputType
    _max?: Segnalazione_geticoMaxAggregateInputType
  }


  export type Segnalazione_geticoGroupByOutputType = {
    id: number
    id_ticket: string | null
    segnalante_nome: string | null
    segnalante_cognome: string | null
    segnalante_email: string | null
    segnalante_telefono: string | null
    luogo_indirizzo: string | null
    luogo_civico: string | null
    luogo_ubicazione: string | null
    descrizione: string | null
    tipologia: string | null
    flg_stato: string | null
    luogo_quartiere: string | null
    dataRichiesta: string | null
    dataInoltro: string | null
    ufficioProvenienza: string | null
    luogo_civico2: string | null
    luogo_indirizzo2: string | null
    ufficio_inoltro: string | null
    json_uffici: string | null
    note_esito: string | null
    sopralluogo: string | null
    sopralluogo_note: string | null
    sopralluogo_effettuato: string | null
    sopralluogo_importato: string | null
    sopralluogo_catasto_json: string | null
    _count: Segnalazione_geticoCountAggregateOutputType | null
    _avg: Segnalazione_geticoAvgAggregateOutputType | null
    _sum: Segnalazione_geticoSumAggregateOutputType | null
    _min: Segnalazione_geticoMinAggregateOutputType | null
    _max: Segnalazione_geticoMaxAggregateOutputType | null
  }

  type GetSegnalazione_geticoGroupByPayload<T extends Segnalazione_geticoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Segnalazione_geticoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Segnalazione_geticoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Segnalazione_geticoGroupByOutputType[P]>
            : GetScalarType<T[P], Segnalazione_geticoGroupByOutputType[P]>
        }
      >
    >


  export type segnalazione_geticoSelect = {
    id?: boolean
    id_ticket?: boolean
    segnalante_nome?: boolean
    segnalante_cognome?: boolean
    segnalante_email?: boolean
    segnalante_telefono?: boolean
    luogo_indirizzo?: boolean
    luogo_civico?: boolean
    luogo_ubicazione?: boolean
    descrizione?: boolean
    tipologia?: boolean
    flg_stato?: boolean
    luogo_quartiere?: boolean
    dataRichiesta?: boolean
    dataInoltro?: boolean
    ufficioProvenienza?: boolean
    luogo_civico2?: boolean
    luogo_indirizzo2?: boolean
    ufficio_inoltro?: boolean
    json_uffici?: boolean
    note_esito?: boolean
    sopralluogo?: boolean
    sopralluogo_note?: boolean
    sopralluogo_effettuato?: boolean
    sopralluogo_importato?: boolean
    sopralluogo_catasto_json?: boolean
    registrorichiedente?: boolean | segnalazione_getico$registrorichiedenteArgs
    segnalazione?: boolean | segnalazione_getico$segnalazioneArgs
    segnalazionestorico?: boolean | segnalazione_getico$segnalazionestoricoArgs
    _count?: boolean | Segnalazione_geticoCountOutputTypeArgs
  }


  export type segnalazione_geticoInclude = {
    registrorichiedente?: boolean | segnalazione_getico$registrorichiedenteArgs
    segnalazione?: boolean | segnalazione_getico$segnalazioneArgs
    segnalazionestorico?: boolean | segnalazione_getico$segnalazionestoricoArgs
    _count?: boolean | Segnalazione_geticoCountOutputTypeArgs
  }

  export type segnalazione_geticoGetPayload<S extends boolean | null | undefined | segnalazione_geticoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? segnalazione_getico :
    S extends undefined ? never :
    S extends { include: any } & (segnalazione_geticoArgs | segnalazione_geticoFindManyArgs)
    ? segnalazione_getico  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'registrorichiedente' ? Array < registrorichiedenteGetPayload<S['include'][P]>>  :
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['include'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['include'][P]>>  :
        P extends '_count' ? Segnalazione_geticoCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (segnalazione_geticoArgs | segnalazione_geticoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'registrorichiedente' ? Array < registrorichiedenteGetPayload<S['select'][P]>>  :
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['select'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['select'][P]>>  :
        P extends '_count' ? Segnalazione_geticoCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof segnalazione_getico ? segnalazione_getico[P] : never
  } 
      : segnalazione_getico


  type segnalazione_geticoCountArgs = 
    Omit<segnalazione_geticoFindManyArgs, 'select' | 'include'> & {
      select?: Segnalazione_geticoCountAggregateInputType | true
    }

  export interface segnalazione_geticoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Segnalazione_getico that matches the filter.
     * @param {segnalazione_geticoFindUniqueArgs} args - Arguments to find a Segnalazione_getico
     * @example
     * // Get one Segnalazione_getico
     * const segnalazione_getico = await prisma.segnalazione_getico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends segnalazione_geticoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, segnalazione_geticoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'segnalazione_getico'> extends True ? Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T>> : Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T> | null, null>

    /**
     * Find one Segnalazione_getico that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {segnalazione_geticoFindUniqueOrThrowArgs} args - Arguments to find a Segnalazione_getico
     * @example
     * // Get one Segnalazione_getico
     * const segnalazione_getico = await prisma.segnalazione_getico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends segnalazione_geticoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, segnalazione_geticoFindUniqueOrThrowArgs>
    ): Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T>>

    /**
     * Find the first Segnalazione_getico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazione_geticoFindFirstArgs} args - Arguments to find a Segnalazione_getico
     * @example
     * // Get one Segnalazione_getico
     * const segnalazione_getico = await prisma.segnalazione_getico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends segnalazione_geticoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, segnalazione_geticoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'segnalazione_getico'> extends True ? Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T>> : Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T> | null, null>

    /**
     * Find the first Segnalazione_getico that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazione_geticoFindFirstOrThrowArgs} args - Arguments to find a Segnalazione_getico
     * @example
     * // Get one Segnalazione_getico
     * const segnalazione_getico = await prisma.segnalazione_getico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends segnalazione_geticoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, segnalazione_geticoFindFirstOrThrowArgs>
    ): Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T>>

    /**
     * Find zero or more Segnalazione_geticos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazione_geticoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Segnalazione_geticos
     * const segnalazione_geticos = await prisma.segnalazione_getico.findMany()
     * 
     * // Get first 10 Segnalazione_geticos
     * const segnalazione_geticos = await prisma.segnalazione_getico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const segnalazione_geticoWithIdOnly = await prisma.segnalazione_getico.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends segnalazione_geticoFindManyArgs>(
      args?: SelectSubset<T, segnalazione_geticoFindManyArgs>
    ): Prisma.PrismaPromise<Array<segnalazione_geticoGetPayload<T>>>

    /**
     * Create a Segnalazione_getico.
     * @param {segnalazione_geticoCreateArgs} args - Arguments to create a Segnalazione_getico.
     * @example
     * // Create one Segnalazione_getico
     * const Segnalazione_getico = await prisma.segnalazione_getico.create({
     *   data: {
     *     // ... data to create a Segnalazione_getico
     *   }
     * })
     * 
    **/
    create<T extends segnalazione_geticoCreateArgs>(
      args: SelectSubset<T, segnalazione_geticoCreateArgs>
    ): Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T>>

    /**
     * Create many Segnalazione_geticos.
     *     @param {segnalazione_geticoCreateManyArgs} args - Arguments to create many Segnalazione_geticos.
     *     @example
     *     // Create many Segnalazione_geticos
     *     const segnalazione_getico = await prisma.segnalazione_getico.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends segnalazione_geticoCreateManyArgs>(
      args?: SelectSubset<T, segnalazione_geticoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Segnalazione_getico.
     * @param {segnalazione_geticoDeleteArgs} args - Arguments to delete one Segnalazione_getico.
     * @example
     * // Delete one Segnalazione_getico
     * const Segnalazione_getico = await prisma.segnalazione_getico.delete({
     *   where: {
     *     // ... filter to delete one Segnalazione_getico
     *   }
     * })
     * 
    **/
    delete<T extends segnalazione_geticoDeleteArgs>(
      args: SelectSubset<T, segnalazione_geticoDeleteArgs>
    ): Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T>>

    /**
     * Update one Segnalazione_getico.
     * @param {segnalazione_geticoUpdateArgs} args - Arguments to update one Segnalazione_getico.
     * @example
     * // Update one Segnalazione_getico
     * const segnalazione_getico = await prisma.segnalazione_getico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends segnalazione_geticoUpdateArgs>(
      args: SelectSubset<T, segnalazione_geticoUpdateArgs>
    ): Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T>>

    /**
     * Delete zero or more Segnalazione_geticos.
     * @param {segnalazione_geticoDeleteManyArgs} args - Arguments to filter Segnalazione_geticos to delete.
     * @example
     * // Delete a few Segnalazione_geticos
     * const { count } = await prisma.segnalazione_getico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends segnalazione_geticoDeleteManyArgs>(
      args?: SelectSubset<T, segnalazione_geticoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Segnalazione_geticos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazione_geticoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Segnalazione_geticos
     * const segnalazione_getico = await prisma.segnalazione_getico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends segnalazione_geticoUpdateManyArgs>(
      args: SelectSubset<T, segnalazione_geticoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Segnalazione_getico.
     * @param {segnalazione_geticoUpsertArgs} args - Arguments to update or create a Segnalazione_getico.
     * @example
     * // Update or create a Segnalazione_getico
     * const segnalazione_getico = await prisma.segnalazione_getico.upsert({
     *   create: {
     *     // ... data to create a Segnalazione_getico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Segnalazione_getico we want to update
     *   }
     * })
    **/
    upsert<T extends segnalazione_geticoUpsertArgs>(
      args: SelectSubset<T, segnalazione_geticoUpsertArgs>
    ): Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T>>

    /**
     * Count the number of Segnalazione_geticos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazione_geticoCountArgs} args - Arguments to filter Segnalazione_geticos to count.
     * @example
     * // Count the number of Segnalazione_geticos
     * const count = await prisma.segnalazione_getico.count({
     *   where: {
     *     // ... the filter for the Segnalazione_geticos we want to count
     *   }
     * })
    **/
    count<T extends segnalazione_geticoCountArgs>(
      args?: Subset<T, segnalazione_geticoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Segnalazione_geticoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Segnalazione_getico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Segnalazione_geticoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Segnalazione_geticoAggregateArgs>(args: Subset<T, Segnalazione_geticoAggregateArgs>): Prisma.PrismaPromise<GetSegnalazione_geticoAggregateType<T>>

    /**
     * Group by Segnalazione_getico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Segnalazione_geticoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Segnalazione_geticoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Segnalazione_geticoGroupByArgs['orderBy'] }
        : { orderBy?: Segnalazione_geticoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Segnalazione_geticoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSegnalazione_geticoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for segnalazione_getico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__segnalazione_geticoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    registrorichiedente<T extends segnalazione_getico$registrorichiedenteArgs= {}>(args?: Subset<T, segnalazione_getico$registrorichiedenteArgs>): Prisma.PrismaPromise<Array<registrorichiedenteGetPayload<T>>| Null>;

    segnalazione<T extends segnalazione_getico$segnalazioneArgs= {}>(args?: Subset<T, segnalazione_getico$segnalazioneArgs>): Prisma.PrismaPromise<Array<segnalazioneGetPayload<T>>| Null>;

    segnalazionestorico<T extends segnalazione_getico$segnalazionestoricoArgs= {}>(args?: Subset<T, segnalazione_getico$segnalazionestoricoArgs>): Prisma.PrismaPromise<Array<segnalazionestoricoGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * segnalazione_getico base type for findUnique actions
   */
  export type segnalazione_geticoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the segnalazione_getico
     */
    select?: segnalazione_geticoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazione_geticoInclude | null
    /**
     * Filter, which segnalazione_getico to fetch.
     */
    where: segnalazione_geticoWhereUniqueInput
  }

  /**
   * segnalazione_getico findUnique
   */
  export interface segnalazione_geticoFindUniqueArgs extends segnalazione_geticoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * segnalazione_getico findUniqueOrThrow
   */
  export type segnalazione_geticoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the segnalazione_getico
     */
    select?: segnalazione_geticoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazione_geticoInclude | null
    /**
     * Filter, which segnalazione_getico to fetch.
     */
    where: segnalazione_geticoWhereUniqueInput
  }


  /**
   * segnalazione_getico base type for findFirst actions
   */
  export type segnalazione_geticoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the segnalazione_getico
     */
    select?: segnalazione_geticoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazione_geticoInclude | null
    /**
     * Filter, which segnalazione_getico to fetch.
     */
    where?: segnalazione_geticoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalazione_geticos to fetch.
     */
    orderBy?: Enumerable<segnalazione_geticoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for segnalazione_geticos.
     */
    cursor?: segnalazione_geticoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalazione_geticos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalazione_geticos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of segnalazione_geticos.
     */
    distinct?: Enumerable<Segnalazione_geticoScalarFieldEnum>
  }

  /**
   * segnalazione_getico findFirst
   */
  export interface segnalazione_geticoFindFirstArgs extends segnalazione_geticoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * segnalazione_getico findFirstOrThrow
   */
  export type segnalazione_geticoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the segnalazione_getico
     */
    select?: segnalazione_geticoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazione_geticoInclude | null
    /**
     * Filter, which segnalazione_getico to fetch.
     */
    where?: segnalazione_geticoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalazione_geticos to fetch.
     */
    orderBy?: Enumerable<segnalazione_geticoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for segnalazione_geticos.
     */
    cursor?: segnalazione_geticoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalazione_geticos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalazione_geticos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of segnalazione_geticos.
     */
    distinct?: Enumerable<Segnalazione_geticoScalarFieldEnum>
  }


  /**
   * segnalazione_getico findMany
   */
  export type segnalazione_geticoFindManyArgs = {
    /**
     * Select specific fields to fetch from the segnalazione_getico
     */
    select?: segnalazione_geticoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazione_geticoInclude | null
    /**
     * Filter, which segnalazione_geticos to fetch.
     */
    where?: segnalazione_geticoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalazione_geticos to fetch.
     */
    orderBy?: Enumerable<segnalazione_geticoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing segnalazione_geticos.
     */
    cursor?: segnalazione_geticoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalazione_geticos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalazione_geticos.
     */
    skip?: number
    distinct?: Enumerable<Segnalazione_geticoScalarFieldEnum>
  }


  /**
   * segnalazione_getico create
   */
  export type segnalazione_geticoCreateArgs = {
    /**
     * Select specific fields to fetch from the segnalazione_getico
     */
    select?: segnalazione_geticoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazione_geticoInclude | null
    /**
     * The data needed to create a segnalazione_getico.
     */
    data: XOR<segnalazione_geticoCreateInput, segnalazione_geticoUncheckedCreateInput>
  }


  /**
   * segnalazione_getico createMany
   */
  export type segnalazione_geticoCreateManyArgs = {
    /**
     * The data used to create many segnalazione_geticos.
     */
    data: Enumerable<segnalazione_geticoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * segnalazione_getico update
   */
  export type segnalazione_geticoUpdateArgs = {
    /**
     * Select specific fields to fetch from the segnalazione_getico
     */
    select?: segnalazione_geticoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazione_geticoInclude | null
    /**
     * The data needed to update a segnalazione_getico.
     */
    data: XOR<segnalazione_geticoUpdateInput, segnalazione_geticoUncheckedUpdateInput>
    /**
     * Choose, which segnalazione_getico to update.
     */
    where: segnalazione_geticoWhereUniqueInput
  }


  /**
   * segnalazione_getico updateMany
   */
  export type segnalazione_geticoUpdateManyArgs = {
    /**
     * The data used to update segnalazione_geticos.
     */
    data: XOR<segnalazione_geticoUpdateManyMutationInput, segnalazione_geticoUncheckedUpdateManyInput>
    /**
     * Filter which segnalazione_geticos to update
     */
    where?: segnalazione_geticoWhereInput
  }


  /**
   * segnalazione_getico upsert
   */
  export type segnalazione_geticoUpsertArgs = {
    /**
     * Select specific fields to fetch from the segnalazione_getico
     */
    select?: segnalazione_geticoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazione_geticoInclude | null
    /**
     * The filter to search for the segnalazione_getico to update in case it exists.
     */
    where: segnalazione_geticoWhereUniqueInput
    /**
     * In case the segnalazione_getico found by the `where` argument doesn't exist, create a new segnalazione_getico with this data.
     */
    create: XOR<segnalazione_geticoCreateInput, segnalazione_geticoUncheckedCreateInput>
    /**
     * In case the segnalazione_getico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<segnalazione_geticoUpdateInput, segnalazione_geticoUncheckedUpdateInput>
  }


  /**
   * segnalazione_getico delete
   */
  export type segnalazione_geticoDeleteArgs = {
    /**
     * Select specific fields to fetch from the segnalazione_getico
     */
    select?: segnalazione_geticoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazione_geticoInclude | null
    /**
     * Filter which segnalazione_getico to delete.
     */
    where: segnalazione_geticoWhereUniqueInput
  }


  /**
   * segnalazione_getico deleteMany
   */
  export type segnalazione_geticoDeleteManyArgs = {
    /**
     * Filter which segnalazione_geticos to delete
     */
    where?: segnalazione_geticoWhereInput
  }


  /**
   * segnalazione_getico.registrorichiedente
   */
  export type segnalazione_getico$registrorichiedenteArgs = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    where?: registrorichiedenteWhereInput
    orderBy?: Enumerable<registrorichiedenteOrderByWithRelationInput>
    cursor?: registrorichiedenteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<RegistrorichiedenteScalarFieldEnum>
  }


  /**
   * segnalazione_getico.segnalazione
   */
  export type segnalazione_getico$segnalazioneArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    where?: segnalazioneWhereInput
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    cursor?: segnalazioneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * segnalazione_getico.segnalazionestorico
   */
  export type segnalazione_getico$segnalazionestoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    where?: segnalazionestoricoWhereInput
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    cursor?: segnalazionestoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * segnalazione_getico without action
   */
  export type segnalazione_geticoArgs = {
    /**
     * Select specific fields to fetch from the segnalazione_getico
     */
    select?: segnalazione_geticoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazione_geticoInclude | null
  }



  /**
   * Model segnalazionestatostorico
   */


  export type AggregateSegnalazionestatostorico = {
    _count: SegnalazionestatostoricoCountAggregateOutputType | null
    _avg: SegnalazionestatostoricoAvgAggregateOutputType | null
    _sum: SegnalazionestatostoricoSumAggregateOutputType | null
    _min: SegnalazionestatostoricoMinAggregateOutputType | null
    _max: SegnalazionestatostoricoMaxAggregateOutputType | null
  }

  export type SegnalazionestatostoricoAvgAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idSegnalazione: number | null
    idUtente: number | null
  }

  export type SegnalazionestatostoricoSumAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idSegnalazione: number | null
    idUtente: number | null
  }

  export type SegnalazionestatostoricoMinAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idSegnalazione: number | null
    idUtente: number | null
    dataModifica: string | null
    stato: string | null
    notaStato: string | null
  }

  export type SegnalazionestatostoricoMaxAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idSegnalazione: number | null
    idUtente: number | null
    dataModifica: string | null
    stato: string | null
    notaStato: string | null
  }

  export type SegnalazionestatostoricoCountAggregateOutputType = {
    id: number
    idAppalto: number
    idSegnalazione: number
    idUtente: number
    dataModifica: number
    stato: number
    notaStato: number
    _all: number
  }


  export type SegnalazionestatostoricoAvgAggregateInputType = {
    id?: true
    idAppalto?: true
    idSegnalazione?: true
    idUtente?: true
  }

  export type SegnalazionestatostoricoSumAggregateInputType = {
    id?: true
    idAppalto?: true
    idSegnalazione?: true
    idUtente?: true
  }

  export type SegnalazionestatostoricoMinAggregateInputType = {
    id?: true
    idAppalto?: true
    idSegnalazione?: true
    idUtente?: true
    dataModifica?: true
    stato?: true
    notaStato?: true
  }

  export type SegnalazionestatostoricoMaxAggregateInputType = {
    id?: true
    idAppalto?: true
    idSegnalazione?: true
    idUtente?: true
    dataModifica?: true
    stato?: true
    notaStato?: true
  }

  export type SegnalazionestatostoricoCountAggregateInputType = {
    id?: true
    idAppalto?: true
    idSegnalazione?: true
    idUtente?: true
    dataModifica?: true
    stato?: true
    notaStato?: true
    _all?: true
  }

  export type SegnalazionestatostoricoAggregateArgs = {
    /**
     * Filter which segnalazionestatostorico to aggregate.
     */
    where?: segnalazionestatostoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalazionestatostoricos to fetch.
     */
    orderBy?: Enumerable<segnalazionestatostoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: segnalazionestatostoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalazionestatostoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalazionestatostoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned segnalazionestatostoricos
    **/
    _count?: true | SegnalazionestatostoricoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SegnalazionestatostoricoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SegnalazionestatostoricoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SegnalazionestatostoricoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SegnalazionestatostoricoMaxAggregateInputType
  }

  export type GetSegnalazionestatostoricoAggregateType<T extends SegnalazionestatostoricoAggregateArgs> = {
        [P in keyof T & keyof AggregateSegnalazionestatostorico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSegnalazionestatostorico[P]>
      : GetScalarType<T[P], AggregateSegnalazionestatostorico[P]>
  }




  export type SegnalazionestatostoricoGroupByArgs = {
    where?: segnalazionestatostoricoWhereInput
    orderBy?: Enumerable<segnalazionestatostoricoOrderByWithAggregationInput>
    by: SegnalazionestatostoricoScalarFieldEnum[]
    having?: segnalazionestatostoricoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SegnalazionestatostoricoCountAggregateInputType | true
    _avg?: SegnalazionestatostoricoAvgAggregateInputType
    _sum?: SegnalazionestatostoricoSumAggregateInputType
    _min?: SegnalazionestatostoricoMinAggregateInputType
    _max?: SegnalazionestatostoricoMaxAggregateInputType
  }


  export type SegnalazionestatostoricoGroupByOutputType = {
    id: number
    idAppalto: number | null
    idSegnalazione: number | null
    idUtente: number | null
    dataModifica: string | null
    stato: string | null
    notaStato: string | null
    _count: SegnalazionestatostoricoCountAggregateOutputType | null
    _avg: SegnalazionestatostoricoAvgAggregateOutputType | null
    _sum: SegnalazionestatostoricoSumAggregateOutputType | null
    _min: SegnalazionestatostoricoMinAggregateOutputType | null
    _max: SegnalazionestatostoricoMaxAggregateOutputType | null
  }

  type GetSegnalazionestatostoricoGroupByPayload<T extends SegnalazionestatostoricoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<SegnalazionestatostoricoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SegnalazionestatostoricoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SegnalazionestatostoricoGroupByOutputType[P]>
            : GetScalarType<T[P], SegnalazionestatostoricoGroupByOutputType[P]>
        }
      >
    >


  export type segnalazionestatostoricoSelect = {
    id?: boolean
    idAppalto?: boolean
    idSegnalazione?: boolean
    idUtente?: boolean
    dataModifica?: boolean
    stato?: boolean
    notaStato?: boolean
    segnalazione?: boolean | segnalazioneArgs
    utenti?: boolean | utentiArgs
  }


  export type segnalazionestatostoricoInclude = {
    segnalazione?: boolean | segnalazioneArgs
    utenti?: boolean | utentiArgs
  }

  export type segnalazionestatostoricoGetPayload<S extends boolean | null | undefined | segnalazionestatostoricoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? segnalazionestatostorico :
    S extends undefined ? never :
    S extends { include: any } & (segnalazionestatostoricoArgs | segnalazionestatostoricoFindManyArgs)
    ? segnalazionestatostorico  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'segnalazione' ? segnalazioneGetPayload<S['include'][P]> | null :
        P extends 'utenti' ? utentiGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (segnalazionestatostoricoArgs | segnalazionestatostoricoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'segnalazione' ? segnalazioneGetPayload<S['select'][P]> | null :
        P extends 'utenti' ? utentiGetPayload<S['select'][P]> | null :  P extends keyof segnalazionestatostorico ? segnalazionestatostorico[P] : never
  } 
      : segnalazionestatostorico


  type segnalazionestatostoricoCountArgs = 
    Omit<segnalazionestatostoricoFindManyArgs, 'select' | 'include'> & {
      select?: SegnalazionestatostoricoCountAggregateInputType | true
    }

  export interface segnalazionestatostoricoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Segnalazionestatostorico that matches the filter.
     * @param {segnalazionestatostoricoFindUniqueArgs} args - Arguments to find a Segnalazionestatostorico
     * @example
     * // Get one Segnalazionestatostorico
     * const segnalazionestatostorico = await prisma.segnalazionestatostorico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends segnalazionestatostoricoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, segnalazionestatostoricoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'segnalazionestatostorico'> extends True ? Prisma__segnalazionestatostoricoClient<segnalazionestatostoricoGetPayload<T>> : Prisma__segnalazionestatostoricoClient<segnalazionestatostoricoGetPayload<T> | null, null>

    /**
     * Find one Segnalazionestatostorico that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {segnalazionestatostoricoFindUniqueOrThrowArgs} args - Arguments to find a Segnalazionestatostorico
     * @example
     * // Get one Segnalazionestatostorico
     * const segnalazionestatostorico = await prisma.segnalazionestatostorico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends segnalazionestatostoricoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, segnalazionestatostoricoFindUniqueOrThrowArgs>
    ): Prisma__segnalazionestatostoricoClient<segnalazionestatostoricoGetPayload<T>>

    /**
     * Find the first Segnalazionestatostorico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazionestatostoricoFindFirstArgs} args - Arguments to find a Segnalazionestatostorico
     * @example
     * // Get one Segnalazionestatostorico
     * const segnalazionestatostorico = await prisma.segnalazionestatostorico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends segnalazionestatostoricoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, segnalazionestatostoricoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'segnalazionestatostorico'> extends True ? Prisma__segnalazionestatostoricoClient<segnalazionestatostoricoGetPayload<T>> : Prisma__segnalazionestatostoricoClient<segnalazionestatostoricoGetPayload<T> | null, null>

    /**
     * Find the first Segnalazionestatostorico that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazionestatostoricoFindFirstOrThrowArgs} args - Arguments to find a Segnalazionestatostorico
     * @example
     * // Get one Segnalazionestatostorico
     * const segnalazionestatostorico = await prisma.segnalazionestatostorico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends segnalazionestatostoricoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, segnalazionestatostoricoFindFirstOrThrowArgs>
    ): Prisma__segnalazionestatostoricoClient<segnalazionestatostoricoGetPayload<T>>

    /**
     * Find zero or more Segnalazionestatostoricos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazionestatostoricoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Segnalazionestatostoricos
     * const segnalazionestatostoricos = await prisma.segnalazionestatostorico.findMany()
     * 
     * // Get first 10 Segnalazionestatostoricos
     * const segnalazionestatostoricos = await prisma.segnalazionestatostorico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const segnalazionestatostoricoWithIdOnly = await prisma.segnalazionestatostorico.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends segnalazionestatostoricoFindManyArgs>(
      args?: SelectSubset<T, segnalazionestatostoricoFindManyArgs>
    ): Prisma.PrismaPromise<Array<segnalazionestatostoricoGetPayload<T>>>

    /**
     * Create a Segnalazionestatostorico.
     * @param {segnalazionestatostoricoCreateArgs} args - Arguments to create a Segnalazionestatostorico.
     * @example
     * // Create one Segnalazionestatostorico
     * const Segnalazionestatostorico = await prisma.segnalazionestatostorico.create({
     *   data: {
     *     // ... data to create a Segnalazionestatostorico
     *   }
     * })
     * 
    **/
    create<T extends segnalazionestatostoricoCreateArgs>(
      args: SelectSubset<T, segnalazionestatostoricoCreateArgs>
    ): Prisma__segnalazionestatostoricoClient<segnalazionestatostoricoGetPayload<T>>

    /**
     * Create many Segnalazionestatostoricos.
     *     @param {segnalazionestatostoricoCreateManyArgs} args - Arguments to create many Segnalazionestatostoricos.
     *     @example
     *     // Create many Segnalazionestatostoricos
     *     const segnalazionestatostorico = await prisma.segnalazionestatostorico.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends segnalazionestatostoricoCreateManyArgs>(
      args?: SelectSubset<T, segnalazionestatostoricoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Segnalazionestatostorico.
     * @param {segnalazionestatostoricoDeleteArgs} args - Arguments to delete one Segnalazionestatostorico.
     * @example
     * // Delete one Segnalazionestatostorico
     * const Segnalazionestatostorico = await prisma.segnalazionestatostorico.delete({
     *   where: {
     *     // ... filter to delete one Segnalazionestatostorico
     *   }
     * })
     * 
    **/
    delete<T extends segnalazionestatostoricoDeleteArgs>(
      args: SelectSubset<T, segnalazionestatostoricoDeleteArgs>
    ): Prisma__segnalazionestatostoricoClient<segnalazionestatostoricoGetPayload<T>>

    /**
     * Update one Segnalazionestatostorico.
     * @param {segnalazionestatostoricoUpdateArgs} args - Arguments to update one Segnalazionestatostorico.
     * @example
     * // Update one Segnalazionestatostorico
     * const segnalazionestatostorico = await prisma.segnalazionestatostorico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends segnalazionestatostoricoUpdateArgs>(
      args: SelectSubset<T, segnalazionestatostoricoUpdateArgs>
    ): Prisma__segnalazionestatostoricoClient<segnalazionestatostoricoGetPayload<T>>

    /**
     * Delete zero or more Segnalazionestatostoricos.
     * @param {segnalazionestatostoricoDeleteManyArgs} args - Arguments to filter Segnalazionestatostoricos to delete.
     * @example
     * // Delete a few Segnalazionestatostoricos
     * const { count } = await prisma.segnalazionestatostorico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends segnalazionestatostoricoDeleteManyArgs>(
      args?: SelectSubset<T, segnalazionestatostoricoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Segnalazionestatostoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazionestatostoricoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Segnalazionestatostoricos
     * const segnalazionestatostorico = await prisma.segnalazionestatostorico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends segnalazionestatostoricoUpdateManyArgs>(
      args: SelectSubset<T, segnalazionestatostoricoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Segnalazionestatostorico.
     * @param {segnalazionestatostoricoUpsertArgs} args - Arguments to update or create a Segnalazionestatostorico.
     * @example
     * // Update or create a Segnalazionestatostorico
     * const segnalazionestatostorico = await prisma.segnalazionestatostorico.upsert({
     *   create: {
     *     // ... data to create a Segnalazionestatostorico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Segnalazionestatostorico we want to update
     *   }
     * })
    **/
    upsert<T extends segnalazionestatostoricoUpsertArgs>(
      args: SelectSubset<T, segnalazionestatostoricoUpsertArgs>
    ): Prisma__segnalazionestatostoricoClient<segnalazionestatostoricoGetPayload<T>>

    /**
     * Count the number of Segnalazionestatostoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazionestatostoricoCountArgs} args - Arguments to filter Segnalazionestatostoricos to count.
     * @example
     * // Count the number of Segnalazionestatostoricos
     * const count = await prisma.segnalazionestatostorico.count({
     *   where: {
     *     // ... the filter for the Segnalazionestatostoricos we want to count
     *   }
     * })
    **/
    count<T extends segnalazionestatostoricoCountArgs>(
      args?: Subset<T, segnalazionestatostoricoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SegnalazionestatostoricoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Segnalazionestatostorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegnalazionestatostoricoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SegnalazionestatostoricoAggregateArgs>(args: Subset<T, SegnalazionestatostoricoAggregateArgs>): Prisma.PrismaPromise<GetSegnalazionestatostoricoAggregateType<T>>

    /**
     * Group by Segnalazionestatostorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegnalazionestatostoricoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SegnalazionestatostoricoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SegnalazionestatostoricoGroupByArgs['orderBy'] }
        : { orderBy?: SegnalazionestatostoricoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SegnalazionestatostoricoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSegnalazionestatostoricoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for segnalazionestatostorico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__segnalazionestatostoricoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    segnalazione<T extends segnalazioneArgs= {}>(args?: Subset<T, segnalazioneArgs>): Prisma__segnalazioneClient<segnalazioneGetPayload<T> | Null>;

    utenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * segnalazionestatostorico base type for findUnique actions
   */
  export type segnalazionestatostoricoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the segnalazionestatostorico
     */
    select?: segnalazionestatostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestatostoricoInclude | null
    /**
     * Filter, which segnalazionestatostorico to fetch.
     */
    where: segnalazionestatostoricoWhereUniqueInput
  }

  /**
   * segnalazionestatostorico findUnique
   */
  export interface segnalazionestatostoricoFindUniqueArgs extends segnalazionestatostoricoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * segnalazionestatostorico findUniqueOrThrow
   */
  export type segnalazionestatostoricoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestatostorico
     */
    select?: segnalazionestatostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestatostoricoInclude | null
    /**
     * Filter, which segnalazionestatostorico to fetch.
     */
    where: segnalazionestatostoricoWhereUniqueInput
  }


  /**
   * segnalazionestatostorico base type for findFirst actions
   */
  export type segnalazionestatostoricoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the segnalazionestatostorico
     */
    select?: segnalazionestatostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestatostoricoInclude | null
    /**
     * Filter, which segnalazionestatostorico to fetch.
     */
    where?: segnalazionestatostoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalazionestatostoricos to fetch.
     */
    orderBy?: Enumerable<segnalazionestatostoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for segnalazionestatostoricos.
     */
    cursor?: segnalazionestatostoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalazionestatostoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalazionestatostoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of segnalazionestatostoricos.
     */
    distinct?: Enumerable<SegnalazionestatostoricoScalarFieldEnum>
  }

  /**
   * segnalazionestatostorico findFirst
   */
  export interface segnalazionestatostoricoFindFirstArgs extends segnalazionestatostoricoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * segnalazionestatostorico findFirstOrThrow
   */
  export type segnalazionestatostoricoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestatostorico
     */
    select?: segnalazionestatostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestatostoricoInclude | null
    /**
     * Filter, which segnalazionestatostorico to fetch.
     */
    where?: segnalazionestatostoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalazionestatostoricos to fetch.
     */
    orderBy?: Enumerable<segnalazionestatostoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for segnalazionestatostoricos.
     */
    cursor?: segnalazionestatostoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalazionestatostoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalazionestatostoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of segnalazionestatostoricos.
     */
    distinct?: Enumerable<SegnalazionestatostoricoScalarFieldEnum>
  }


  /**
   * segnalazionestatostorico findMany
   */
  export type segnalazionestatostoricoFindManyArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestatostorico
     */
    select?: segnalazionestatostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestatostoricoInclude | null
    /**
     * Filter, which segnalazionestatostoricos to fetch.
     */
    where?: segnalazionestatostoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalazionestatostoricos to fetch.
     */
    orderBy?: Enumerable<segnalazionestatostoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing segnalazionestatostoricos.
     */
    cursor?: segnalazionestatostoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalazionestatostoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalazionestatostoricos.
     */
    skip?: number
    distinct?: Enumerable<SegnalazionestatostoricoScalarFieldEnum>
  }


  /**
   * segnalazionestatostorico create
   */
  export type segnalazionestatostoricoCreateArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestatostorico
     */
    select?: segnalazionestatostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestatostoricoInclude | null
    /**
     * The data needed to create a segnalazionestatostorico.
     */
    data: XOR<segnalazionestatostoricoCreateInput, segnalazionestatostoricoUncheckedCreateInput>
  }


  /**
   * segnalazionestatostorico createMany
   */
  export type segnalazionestatostoricoCreateManyArgs = {
    /**
     * The data used to create many segnalazionestatostoricos.
     */
    data: Enumerable<segnalazionestatostoricoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * segnalazionestatostorico update
   */
  export type segnalazionestatostoricoUpdateArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestatostorico
     */
    select?: segnalazionestatostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestatostoricoInclude | null
    /**
     * The data needed to update a segnalazionestatostorico.
     */
    data: XOR<segnalazionestatostoricoUpdateInput, segnalazionestatostoricoUncheckedUpdateInput>
    /**
     * Choose, which segnalazionestatostorico to update.
     */
    where: segnalazionestatostoricoWhereUniqueInput
  }


  /**
   * segnalazionestatostorico updateMany
   */
  export type segnalazionestatostoricoUpdateManyArgs = {
    /**
     * The data used to update segnalazionestatostoricos.
     */
    data: XOR<segnalazionestatostoricoUpdateManyMutationInput, segnalazionestatostoricoUncheckedUpdateManyInput>
    /**
     * Filter which segnalazionestatostoricos to update
     */
    where?: segnalazionestatostoricoWhereInput
  }


  /**
   * segnalazionestatostorico upsert
   */
  export type segnalazionestatostoricoUpsertArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestatostorico
     */
    select?: segnalazionestatostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestatostoricoInclude | null
    /**
     * The filter to search for the segnalazionestatostorico to update in case it exists.
     */
    where: segnalazionestatostoricoWhereUniqueInput
    /**
     * In case the segnalazionestatostorico found by the `where` argument doesn't exist, create a new segnalazionestatostorico with this data.
     */
    create: XOR<segnalazionestatostoricoCreateInput, segnalazionestatostoricoUncheckedCreateInput>
    /**
     * In case the segnalazionestatostorico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<segnalazionestatostoricoUpdateInput, segnalazionestatostoricoUncheckedUpdateInput>
  }


  /**
   * segnalazionestatostorico delete
   */
  export type segnalazionestatostoricoDeleteArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestatostorico
     */
    select?: segnalazionestatostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestatostoricoInclude | null
    /**
     * Filter which segnalazionestatostorico to delete.
     */
    where: segnalazionestatostoricoWhereUniqueInput
  }


  /**
   * segnalazionestatostorico deleteMany
   */
  export type segnalazionestatostoricoDeleteManyArgs = {
    /**
     * Filter which segnalazionestatostoricos to delete
     */
    where?: segnalazionestatostoricoWhereInput
  }


  /**
   * segnalazionestatostorico without action
   */
  export type segnalazionestatostoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestatostorico
     */
    select?: segnalazionestatostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestatostoricoInclude | null
  }



  /**
   * Model segnalazionestorico
   */


  export type AggregateSegnalazionestorico = {
    _count: SegnalazionestoricoCountAggregateOutputType | null
    _avg: SegnalazionestoricoAvgAggregateOutputType | null
    _sum: SegnalazionestoricoSumAggregateOutputType | null
    _min: SegnalazionestoricoMinAggregateOutputType | null
    _max: SegnalazionestoricoMaxAggregateOutputType | null
  }

  export type SegnalazionestoricoAvgAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idSegnalazione: number | null
    segnalatori: number | null
    idEvento: number | null
    idPratica: number | null
    idUtente: number | null
    idUtenteStato: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    categoriaAnomalia: number | null
    dettaglioAnomalia: number | null
    severitaEvento: number | null
    tipoEvento: number | null
    idSegnalazioneGetico: number | null
    idTecnico: number | null
    idTipoProvvedimento: number | null
  }

  export type SegnalazionestoricoSumAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idSegnalazione: number | null
    segnalatori: number[] | null
    idEvento: number | null
    idPratica: number | null
    idUtente: number | null
    idUtenteStato: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    categoriaAnomalia: number | null
    dettaglioAnomalia: number | null
    severitaEvento: number | null
    tipoEvento: number | null
    idSegnalazioneGetico: number | null
    idTecnico: number | null
    idTipoProvvedimento: number | null
  }

  export type SegnalazionestoricoMinAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idSegnalazione: number | null
    noteSegnalatore: string | null
    dataCreazione: string | null
    dataModifica: string | null
    dataRichiesta: string | null
    localizzazioneDichiarata: string | null
    localizzazioneNote: string | null
    descrizioneAnomalia: string | null
    commentoAnomalia: string | null
    idEvento: number | null
    idPratica: number | null
    dataModificaStato: string | null
    stato: string | null
    notaStato: string | null
    flgCambioStato: string | null
    idUtente: number | null
    idUtenteStato: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    categoriaAnomalia: number | null
    dettaglioAnomalia: number | null
    severitaEvento: number | null
    tipoEvento: number | null
    idLavoroAssociato: string | null
    statoCorrenteSegnalazione: string | null
    idSegnalazioneGetico: number | null
    sottoservizi: string | null
    sinistri: string | null
    richiestaSopralluogo: string | null
    delOggettiCatasto: string | null
    idTecnico: number | null
    numeroProvvedimento: string | null
    dataChiusura: string | null
    localizzazioneDichiarataQuartiere: string | null
    localizzazioneDichiarataCivico: string | null
    del: string | null
    idTipoProvvedimento: number | null
  }

  export type SegnalazionestoricoMaxAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idSegnalazione: number | null
    noteSegnalatore: string | null
    dataCreazione: string | null
    dataModifica: string | null
    dataRichiesta: string | null
    localizzazioneDichiarata: string | null
    localizzazioneNote: string | null
    descrizioneAnomalia: string | null
    commentoAnomalia: string | null
    idEvento: number | null
    idPratica: number | null
    dataModificaStato: string | null
    stato: string | null
    notaStato: string | null
    flgCambioStato: string | null
    idUtente: number | null
    idUtenteStato: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    categoriaAnomalia: number | null
    dettaglioAnomalia: number | null
    severitaEvento: number | null
    tipoEvento: number | null
    idLavoroAssociato: string | null
    statoCorrenteSegnalazione: string | null
    idSegnalazioneGetico: number | null
    sottoservizi: string | null
    sinistri: string | null
    richiestaSopralluogo: string | null
    delOggettiCatasto: string | null
    idTecnico: number | null
    numeroProvvedimento: string | null
    dataChiusura: string | null
    localizzazioneDichiarataQuartiere: string | null
    localizzazioneDichiarataCivico: string | null
    del: string | null
    idTipoProvvedimento: number | null
  }

  export type SegnalazionestoricoCountAggregateOutputType = {
    id: number
    idAppalto: number
    idSegnalazione: number
    noteSegnalatore: number
    segnalatori: number
    dataCreazione: number
    dataModifica: number
    dataRichiesta: number
    localizzazioneDichiarata: number
    localizzazioneNote: number
    descrizioneAnomalia: number
    commentoAnomalia: number
    idEvento: number
    idPratica: number
    dataModificaStato: number
    stato: number
    notaStato: number
    flgCambioStato: number
    idUtente: number
    idUtenteStato: number
    idSegnalatore: number
    fonteSegnalazione: number
    categoriaAnomalia: number
    dettaglioAnomalia: number
    severitaEvento: number
    tipoEvento: number
    idLavoroAssociato: number
    statoCorrenteSegnalazione: number
    idSegnalazioneGetico: number
    sottoservizi: number
    sinistri: number
    richiestaSopralluogo: number
    delOggettiCatasto: number
    idTecnico: number
    numeroProvvedimento: number
    dataChiusura: number
    localizzazioneDichiarataQuartiere: number
    localizzazioneDichiarataCivico: number
    del: number
    idTipoProvvedimento: number
    _all: number
  }


  export type SegnalazionestoricoAvgAggregateInputType = {
    id?: true
    idAppalto?: true
    idSegnalazione?: true
    segnalatori?: true
    idEvento?: true
    idPratica?: true
    idUtente?: true
    idUtenteStato?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    categoriaAnomalia?: true
    dettaglioAnomalia?: true
    severitaEvento?: true
    tipoEvento?: true
    idSegnalazioneGetico?: true
    idTecnico?: true
    idTipoProvvedimento?: true
  }

  export type SegnalazionestoricoSumAggregateInputType = {
    id?: true
    idAppalto?: true
    idSegnalazione?: true
    segnalatori?: true
    idEvento?: true
    idPratica?: true
    idUtente?: true
    idUtenteStato?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    categoriaAnomalia?: true
    dettaglioAnomalia?: true
    severitaEvento?: true
    tipoEvento?: true
    idSegnalazioneGetico?: true
    idTecnico?: true
    idTipoProvvedimento?: true
  }

  export type SegnalazionestoricoMinAggregateInputType = {
    id?: true
    idAppalto?: true
    idSegnalazione?: true
    noteSegnalatore?: true
    dataCreazione?: true
    dataModifica?: true
    dataRichiesta?: true
    localizzazioneDichiarata?: true
    localizzazioneNote?: true
    descrizioneAnomalia?: true
    commentoAnomalia?: true
    idEvento?: true
    idPratica?: true
    dataModificaStato?: true
    stato?: true
    notaStato?: true
    flgCambioStato?: true
    idUtente?: true
    idUtenteStato?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    categoriaAnomalia?: true
    dettaglioAnomalia?: true
    severitaEvento?: true
    tipoEvento?: true
    idLavoroAssociato?: true
    statoCorrenteSegnalazione?: true
    idSegnalazioneGetico?: true
    sottoservizi?: true
    sinistri?: true
    richiestaSopralluogo?: true
    delOggettiCatasto?: true
    idTecnico?: true
    numeroProvvedimento?: true
    dataChiusura?: true
    localizzazioneDichiarataQuartiere?: true
    localizzazioneDichiarataCivico?: true
    del?: true
    idTipoProvvedimento?: true
  }

  export type SegnalazionestoricoMaxAggregateInputType = {
    id?: true
    idAppalto?: true
    idSegnalazione?: true
    noteSegnalatore?: true
    dataCreazione?: true
    dataModifica?: true
    dataRichiesta?: true
    localizzazioneDichiarata?: true
    localizzazioneNote?: true
    descrizioneAnomalia?: true
    commentoAnomalia?: true
    idEvento?: true
    idPratica?: true
    dataModificaStato?: true
    stato?: true
    notaStato?: true
    flgCambioStato?: true
    idUtente?: true
    idUtenteStato?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    categoriaAnomalia?: true
    dettaglioAnomalia?: true
    severitaEvento?: true
    tipoEvento?: true
    idLavoroAssociato?: true
    statoCorrenteSegnalazione?: true
    idSegnalazioneGetico?: true
    sottoservizi?: true
    sinistri?: true
    richiestaSopralluogo?: true
    delOggettiCatasto?: true
    idTecnico?: true
    numeroProvvedimento?: true
    dataChiusura?: true
    localizzazioneDichiarataQuartiere?: true
    localizzazioneDichiarataCivico?: true
    del?: true
    idTipoProvvedimento?: true
  }

  export type SegnalazionestoricoCountAggregateInputType = {
    id?: true
    idAppalto?: true
    idSegnalazione?: true
    noteSegnalatore?: true
    segnalatori?: true
    dataCreazione?: true
    dataModifica?: true
    dataRichiesta?: true
    localizzazioneDichiarata?: true
    localizzazioneNote?: true
    descrizioneAnomalia?: true
    commentoAnomalia?: true
    idEvento?: true
    idPratica?: true
    dataModificaStato?: true
    stato?: true
    notaStato?: true
    flgCambioStato?: true
    idUtente?: true
    idUtenteStato?: true
    idSegnalatore?: true
    fonteSegnalazione?: true
    categoriaAnomalia?: true
    dettaglioAnomalia?: true
    severitaEvento?: true
    tipoEvento?: true
    idLavoroAssociato?: true
    statoCorrenteSegnalazione?: true
    idSegnalazioneGetico?: true
    sottoservizi?: true
    sinistri?: true
    richiestaSopralluogo?: true
    delOggettiCatasto?: true
    idTecnico?: true
    numeroProvvedimento?: true
    dataChiusura?: true
    localizzazioneDichiarataQuartiere?: true
    localizzazioneDichiarataCivico?: true
    del?: true
    idTipoProvvedimento?: true
    _all?: true
  }

  export type SegnalazionestoricoAggregateArgs = {
    /**
     * Filter which segnalazionestorico to aggregate.
     */
    where?: segnalazionestoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalazionestoricos to fetch.
     */
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: segnalazionestoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalazionestoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalazionestoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned segnalazionestoricos
    **/
    _count?: true | SegnalazionestoricoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SegnalazionestoricoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SegnalazionestoricoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SegnalazionestoricoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SegnalazionestoricoMaxAggregateInputType
  }

  export type GetSegnalazionestoricoAggregateType<T extends SegnalazionestoricoAggregateArgs> = {
        [P in keyof T & keyof AggregateSegnalazionestorico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSegnalazionestorico[P]>
      : GetScalarType<T[P], AggregateSegnalazionestorico[P]>
  }




  export type SegnalazionestoricoGroupByArgs = {
    where?: segnalazionestoricoWhereInput
    orderBy?: Enumerable<segnalazionestoricoOrderByWithAggregationInput>
    by: SegnalazionestoricoScalarFieldEnum[]
    having?: segnalazionestoricoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SegnalazionestoricoCountAggregateInputType | true
    _avg?: SegnalazionestoricoAvgAggregateInputType
    _sum?: SegnalazionestoricoSumAggregateInputType
    _min?: SegnalazionestoricoMinAggregateInputType
    _max?: SegnalazionestoricoMaxAggregateInputType
  }


  export type SegnalazionestoricoGroupByOutputType = {
    id: number
    idAppalto: number | null
    idSegnalazione: number | null
    noteSegnalatore: string | null
    segnalatori: number[]
    dataCreazione: string | null
    dataModifica: string | null
    dataRichiesta: string | null
    localizzazioneDichiarata: string | null
    localizzazioneNote: string | null
    descrizioneAnomalia: string | null
    commentoAnomalia: string | null
    idEvento: number | null
    idPratica: number | null
    dataModificaStato: string | null
    stato: string | null
    notaStato: string | null
    flgCambioStato: string | null
    idUtente: number | null
    idUtenteStato: number | null
    idSegnalatore: number | null
    fonteSegnalazione: number | null
    categoriaAnomalia: number | null
    dettaglioAnomalia: number | null
    severitaEvento: number | null
    tipoEvento: number | null
    idLavoroAssociato: string | null
    statoCorrenteSegnalazione: string | null
    idSegnalazioneGetico: number | null
    sottoservizi: string | null
    sinistri: string | null
    richiestaSopralluogo: string | null
    delOggettiCatasto: string | null
    idTecnico: number | null
    numeroProvvedimento: string | null
    dataChiusura: string | null
    localizzazioneDichiarataQuartiere: string | null
    localizzazioneDichiarataCivico: string | null
    del: string | null
    idTipoProvvedimento: number | null
    _count: SegnalazionestoricoCountAggregateOutputType | null
    _avg: SegnalazionestoricoAvgAggregateOutputType | null
    _sum: SegnalazionestoricoSumAggregateOutputType | null
    _min: SegnalazionestoricoMinAggregateOutputType | null
    _max: SegnalazionestoricoMaxAggregateOutputType | null
  }

  type GetSegnalazionestoricoGroupByPayload<T extends SegnalazionestoricoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<SegnalazionestoricoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SegnalazionestoricoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SegnalazionestoricoGroupByOutputType[P]>
            : GetScalarType<T[P], SegnalazionestoricoGroupByOutputType[P]>
        }
      >
    >


  export type segnalazionestoricoSelect = {
    id?: boolean
    idAppalto?: boolean
    idSegnalazione?: boolean
    noteSegnalatore?: boolean
    segnalatori?: boolean
    dataCreazione?: boolean
    dataModifica?: boolean
    dataRichiesta?: boolean
    localizzazioneDichiarata?: boolean
    localizzazioneNote?: boolean
    descrizioneAnomalia?: boolean
    commentoAnomalia?: boolean
    idEvento?: boolean
    idPratica?: boolean
    dataModificaStato?: boolean
    stato?: boolean
    notaStato?: boolean
    flgCambioStato?: boolean
    idUtente?: boolean
    idUtenteStato?: boolean
    idSegnalatore?: boolean
    fonteSegnalazione?: boolean
    categoriaAnomalia?: boolean
    dettaglioAnomalia?: boolean
    severitaEvento?: boolean
    tipoEvento?: boolean
    idLavoroAssociato?: boolean
    statoCorrenteSegnalazione?: boolean
    idSegnalazioneGetico?: boolean
    sottoservizi?: boolean
    sinistri?: boolean
    richiestaSopralluogo?: boolean
    delOggettiCatasto?: boolean
    idTecnico?: boolean
    numeroProvvedimento?: boolean
    dataChiusura?: boolean
    localizzazioneDichiarataQuartiere?: boolean
    localizzazioneDichiarataCivico?: boolean
    del?: boolean
    idTipoProvvedimento?: boolean
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategoriaanomalia?: boolean | sottocategoriaanomaliaArgs
    fonti?: boolean | fontiArgs
    segnalatore?: boolean | segnalatoreArgs
    segnalazione_getico?: boolean | segnalazione_geticoArgs
    tecnici?: boolean | tecniciArgs
    tipoprovvedimento?: boolean | tipoprovvedimentoArgs
    utenti_segnalazionestorico_idUtenteStatoToutenti?: boolean | utentiArgs
    utenti_segnalazionestorico_idUtenteToutenti?: boolean | utentiArgs
    tiposeverita?: boolean | tiposeveritaArgs
    tipoevento?: boolean | tipoeventoArgs
  }


  export type segnalazionestoricoInclude = {
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategoriaanomalia?: boolean | sottocategoriaanomaliaArgs
    fonti?: boolean | fontiArgs
    segnalatore?: boolean | segnalatoreArgs
    segnalazione_getico?: boolean | segnalazione_geticoArgs
    tecnici?: boolean | tecniciArgs
    tipoprovvedimento?: boolean | tipoprovvedimentoArgs
    utenti_segnalazionestorico_idUtenteStatoToutenti?: boolean | utentiArgs
    utenti_segnalazionestorico_idUtenteToutenti?: boolean | utentiArgs
    tiposeverita?: boolean | tiposeveritaArgs
    tipoevento?: boolean | tipoeventoArgs
  }

  export type segnalazionestoricoGetPayload<S extends boolean | null | undefined | segnalazionestoricoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? segnalazionestorico :
    S extends undefined ? never :
    S extends { include: any } & (segnalazionestoricoArgs | segnalazionestoricoFindManyArgs)
    ? segnalazionestorico  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['include'][P]> | null :
        P extends 'sottocategoriaanomalia' ? sottocategoriaanomaliaGetPayload<S['include'][P]> | null :
        P extends 'fonti' ? fontiGetPayload<S['include'][P]> | null :
        P extends 'segnalatore' ? segnalatoreGetPayload<S['include'][P]> | null :
        P extends 'segnalazione_getico' ? segnalazione_geticoGetPayload<S['include'][P]> | null :
        P extends 'tecnici' ? tecniciGetPayload<S['include'][P]> | null :
        P extends 'tipoprovvedimento' ? tipoprovvedimentoGetPayload<S['include'][P]> | null :
        P extends 'utenti_segnalazionestorico_idUtenteStatoToutenti' ? utentiGetPayload<S['include'][P]> | null :
        P extends 'utenti_segnalazionestorico_idUtenteToutenti' ? utentiGetPayload<S['include'][P]> | null :
        P extends 'tiposeverita' ? tiposeveritaGetPayload<S['include'][P]> | null :
        P extends 'tipoevento' ? tipoeventoGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (segnalazionestoricoArgs | segnalazionestoricoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['select'][P]> | null :
        P extends 'sottocategoriaanomalia' ? sottocategoriaanomaliaGetPayload<S['select'][P]> | null :
        P extends 'fonti' ? fontiGetPayload<S['select'][P]> | null :
        P extends 'segnalatore' ? segnalatoreGetPayload<S['select'][P]> | null :
        P extends 'segnalazione_getico' ? segnalazione_geticoGetPayload<S['select'][P]> | null :
        P extends 'tecnici' ? tecniciGetPayload<S['select'][P]> | null :
        P extends 'tipoprovvedimento' ? tipoprovvedimentoGetPayload<S['select'][P]> | null :
        P extends 'utenti_segnalazionestorico_idUtenteStatoToutenti' ? utentiGetPayload<S['select'][P]> | null :
        P extends 'utenti_segnalazionestorico_idUtenteToutenti' ? utentiGetPayload<S['select'][P]> | null :
        P extends 'tiposeverita' ? tiposeveritaGetPayload<S['select'][P]> | null :
        P extends 'tipoevento' ? tipoeventoGetPayload<S['select'][P]> | null :  P extends keyof segnalazionestorico ? segnalazionestorico[P] : never
  } 
      : segnalazionestorico


  type segnalazionestoricoCountArgs = 
    Omit<segnalazionestoricoFindManyArgs, 'select' | 'include'> & {
      select?: SegnalazionestoricoCountAggregateInputType | true
    }

  export interface segnalazionestoricoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Segnalazionestorico that matches the filter.
     * @param {segnalazionestoricoFindUniqueArgs} args - Arguments to find a Segnalazionestorico
     * @example
     * // Get one Segnalazionestorico
     * const segnalazionestorico = await prisma.segnalazionestorico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends segnalazionestoricoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, segnalazionestoricoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'segnalazionestorico'> extends True ? Prisma__segnalazionestoricoClient<segnalazionestoricoGetPayload<T>> : Prisma__segnalazionestoricoClient<segnalazionestoricoGetPayload<T> | null, null>

    /**
     * Find one Segnalazionestorico that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {segnalazionestoricoFindUniqueOrThrowArgs} args - Arguments to find a Segnalazionestorico
     * @example
     * // Get one Segnalazionestorico
     * const segnalazionestorico = await prisma.segnalazionestorico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends segnalazionestoricoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, segnalazionestoricoFindUniqueOrThrowArgs>
    ): Prisma__segnalazionestoricoClient<segnalazionestoricoGetPayload<T>>

    /**
     * Find the first Segnalazionestorico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazionestoricoFindFirstArgs} args - Arguments to find a Segnalazionestorico
     * @example
     * // Get one Segnalazionestorico
     * const segnalazionestorico = await prisma.segnalazionestorico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends segnalazionestoricoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, segnalazionestoricoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'segnalazionestorico'> extends True ? Prisma__segnalazionestoricoClient<segnalazionestoricoGetPayload<T>> : Prisma__segnalazionestoricoClient<segnalazionestoricoGetPayload<T> | null, null>

    /**
     * Find the first Segnalazionestorico that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazionestoricoFindFirstOrThrowArgs} args - Arguments to find a Segnalazionestorico
     * @example
     * // Get one Segnalazionestorico
     * const segnalazionestorico = await prisma.segnalazionestorico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends segnalazionestoricoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, segnalazionestoricoFindFirstOrThrowArgs>
    ): Prisma__segnalazionestoricoClient<segnalazionestoricoGetPayload<T>>

    /**
     * Find zero or more Segnalazionestoricos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazionestoricoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Segnalazionestoricos
     * const segnalazionestoricos = await prisma.segnalazionestorico.findMany()
     * 
     * // Get first 10 Segnalazionestoricos
     * const segnalazionestoricos = await prisma.segnalazionestorico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const segnalazionestoricoWithIdOnly = await prisma.segnalazionestorico.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends segnalazionestoricoFindManyArgs>(
      args?: SelectSubset<T, segnalazionestoricoFindManyArgs>
    ): Prisma.PrismaPromise<Array<segnalazionestoricoGetPayload<T>>>

    /**
     * Create a Segnalazionestorico.
     * @param {segnalazionestoricoCreateArgs} args - Arguments to create a Segnalazionestorico.
     * @example
     * // Create one Segnalazionestorico
     * const Segnalazionestorico = await prisma.segnalazionestorico.create({
     *   data: {
     *     // ... data to create a Segnalazionestorico
     *   }
     * })
     * 
    **/
    create<T extends segnalazionestoricoCreateArgs>(
      args: SelectSubset<T, segnalazionestoricoCreateArgs>
    ): Prisma__segnalazionestoricoClient<segnalazionestoricoGetPayload<T>>

    /**
     * Create many Segnalazionestoricos.
     *     @param {segnalazionestoricoCreateManyArgs} args - Arguments to create many Segnalazionestoricos.
     *     @example
     *     // Create many Segnalazionestoricos
     *     const segnalazionestorico = await prisma.segnalazionestorico.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends segnalazionestoricoCreateManyArgs>(
      args?: SelectSubset<T, segnalazionestoricoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Segnalazionestorico.
     * @param {segnalazionestoricoDeleteArgs} args - Arguments to delete one Segnalazionestorico.
     * @example
     * // Delete one Segnalazionestorico
     * const Segnalazionestorico = await prisma.segnalazionestorico.delete({
     *   where: {
     *     // ... filter to delete one Segnalazionestorico
     *   }
     * })
     * 
    **/
    delete<T extends segnalazionestoricoDeleteArgs>(
      args: SelectSubset<T, segnalazionestoricoDeleteArgs>
    ): Prisma__segnalazionestoricoClient<segnalazionestoricoGetPayload<T>>

    /**
     * Update one Segnalazionestorico.
     * @param {segnalazionestoricoUpdateArgs} args - Arguments to update one Segnalazionestorico.
     * @example
     * // Update one Segnalazionestorico
     * const segnalazionestorico = await prisma.segnalazionestorico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends segnalazionestoricoUpdateArgs>(
      args: SelectSubset<T, segnalazionestoricoUpdateArgs>
    ): Prisma__segnalazionestoricoClient<segnalazionestoricoGetPayload<T>>

    /**
     * Delete zero or more Segnalazionestoricos.
     * @param {segnalazionestoricoDeleteManyArgs} args - Arguments to filter Segnalazionestoricos to delete.
     * @example
     * // Delete a few Segnalazionestoricos
     * const { count } = await prisma.segnalazionestorico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends segnalazionestoricoDeleteManyArgs>(
      args?: SelectSubset<T, segnalazionestoricoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Segnalazionestoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazionestoricoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Segnalazionestoricos
     * const segnalazionestorico = await prisma.segnalazionestorico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends segnalazionestoricoUpdateManyArgs>(
      args: SelectSubset<T, segnalazionestoricoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Segnalazionestorico.
     * @param {segnalazionestoricoUpsertArgs} args - Arguments to update or create a Segnalazionestorico.
     * @example
     * // Update or create a Segnalazionestorico
     * const segnalazionestorico = await prisma.segnalazionestorico.upsert({
     *   create: {
     *     // ... data to create a Segnalazionestorico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Segnalazionestorico we want to update
     *   }
     * })
    **/
    upsert<T extends segnalazionestoricoUpsertArgs>(
      args: SelectSubset<T, segnalazionestoricoUpsertArgs>
    ): Prisma__segnalazionestoricoClient<segnalazionestoricoGetPayload<T>>

    /**
     * Count the number of Segnalazionestoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {segnalazionestoricoCountArgs} args - Arguments to filter Segnalazionestoricos to count.
     * @example
     * // Count the number of Segnalazionestoricos
     * const count = await prisma.segnalazionestorico.count({
     *   where: {
     *     // ... the filter for the Segnalazionestoricos we want to count
     *   }
     * })
    **/
    count<T extends segnalazionestoricoCountArgs>(
      args?: Subset<T, segnalazionestoricoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SegnalazionestoricoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Segnalazionestorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegnalazionestoricoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SegnalazionestoricoAggregateArgs>(args: Subset<T, SegnalazionestoricoAggregateArgs>): Prisma.PrismaPromise<GetSegnalazionestoricoAggregateType<T>>

    /**
     * Group by Segnalazionestorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegnalazionestoricoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SegnalazionestoricoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SegnalazionestoricoGroupByArgs['orderBy'] }
        : { orderBy?: SegnalazionestoricoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SegnalazionestoricoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSegnalazionestoricoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for segnalazionestorico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__segnalazionestoricoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    categoriaanomalia<T extends categoriaanomaliaArgs= {}>(args?: Subset<T, categoriaanomaliaArgs>): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T> | Null>;

    sottocategoriaanomalia<T extends sottocategoriaanomaliaArgs= {}>(args?: Subset<T, sottocategoriaanomaliaArgs>): Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T> | Null>;

    fonti<T extends fontiArgs= {}>(args?: Subset<T, fontiArgs>): Prisma__fontiClient<fontiGetPayload<T> | Null>;

    segnalatore<T extends segnalatoreArgs= {}>(args?: Subset<T, segnalatoreArgs>): Prisma__segnalatoreClient<segnalatoreGetPayload<T> | Null>;

    segnalazione_getico<T extends segnalazione_geticoArgs= {}>(args?: Subset<T, segnalazione_geticoArgs>): Prisma__segnalazione_geticoClient<segnalazione_geticoGetPayload<T> | Null>;

    tecnici<T extends tecniciArgs= {}>(args?: Subset<T, tecniciArgs>): Prisma__tecniciClient<tecniciGetPayload<T> | Null>;

    tipoprovvedimento<T extends tipoprovvedimentoArgs= {}>(args?: Subset<T, tipoprovvedimentoArgs>): Prisma__tipoprovvedimentoClient<tipoprovvedimentoGetPayload<T> | Null>;

    utenti_segnalazionestorico_idUtenteStatoToutenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    utenti_segnalazionestorico_idUtenteToutenti<T extends utentiArgs= {}>(args?: Subset<T, utentiArgs>): Prisma__utentiClient<utentiGetPayload<T> | Null>;

    tiposeverita<T extends tiposeveritaArgs= {}>(args?: Subset<T, tiposeveritaArgs>): Prisma__tiposeveritaClient<tiposeveritaGetPayload<T> | Null>;

    tipoevento<T extends tipoeventoArgs= {}>(args?: Subset<T, tipoeventoArgs>): Prisma__tipoeventoClient<tipoeventoGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * segnalazionestorico base type for findUnique actions
   */
  export type segnalazionestoricoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    /**
     * Filter, which segnalazionestorico to fetch.
     */
    where: segnalazionestoricoWhereUniqueInput
  }

  /**
   * segnalazionestorico findUnique
   */
  export interface segnalazionestoricoFindUniqueArgs extends segnalazionestoricoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * segnalazionestorico findUniqueOrThrow
   */
  export type segnalazionestoricoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    /**
     * Filter, which segnalazionestorico to fetch.
     */
    where: segnalazionestoricoWhereUniqueInput
  }


  /**
   * segnalazionestorico base type for findFirst actions
   */
  export type segnalazionestoricoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    /**
     * Filter, which segnalazionestorico to fetch.
     */
    where?: segnalazionestoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalazionestoricos to fetch.
     */
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for segnalazionestoricos.
     */
    cursor?: segnalazionestoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalazionestoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalazionestoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of segnalazionestoricos.
     */
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }

  /**
   * segnalazionestorico findFirst
   */
  export interface segnalazionestoricoFindFirstArgs extends segnalazionestoricoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * segnalazionestorico findFirstOrThrow
   */
  export type segnalazionestoricoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    /**
     * Filter, which segnalazionestorico to fetch.
     */
    where?: segnalazionestoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalazionestoricos to fetch.
     */
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for segnalazionestoricos.
     */
    cursor?: segnalazionestoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalazionestoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalazionestoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of segnalazionestoricos.
     */
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * segnalazionestorico findMany
   */
  export type segnalazionestoricoFindManyArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    /**
     * Filter, which segnalazionestoricos to fetch.
     */
    where?: segnalazionestoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of segnalazionestoricos to fetch.
     */
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing segnalazionestoricos.
     */
    cursor?: segnalazionestoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` segnalazionestoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` segnalazionestoricos.
     */
    skip?: number
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * segnalazionestorico create
   */
  export type segnalazionestoricoCreateArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    /**
     * The data needed to create a segnalazionestorico.
     */
    data: XOR<segnalazionestoricoCreateInput, segnalazionestoricoUncheckedCreateInput>
  }


  /**
   * segnalazionestorico createMany
   */
  export type segnalazionestoricoCreateManyArgs = {
    /**
     * The data used to create many segnalazionestoricos.
     */
    data: Enumerable<segnalazionestoricoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * segnalazionestorico update
   */
  export type segnalazionestoricoUpdateArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    /**
     * The data needed to update a segnalazionestorico.
     */
    data: XOR<segnalazionestoricoUpdateInput, segnalazionestoricoUncheckedUpdateInput>
    /**
     * Choose, which segnalazionestorico to update.
     */
    where: segnalazionestoricoWhereUniqueInput
  }


  /**
   * segnalazionestorico updateMany
   */
  export type segnalazionestoricoUpdateManyArgs = {
    /**
     * The data used to update segnalazionestoricos.
     */
    data: XOR<segnalazionestoricoUpdateManyMutationInput, segnalazionestoricoUncheckedUpdateManyInput>
    /**
     * Filter which segnalazionestoricos to update
     */
    where?: segnalazionestoricoWhereInput
  }


  /**
   * segnalazionestorico upsert
   */
  export type segnalazionestoricoUpsertArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    /**
     * The filter to search for the segnalazionestorico to update in case it exists.
     */
    where: segnalazionestoricoWhereUniqueInput
    /**
     * In case the segnalazionestorico found by the `where` argument doesn't exist, create a new segnalazionestorico with this data.
     */
    create: XOR<segnalazionestoricoCreateInput, segnalazionestoricoUncheckedCreateInput>
    /**
     * In case the segnalazionestorico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<segnalazionestoricoUpdateInput, segnalazionestoricoUncheckedUpdateInput>
  }


  /**
   * segnalazionestorico delete
   */
  export type segnalazionestoricoDeleteArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    /**
     * Filter which segnalazionestorico to delete.
     */
    where: segnalazionestoricoWhereUniqueInput
  }


  /**
   * segnalazionestorico deleteMany
   */
  export type segnalazionestoricoDeleteManyArgs = {
    /**
     * Filter which segnalazionestoricos to delete
     */
    where?: segnalazionestoricoWhereInput
  }


  /**
   * segnalazionestorico without action
   */
  export type segnalazionestoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
  }



  /**
   * Model sottocategoriaanomalia
   */


  export type AggregateSottocategoriaanomalia = {
    _count: SottocategoriaanomaliaCountAggregateOutputType | null
    _avg: SottocategoriaanomaliaAvgAggregateOutputType | null
    _sum: SottocategoriaanomaliaSumAggregateOutputType | null
    _min: SottocategoriaanomaliaMinAggregateOutputType | null
    _max: SottocategoriaanomaliaMaxAggregateOutputType | null
  }

  export type SottocategoriaanomaliaAvgAggregateOutputType = {
    id: number | null
  }

  export type SottocategoriaanomaliaSumAggregateOutputType = {
    id: number | null
  }

  export type SottocategoriaanomaliaMinAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type SottocategoriaanomaliaMaxAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type SottocategoriaanomaliaCountAggregateOutputType = {
    id: number
    value: number
    _all: number
  }


  export type SottocategoriaanomaliaAvgAggregateInputType = {
    id?: true
  }

  export type SottocategoriaanomaliaSumAggregateInputType = {
    id?: true
  }

  export type SottocategoriaanomaliaMinAggregateInputType = {
    id?: true
    value?: true
  }

  export type SottocategoriaanomaliaMaxAggregateInputType = {
    id?: true
    value?: true
  }

  export type SottocategoriaanomaliaCountAggregateInputType = {
    id?: true
    value?: true
    _all?: true
  }

  export type SottocategoriaanomaliaAggregateArgs = {
    /**
     * Filter which sottocategoriaanomalia to aggregate.
     */
    where?: sottocategoriaanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sottocategoriaanomalias to fetch.
     */
    orderBy?: Enumerable<sottocategoriaanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sottocategoriaanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sottocategoriaanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sottocategoriaanomalias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sottocategoriaanomalias
    **/
    _count?: true | SottocategoriaanomaliaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SottocategoriaanomaliaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SottocategoriaanomaliaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SottocategoriaanomaliaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SottocategoriaanomaliaMaxAggregateInputType
  }

  export type GetSottocategoriaanomaliaAggregateType<T extends SottocategoriaanomaliaAggregateArgs> = {
        [P in keyof T & keyof AggregateSottocategoriaanomalia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSottocategoriaanomalia[P]>
      : GetScalarType<T[P], AggregateSottocategoriaanomalia[P]>
  }




  export type SottocategoriaanomaliaGroupByArgs = {
    where?: sottocategoriaanomaliaWhereInput
    orderBy?: Enumerable<sottocategoriaanomaliaOrderByWithAggregationInput>
    by: SottocategoriaanomaliaScalarFieldEnum[]
    having?: sottocategoriaanomaliaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SottocategoriaanomaliaCountAggregateInputType | true
    _avg?: SottocategoriaanomaliaAvgAggregateInputType
    _sum?: SottocategoriaanomaliaSumAggregateInputType
    _min?: SottocategoriaanomaliaMinAggregateInputType
    _max?: SottocategoriaanomaliaMaxAggregateInputType
  }


  export type SottocategoriaanomaliaGroupByOutputType = {
    id: number
    value: string | null
    _count: SottocategoriaanomaliaCountAggregateOutputType | null
    _avg: SottocategoriaanomaliaAvgAggregateOutputType | null
    _sum: SottocategoriaanomaliaSumAggregateOutputType | null
    _min: SottocategoriaanomaliaMinAggregateOutputType | null
    _max: SottocategoriaanomaliaMaxAggregateOutputType | null
  }

  type GetSottocategoriaanomaliaGroupByPayload<T extends SottocategoriaanomaliaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<SottocategoriaanomaliaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SottocategoriaanomaliaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SottocategoriaanomaliaGroupByOutputType[P]>
            : GetScalarType<T[P], SottocategoriaanomaliaGroupByOutputType[P]>
        }
      >
    >


  export type sottocategoriaanomaliaSelect = {
    id?: boolean
    value?: boolean
    categoriaanomalia_sottocategoriaanomalia?: boolean | sottocategoriaanomalia$categoriaanomalia_sottocategoriaanomaliaArgs
    segnalazione?: boolean | sottocategoriaanomalia$segnalazioneArgs
    segnalazionestorico?: boolean | sottocategoriaanomalia$segnalazionestoricoArgs
    sottocategoriaanomalia_sottocategorialavoro?: boolean | sottocategoriaanomalia$sottocategoriaanomalia_sottocategorialavoroArgs
    _count?: boolean | SottocategoriaanomaliaCountOutputTypeArgs
  }


  export type sottocategoriaanomaliaInclude = {
    categoriaanomalia_sottocategoriaanomalia?: boolean | sottocategoriaanomalia$categoriaanomalia_sottocategoriaanomaliaArgs
    segnalazione?: boolean | sottocategoriaanomalia$segnalazioneArgs
    segnalazionestorico?: boolean | sottocategoriaanomalia$segnalazionestoricoArgs
    sottocategoriaanomalia_sottocategorialavoro?: boolean | sottocategoriaanomalia$sottocategoriaanomalia_sottocategorialavoroArgs
    _count?: boolean | SottocategoriaanomaliaCountOutputTypeArgs
  }

  export type sottocategoriaanomaliaGetPayload<S extends boolean | null | undefined | sottocategoriaanomaliaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? sottocategoriaanomalia :
    S extends undefined ? never :
    S extends { include: any } & (sottocategoriaanomaliaArgs | sottocategoriaanomaliaFindManyArgs)
    ? sottocategoriaanomalia  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'categoriaanomalia_sottocategoriaanomalia' ? Array < categoriaanomalia_sottocategoriaanomaliaGetPayload<S['include'][P]>>  :
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['include'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['include'][P]>>  :
        P extends 'sottocategoriaanomalia_sottocategorialavoro' ? Array < sottocategoriaanomalia_sottocategorialavoroGetPayload<S['include'][P]>>  :
        P extends '_count' ? SottocategoriaanomaliaCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (sottocategoriaanomaliaArgs | sottocategoriaanomaliaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'categoriaanomalia_sottocategoriaanomalia' ? Array < categoriaanomalia_sottocategoriaanomaliaGetPayload<S['select'][P]>>  :
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['select'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['select'][P]>>  :
        P extends 'sottocategoriaanomalia_sottocategorialavoro' ? Array < sottocategoriaanomalia_sottocategorialavoroGetPayload<S['select'][P]>>  :
        P extends '_count' ? SottocategoriaanomaliaCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof sottocategoriaanomalia ? sottocategoriaanomalia[P] : never
  } 
      : sottocategoriaanomalia


  type sottocategoriaanomaliaCountArgs = 
    Omit<sottocategoriaanomaliaFindManyArgs, 'select' | 'include'> & {
      select?: SottocategoriaanomaliaCountAggregateInputType | true
    }

  export interface sottocategoriaanomaliaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Sottocategoriaanomalia that matches the filter.
     * @param {sottocategoriaanomaliaFindUniqueArgs} args - Arguments to find a Sottocategoriaanomalia
     * @example
     * // Get one Sottocategoriaanomalia
     * const sottocategoriaanomalia = await prisma.sottocategoriaanomalia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sottocategoriaanomaliaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sottocategoriaanomaliaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sottocategoriaanomalia'> extends True ? Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T>> : Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T> | null, null>

    /**
     * Find one Sottocategoriaanomalia that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {sottocategoriaanomaliaFindUniqueOrThrowArgs} args - Arguments to find a Sottocategoriaanomalia
     * @example
     * // Get one Sottocategoriaanomalia
     * const sottocategoriaanomalia = await prisma.sottocategoriaanomalia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sottocategoriaanomaliaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sottocategoriaanomaliaFindUniqueOrThrowArgs>
    ): Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T>>

    /**
     * Find the first Sottocategoriaanomalia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategoriaanomaliaFindFirstArgs} args - Arguments to find a Sottocategoriaanomalia
     * @example
     * // Get one Sottocategoriaanomalia
     * const sottocategoriaanomalia = await prisma.sottocategoriaanomalia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sottocategoriaanomaliaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sottocategoriaanomaliaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sottocategoriaanomalia'> extends True ? Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T>> : Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T> | null, null>

    /**
     * Find the first Sottocategoriaanomalia that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategoriaanomaliaFindFirstOrThrowArgs} args - Arguments to find a Sottocategoriaanomalia
     * @example
     * // Get one Sottocategoriaanomalia
     * const sottocategoriaanomalia = await prisma.sottocategoriaanomalia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sottocategoriaanomaliaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sottocategoriaanomaliaFindFirstOrThrowArgs>
    ): Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T>>

    /**
     * Find zero or more Sottocategoriaanomalias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategoriaanomaliaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sottocategoriaanomalias
     * const sottocategoriaanomalias = await prisma.sottocategoriaanomalia.findMany()
     * 
     * // Get first 10 Sottocategoriaanomalias
     * const sottocategoriaanomalias = await prisma.sottocategoriaanomalia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sottocategoriaanomaliaWithIdOnly = await prisma.sottocategoriaanomalia.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sottocategoriaanomaliaFindManyArgs>(
      args?: SelectSubset<T, sottocategoriaanomaliaFindManyArgs>
    ): Prisma.PrismaPromise<Array<sottocategoriaanomaliaGetPayload<T>>>

    /**
     * Create a Sottocategoriaanomalia.
     * @param {sottocategoriaanomaliaCreateArgs} args - Arguments to create a Sottocategoriaanomalia.
     * @example
     * // Create one Sottocategoriaanomalia
     * const Sottocategoriaanomalia = await prisma.sottocategoriaanomalia.create({
     *   data: {
     *     // ... data to create a Sottocategoriaanomalia
     *   }
     * })
     * 
    **/
    create<T extends sottocategoriaanomaliaCreateArgs>(
      args: SelectSubset<T, sottocategoriaanomaliaCreateArgs>
    ): Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T>>

    /**
     * Create many Sottocategoriaanomalias.
     *     @param {sottocategoriaanomaliaCreateManyArgs} args - Arguments to create many Sottocategoriaanomalias.
     *     @example
     *     // Create many Sottocategoriaanomalias
     *     const sottocategoriaanomalia = await prisma.sottocategoriaanomalia.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sottocategoriaanomaliaCreateManyArgs>(
      args?: SelectSubset<T, sottocategoriaanomaliaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sottocategoriaanomalia.
     * @param {sottocategoriaanomaliaDeleteArgs} args - Arguments to delete one Sottocategoriaanomalia.
     * @example
     * // Delete one Sottocategoriaanomalia
     * const Sottocategoriaanomalia = await prisma.sottocategoriaanomalia.delete({
     *   where: {
     *     // ... filter to delete one Sottocategoriaanomalia
     *   }
     * })
     * 
    **/
    delete<T extends sottocategoriaanomaliaDeleteArgs>(
      args: SelectSubset<T, sottocategoriaanomaliaDeleteArgs>
    ): Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T>>

    /**
     * Update one Sottocategoriaanomalia.
     * @param {sottocategoriaanomaliaUpdateArgs} args - Arguments to update one Sottocategoriaanomalia.
     * @example
     * // Update one Sottocategoriaanomalia
     * const sottocategoriaanomalia = await prisma.sottocategoriaanomalia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sottocategoriaanomaliaUpdateArgs>(
      args: SelectSubset<T, sottocategoriaanomaliaUpdateArgs>
    ): Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T>>

    /**
     * Delete zero or more Sottocategoriaanomalias.
     * @param {sottocategoriaanomaliaDeleteManyArgs} args - Arguments to filter Sottocategoriaanomalias to delete.
     * @example
     * // Delete a few Sottocategoriaanomalias
     * const { count } = await prisma.sottocategoriaanomalia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sottocategoriaanomaliaDeleteManyArgs>(
      args?: SelectSubset<T, sottocategoriaanomaliaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sottocategoriaanomalias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategoriaanomaliaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sottocategoriaanomalias
     * const sottocategoriaanomalia = await prisma.sottocategoriaanomalia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sottocategoriaanomaliaUpdateManyArgs>(
      args: SelectSubset<T, sottocategoriaanomaliaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sottocategoriaanomalia.
     * @param {sottocategoriaanomaliaUpsertArgs} args - Arguments to update or create a Sottocategoriaanomalia.
     * @example
     * // Update or create a Sottocategoriaanomalia
     * const sottocategoriaanomalia = await prisma.sottocategoriaanomalia.upsert({
     *   create: {
     *     // ... data to create a Sottocategoriaanomalia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sottocategoriaanomalia we want to update
     *   }
     * })
    **/
    upsert<T extends sottocategoriaanomaliaUpsertArgs>(
      args: SelectSubset<T, sottocategoriaanomaliaUpsertArgs>
    ): Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T>>

    /**
     * Count the number of Sottocategoriaanomalias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategoriaanomaliaCountArgs} args - Arguments to filter Sottocategoriaanomalias to count.
     * @example
     * // Count the number of Sottocategoriaanomalias
     * const count = await prisma.sottocategoriaanomalia.count({
     *   where: {
     *     // ... the filter for the Sottocategoriaanomalias we want to count
     *   }
     * })
    **/
    count<T extends sottocategoriaanomaliaCountArgs>(
      args?: Subset<T, sottocategoriaanomaliaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SottocategoriaanomaliaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sottocategoriaanomalia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SottocategoriaanomaliaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SottocategoriaanomaliaAggregateArgs>(args: Subset<T, SottocategoriaanomaliaAggregateArgs>): Prisma.PrismaPromise<GetSottocategoriaanomaliaAggregateType<T>>

    /**
     * Group by Sottocategoriaanomalia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SottocategoriaanomaliaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SottocategoriaanomaliaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SottocategoriaanomaliaGroupByArgs['orderBy'] }
        : { orderBy?: SottocategoriaanomaliaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SottocategoriaanomaliaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSottocategoriaanomaliaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sottocategoriaanomalia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sottocategoriaanomaliaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    categoriaanomalia_sottocategoriaanomalia<T extends sottocategoriaanomalia$categoriaanomalia_sottocategoriaanomaliaArgs= {}>(args?: Subset<T, sottocategoriaanomalia$categoriaanomalia_sottocategoriaanomaliaArgs>): Prisma.PrismaPromise<Array<categoriaanomalia_sottocategoriaanomaliaGetPayload<T>>| Null>;

    segnalazione<T extends sottocategoriaanomalia$segnalazioneArgs= {}>(args?: Subset<T, sottocategoriaanomalia$segnalazioneArgs>): Prisma.PrismaPromise<Array<segnalazioneGetPayload<T>>| Null>;

    segnalazionestorico<T extends sottocategoriaanomalia$segnalazionestoricoArgs= {}>(args?: Subset<T, sottocategoriaanomalia$segnalazionestoricoArgs>): Prisma.PrismaPromise<Array<segnalazionestoricoGetPayload<T>>| Null>;

    sottocategoriaanomalia_sottocategorialavoro<T extends sottocategoriaanomalia$sottocategoriaanomalia_sottocategorialavoroArgs= {}>(args?: Subset<T, sottocategoriaanomalia$sottocategoriaanomalia_sottocategorialavoroArgs>): Prisma.PrismaPromise<Array<sottocategoriaanomalia_sottocategorialavoroGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sottocategoriaanomalia base type for findUnique actions
   */
  export type sottocategoriaanomaliaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia
     */
    select?: sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomaliaInclude | null
    /**
     * Filter, which sottocategoriaanomalia to fetch.
     */
    where: sottocategoriaanomaliaWhereUniqueInput
  }

  /**
   * sottocategoriaanomalia findUnique
   */
  export interface sottocategoriaanomaliaFindUniqueArgs extends sottocategoriaanomaliaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sottocategoriaanomalia findUniqueOrThrow
   */
  export type sottocategoriaanomaliaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia
     */
    select?: sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomaliaInclude | null
    /**
     * Filter, which sottocategoriaanomalia to fetch.
     */
    where: sottocategoriaanomaliaWhereUniqueInput
  }


  /**
   * sottocategoriaanomalia base type for findFirst actions
   */
  export type sottocategoriaanomaliaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia
     */
    select?: sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomaliaInclude | null
    /**
     * Filter, which sottocategoriaanomalia to fetch.
     */
    where?: sottocategoriaanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sottocategoriaanomalias to fetch.
     */
    orderBy?: Enumerable<sottocategoriaanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sottocategoriaanomalias.
     */
    cursor?: sottocategoriaanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sottocategoriaanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sottocategoriaanomalias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sottocategoriaanomalias.
     */
    distinct?: Enumerable<SottocategoriaanomaliaScalarFieldEnum>
  }

  /**
   * sottocategoriaanomalia findFirst
   */
  export interface sottocategoriaanomaliaFindFirstArgs extends sottocategoriaanomaliaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sottocategoriaanomalia findFirstOrThrow
   */
  export type sottocategoriaanomaliaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia
     */
    select?: sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomaliaInclude | null
    /**
     * Filter, which sottocategoriaanomalia to fetch.
     */
    where?: sottocategoriaanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sottocategoriaanomalias to fetch.
     */
    orderBy?: Enumerable<sottocategoriaanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sottocategoriaanomalias.
     */
    cursor?: sottocategoriaanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sottocategoriaanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sottocategoriaanomalias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sottocategoriaanomalias.
     */
    distinct?: Enumerable<SottocategoriaanomaliaScalarFieldEnum>
  }


  /**
   * sottocategoriaanomalia findMany
   */
  export type sottocategoriaanomaliaFindManyArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia
     */
    select?: sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomaliaInclude | null
    /**
     * Filter, which sottocategoriaanomalias to fetch.
     */
    where?: sottocategoriaanomaliaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sottocategoriaanomalias to fetch.
     */
    orderBy?: Enumerable<sottocategoriaanomaliaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sottocategoriaanomalias.
     */
    cursor?: sottocategoriaanomaliaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sottocategoriaanomalias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sottocategoriaanomalias.
     */
    skip?: number
    distinct?: Enumerable<SottocategoriaanomaliaScalarFieldEnum>
  }


  /**
   * sottocategoriaanomalia create
   */
  export type sottocategoriaanomaliaCreateArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia
     */
    select?: sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomaliaInclude | null
    /**
     * The data needed to create a sottocategoriaanomalia.
     */
    data: XOR<sottocategoriaanomaliaCreateInput, sottocategoriaanomaliaUncheckedCreateInput>
  }


  /**
   * sottocategoriaanomalia createMany
   */
  export type sottocategoriaanomaliaCreateManyArgs = {
    /**
     * The data used to create many sottocategoriaanomalias.
     */
    data: Enumerable<sottocategoriaanomaliaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sottocategoriaanomalia update
   */
  export type sottocategoriaanomaliaUpdateArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia
     */
    select?: sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomaliaInclude | null
    /**
     * The data needed to update a sottocategoriaanomalia.
     */
    data: XOR<sottocategoriaanomaliaUpdateInput, sottocategoriaanomaliaUncheckedUpdateInput>
    /**
     * Choose, which sottocategoriaanomalia to update.
     */
    where: sottocategoriaanomaliaWhereUniqueInput
  }


  /**
   * sottocategoriaanomalia updateMany
   */
  export type sottocategoriaanomaliaUpdateManyArgs = {
    /**
     * The data used to update sottocategoriaanomalias.
     */
    data: XOR<sottocategoriaanomaliaUpdateManyMutationInput, sottocategoriaanomaliaUncheckedUpdateManyInput>
    /**
     * Filter which sottocategoriaanomalias to update
     */
    where?: sottocategoriaanomaliaWhereInput
  }


  /**
   * sottocategoriaanomalia upsert
   */
  export type sottocategoriaanomaliaUpsertArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia
     */
    select?: sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomaliaInclude | null
    /**
     * The filter to search for the sottocategoriaanomalia to update in case it exists.
     */
    where: sottocategoriaanomaliaWhereUniqueInput
    /**
     * In case the sottocategoriaanomalia found by the `where` argument doesn't exist, create a new sottocategoriaanomalia with this data.
     */
    create: XOR<sottocategoriaanomaliaCreateInput, sottocategoriaanomaliaUncheckedCreateInput>
    /**
     * In case the sottocategoriaanomalia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sottocategoriaanomaliaUpdateInput, sottocategoriaanomaliaUncheckedUpdateInput>
  }


  /**
   * sottocategoriaanomalia delete
   */
  export type sottocategoriaanomaliaDeleteArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia
     */
    select?: sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomaliaInclude | null
    /**
     * Filter which sottocategoriaanomalia to delete.
     */
    where: sottocategoriaanomaliaWhereUniqueInput
  }


  /**
   * sottocategoriaanomalia deleteMany
   */
  export type sottocategoriaanomaliaDeleteManyArgs = {
    /**
     * Filter which sottocategoriaanomalias to delete
     */
    where?: sottocategoriaanomaliaWhereInput
  }


  /**
   * sottocategoriaanomalia.categoriaanomalia_sottocategoriaanomalia
   */
  export type sottocategoriaanomalia$categoriaanomalia_sottocategoriaanomaliaArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategoriaanomalia
     */
    select?: categoriaanomalia_sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategoriaanomaliaInclude | null
    where?: categoriaanomalia_sottocategoriaanomaliaWhereInput
    orderBy?: Enumerable<categoriaanomalia_sottocategoriaanomaliaOrderByWithRelationInput>
    cursor?: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Categoriaanomalia_sottocategoriaanomaliaScalarFieldEnum>
  }


  /**
   * sottocategoriaanomalia.segnalazione
   */
  export type sottocategoriaanomalia$segnalazioneArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    where?: segnalazioneWhereInput
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    cursor?: segnalazioneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * sottocategoriaanomalia.segnalazionestorico
   */
  export type sottocategoriaanomalia$segnalazionestoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    where?: segnalazionestoricoWhereInput
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    cursor?: segnalazionestoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * sottocategoriaanomalia.sottocategoriaanomalia_sottocategorialavoro
   */
  export type sottocategoriaanomalia$sottocategoriaanomalia_sottocategorialavoroArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
    where?: sottocategoriaanomalia_sottocategorialavoroWhereInput
    orderBy?: Enumerable<sottocategoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    cursor?: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Sottocategoriaanomalia_sottocategorialavoroScalarFieldEnum>
  }


  /**
   * sottocategoriaanomalia without action
   */
  export type sottocategoriaanomaliaArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia
     */
    select?: sottocategoriaanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomaliaInclude | null
  }



  /**
   * Model sottocategoriaanomalia_sottocategorialavoro
   */


  export type AggregateSottocategoriaanomalia_sottocategorialavoro = {
    _count: Sottocategoriaanomalia_sottocategorialavoroCountAggregateOutputType | null
    _avg: Sottocategoriaanomalia_sottocategorialavoroAvgAggregateOutputType | null
    _sum: Sottocategoriaanomalia_sottocategorialavoroSumAggregateOutputType | null
    _min: Sottocategoriaanomalia_sottocategorialavoroMinAggregateOutputType | null
    _max: Sottocategoriaanomalia_sottocategorialavoroMaxAggregateOutputType | null
  }

  export type Sottocategoriaanomalia_sottocategorialavoroAvgAggregateOutputType = {
    id: number | null
    id_categoria_anomalia: number | null
    id_sottocategoria_anomalia: number | null
    id_sottocategoria_lavoro: number | null
  }

  export type Sottocategoriaanomalia_sottocategorialavoroSumAggregateOutputType = {
    id: number | null
    id_categoria_anomalia: number | null
    id_sottocategoria_anomalia: number | null
    id_sottocategoria_lavoro: number | null
  }

  export type Sottocategoriaanomalia_sottocategorialavoroMinAggregateOutputType = {
    id: number | null
    id_categoria_anomalia: number | null
    id_sottocategoria_anomalia: number | null
    id_sottocategoria_lavoro: number | null
  }

  export type Sottocategoriaanomalia_sottocategorialavoroMaxAggregateOutputType = {
    id: number | null
    id_categoria_anomalia: number | null
    id_sottocategoria_anomalia: number | null
    id_sottocategoria_lavoro: number | null
  }

  export type Sottocategoriaanomalia_sottocategorialavoroCountAggregateOutputType = {
    id: number
    id_categoria_anomalia: number
    id_sottocategoria_anomalia: number
    id_sottocategoria_lavoro: number
    _all: number
  }


  export type Sottocategoriaanomalia_sottocategorialavoroAvgAggregateInputType = {
    id?: true
    id_categoria_anomalia?: true
    id_sottocategoria_anomalia?: true
    id_sottocategoria_lavoro?: true
  }

  export type Sottocategoriaanomalia_sottocategorialavoroSumAggregateInputType = {
    id?: true
    id_categoria_anomalia?: true
    id_sottocategoria_anomalia?: true
    id_sottocategoria_lavoro?: true
  }

  export type Sottocategoriaanomalia_sottocategorialavoroMinAggregateInputType = {
    id?: true
    id_categoria_anomalia?: true
    id_sottocategoria_anomalia?: true
    id_sottocategoria_lavoro?: true
  }

  export type Sottocategoriaanomalia_sottocategorialavoroMaxAggregateInputType = {
    id?: true
    id_categoria_anomalia?: true
    id_sottocategoria_anomalia?: true
    id_sottocategoria_lavoro?: true
  }

  export type Sottocategoriaanomalia_sottocategorialavoroCountAggregateInputType = {
    id?: true
    id_categoria_anomalia?: true
    id_sottocategoria_anomalia?: true
    id_sottocategoria_lavoro?: true
    _all?: true
  }

  export type Sottocategoriaanomalia_sottocategorialavoroAggregateArgs = {
    /**
     * Filter which sottocategoriaanomalia_sottocategorialavoro to aggregate.
     */
    where?: sottocategoriaanomalia_sottocategorialavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sottocategoriaanomalia_sottocategorialavoros to fetch.
     */
    orderBy?: Enumerable<sottocategoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sottocategoriaanomalia_sottocategorialavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sottocategoriaanomalia_sottocategorialavoros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sottocategoriaanomalia_sottocategorialavoros
    **/
    _count?: true | Sottocategoriaanomalia_sottocategorialavoroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sottocategoriaanomalia_sottocategorialavoroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sottocategoriaanomalia_sottocategorialavoroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sottocategoriaanomalia_sottocategorialavoroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sottocategoriaanomalia_sottocategorialavoroMaxAggregateInputType
  }

  export type GetSottocategoriaanomalia_sottocategorialavoroAggregateType<T extends Sottocategoriaanomalia_sottocategorialavoroAggregateArgs> = {
        [P in keyof T & keyof AggregateSottocategoriaanomalia_sottocategorialavoro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSottocategoriaanomalia_sottocategorialavoro[P]>
      : GetScalarType<T[P], AggregateSottocategoriaanomalia_sottocategorialavoro[P]>
  }




  export type Sottocategoriaanomalia_sottocategorialavoroGroupByArgs = {
    where?: sottocategoriaanomalia_sottocategorialavoroWhereInput
    orderBy?: Enumerable<sottocategoriaanomalia_sottocategorialavoroOrderByWithAggregationInput>
    by: Sottocategoriaanomalia_sottocategorialavoroScalarFieldEnum[]
    having?: sottocategoriaanomalia_sottocategorialavoroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sottocategoriaanomalia_sottocategorialavoroCountAggregateInputType | true
    _avg?: Sottocategoriaanomalia_sottocategorialavoroAvgAggregateInputType
    _sum?: Sottocategoriaanomalia_sottocategorialavoroSumAggregateInputType
    _min?: Sottocategoriaanomalia_sottocategorialavoroMinAggregateInputType
    _max?: Sottocategoriaanomalia_sottocategorialavoroMaxAggregateInputType
  }


  export type Sottocategoriaanomalia_sottocategorialavoroGroupByOutputType = {
    id: number
    id_categoria_anomalia: number | null
    id_sottocategoria_anomalia: number | null
    id_sottocategoria_lavoro: number | null
    _count: Sottocategoriaanomalia_sottocategorialavoroCountAggregateOutputType | null
    _avg: Sottocategoriaanomalia_sottocategorialavoroAvgAggregateOutputType | null
    _sum: Sottocategoriaanomalia_sottocategorialavoroSumAggregateOutputType | null
    _min: Sottocategoriaanomalia_sottocategorialavoroMinAggregateOutputType | null
    _max: Sottocategoriaanomalia_sottocategorialavoroMaxAggregateOutputType | null
  }

  type GetSottocategoriaanomalia_sottocategorialavoroGroupByPayload<T extends Sottocategoriaanomalia_sottocategorialavoroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Sottocategoriaanomalia_sottocategorialavoroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sottocategoriaanomalia_sottocategorialavoroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sottocategoriaanomalia_sottocategorialavoroGroupByOutputType[P]>
            : GetScalarType<T[P], Sottocategoriaanomalia_sottocategorialavoroGroupByOutputType[P]>
        }
      >
    >


  export type sottocategoriaanomalia_sottocategorialavoroSelect = {
    id?: boolean
    id_categoria_anomalia?: boolean
    id_sottocategoria_anomalia?: boolean
    id_sottocategoria_lavoro?: boolean
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategoriaanomalia?: boolean | sottocategoriaanomaliaArgs
    sottocategorialavoro?: boolean | sottocategorialavoroArgs
  }


  export type sottocategoriaanomalia_sottocategorialavoroInclude = {
    categoriaanomalia?: boolean | categoriaanomaliaArgs
    sottocategoriaanomalia?: boolean | sottocategoriaanomaliaArgs
    sottocategorialavoro?: boolean | sottocategorialavoroArgs
  }

  export type sottocategoriaanomalia_sottocategorialavoroGetPayload<S extends boolean | null | undefined | sottocategoriaanomalia_sottocategorialavoroArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? sottocategoriaanomalia_sottocategorialavoro :
    S extends undefined ? never :
    S extends { include: any } & (sottocategoriaanomalia_sottocategorialavoroArgs | sottocategoriaanomalia_sottocategorialavoroFindManyArgs)
    ? sottocategoriaanomalia_sottocategorialavoro  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['include'][P]> | null :
        P extends 'sottocategoriaanomalia' ? sottocategoriaanomaliaGetPayload<S['include'][P]> | null :
        P extends 'sottocategorialavoro' ? sottocategorialavoroGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (sottocategoriaanomalia_sottocategorialavoroArgs | sottocategoriaanomalia_sottocategorialavoroFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'categoriaanomalia' ? categoriaanomaliaGetPayload<S['select'][P]> | null :
        P extends 'sottocategoriaanomalia' ? sottocategoriaanomaliaGetPayload<S['select'][P]> | null :
        P extends 'sottocategorialavoro' ? sottocategorialavoroGetPayload<S['select'][P]> | null :  P extends keyof sottocategoriaanomalia_sottocategorialavoro ? sottocategoriaanomalia_sottocategorialavoro[P] : never
  } 
      : sottocategoriaanomalia_sottocategorialavoro


  type sottocategoriaanomalia_sottocategorialavoroCountArgs = 
    Omit<sottocategoriaanomalia_sottocategorialavoroFindManyArgs, 'select' | 'include'> & {
      select?: Sottocategoriaanomalia_sottocategorialavoroCountAggregateInputType | true
    }

  export interface sottocategoriaanomalia_sottocategorialavoroDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Sottocategoriaanomalia_sottocategorialavoro that matches the filter.
     * @param {sottocategoriaanomalia_sottocategorialavoroFindUniqueArgs} args - Arguments to find a Sottocategoriaanomalia_sottocategorialavoro
     * @example
     * // Get one Sottocategoriaanomalia_sottocategorialavoro
     * const sottocategoriaanomalia_sottocategorialavoro = await prisma.sottocategoriaanomalia_sottocategorialavoro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sottocategoriaanomalia_sottocategorialavoroFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sottocategoriaanomalia_sottocategorialavoroFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sottocategoriaanomalia_sottocategorialavoro'> extends True ? Prisma__sottocategoriaanomalia_sottocategorialavoroClient<sottocategoriaanomalia_sottocategorialavoroGetPayload<T>> : Prisma__sottocategoriaanomalia_sottocategorialavoroClient<sottocategoriaanomalia_sottocategorialavoroGetPayload<T> | null, null>

    /**
     * Find one Sottocategoriaanomalia_sottocategorialavoro that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {sottocategoriaanomalia_sottocategorialavoroFindUniqueOrThrowArgs} args - Arguments to find a Sottocategoriaanomalia_sottocategorialavoro
     * @example
     * // Get one Sottocategoriaanomalia_sottocategorialavoro
     * const sottocategoriaanomalia_sottocategorialavoro = await prisma.sottocategoriaanomalia_sottocategorialavoro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sottocategoriaanomalia_sottocategorialavoroFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sottocategoriaanomalia_sottocategorialavoroFindUniqueOrThrowArgs>
    ): Prisma__sottocategoriaanomalia_sottocategorialavoroClient<sottocategoriaanomalia_sottocategorialavoroGetPayload<T>>

    /**
     * Find the first Sottocategoriaanomalia_sottocategorialavoro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategoriaanomalia_sottocategorialavoroFindFirstArgs} args - Arguments to find a Sottocategoriaanomalia_sottocategorialavoro
     * @example
     * // Get one Sottocategoriaanomalia_sottocategorialavoro
     * const sottocategoriaanomalia_sottocategorialavoro = await prisma.sottocategoriaanomalia_sottocategorialavoro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sottocategoriaanomalia_sottocategorialavoroFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sottocategoriaanomalia_sottocategorialavoroFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sottocategoriaanomalia_sottocategorialavoro'> extends True ? Prisma__sottocategoriaanomalia_sottocategorialavoroClient<sottocategoriaanomalia_sottocategorialavoroGetPayload<T>> : Prisma__sottocategoriaanomalia_sottocategorialavoroClient<sottocategoriaanomalia_sottocategorialavoroGetPayload<T> | null, null>

    /**
     * Find the first Sottocategoriaanomalia_sottocategorialavoro that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategoriaanomalia_sottocategorialavoroFindFirstOrThrowArgs} args - Arguments to find a Sottocategoriaanomalia_sottocategorialavoro
     * @example
     * // Get one Sottocategoriaanomalia_sottocategorialavoro
     * const sottocategoriaanomalia_sottocategorialavoro = await prisma.sottocategoriaanomalia_sottocategorialavoro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sottocategoriaanomalia_sottocategorialavoroFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sottocategoriaanomalia_sottocategorialavoroFindFirstOrThrowArgs>
    ): Prisma__sottocategoriaanomalia_sottocategorialavoroClient<sottocategoriaanomalia_sottocategorialavoroGetPayload<T>>

    /**
     * Find zero or more Sottocategoriaanomalia_sottocategorialavoros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategoriaanomalia_sottocategorialavoroFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sottocategoriaanomalia_sottocategorialavoros
     * const sottocategoriaanomalia_sottocategorialavoros = await prisma.sottocategoriaanomalia_sottocategorialavoro.findMany()
     * 
     * // Get first 10 Sottocategoriaanomalia_sottocategorialavoros
     * const sottocategoriaanomalia_sottocategorialavoros = await prisma.sottocategoriaanomalia_sottocategorialavoro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sottocategoriaanomalia_sottocategorialavoroWithIdOnly = await prisma.sottocategoriaanomalia_sottocategorialavoro.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sottocategoriaanomalia_sottocategorialavoroFindManyArgs>(
      args?: SelectSubset<T, sottocategoriaanomalia_sottocategorialavoroFindManyArgs>
    ): Prisma.PrismaPromise<Array<sottocategoriaanomalia_sottocategorialavoroGetPayload<T>>>

    /**
     * Create a Sottocategoriaanomalia_sottocategorialavoro.
     * @param {sottocategoriaanomalia_sottocategorialavoroCreateArgs} args - Arguments to create a Sottocategoriaanomalia_sottocategorialavoro.
     * @example
     * // Create one Sottocategoriaanomalia_sottocategorialavoro
     * const Sottocategoriaanomalia_sottocategorialavoro = await prisma.sottocategoriaanomalia_sottocategorialavoro.create({
     *   data: {
     *     // ... data to create a Sottocategoriaanomalia_sottocategorialavoro
     *   }
     * })
     * 
    **/
    create<T extends sottocategoriaanomalia_sottocategorialavoroCreateArgs>(
      args: SelectSubset<T, sottocategoriaanomalia_sottocategorialavoroCreateArgs>
    ): Prisma__sottocategoriaanomalia_sottocategorialavoroClient<sottocategoriaanomalia_sottocategorialavoroGetPayload<T>>

    /**
     * Create many Sottocategoriaanomalia_sottocategorialavoros.
     *     @param {sottocategoriaanomalia_sottocategorialavoroCreateManyArgs} args - Arguments to create many Sottocategoriaanomalia_sottocategorialavoros.
     *     @example
     *     // Create many Sottocategoriaanomalia_sottocategorialavoros
     *     const sottocategoriaanomalia_sottocategorialavoro = await prisma.sottocategoriaanomalia_sottocategorialavoro.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sottocategoriaanomalia_sottocategorialavoroCreateManyArgs>(
      args?: SelectSubset<T, sottocategoriaanomalia_sottocategorialavoroCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sottocategoriaanomalia_sottocategorialavoro.
     * @param {sottocategoriaanomalia_sottocategorialavoroDeleteArgs} args - Arguments to delete one Sottocategoriaanomalia_sottocategorialavoro.
     * @example
     * // Delete one Sottocategoriaanomalia_sottocategorialavoro
     * const Sottocategoriaanomalia_sottocategorialavoro = await prisma.sottocategoriaanomalia_sottocategorialavoro.delete({
     *   where: {
     *     // ... filter to delete one Sottocategoriaanomalia_sottocategorialavoro
     *   }
     * })
     * 
    **/
    delete<T extends sottocategoriaanomalia_sottocategorialavoroDeleteArgs>(
      args: SelectSubset<T, sottocategoriaanomalia_sottocategorialavoroDeleteArgs>
    ): Prisma__sottocategoriaanomalia_sottocategorialavoroClient<sottocategoriaanomalia_sottocategorialavoroGetPayload<T>>

    /**
     * Update one Sottocategoriaanomalia_sottocategorialavoro.
     * @param {sottocategoriaanomalia_sottocategorialavoroUpdateArgs} args - Arguments to update one Sottocategoriaanomalia_sottocategorialavoro.
     * @example
     * // Update one Sottocategoriaanomalia_sottocategorialavoro
     * const sottocategoriaanomalia_sottocategorialavoro = await prisma.sottocategoriaanomalia_sottocategorialavoro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sottocategoriaanomalia_sottocategorialavoroUpdateArgs>(
      args: SelectSubset<T, sottocategoriaanomalia_sottocategorialavoroUpdateArgs>
    ): Prisma__sottocategoriaanomalia_sottocategorialavoroClient<sottocategoriaanomalia_sottocategorialavoroGetPayload<T>>

    /**
     * Delete zero or more Sottocategoriaanomalia_sottocategorialavoros.
     * @param {sottocategoriaanomalia_sottocategorialavoroDeleteManyArgs} args - Arguments to filter Sottocategoriaanomalia_sottocategorialavoros to delete.
     * @example
     * // Delete a few Sottocategoriaanomalia_sottocategorialavoros
     * const { count } = await prisma.sottocategoriaanomalia_sottocategorialavoro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sottocategoriaanomalia_sottocategorialavoroDeleteManyArgs>(
      args?: SelectSubset<T, sottocategoriaanomalia_sottocategorialavoroDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sottocategoriaanomalia_sottocategorialavoros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategoriaanomalia_sottocategorialavoroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sottocategoriaanomalia_sottocategorialavoros
     * const sottocategoriaanomalia_sottocategorialavoro = await prisma.sottocategoriaanomalia_sottocategorialavoro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sottocategoriaanomalia_sottocategorialavoroUpdateManyArgs>(
      args: SelectSubset<T, sottocategoriaanomalia_sottocategorialavoroUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sottocategoriaanomalia_sottocategorialavoro.
     * @param {sottocategoriaanomalia_sottocategorialavoroUpsertArgs} args - Arguments to update or create a Sottocategoriaanomalia_sottocategorialavoro.
     * @example
     * // Update or create a Sottocategoriaanomalia_sottocategorialavoro
     * const sottocategoriaanomalia_sottocategorialavoro = await prisma.sottocategoriaanomalia_sottocategorialavoro.upsert({
     *   create: {
     *     // ... data to create a Sottocategoriaanomalia_sottocategorialavoro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sottocategoriaanomalia_sottocategorialavoro we want to update
     *   }
     * })
    **/
    upsert<T extends sottocategoriaanomalia_sottocategorialavoroUpsertArgs>(
      args: SelectSubset<T, sottocategoriaanomalia_sottocategorialavoroUpsertArgs>
    ): Prisma__sottocategoriaanomalia_sottocategorialavoroClient<sottocategoriaanomalia_sottocategorialavoroGetPayload<T>>

    /**
     * Count the number of Sottocategoriaanomalia_sottocategorialavoros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategoriaanomalia_sottocategorialavoroCountArgs} args - Arguments to filter Sottocategoriaanomalia_sottocategorialavoros to count.
     * @example
     * // Count the number of Sottocategoriaanomalia_sottocategorialavoros
     * const count = await prisma.sottocategoriaanomalia_sottocategorialavoro.count({
     *   where: {
     *     // ... the filter for the Sottocategoriaanomalia_sottocategorialavoros we want to count
     *   }
     * })
    **/
    count<T extends sottocategoriaanomalia_sottocategorialavoroCountArgs>(
      args?: Subset<T, sottocategoriaanomalia_sottocategorialavoroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sottocategoriaanomalia_sottocategorialavoroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sottocategoriaanomalia_sottocategorialavoro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sottocategoriaanomalia_sottocategorialavoroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sottocategoriaanomalia_sottocategorialavoroAggregateArgs>(args: Subset<T, Sottocategoriaanomalia_sottocategorialavoroAggregateArgs>): Prisma.PrismaPromise<GetSottocategoriaanomalia_sottocategorialavoroAggregateType<T>>

    /**
     * Group by Sottocategoriaanomalia_sottocategorialavoro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sottocategoriaanomalia_sottocategorialavoroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Sottocategoriaanomalia_sottocategorialavoroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Sottocategoriaanomalia_sottocategorialavoroGroupByArgs['orderBy'] }
        : { orderBy?: Sottocategoriaanomalia_sottocategorialavoroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Sottocategoriaanomalia_sottocategorialavoroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSottocategoriaanomalia_sottocategorialavoroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sottocategoriaanomalia_sottocategorialavoro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sottocategoriaanomalia_sottocategorialavoroClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    categoriaanomalia<T extends categoriaanomaliaArgs= {}>(args?: Subset<T, categoriaanomaliaArgs>): Prisma__categoriaanomaliaClient<categoriaanomaliaGetPayload<T> | Null>;

    sottocategoriaanomalia<T extends sottocategoriaanomaliaArgs= {}>(args?: Subset<T, sottocategoriaanomaliaArgs>): Prisma__sottocategoriaanomaliaClient<sottocategoriaanomaliaGetPayload<T> | Null>;

    sottocategorialavoro<T extends sottocategorialavoroArgs= {}>(args?: Subset<T, sottocategorialavoroArgs>): Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sottocategoriaanomalia_sottocategorialavoro base type for findUnique actions
   */
  export type sottocategoriaanomalia_sottocategorialavoroFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
    /**
     * Filter, which sottocategoriaanomalia_sottocategorialavoro to fetch.
     */
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
  }

  /**
   * sottocategoriaanomalia_sottocategorialavoro findUnique
   */
  export interface sottocategoriaanomalia_sottocategorialavoroFindUniqueArgs extends sottocategoriaanomalia_sottocategorialavoroFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sottocategoriaanomalia_sottocategorialavoro findUniqueOrThrow
   */
  export type sottocategoriaanomalia_sottocategorialavoroFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
    /**
     * Filter, which sottocategoriaanomalia_sottocategorialavoro to fetch.
     */
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
  }


  /**
   * sottocategoriaanomalia_sottocategorialavoro base type for findFirst actions
   */
  export type sottocategoriaanomalia_sottocategorialavoroFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
    /**
     * Filter, which sottocategoriaanomalia_sottocategorialavoro to fetch.
     */
    where?: sottocategoriaanomalia_sottocategorialavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sottocategoriaanomalia_sottocategorialavoros to fetch.
     */
    orderBy?: Enumerable<sottocategoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sottocategoriaanomalia_sottocategorialavoros.
     */
    cursor?: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sottocategoriaanomalia_sottocategorialavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sottocategoriaanomalia_sottocategorialavoros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sottocategoriaanomalia_sottocategorialavoros.
     */
    distinct?: Enumerable<Sottocategoriaanomalia_sottocategorialavoroScalarFieldEnum>
  }

  /**
   * sottocategoriaanomalia_sottocategorialavoro findFirst
   */
  export interface sottocategoriaanomalia_sottocategorialavoroFindFirstArgs extends sottocategoriaanomalia_sottocategorialavoroFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sottocategoriaanomalia_sottocategorialavoro findFirstOrThrow
   */
  export type sottocategoriaanomalia_sottocategorialavoroFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
    /**
     * Filter, which sottocategoriaanomalia_sottocategorialavoro to fetch.
     */
    where?: sottocategoriaanomalia_sottocategorialavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sottocategoriaanomalia_sottocategorialavoros to fetch.
     */
    orderBy?: Enumerable<sottocategoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sottocategoriaanomalia_sottocategorialavoros.
     */
    cursor?: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sottocategoriaanomalia_sottocategorialavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sottocategoriaanomalia_sottocategorialavoros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sottocategoriaanomalia_sottocategorialavoros.
     */
    distinct?: Enumerable<Sottocategoriaanomalia_sottocategorialavoroScalarFieldEnum>
  }


  /**
   * sottocategoriaanomalia_sottocategorialavoro findMany
   */
  export type sottocategoriaanomalia_sottocategorialavoroFindManyArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
    /**
     * Filter, which sottocategoriaanomalia_sottocategorialavoros to fetch.
     */
    where?: sottocategoriaanomalia_sottocategorialavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sottocategoriaanomalia_sottocategorialavoros to fetch.
     */
    orderBy?: Enumerable<sottocategoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sottocategoriaanomalia_sottocategorialavoros.
     */
    cursor?: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sottocategoriaanomalia_sottocategorialavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sottocategoriaanomalia_sottocategorialavoros.
     */
    skip?: number
    distinct?: Enumerable<Sottocategoriaanomalia_sottocategorialavoroScalarFieldEnum>
  }


  /**
   * sottocategoriaanomalia_sottocategorialavoro create
   */
  export type sottocategoriaanomalia_sottocategorialavoroCreateArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
    /**
     * The data needed to create a sottocategoriaanomalia_sottocategorialavoro.
     */
    data: XOR<sottocategoriaanomalia_sottocategorialavoroCreateInput, sottocategoriaanomalia_sottocategorialavoroUncheckedCreateInput>
  }


  /**
   * sottocategoriaanomalia_sottocategorialavoro createMany
   */
  export type sottocategoriaanomalia_sottocategorialavoroCreateManyArgs = {
    /**
     * The data used to create many sottocategoriaanomalia_sottocategorialavoros.
     */
    data: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sottocategoriaanomalia_sottocategorialavoro update
   */
  export type sottocategoriaanomalia_sottocategorialavoroUpdateArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
    /**
     * The data needed to update a sottocategoriaanomalia_sottocategorialavoro.
     */
    data: XOR<sottocategoriaanomalia_sottocategorialavoroUpdateInput, sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateInput>
    /**
     * Choose, which sottocategoriaanomalia_sottocategorialavoro to update.
     */
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
  }


  /**
   * sottocategoriaanomalia_sottocategorialavoro updateMany
   */
  export type sottocategoriaanomalia_sottocategorialavoroUpdateManyArgs = {
    /**
     * The data used to update sottocategoriaanomalia_sottocategorialavoros.
     */
    data: XOR<sottocategoriaanomalia_sottocategorialavoroUpdateManyMutationInput, sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyInput>
    /**
     * Filter which sottocategoriaanomalia_sottocategorialavoros to update
     */
    where?: sottocategoriaanomalia_sottocategorialavoroWhereInput
  }


  /**
   * sottocategoriaanomalia_sottocategorialavoro upsert
   */
  export type sottocategoriaanomalia_sottocategorialavoroUpsertArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
    /**
     * The filter to search for the sottocategoriaanomalia_sottocategorialavoro to update in case it exists.
     */
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    /**
     * In case the sottocategoriaanomalia_sottocategorialavoro found by the `where` argument doesn't exist, create a new sottocategoriaanomalia_sottocategorialavoro with this data.
     */
    create: XOR<sottocategoriaanomalia_sottocategorialavoroCreateInput, sottocategoriaanomalia_sottocategorialavoroUncheckedCreateInput>
    /**
     * In case the sottocategoriaanomalia_sottocategorialavoro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sottocategoriaanomalia_sottocategorialavoroUpdateInput, sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateInput>
  }


  /**
   * sottocategoriaanomalia_sottocategorialavoro delete
   */
  export type sottocategoriaanomalia_sottocategorialavoroDeleteArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
    /**
     * Filter which sottocategoriaanomalia_sottocategorialavoro to delete.
     */
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
  }


  /**
   * sottocategoriaanomalia_sottocategorialavoro deleteMany
   */
  export type sottocategoriaanomalia_sottocategorialavoroDeleteManyArgs = {
    /**
     * Filter which sottocategoriaanomalia_sottocategorialavoros to delete
     */
    where?: sottocategoriaanomalia_sottocategorialavoroWhereInput
  }


  /**
   * sottocategoriaanomalia_sottocategorialavoro without action
   */
  export type sottocategoriaanomalia_sottocategorialavoroArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
  }



  /**
   * Model sottocategorialavoro
   */


  export type AggregateSottocategorialavoro = {
    _count: SottocategorialavoroCountAggregateOutputType | null
    _avg: SottocategorialavoroAvgAggregateOutputType | null
    _sum: SottocategorialavoroSumAggregateOutputType | null
    _min: SottocategorialavoroMinAggregateOutputType | null
    _max: SottocategorialavoroMaxAggregateOutputType | null
  }

  export type SottocategorialavoroAvgAggregateOutputType = {
    id: number | null
  }

  export type SottocategorialavoroSumAggregateOutputType = {
    id: number | null
  }

  export type SottocategorialavoroMinAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type SottocategorialavoroMaxAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type SottocategorialavoroCountAggregateOutputType = {
    id: number
    value: number
    _all: number
  }


  export type SottocategorialavoroAvgAggregateInputType = {
    id?: true
  }

  export type SottocategorialavoroSumAggregateInputType = {
    id?: true
  }

  export type SottocategorialavoroMinAggregateInputType = {
    id?: true
    value?: true
  }

  export type SottocategorialavoroMaxAggregateInputType = {
    id?: true
    value?: true
  }

  export type SottocategorialavoroCountAggregateInputType = {
    id?: true
    value?: true
    _all?: true
  }

  export type SottocategorialavoroAggregateArgs = {
    /**
     * Filter which sottocategorialavoro to aggregate.
     */
    where?: sottocategorialavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sottocategorialavoros to fetch.
     */
    orderBy?: Enumerable<sottocategorialavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sottocategorialavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sottocategorialavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sottocategorialavoros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sottocategorialavoros
    **/
    _count?: true | SottocategorialavoroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SottocategorialavoroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SottocategorialavoroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SottocategorialavoroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SottocategorialavoroMaxAggregateInputType
  }

  export type GetSottocategorialavoroAggregateType<T extends SottocategorialavoroAggregateArgs> = {
        [P in keyof T & keyof AggregateSottocategorialavoro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSottocategorialavoro[P]>
      : GetScalarType<T[P], AggregateSottocategorialavoro[P]>
  }




  export type SottocategorialavoroGroupByArgs = {
    where?: sottocategorialavoroWhereInput
    orderBy?: Enumerable<sottocategorialavoroOrderByWithAggregationInput>
    by: SottocategorialavoroScalarFieldEnum[]
    having?: sottocategorialavoroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SottocategorialavoroCountAggregateInputType | true
    _avg?: SottocategorialavoroAvgAggregateInputType
    _sum?: SottocategorialavoroSumAggregateInputType
    _min?: SottocategorialavoroMinAggregateInputType
    _max?: SottocategorialavoroMaxAggregateInputType
  }


  export type SottocategorialavoroGroupByOutputType = {
    id: number
    value: string | null
    _count: SottocategorialavoroCountAggregateOutputType | null
    _avg: SottocategorialavoroAvgAggregateOutputType | null
    _sum: SottocategorialavoroSumAggregateOutputType | null
    _min: SottocategorialavoroMinAggregateOutputType | null
    _max: SottocategorialavoroMaxAggregateOutputType | null
  }

  type GetSottocategorialavoroGroupByPayload<T extends SottocategorialavoroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<SottocategorialavoroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SottocategorialavoroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SottocategorialavoroGroupByOutputType[P]>
            : GetScalarType<T[P], SottocategorialavoroGroupByOutputType[P]>
        }
      >
    >


  export type sottocategorialavoroSelect = {
    id?: boolean
    value?: boolean
    categoriaanomalia_sottocategorialavoro?: boolean | sottocategorialavoro$categoriaanomalia_sottocategorialavoroArgs
    lavoro?: boolean | sottocategorialavoro$lavoroArgs
    lavorostorico?: boolean | sottocategorialavoro$lavorostoricoArgs
    sottocategoriaanomalia_sottocategorialavoro?: boolean | sottocategorialavoro$sottocategoriaanomalia_sottocategorialavoroArgs
    _count?: boolean | SottocategorialavoroCountOutputTypeArgs
  }


  export type sottocategorialavoroInclude = {
    categoriaanomalia_sottocategorialavoro?: boolean | sottocategorialavoro$categoriaanomalia_sottocategorialavoroArgs
    lavoro?: boolean | sottocategorialavoro$lavoroArgs
    lavorostorico?: boolean | sottocategorialavoro$lavorostoricoArgs
    sottocategoriaanomalia_sottocategorialavoro?: boolean | sottocategorialavoro$sottocategoriaanomalia_sottocategorialavoroArgs
    _count?: boolean | SottocategorialavoroCountOutputTypeArgs
  }

  export type sottocategorialavoroGetPayload<S extends boolean | null | undefined | sottocategorialavoroArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? sottocategorialavoro :
    S extends undefined ? never :
    S extends { include: any } & (sottocategorialavoroArgs | sottocategorialavoroFindManyArgs)
    ? sottocategorialavoro  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'categoriaanomalia_sottocategorialavoro' ? Array < categoriaanomalia_sottocategorialavoroGetPayload<S['include'][P]>>  :
        P extends 'lavoro' ? Array < lavoroGetPayload<S['include'][P]>>  :
        P extends 'lavorostorico' ? Array < lavorostoricoGetPayload<S['include'][P]>>  :
        P extends 'sottocategoriaanomalia_sottocategorialavoro' ? Array < sottocategoriaanomalia_sottocategorialavoroGetPayload<S['include'][P]>>  :
        P extends '_count' ? SottocategorialavoroCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (sottocategorialavoroArgs | sottocategorialavoroFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'categoriaanomalia_sottocategorialavoro' ? Array < categoriaanomalia_sottocategorialavoroGetPayload<S['select'][P]>>  :
        P extends 'lavoro' ? Array < lavoroGetPayload<S['select'][P]>>  :
        P extends 'lavorostorico' ? Array < lavorostoricoGetPayload<S['select'][P]>>  :
        P extends 'sottocategoriaanomalia_sottocategorialavoro' ? Array < sottocategoriaanomalia_sottocategorialavoroGetPayload<S['select'][P]>>  :
        P extends '_count' ? SottocategorialavoroCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof sottocategorialavoro ? sottocategorialavoro[P] : never
  } 
      : sottocategorialavoro


  type sottocategorialavoroCountArgs = 
    Omit<sottocategorialavoroFindManyArgs, 'select' | 'include'> & {
      select?: SottocategorialavoroCountAggregateInputType | true
    }

  export interface sottocategorialavoroDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Sottocategorialavoro that matches the filter.
     * @param {sottocategorialavoroFindUniqueArgs} args - Arguments to find a Sottocategorialavoro
     * @example
     * // Get one Sottocategorialavoro
     * const sottocategorialavoro = await prisma.sottocategorialavoro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sottocategorialavoroFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sottocategorialavoroFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sottocategorialavoro'> extends True ? Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T>> : Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T> | null, null>

    /**
     * Find one Sottocategorialavoro that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {sottocategorialavoroFindUniqueOrThrowArgs} args - Arguments to find a Sottocategorialavoro
     * @example
     * // Get one Sottocategorialavoro
     * const sottocategorialavoro = await prisma.sottocategorialavoro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sottocategorialavoroFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sottocategorialavoroFindUniqueOrThrowArgs>
    ): Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T>>

    /**
     * Find the first Sottocategorialavoro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategorialavoroFindFirstArgs} args - Arguments to find a Sottocategorialavoro
     * @example
     * // Get one Sottocategorialavoro
     * const sottocategorialavoro = await prisma.sottocategorialavoro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sottocategorialavoroFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sottocategorialavoroFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sottocategorialavoro'> extends True ? Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T>> : Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T> | null, null>

    /**
     * Find the first Sottocategorialavoro that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategorialavoroFindFirstOrThrowArgs} args - Arguments to find a Sottocategorialavoro
     * @example
     * // Get one Sottocategorialavoro
     * const sottocategorialavoro = await prisma.sottocategorialavoro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sottocategorialavoroFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sottocategorialavoroFindFirstOrThrowArgs>
    ): Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T>>

    /**
     * Find zero or more Sottocategorialavoros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategorialavoroFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sottocategorialavoros
     * const sottocategorialavoros = await prisma.sottocategorialavoro.findMany()
     * 
     * // Get first 10 Sottocategorialavoros
     * const sottocategorialavoros = await prisma.sottocategorialavoro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sottocategorialavoroWithIdOnly = await prisma.sottocategorialavoro.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sottocategorialavoroFindManyArgs>(
      args?: SelectSubset<T, sottocategorialavoroFindManyArgs>
    ): Prisma.PrismaPromise<Array<sottocategorialavoroGetPayload<T>>>

    /**
     * Create a Sottocategorialavoro.
     * @param {sottocategorialavoroCreateArgs} args - Arguments to create a Sottocategorialavoro.
     * @example
     * // Create one Sottocategorialavoro
     * const Sottocategorialavoro = await prisma.sottocategorialavoro.create({
     *   data: {
     *     // ... data to create a Sottocategorialavoro
     *   }
     * })
     * 
    **/
    create<T extends sottocategorialavoroCreateArgs>(
      args: SelectSubset<T, sottocategorialavoroCreateArgs>
    ): Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T>>

    /**
     * Create many Sottocategorialavoros.
     *     @param {sottocategorialavoroCreateManyArgs} args - Arguments to create many Sottocategorialavoros.
     *     @example
     *     // Create many Sottocategorialavoros
     *     const sottocategorialavoro = await prisma.sottocategorialavoro.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sottocategorialavoroCreateManyArgs>(
      args?: SelectSubset<T, sottocategorialavoroCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sottocategorialavoro.
     * @param {sottocategorialavoroDeleteArgs} args - Arguments to delete one Sottocategorialavoro.
     * @example
     * // Delete one Sottocategorialavoro
     * const Sottocategorialavoro = await prisma.sottocategorialavoro.delete({
     *   where: {
     *     // ... filter to delete one Sottocategorialavoro
     *   }
     * })
     * 
    **/
    delete<T extends sottocategorialavoroDeleteArgs>(
      args: SelectSubset<T, sottocategorialavoroDeleteArgs>
    ): Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T>>

    /**
     * Update one Sottocategorialavoro.
     * @param {sottocategorialavoroUpdateArgs} args - Arguments to update one Sottocategorialavoro.
     * @example
     * // Update one Sottocategorialavoro
     * const sottocategorialavoro = await prisma.sottocategorialavoro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sottocategorialavoroUpdateArgs>(
      args: SelectSubset<T, sottocategorialavoroUpdateArgs>
    ): Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T>>

    /**
     * Delete zero or more Sottocategorialavoros.
     * @param {sottocategorialavoroDeleteManyArgs} args - Arguments to filter Sottocategorialavoros to delete.
     * @example
     * // Delete a few Sottocategorialavoros
     * const { count } = await prisma.sottocategorialavoro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sottocategorialavoroDeleteManyArgs>(
      args?: SelectSubset<T, sottocategorialavoroDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sottocategorialavoros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategorialavoroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sottocategorialavoros
     * const sottocategorialavoro = await prisma.sottocategorialavoro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sottocategorialavoroUpdateManyArgs>(
      args: SelectSubset<T, sottocategorialavoroUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sottocategorialavoro.
     * @param {sottocategorialavoroUpsertArgs} args - Arguments to update or create a Sottocategorialavoro.
     * @example
     * // Update or create a Sottocategorialavoro
     * const sottocategorialavoro = await prisma.sottocategorialavoro.upsert({
     *   create: {
     *     // ... data to create a Sottocategorialavoro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sottocategorialavoro we want to update
     *   }
     * })
    **/
    upsert<T extends sottocategorialavoroUpsertArgs>(
      args: SelectSubset<T, sottocategorialavoroUpsertArgs>
    ): Prisma__sottocategorialavoroClient<sottocategorialavoroGetPayload<T>>

    /**
     * Count the number of Sottocategorialavoros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sottocategorialavoroCountArgs} args - Arguments to filter Sottocategorialavoros to count.
     * @example
     * // Count the number of Sottocategorialavoros
     * const count = await prisma.sottocategorialavoro.count({
     *   where: {
     *     // ... the filter for the Sottocategorialavoros we want to count
     *   }
     * })
    **/
    count<T extends sottocategorialavoroCountArgs>(
      args?: Subset<T, sottocategorialavoroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SottocategorialavoroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sottocategorialavoro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SottocategorialavoroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SottocategorialavoroAggregateArgs>(args: Subset<T, SottocategorialavoroAggregateArgs>): Prisma.PrismaPromise<GetSottocategorialavoroAggregateType<T>>

    /**
     * Group by Sottocategorialavoro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SottocategorialavoroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SottocategorialavoroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SottocategorialavoroGroupByArgs['orderBy'] }
        : { orderBy?: SottocategorialavoroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SottocategorialavoroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSottocategorialavoroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sottocategorialavoro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sottocategorialavoroClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    categoriaanomalia_sottocategorialavoro<T extends sottocategorialavoro$categoriaanomalia_sottocategorialavoroArgs= {}>(args?: Subset<T, sottocategorialavoro$categoriaanomalia_sottocategorialavoroArgs>): Prisma.PrismaPromise<Array<categoriaanomalia_sottocategorialavoroGetPayload<T>>| Null>;

    lavoro<T extends sottocategorialavoro$lavoroArgs= {}>(args?: Subset<T, sottocategorialavoro$lavoroArgs>): Prisma.PrismaPromise<Array<lavoroGetPayload<T>>| Null>;

    lavorostorico<T extends sottocategorialavoro$lavorostoricoArgs= {}>(args?: Subset<T, sottocategorialavoro$lavorostoricoArgs>): Prisma.PrismaPromise<Array<lavorostoricoGetPayload<T>>| Null>;

    sottocategoriaanomalia_sottocategorialavoro<T extends sottocategorialavoro$sottocategoriaanomalia_sottocategorialavoroArgs= {}>(args?: Subset<T, sottocategorialavoro$sottocategoriaanomalia_sottocategorialavoroArgs>): Prisma.PrismaPromise<Array<sottocategoriaanomalia_sottocategorialavoroGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sottocategorialavoro base type for findUnique actions
   */
  export type sottocategorialavoroFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sottocategorialavoro
     */
    select?: sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategorialavoroInclude | null
    /**
     * Filter, which sottocategorialavoro to fetch.
     */
    where: sottocategorialavoroWhereUniqueInput
  }

  /**
   * sottocategorialavoro findUnique
   */
  export interface sottocategorialavoroFindUniqueArgs extends sottocategorialavoroFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sottocategorialavoro findUniqueOrThrow
   */
  export type sottocategorialavoroFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the sottocategorialavoro
     */
    select?: sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategorialavoroInclude | null
    /**
     * Filter, which sottocategorialavoro to fetch.
     */
    where: sottocategorialavoroWhereUniqueInput
  }


  /**
   * sottocategorialavoro base type for findFirst actions
   */
  export type sottocategorialavoroFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sottocategorialavoro
     */
    select?: sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategorialavoroInclude | null
    /**
     * Filter, which sottocategorialavoro to fetch.
     */
    where?: sottocategorialavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sottocategorialavoros to fetch.
     */
    orderBy?: Enumerable<sottocategorialavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sottocategorialavoros.
     */
    cursor?: sottocategorialavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sottocategorialavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sottocategorialavoros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sottocategorialavoros.
     */
    distinct?: Enumerable<SottocategorialavoroScalarFieldEnum>
  }

  /**
   * sottocategorialavoro findFirst
   */
  export interface sottocategorialavoroFindFirstArgs extends sottocategorialavoroFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sottocategorialavoro findFirstOrThrow
   */
  export type sottocategorialavoroFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the sottocategorialavoro
     */
    select?: sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategorialavoroInclude | null
    /**
     * Filter, which sottocategorialavoro to fetch.
     */
    where?: sottocategorialavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sottocategorialavoros to fetch.
     */
    orderBy?: Enumerable<sottocategorialavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sottocategorialavoros.
     */
    cursor?: sottocategorialavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sottocategorialavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sottocategorialavoros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sottocategorialavoros.
     */
    distinct?: Enumerable<SottocategorialavoroScalarFieldEnum>
  }


  /**
   * sottocategorialavoro findMany
   */
  export type sottocategorialavoroFindManyArgs = {
    /**
     * Select specific fields to fetch from the sottocategorialavoro
     */
    select?: sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategorialavoroInclude | null
    /**
     * Filter, which sottocategorialavoros to fetch.
     */
    where?: sottocategorialavoroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sottocategorialavoros to fetch.
     */
    orderBy?: Enumerable<sottocategorialavoroOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sottocategorialavoros.
     */
    cursor?: sottocategorialavoroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sottocategorialavoros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sottocategorialavoros.
     */
    skip?: number
    distinct?: Enumerable<SottocategorialavoroScalarFieldEnum>
  }


  /**
   * sottocategorialavoro create
   */
  export type sottocategorialavoroCreateArgs = {
    /**
     * Select specific fields to fetch from the sottocategorialavoro
     */
    select?: sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategorialavoroInclude | null
    /**
     * The data needed to create a sottocategorialavoro.
     */
    data: XOR<sottocategorialavoroCreateInput, sottocategorialavoroUncheckedCreateInput>
  }


  /**
   * sottocategorialavoro createMany
   */
  export type sottocategorialavoroCreateManyArgs = {
    /**
     * The data used to create many sottocategorialavoros.
     */
    data: Enumerable<sottocategorialavoroCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sottocategorialavoro update
   */
  export type sottocategorialavoroUpdateArgs = {
    /**
     * Select specific fields to fetch from the sottocategorialavoro
     */
    select?: sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategorialavoroInclude | null
    /**
     * The data needed to update a sottocategorialavoro.
     */
    data: XOR<sottocategorialavoroUpdateInput, sottocategorialavoroUncheckedUpdateInput>
    /**
     * Choose, which sottocategorialavoro to update.
     */
    where: sottocategorialavoroWhereUniqueInput
  }


  /**
   * sottocategorialavoro updateMany
   */
  export type sottocategorialavoroUpdateManyArgs = {
    /**
     * The data used to update sottocategorialavoros.
     */
    data: XOR<sottocategorialavoroUpdateManyMutationInput, sottocategorialavoroUncheckedUpdateManyInput>
    /**
     * Filter which sottocategorialavoros to update
     */
    where?: sottocategorialavoroWhereInput
  }


  /**
   * sottocategorialavoro upsert
   */
  export type sottocategorialavoroUpsertArgs = {
    /**
     * Select specific fields to fetch from the sottocategorialavoro
     */
    select?: sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategorialavoroInclude | null
    /**
     * The filter to search for the sottocategorialavoro to update in case it exists.
     */
    where: sottocategorialavoroWhereUniqueInput
    /**
     * In case the sottocategorialavoro found by the `where` argument doesn't exist, create a new sottocategorialavoro with this data.
     */
    create: XOR<sottocategorialavoroCreateInput, sottocategorialavoroUncheckedCreateInput>
    /**
     * In case the sottocategorialavoro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sottocategorialavoroUpdateInput, sottocategorialavoroUncheckedUpdateInput>
  }


  /**
   * sottocategorialavoro delete
   */
  export type sottocategorialavoroDeleteArgs = {
    /**
     * Select specific fields to fetch from the sottocategorialavoro
     */
    select?: sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategorialavoroInclude | null
    /**
     * Filter which sottocategorialavoro to delete.
     */
    where: sottocategorialavoroWhereUniqueInput
  }


  /**
   * sottocategorialavoro deleteMany
   */
  export type sottocategorialavoroDeleteManyArgs = {
    /**
     * Filter which sottocategorialavoros to delete
     */
    where?: sottocategorialavoroWhereInput
  }


  /**
   * sottocategorialavoro.categoriaanomalia_sottocategorialavoro
   */
  export type sottocategorialavoro$categoriaanomalia_sottocategorialavoroArgs = {
    /**
     * Select specific fields to fetch from the categoriaanomalia_sottocategorialavoro
     */
    select?: categoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaanomalia_sottocategorialavoroInclude | null
    where?: categoriaanomalia_sottocategorialavoroWhereInput
    orderBy?: Enumerable<categoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    cursor?: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Categoriaanomalia_sottocategorialavoroScalarFieldEnum>
  }


  /**
   * sottocategorialavoro.lavoro
   */
  export type sottocategorialavoro$lavoroArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    where?: lavoroWhereInput
    orderBy?: Enumerable<lavoroOrderByWithRelationInput>
    cursor?: lavoroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LavoroScalarFieldEnum>
  }


  /**
   * sottocategorialavoro.lavorostorico
   */
  export type sottocategorialavoro$lavorostoricoArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    where?: lavorostoricoWhereInput
    orderBy?: Enumerable<lavorostoricoOrderByWithRelationInput>
    cursor?: lavorostoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LavorostoricoScalarFieldEnum>
  }


  /**
   * sottocategorialavoro.sottocategoriaanomalia_sottocategorialavoro
   */
  export type sottocategorialavoro$sottocategoriaanomalia_sottocategorialavoroArgs = {
    /**
     * Select specific fields to fetch from the sottocategoriaanomalia_sottocategorialavoro
     */
    select?: sottocategoriaanomalia_sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategoriaanomalia_sottocategorialavoroInclude | null
    where?: sottocategoriaanomalia_sottocategorialavoroWhereInput
    orderBy?: Enumerable<sottocategoriaanomalia_sottocategorialavoroOrderByWithRelationInput>
    cursor?: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Sottocategoriaanomalia_sottocategorialavoroScalarFieldEnum>
  }


  /**
   * sottocategorialavoro without action
   */
  export type sottocategorialavoroArgs = {
    /**
     * Select specific fields to fetch from the sottocategorialavoro
     */
    select?: sottocategorialavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sottocategorialavoroInclude | null
  }



  /**
   * Model stato
   */


  export type AggregateStato = {
    _count: StatoCountAggregateOutputType | null
    _avg: StatoAvgAggregateOutputType | null
    _sum: StatoSumAggregateOutputType | null
    _min: StatoMinAggregateOutputType | null
    _max: StatoMaxAggregateOutputType | null
  }

  export type StatoAvgAggregateOutputType = {
    id: number | null
    idEvento: number | null
    classeCorrente: number | null
    statoCorrente: number | null
    idUtente: number | null
    storiaStato: number | null
  }

  export type StatoSumAggregateOutputType = {
    id: number | null
    idEvento: number | null
    classeCorrente: number | null
    statoCorrente: number | null
    idUtente: number | null
    storiaStato: number | null
  }

  export type StatoMinAggregateOutputType = {
    id: number | null
    idEvento: number | null
    classeCorrente: number | null
    statoCorrente: number | null
    idUtente: number | null
    storiaStato: number | null
  }

  export type StatoMaxAggregateOutputType = {
    id: number | null
    idEvento: number | null
    classeCorrente: number | null
    statoCorrente: number | null
    idUtente: number | null
    storiaStato: number | null
  }

  export type StatoCountAggregateOutputType = {
    id: number
    idEvento: number
    classeCorrente: number
    statoCorrente: number
    idUtente: number
    storiaStato: number
    _all: number
  }


  export type StatoAvgAggregateInputType = {
    id?: true
    idEvento?: true
    classeCorrente?: true
    statoCorrente?: true
    idUtente?: true
    storiaStato?: true
  }

  export type StatoSumAggregateInputType = {
    id?: true
    idEvento?: true
    classeCorrente?: true
    statoCorrente?: true
    idUtente?: true
    storiaStato?: true
  }

  export type StatoMinAggregateInputType = {
    id?: true
    idEvento?: true
    classeCorrente?: true
    statoCorrente?: true
    idUtente?: true
    storiaStato?: true
  }

  export type StatoMaxAggregateInputType = {
    id?: true
    idEvento?: true
    classeCorrente?: true
    statoCorrente?: true
    idUtente?: true
    storiaStato?: true
  }

  export type StatoCountAggregateInputType = {
    id?: true
    idEvento?: true
    classeCorrente?: true
    statoCorrente?: true
    idUtente?: true
    storiaStato?: true
    _all?: true
  }

  export type StatoAggregateArgs = {
    /**
     * Filter which stato to aggregate.
     */
    where?: statoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of statoes to fetch.
     */
    orderBy?: Enumerable<statoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: statoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` statoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` statoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned statoes
    **/
    _count?: true | StatoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StatoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StatoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StatoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StatoMaxAggregateInputType
  }

  export type GetStatoAggregateType<T extends StatoAggregateArgs> = {
        [P in keyof T & keyof AggregateStato]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStato[P]>
      : GetScalarType<T[P], AggregateStato[P]>
  }




  export type StatoGroupByArgs = {
    where?: statoWhereInput
    orderBy?: Enumerable<statoOrderByWithAggregationInput>
    by: StatoScalarFieldEnum[]
    having?: statoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StatoCountAggregateInputType | true
    _avg?: StatoAvgAggregateInputType
    _sum?: StatoSumAggregateInputType
    _min?: StatoMinAggregateInputType
    _max?: StatoMaxAggregateInputType
  }


  export type StatoGroupByOutputType = {
    id: number
    idEvento: number | null
    classeCorrente: number | null
    statoCorrente: number | null
    idUtente: number | null
    storiaStato: number | null
    _count: StatoCountAggregateOutputType | null
    _avg: StatoAvgAggregateOutputType | null
    _sum: StatoSumAggregateOutputType | null
    _min: StatoMinAggregateOutputType | null
    _max: StatoMaxAggregateOutputType | null
  }

  type GetStatoGroupByPayload<T extends StatoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<StatoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StatoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StatoGroupByOutputType[P]>
            : GetScalarType<T[P], StatoGroupByOutputType[P]>
        }
      >
    >


  export type statoSelect = {
    id?: boolean
    idEvento?: boolean
    classeCorrente?: boolean
    statoCorrente?: boolean
    idUtente?: boolean
    storiaStato?: boolean
  }


  export type statoGetPayload<S extends boolean | null | undefined | statoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? stato :
    S extends undefined ? never :
    S extends { include: any } & (statoArgs | statoFindManyArgs)
    ? stato 
    : S extends { select: any } & (statoArgs | statoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof stato ? stato[P] : never
  } 
      : stato


  type statoCountArgs = 
    Omit<statoFindManyArgs, 'select' | 'include'> & {
      select?: StatoCountAggregateInputType | true
    }

  export interface statoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Stato that matches the filter.
     * @param {statoFindUniqueArgs} args - Arguments to find a Stato
     * @example
     * // Get one Stato
     * const stato = await prisma.stato.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends statoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, statoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'stato'> extends True ? Prisma__statoClient<statoGetPayload<T>> : Prisma__statoClient<statoGetPayload<T> | null, null>

    /**
     * Find one Stato that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {statoFindUniqueOrThrowArgs} args - Arguments to find a Stato
     * @example
     * // Get one Stato
     * const stato = await prisma.stato.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends statoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, statoFindUniqueOrThrowArgs>
    ): Prisma__statoClient<statoGetPayload<T>>

    /**
     * Find the first Stato that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {statoFindFirstArgs} args - Arguments to find a Stato
     * @example
     * // Get one Stato
     * const stato = await prisma.stato.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends statoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, statoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'stato'> extends True ? Prisma__statoClient<statoGetPayload<T>> : Prisma__statoClient<statoGetPayload<T> | null, null>

    /**
     * Find the first Stato that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {statoFindFirstOrThrowArgs} args - Arguments to find a Stato
     * @example
     * // Get one Stato
     * const stato = await prisma.stato.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends statoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, statoFindFirstOrThrowArgs>
    ): Prisma__statoClient<statoGetPayload<T>>

    /**
     * Find zero or more Statoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {statoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Statoes
     * const statoes = await prisma.stato.findMany()
     * 
     * // Get first 10 Statoes
     * const statoes = await prisma.stato.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const statoWithIdOnly = await prisma.stato.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends statoFindManyArgs>(
      args?: SelectSubset<T, statoFindManyArgs>
    ): Prisma.PrismaPromise<Array<statoGetPayload<T>>>

    /**
     * Create a Stato.
     * @param {statoCreateArgs} args - Arguments to create a Stato.
     * @example
     * // Create one Stato
     * const Stato = await prisma.stato.create({
     *   data: {
     *     // ... data to create a Stato
     *   }
     * })
     * 
    **/
    create<T extends statoCreateArgs>(
      args: SelectSubset<T, statoCreateArgs>
    ): Prisma__statoClient<statoGetPayload<T>>

    /**
     * Create many Statoes.
     *     @param {statoCreateManyArgs} args - Arguments to create many Statoes.
     *     @example
     *     // Create many Statoes
     *     const stato = await prisma.stato.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends statoCreateManyArgs>(
      args?: SelectSubset<T, statoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Stato.
     * @param {statoDeleteArgs} args - Arguments to delete one Stato.
     * @example
     * // Delete one Stato
     * const Stato = await prisma.stato.delete({
     *   where: {
     *     // ... filter to delete one Stato
     *   }
     * })
     * 
    **/
    delete<T extends statoDeleteArgs>(
      args: SelectSubset<T, statoDeleteArgs>
    ): Prisma__statoClient<statoGetPayload<T>>

    /**
     * Update one Stato.
     * @param {statoUpdateArgs} args - Arguments to update one Stato.
     * @example
     * // Update one Stato
     * const stato = await prisma.stato.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends statoUpdateArgs>(
      args: SelectSubset<T, statoUpdateArgs>
    ): Prisma__statoClient<statoGetPayload<T>>

    /**
     * Delete zero or more Statoes.
     * @param {statoDeleteManyArgs} args - Arguments to filter Statoes to delete.
     * @example
     * // Delete a few Statoes
     * const { count } = await prisma.stato.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends statoDeleteManyArgs>(
      args?: SelectSubset<T, statoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Statoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {statoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Statoes
     * const stato = await prisma.stato.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends statoUpdateManyArgs>(
      args: SelectSubset<T, statoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Stato.
     * @param {statoUpsertArgs} args - Arguments to update or create a Stato.
     * @example
     * // Update or create a Stato
     * const stato = await prisma.stato.upsert({
     *   create: {
     *     // ... data to create a Stato
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stato we want to update
     *   }
     * })
    **/
    upsert<T extends statoUpsertArgs>(
      args: SelectSubset<T, statoUpsertArgs>
    ): Prisma__statoClient<statoGetPayload<T>>

    /**
     * Count the number of Statoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {statoCountArgs} args - Arguments to filter Statoes to count.
     * @example
     * // Count the number of Statoes
     * const count = await prisma.stato.count({
     *   where: {
     *     // ... the filter for the Statoes we want to count
     *   }
     * })
    **/
    count<T extends statoCountArgs>(
      args?: Subset<T, statoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StatoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StatoAggregateArgs>(args: Subset<T, StatoAggregateArgs>): Prisma.PrismaPromise<GetStatoAggregateType<T>>

    /**
     * Group by Stato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StatoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StatoGroupByArgs['orderBy'] }
        : { orderBy?: StatoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StatoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStatoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for stato.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__statoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * stato base type for findUnique actions
   */
  export type statoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the stato
     */
    select?: statoSelect | null
    /**
     * Filter, which stato to fetch.
     */
    where: statoWhereUniqueInput
  }

  /**
   * stato findUnique
   */
  export interface statoFindUniqueArgs extends statoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * stato findUniqueOrThrow
   */
  export type statoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the stato
     */
    select?: statoSelect | null
    /**
     * Filter, which stato to fetch.
     */
    where: statoWhereUniqueInput
  }


  /**
   * stato base type for findFirst actions
   */
  export type statoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the stato
     */
    select?: statoSelect | null
    /**
     * Filter, which stato to fetch.
     */
    where?: statoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of statoes to fetch.
     */
    orderBy?: Enumerable<statoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for statoes.
     */
    cursor?: statoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` statoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` statoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of statoes.
     */
    distinct?: Enumerable<StatoScalarFieldEnum>
  }

  /**
   * stato findFirst
   */
  export interface statoFindFirstArgs extends statoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * stato findFirstOrThrow
   */
  export type statoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the stato
     */
    select?: statoSelect | null
    /**
     * Filter, which stato to fetch.
     */
    where?: statoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of statoes to fetch.
     */
    orderBy?: Enumerable<statoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for statoes.
     */
    cursor?: statoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` statoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` statoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of statoes.
     */
    distinct?: Enumerable<StatoScalarFieldEnum>
  }


  /**
   * stato findMany
   */
  export type statoFindManyArgs = {
    /**
     * Select specific fields to fetch from the stato
     */
    select?: statoSelect | null
    /**
     * Filter, which statoes to fetch.
     */
    where?: statoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of statoes to fetch.
     */
    orderBy?: Enumerable<statoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing statoes.
     */
    cursor?: statoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` statoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` statoes.
     */
    skip?: number
    distinct?: Enumerable<StatoScalarFieldEnum>
  }


  /**
   * stato create
   */
  export type statoCreateArgs = {
    /**
     * Select specific fields to fetch from the stato
     */
    select?: statoSelect | null
    /**
     * The data needed to create a stato.
     */
    data: XOR<statoCreateInput, statoUncheckedCreateInput>
  }


  /**
   * stato createMany
   */
  export type statoCreateManyArgs = {
    /**
     * The data used to create many statoes.
     */
    data: Enumerable<statoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * stato update
   */
  export type statoUpdateArgs = {
    /**
     * Select specific fields to fetch from the stato
     */
    select?: statoSelect | null
    /**
     * The data needed to update a stato.
     */
    data: XOR<statoUpdateInput, statoUncheckedUpdateInput>
    /**
     * Choose, which stato to update.
     */
    where: statoWhereUniqueInput
  }


  /**
   * stato updateMany
   */
  export type statoUpdateManyArgs = {
    /**
     * The data used to update statoes.
     */
    data: XOR<statoUpdateManyMutationInput, statoUncheckedUpdateManyInput>
    /**
     * Filter which statoes to update
     */
    where?: statoWhereInput
  }


  /**
   * stato upsert
   */
  export type statoUpsertArgs = {
    /**
     * Select specific fields to fetch from the stato
     */
    select?: statoSelect | null
    /**
     * The filter to search for the stato to update in case it exists.
     */
    where: statoWhereUniqueInput
    /**
     * In case the stato found by the `where` argument doesn't exist, create a new stato with this data.
     */
    create: XOR<statoCreateInput, statoUncheckedCreateInput>
    /**
     * In case the stato was found with the provided `where` argument, update it with this data.
     */
    update: XOR<statoUpdateInput, statoUncheckedUpdateInput>
  }


  /**
   * stato delete
   */
  export type statoDeleteArgs = {
    /**
     * Select specific fields to fetch from the stato
     */
    select?: statoSelect | null
    /**
     * Filter which stato to delete.
     */
    where: statoWhereUniqueInput
  }


  /**
   * stato deleteMany
   */
  export type statoDeleteManyArgs = {
    /**
     * Filter which statoes to delete
     */
    where?: statoWhereInput
  }


  /**
   * stato without action
   */
  export type statoArgs = {
    /**
     * Select specific fields to fetch from the stato
     */
    select?: statoSelect | null
  }



  /**
   * Model storiastato
   */


  export type AggregateStoriastato = {
    _count: StoriastatoCountAggregateOutputType | null
    _avg: StoriastatoAvgAggregateOutputType | null
    _sum: StoriastatoSumAggregateOutputType | null
    _min: StoriastatoMinAggregateOutputType | null
    _max: StoriastatoMaxAggregateOutputType | null
  }

  export type StoriastatoAvgAggregateOutputType = {
    id: number | null
    statoStorico: number | null
    stato: number | null
  }

  export type StoriastatoSumAggregateOutputType = {
    id: number | null
    statoStorico: number | null
    stato: number | null
  }

  export type StoriastatoMinAggregateOutputType = {
    id: number | null
    statoStorico: number | null
    stato: number | null
    dataStato: string | null
  }

  export type StoriastatoMaxAggregateOutputType = {
    id: number | null
    statoStorico: number | null
    stato: number | null
    dataStato: string | null
  }

  export type StoriastatoCountAggregateOutputType = {
    id: number
    statoStorico: number
    stato: number
    dataStato: number
    _all: number
  }


  export type StoriastatoAvgAggregateInputType = {
    id?: true
    statoStorico?: true
    stato?: true
  }

  export type StoriastatoSumAggregateInputType = {
    id?: true
    statoStorico?: true
    stato?: true
  }

  export type StoriastatoMinAggregateInputType = {
    id?: true
    statoStorico?: true
    stato?: true
    dataStato?: true
  }

  export type StoriastatoMaxAggregateInputType = {
    id?: true
    statoStorico?: true
    stato?: true
    dataStato?: true
  }

  export type StoriastatoCountAggregateInputType = {
    id?: true
    statoStorico?: true
    stato?: true
    dataStato?: true
    _all?: true
  }

  export type StoriastatoAggregateArgs = {
    /**
     * Filter which storiastato to aggregate.
     */
    where?: storiastatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of storiastatoes to fetch.
     */
    orderBy?: Enumerable<storiastatoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: storiastatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` storiastatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` storiastatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned storiastatoes
    **/
    _count?: true | StoriastatoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StoriastatoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StoriastatoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StoriastatoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StoriastatoMaxAggregateInputType
  }

  export type GetStoriastatoAggregateType<T extends StoriastatoAggregateArgs> = {
        [P in keyof T & keyof AggregateStoriastato]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStoriastato[P]>
      : GetScalarType<T[P], AggregateStoriastato[P]>
  }




  export type StoriastatoGroupByArgs = {
    where?: storiastatoWhereInput
    orderBy?: Enumerable<storiastatoOrderByWithAggregationInput>
    by: StoriastatoScalarFieldEnum[]
    having?: storiastatoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StoriastatoCountAggregateInputType | true
    _avg?: StoriastatoAvgAggregateInputType
    _sum?: StoriastatoSumAggregateInputType
    _min?: StoriastatoMinAggregateInputType
    _max?: StoriastatoMaxAggregateInputType
  }


  export type StoriastatoGroupByOutputType = {
    id: number
    statoStorico: number | null
    stato: number | null
    dataStato: string | null
    _count: StoriastatoCountAggregateOutputType | null
    _avg: StoriastatoAvgAggregateOutputType | null
    _sum: StoriastatoSumAggregateOutputType | null
    _min: StoriastatoMinAggregateOutputType | null
    _max: StoriastatoMaxAggregateOutputType | null
  }

  type GetStoriastatoGroupByPayload<T extends StoriastatoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<StoriastatoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StoriastatoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StoriastatoGroupByOutputType[P]>
            : GetScalarType<T[P], StoriastatoGroupByOutputType[P]>
        }
      >
    >


  export type storiastatoSelect = {
    id?: boolean
    statoStorico?: boolean
    stato?: boolean
    dataStato?: boolean
  }


  export type storiastatoGetPayload<S extends boolean | null | undefined | storiastatoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? storiastato :
    S extends undefined ? never :
    S extends { include: any } & (storiastatoArgs | storiastatoFindManyArgs)
    ? storiastato 
    : S extends { select: any } & (storiastatoArgs | storiastatoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof storiastato ? storiastato[P] : never
  } 
      : storiastato


  type storiastatoCountArgs = 
    Omit<storiastatoFindManyArgs, 'select' | 'include'> & {
      select?: StoriastatoCountAggregateInputType | true
    }

  export interface storiastatoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Storiastato that matches the filter.
     * @param {storiastatoFindUniqueArgs} args - Arguments to find a Storiastato
     * @example
     * // Get one Storiastato
     * const storiastato = await prisma.storiastato.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends storiastatoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, storiastatoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'storiastato'> extends True ? Prisma__storiastatoClient<storiastatoGetPayload<T>> : Prisma__storiastatoClient<storiastatoGetPayload<T> | null, null>

    /**
     * Find one Storiastato that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {storiastatoFindUniqueOrThrowArgs} args - Arguments to find a Storiastato
     * @example
     * // Get one Storiastato
     * const storiastato = await prisma.storiastato.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends storiastatoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, storiastatoFindUniqueOrThrowArgs>
    ): Prisma__storiastatoClient<storiastatoGetPayload<T>>

    /**
     * Find the first Storiastato that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {storiastatoFindFirstArgs} args - Arguments to find a Storiastato
     * @example
     * // Get one Storiastato
     * const storiastato = await prisma.storiastato.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends storiastatoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, storiastatoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'storiastato'> extends True ? Prisma__storiastatoClient<storiastatoGetPayload<T>> : Prisma__storiastatoClient<storiastatoGetPayload<T> | null, null>

    /**
     * Find the first Storiastato that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {storiastatoFindFirstOrThrowArgs} args - Arguments to find a Storiastato
     * @example
     * // Get one Storiastato
     * const storiastato = await prisma.storiastato.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends storiastatoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, storiastatoFindFirstOrThrowArgs>
    ): Prisma__storiastatoClient<storiastatoGetPayload<T>>

    /**
     * Find zero or more Storiastatoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {storiastatoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Storiastatoes
     * const storiastatoes = await prisma.storiastato.findMany()
     * 
     * // Get first 10 Storiastatoes
     * const storiastatoes = await prisma.storiastato.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const storiastatoWithIdOnly = await prisma.storiastato.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends storiastatoFindManyArgs>(
      args?: SelectSubset<T, storiastatoFindManyArgs>
    ): Prisma.PrismaPromise<Array<storiastatoGetPayload<T>>>

    /**
     * Create a Storiastato.
     * @param {storiastatoCreateArgs} args - Arguments to create a Storiastato.
     * @example
     * // Create one Storiastato
     * const Storiastato = await prisma.storiastato.create({
     *   data: {
     *     // ... data to create a Storiastato
     *   }
     * })
     * 
    **/
    create<T extends storiastatoCreateArgs>(
      args: SelectSubset<T, storiastatoCreateArgs>
    ): Prisma__storiastatoClient<storiastatoGetPayload<T>>

    /**
     * Create many Storiastatoes.
     *     @param {storiastatoCreateManyArgs} args - Arguments to create many Storiastatoes.
     *     @example
     *     // Create many Storiastatoes
     *     const storiastato = await prisma.storiastato.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends storiastatoCreateManyArgs>(
      args?: SelectSubset<T, storiastatoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Storiastato.
     * @param {storiastatoDeleteArgs} args - Arguments to delete one Storiastato.
     * @example
     * // Delete one Storiastato
     * const Storiastato = await prisma.storiastato.delete({
     *   where: {
     *     // ... filter to delete one Storiastato
     *   }
     * })
     * 
    **/
    delete<T extends storiastatoDeleteArgs>(
      args: SelectSubset<T, storiastatoDeleteArgs>
    ): Prisma__storiastatoClient<storiastatoGetPayload<T>>

    /**
     * Update one Storiastato.
     * @param {storiastatoUpdateArgs} args - Arguments to update one Storiastato.
     * @example
     * // Update one Storiastato
     * const storiastato = await prisma.storiastato.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends storiastatoUpdateArgs>(
      args: SelectSubset<T, storiastatoUpdateArgs>
    ): Prisma__storiastatoClient<storiastatoGetPayload<T>>

    /**
     * Delete zero or more Storiastatoes.
     * @param {storiastatoDeleteManyArgs} args - Arguments to filter Storiastatoes to delete.
     * @example
     * // Delete a few Storiastatoes
     * const { count } = await prisma.storiastato.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends storiastatoDeleteManyArgs>(
      args?: SelectSubset<T, storiastatoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Storiastatoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {storiastatoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Storiastatoes
     * const storiastato = await prisma.storiastato.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends storiastatoUpdateManyArgs>(
      args: SelectSubset<T, storiastatoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Storiastato.
     * @param {storiastatoUpsertArgs} args - Arguments to update or create a Storiastato.
     * @example
     * // Update or create a Storiastato
     * const storiastato = await prisma.storiastato.upsert({
     *   create: {
     *     // ... data to create a Storiastato
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Storiastato we want to update
     *   }
     * })
    **/
    upsert<T extends storiastatoUpsertArgs>(
      args: SelectSubset<T, storiastatoUpsertArgs>
    ): Prisma__storiastatoClient<storiastatoGetPayload<T>>

    /**
     * Count the number of Storiastatoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {storiastatoCountArgs} args - Arguments to filter Storiastatoes to count.
     * @example
     * // Count the number of Storiastatoes
     * const count = await prisma.storiastato.count({
     *   where: {
     *     // ... the filter for the Storiastatoes we want to count
     *   }
     * })
    **/
    count<T extends storiastatoCountArgs>(
      args?: Subset<T, storiastatoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StoriastatoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Storiastato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoriastatoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StoriastatoAggregateArgs>(args: Subset<T, StoriastatoAggregateArgs>): Prisma.PrismaPromise<GetStoriastatoAggregateType<T>>

    /**
     * Group by Storiastato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoriastatoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StoriastatoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StoriastatoGroupByArgs['orderBy'] }
        : { orderBy?: StoriastatoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StoriastatoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStoriastatoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for storiastato.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__storiastatoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * storiastato base type for findUnique actions
   */
  export type storiastatoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the storiastato
     */
    select?: storiastatoSelect | null
    /**
     * Filter, which storiastato to fetch.
     */
    where: storiastatoWhereUniqueInput
  }

  /**
   * storiastato findUnique
   */
  export interface storiastatoFindUniqueArgs extends storiastatoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * storiastato findUniqueOrThrow
   */
  export type storiastatoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the storiastato
     */
    select?: storiastatoSelect | null
    /**
     * Filter, which storiastato to fetch.
     */
    where: storiastatoWhereUniqueInput
  }


  /**
   * storiastato base type for findFirst actions
   */
  export type storiastatoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the storiastato
     */
    select?: storiastatoSelect | null
    /**
     * Filter, which storiastato to fetch.
     */
    where?: storiastatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of storiastatoes to fetch.
     */
    orderBy?: Enumerable<storiastatoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for storiastatoes.
     */
    cursor?: storiastatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` storiastatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` storiastatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of storiastatoes.
     */
    distinct?: Enumerable<StoriastatoScalarFieldEnum>
  }

  /**
   * storiastato findFirst
   */
  export interface storiastatoFindFirstArgs extends storiastatoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * storiastato findFirstOrThrow
   */
  export type storiastatoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the storiastato
     */
    select?: storiastatoSelect | null
    /**
     * Filter, which storiastato to fetch.
     */
    where?: storiastatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of storiastatoes to fetch.
     */
    orderBy?: Enumerable<storiastatoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for storiastatoes.
     */
    cursor?: storiastatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` storiastatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` storiastatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of storiastatoes.
     */
    distinct?: Enumerable<StoriastatoScalarFieldEnum>
  }


  /**
   * storiastato findMany
   */
  export type storiastatoFindManyArgs = {
    /**
     * Select specific fields to fetch from the storiastato
     */
    select?: storiastatoSelect | null
    /**
     * Filter, which storiastatoes to fetch.
     */
    where?: storiastatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of storiastatoes to fetch.
     */
    orderBy?: Enumerable<storiastatoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing storiastatoes.
     */
    cursor?: storiastatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` storiastatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` storiastatoes.
     */
    skip?: number
    distinct?: Enumerable<StoriastatoScalarFieldEnum>
  }


  /**
   * storiastato create
   */
  export type storiastatoCreateArgs = {
    /**
     * Select specific fields to fetch from the storiastato
     */
    select?: storiastatoSelect | null
    /**
     * The data needed to create a storiastato.
     */
    data: XOR<storiastatoCreateInput, storiastatoUncheckedCreateInput>
  }


  /**
   * storiastato createMany
   */
  export type storiastatoCreateManyArgs = {
    /**
     * The data used to create many storiastatoes.
     */
    data: Enumerable<storiastatoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * storiastato update
   */
  export type storiastatoUpdateArgs = {
    /**
     * Select specific fields to fetch from the storiastato
     */
    select?: storiastatoSelect | null
    /**
     * The data needed to update a storiastato.
     */
    data: XOR<storiastatoUpdateInput, storiastatoUncheckedUpdateInput>
    /**
     * Choose, which storiastato to update.
     */
    where: storiastatoWhereUniqueInput
  }


  /**
   * storiastato updateMany
   */
  export type storiastatoUpdateManyArgs = {
    /**
     * The data used to update storiastatoes.
     */
    data: XOR<storiastatoUpdateManyMutationInput, storiastatoUncheckedUpdateManyInput>
    /**
     * Filter which storiastatoes to update
     */
    where?: storiastatoWhereInput
  }


  /**
   * storiastato upsert
   */
  export type storiastatoUpsertArgs = {
    /**
     * Select specific fields to fetch from the storiastato
     */
    select?: storiastatoSelect | null
    /**
     * The filter to search for the storiastato to update in case it exists.
     */
    where: storiastatoWhereUniqueInput
    /**
     * In case the storiastato found by the `where` argument doesn't exist, create a new storiastato with this data.
     */
    create: XOR<storiastatoCreateInput, storiastatoUncheckedCreateInput>
    /**
     * In case the storiastato was found with the provided `where` argument, update it with this data.
     */
    update: XOR<storiastatoUpdateInput, storiastatoUncheckedUpdateInput>
  }


  /**
   * storiastato delete
   */
  export type storiastatoDeleteArgs = {
    /**
     * Select specific fields to fetch from the storiastato
     */
    select?: storiastatoSelect | null
    /**
     * Filter which storiastato to delete.
     */
    where: storiastatoWhereUniqueInput
  }


  /**
   * storiastato deleteMany
   */
  export type storiastatoDeleteManyArgs = {
    /**
     * Filter which storiastatoes to delete
     */
    where?: storiastatoWhereInput
  }


  /**
   * storiastato without action
   */
  export type storiastatoArgs = {
    /**
     * Select specific fields to fetch from the storiastato
     */
    select?: storiastatoSelect | null
  }



  /**
   * Model tecnici
   */


  export type AggregateTecnici = {
    _count: TecniciCountAggregateOutputType | null
    _avg: TecniciAvgAggregateOutputType | null
    _sum: TecniciSumAggregateOutputType | null
    _min: TecniciMinAggregateOutputType | null
    _max: TecniciMaxAggregateOutputType | null
  }

  export type TecniciAvgAggregateOutputType = {
    id: number | null
  }

  export type TecniciSumAggregateOutputType = {
    id: number | null
  }

  export type TecniciMinAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type TecniciMaxAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type TecniciCountAggregateOutputType = {
    id: number
    value: number
    _all: number
  }


  export type TecniciAvgAggregateInputType = {
    id?: true
  }

  export type TecniciSumAggregateInputType = {
    id?: true
  }

  export type TecniciMinAggregateInputType = {
    id?: true
    value?: true
  }

  export type TecniciMaxAggregateInputType = {
    id?: true
    value?: true
  }

  export type TecniciCountAggregateInputType = {
    id?: true
    value?: true
    _all?: true
  }

  export type TecniciAggregateArgs = {
    /**
     * Filter which tecnici to aggregate.
     */
    where?: tecniciWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tecnicis to fetch.
     */
    orderBy?: Enumerable<tecniciOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tecniciWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tecnicis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tecnicis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tecnicis
    **/
    _count?: true | TecniciCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TecniciAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TecniciSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TecniciMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TecniciMaxAggregateInputType
  }

  export type GetTecniciAggregateType<T extends TecniciAggregateArgs> = {
        [P in keyof T & keyof AggregateTecnici]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTecnici[P]>
      : GetScalarType<T[P], AggregateTecnici[P]>
  }




  export type TecniciGroupByArgs = {
    where?: tecniciWhereInput
    orderBy?: Enumerable<tecniciOrderByWithAggregationInput>
    by: TecniciScalarFieldEnum[]
    having?: tecniciScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TecniciCountAggregateInputType | true
    _avg?: TecniciAvgAggregateInputType
    _sum?: TecniciSumAggregateInputType
    _min?: TecniciMinAggregateInputType
    _max?: TecniciMaxAggregateInputType
  }


  export type TecniciGroupByOutputType = {
    id: number
    value: string | null
    _count: TecniciCountAggregateOutputType | null
    _avg: TecniciAvgAggregateOutputType | null
    _sum: TecniciSumAggregateOutputType | null
    _min: TecniciMinAggregateOutputType | null
    _max: TecniciMaxAggregateOutputType | null
  }

  type GetTecniciGroupByPayload<T extends TecniciGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<TecniciGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TecniciGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TecniciGroupByOutputType[P]>
            : GetScalarType<T[P], TecniciGroupByOutputType[P]>
        }
      >
    >


  export type tecniciSelect = {
    id?: boolean
    value?: boolean
    segnalazione?: boolean | tecnici$segnalazioneArgs
    segnalazionestorico?: boolean | tecnici$segnalazionestoricoArgs
    _count?: boolean | TecniciCountOutputTypeArgs
  }


  export type tecniciInclude = {
    segnalazione?: boolean | tecnici$segnalazioneArgs
    segnalazionestorico?: boolean | tecnici$segnalazionestoricoArgs
    _count?: boolean | TecniciCountOutputTypeArgs
  }

  export type tecniciGetPayload<S extends boolean | null | undefined | tecniciArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? tecnici :
    S extends undefined ? never :
    S extends { include: any } & (tecniciArgs | tecniciFindManyArgs)
    ? tecnici  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['include'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['include'][P]>>  :
        P extends '_count' ? TecniciCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (tecniciArgs | tecniciFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['select'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['select'][P]>>  :
        P extends '_count' ? TecniciCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof tecnici ? tecnici[P] : never
  } 
      : tecnici


  type tecniciCountArgs = 
    Omit<tecniciFindManyArgs, 'select' | 'include'> & {
      select?: TecniciCountAggregateInputType | true
    }

  export interface tecniciDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Tecnici that matches the filter.
     * @param {tecniciFindUniqueArgs} args - Arguments to find a Tecnici
     * @example
     * // Get one Tecnici
     * const tecnici = await prisma.tecnici.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tecniciFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, tecniciFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'tecnici'> extends True ? Prisma__tecniciClient<tecniciGetPayload<T>> : Prisma__tecniciClient<tecniciGetPayload<T> | null, null>

    /**
     * Find one Tecnici that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tecniciFindUniqueOrThrowArgs} args - Arguments to find a Tecnici
     * @example
     * // Get one Tecnici
     * const tecnici = await prisma.tecnici.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tecniciFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, tecniciFindUniqueOrThrowArgs>
    ): Prisma__tecniciClient<tecniciGetPayload<T>>

    /**
     * Find the first Tecnici that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tecniciFindFirstArgs} args - Arguments to find a Tecnici
     * @example
     * // Get one Tecnici
     * const tecnici = await prisma.tecnici.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tecniciFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, tecniciFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'tecnici'> extends True ? Prisma__tecniciClient<tecniciGetPayload<T>> : Prisma__tecniciClient<tecniciGetPayload<T> | null, null>

    /**
     * Find the first Tecnici that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tecniciFindFirstOrThrowArgs} args - Arguments to find a Tecnici
     * @example
     * // Get one Tecnici
     * const tecnici = await prisma.tecnici.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tecniciFindFirstOrThrowArgs>(
      args?: SelectSubset<T, tecniciFindFirstOrThrowArgs>
    ): Prisma__tecniciClient<tecniciGetPayload<T>>

    /**
     * Find zero or more Tecnicis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tecniciFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tecnicis
     * const tecnicis = await prisma.tecnici.findMany()
     * 
     * // Get first 10 Tecnicis
     * const tecnicis = await prisma.tecnici.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tecniciWithIdOnly = await prisma.tecnici.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tecniciFindManyArgs>(
      args?: SelectSubset<T, tecniciFindManyArgs>
    ): Prisma.PrismaPromise<Array<tecniciGetPayload<T>>>

    /**
     * Create a Tecnici.
     * @param {tecniciCreateArgs} args - Arguments to create a Tecnici.
     * @example
     * // Create one Tecnici
     * const Tecnici = await prisma.tecnici.create({
     *   data: {
     *     // ... data to create a Tecnici
     *   }
     * })
     * 
    **/
    create<T extends tecniciCreateArgs>(
      args: SelectSubset<T, tecniciCreateArgs>
    ): Prisma__tecniciClient<tecniciGetPayload<T>>

    /**
     * Create many Tecnicis.
     *     @param {tecniciCreateManyArgs} args - Arguments to create many Tecnicis.
     *     @example
     *     // Create many Tecnicis
     *     const tecnici = await prisma.tecnici.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tecniciCreateManyArgs>(
      args?: SelectSubset<T, tecniciCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tecnici.
     * @param {tecniciDeleteArgs} args - Arguments to delete one Tecnici.
     * @example
     * // Delete one Tecnici
     * const Tecnici = await prisma.tecnici.delete({
     *   where: {
     *     // ... filter to delete one Tecnici
     *   }
     * })
     * 
    **/
    delete<T extends tecniciDeleteArgs>(
      args: SelectSubset<T, tecniciDeleteArgs>
    ): Prisma__tecniciClient<tecniciGetPayload<T>>

    /**
     * Update one Tecnici.
     * @param {tecniciUpdateArgs} args - Arguments to update one Tecnici.
     * @example
     * // Update one Tecnici
     * const tecnici = await prisma.tecnici.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tecniciUpdateArgs>(
      args: SelectSubset<T, tecniciUpdateArgs>
    ): Prisma__tecniciClient<tecniciGetPayload<T>>

    /**
     * Delete zero or more Tecnicis.
     * @param {tecniciDeleteManyArgs} args - Arguments to filter Tecnicis to delete.
     * @example
     * // Delete a few Tecnicis
     * const { count } = await prisma.tecnici.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tecniciDeleteManyArgs>(
      args?: SelectSubset<T, tecniciDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tecnicis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tecniciUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tecnicis
     * const tecnici = await prisma.tecnici.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tecniciUpdateManyArgs>(
      args: SelectSubset<T, tecniciUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tecnici.
     * @param {tecniciUpsertArgs} args - Arguments to update or create a Tecnici.
     * @example
     * // Update or create a Tecnici
     * const tecnici = await prisma.tecnici.upsert({
     *   create: {
     *     // ... data to create a Tecnici
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tecnici we want to update
     *   }
     * })
    **/
    upsert<T extends tecniciUpsertArgs>(
      args: SelectSubset<T, tecniciUpsertArgs>
    ): Prisma__tecniciClient<tecniciGetPayload<T>>

    /**
     * Count the number of Tecnicis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tecniciCountArgs} args - Arguments to filter Tecnicis to count.
     * @example
     * // Count the number of Tecnicis
     * const count = await prisma.tecnici.count({
     *   where: {
     *     // ... the filter for the Tecnicis we want to count
     *   }
     * })
    **/
    count<T extends tecniciCountArgs>(
      args?: Subset<T, tecniciCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TecniciCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tecnici.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TecniciAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TecniciAggregateArgs>(args: Subset<T, TecniciAggregateArgs>): Prisma.PrismaPromise<GetTecniciAggregateType<T>>

    /**
     * Group by Tecnici.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TecniciGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TecniciGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TecniciGroupByArgs['orderBy'] }
        : { orderBy?: TecniciGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TecniciGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTecniciGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for tecnici.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__tecniciClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    segnalazione<T extends tecnici$segnalazioneArgs= {}>(args?: Subset<T, tecnici$segnalazioneArgs>): Prisma.PrismaPromise<Array<segnalazioneGetPayload<T>>| Null>;

    segnalazionestorico<T extends tecnici$segnalazionestoricoArgs= {}>(args?: Subset<T, tecnici$segnalazionestoricoArgs>): Prisma.PrismaPromise<Array<segnalazionestoricoGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * tecnici base type for findUnique actions
   */
  export type tecniciFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the tecnici
     */
    select?: tecniciSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tecniciInclude | null
    /**
     * Filter, which tecnici to fetch.
     */
    where: tecniciWhereUniqueInput
  }

  /**
   * tecnici findUnique
   */
  export interface tecniciFindUniqueArgs extends tecniciFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tecnici findUniqueOrThrow
   */
  export type tecniciFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tecnici
     */
    select?: tecniciSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tecniciInclude | null
    /**
     * Filter, which tecnici to fetch.
     */
    where: tecniciWhereUniqueInput
  }


  /**
   * tecnici base type for findFirst actions
   */
  export type tecniciFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the tecnici
     */
    select?: tecniciSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tecniciInclude | null
    /**
     * Filter, which tecnici to fetch.
     */
    where?: tecniciWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tecnicis to fetch.
     */
    orderBy?: Enumerable<tecniciOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tecnicis.
     */
    cursor?: tecniciWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tecnicis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tecnicis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tecnicis.
     */
    distinct?: Enumerable<TecniciScalarFieldEnum>
  }

  /**
   * tecnici findFirst
   */
  export interface tecniciFindFirstArgs extends tecniciFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tecnici findFirstOrThrow
   */
  export type tecniciFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tecnici
     */
    select?: tecniciSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tecniciInclude | null
    /**
     * Filter, which tecnici to fetch.
     */
    where?: tecniciWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tecnicis to fetch.
     */
    orderBy?: Enumerable<tecniciOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tecnicis.
     */
    cursor?: tecniciWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tecnicis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tecnicis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tecnicis.
     */
    distinct?: Enumerable<TecniciScalarFieldEnum>
  }


  /**
   * tecnici findMany
   */
  export type tecniciFindManyArgs = {
    /**
     * Select specific fields to fetch from the tecnici
     */
    select?: tecniciSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tecniciInclude | null
    /**
     * Filter, which tecnicis to fetch.
     */
    where?: tecniciWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tecnicis to fetch.
     */
    orderBy?: Enumerable<tecniciOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tecnicis.
     */
    cursor?: tecniciWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tecnicis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tecnicis.
     */
    skip?: number
    distinct?: Enumerable<TecniciScalarFieldEnum>
  }


  /**
   * tecnici create
   */
  export type tecniciCreateArgs = {
    /**
     * Select specific fields to fetch from the tecnici
     */
    select?: tecniciSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tecniciInclude | null
    /**
     * The data needed to create a tecnici.
     */
    data: XOR<tecniciCreateInput, tecniciUncheckedCreateInput>
  }


  /**
   * tecnici createMany
   */
  export type tecniciCreateManyArgs = {
    /**
     * The data used to create many tecnicis.
     */
    data: Enumerable<tecniciCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * tecnici update
   */
  export type tecniciUpdateArgs = {
    /**
     * Select specific fields to fetch from the tecnici
     */
    select?: tecniciSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tecniciInclude | null
    /**
     * The data needed to update a tecnici.
     */
    data: XOR<tecniciUpdateInput, tecniciUncheckedUpdateInput>
    /**
     * Choose, which tecnici to update.
     */
    where: tecniciWhereUniqueInput
  }


  /**
   * tecnici updateMany
   */
  export type tecniciUpdateManyArgs = {
    /**
     * The data used to update tecnicis.
     */
    data: XOR<tecniciUpdateManyMutationInput, tecniciUncheckedUpdateManyInput>
    /**
     * Filter which tecnicis to update
     */
    where?: tecniciWhereInput
  }


  /**
   * tecnici upsert
   */
  export type tecniciUpsertArgs = {
    /**
     * Select specific fields to fetch from the tecnici
     */
    select?: tecniciSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tecniciInclude | null
    /**
     * The filter to search for the tecnici to update in case it exists.
     */
    where: tecniciWhereUniqueInput
    /**
     * In case the tecnici found by the `where` argument doesn't exist, create a new tecnici with this data.
     */
    create: XOR<tecniciCreateInput, tecniciUncheckedCreateInput>
    /**
     * In case the tecnici was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tecniciUpdateInput, tecniciUncheckedUpdateInput>
  }


  /**
   * tecnici delete
   */
  export type tecniciDeleteArgs = {
    /**
     * Select specific fields to fetch from the tecnici
     */
    select?: tecniciSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tecniciInclude | null
    /**
     * Filter which tecnici to delete.
     */
    where: tecniciWhereUniqueInput
  }


  /**
   * tecnici deleteMany
   */
  export type tecniciDeleteManyArgs = {
    /**
     * Filter which tecnicis to delete
     */
    where?: tecniciWhereInput
  }


  /**
   * tecnici.segnalazione
   */
  export type tecnici$segnalazioneArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    where?: segnalazioneWhereInput
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    cursor?: segnalazioneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * tecnici.segnalazionestorico
   */
  export type tecnici$segnalazionestoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    where?: segnalazionestoricoWhereInput
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    cursor?: segnalazionestoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * tecnici without action
   */
  export type tecniciArgs = {
    /**
     * Select specific fields to fetch from the tecnici
     */
    select?: tecniciSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tecniciInclude | null
  }



  /**
   * Model tipoevento
   */


  export type AggregateTipoevento = {
    _count: TipoeventoCountAggregateOutputType | null
    _avg: TipoeventoAvgAggregateOutputType | null
    _sum: TipoeventoSumAggregateOutputType | null
    _min: TipoeventoMinAggregateOutputType | null
    _max: TipoeventoMaxAggregateOutputType | null
  }

  export type TipoeventoAvgAggregateOutputType = {
    id: number | null
  }

  export type TipoeventoSumAggregateOutputType = {
    id: number | null
  }

  export type TipoeventoMinAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type TipoeventoMaxAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type TipoeventoCountAggregateOutputType = {
    id: number
    value: number
    _all: number
  }


  export type TipoeventoAvgAggregateInputType = {
    id?: true
  }

  export type TipoeventoSumAggregateInputType = {
    id?: true
  }

  export type TipoeventoMinAggregateInputType = {
    id?: true
    value?: true
  }

  export type TipoeventoMaxAggregateInputType = {
    id?: true
    value?: true
  }

  export type TipoeventoCountAggregateInputType = {
    id?: true
    value?: true
    _all?: true
  }

  export type TipoeventoAggregateArgs = {
    /**
     * Filter which tipoevento to aggregate.
     */
    where?: tipoeventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoeventos to fetch.
     */
    orderBy?: Enumerable<tipoeventoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipoeventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoeventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoeventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipoeventos
    **/
    _count?: true | TipoeventoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoeventoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoeventoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoeventoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoeventoMaxAggregateInputType
  }

  export type GetTipoeventoAggregateType<T extends TipoeventoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoevento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoevento[P]>
      : GetScalarType<T[P], AggregateTipoevento[P]>
  }




  export type TipoeventoGroupByArgs = {
    where?: tipoeventoWhereInput
    orderBy?: Enumerable<tipoeventoOrderByWithAggregationInput>
    by: TipoeventoScalarFieldEnum[]
    having?: tipoeventoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoeventoCountAggregateInputType | true
    _avg?: TipoeventoAvgAggregateInputType
    _sum?: TipoeventoSumAggregateInputType
    _min?: TipoeventoMinAggregateInputType
    _max?: TipoeventoMaxAggregateInputType
  }


  export type TipoeventoGroupByOutputType = {
    id: number
    value: string | null
    _count: TipoeventoCountAggregateOutputType | null
    _avg: TipoeventoAvgAggregateOutputType | null
    _sum: TipoeventoSumAggregateOutputType | null
    _min: TipoeventoMinAggregateOutputType | null
    _max: TipoeventoMaxAggregateOutputType | null
  }

  type GetTipoeventoGroupByPayload<T extends TipoeventoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<TipoeventoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoeventoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoeventoGroupByOutputType[P]>
            : GetScalarType<T[P], TipoeventoGroupByOutputType[P]>
        }
      >
    >


  export type tipoeventoSelect = {
    id?: boolean
    value?: boolean
    segnalazione?: boolean | tipoevento$segnalazioneArgs
    segnalazionestorico?: boolean | tipoevento$segnalazionestoricoArgs
    _count?: boolean | TipoeventoCountOutputTypeArgs
  }


  export type tipoeventoInclude = {
    segnalazione?: boolean | tipoevento$segnalazioneArgs
    segnalazionestorico?: boolean | tipoevento$segnalazionestoricoArgs
    _count?: boolean | TipoeventoCountOutputTypeArgs
  }

  export type tipoeventoGetPayload<S extends boolean | null | undefined | tipoeventoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? tipoevento :
    S extends undefined ? never :
    S extends { include: any } & (tipoeventoArgs | tipoeventoFindManyArgs)
    ? tipoevento  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['include'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['include'][P]>>  :
        P extends '_count' ? TipoeventoCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (tipoeventoArgs | tipoeventoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['select'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['select'][P]>>  :
        P extends '_count' ? TipoeventoCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof tipoevento ? tipoevento[P] : never
  } 
      : tipoevento


  type tipoeventoCountArgs = 
    Omit<tipoeventoFindManyArgs, 'select' | 'include'> & {
      select?: TipoeventoCountAggregateInputType | true
    }

  export interface tipoeventoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Tipoevento that matches the filter.
     * @param {tipoeventoFindUniqueArgs} args - Arguments to find a Tipoevento
     * @example
     * // Get one Tipoevento
     * const tipoevento = await prisma.tipoevento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tipoeventoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, tipoeventoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'tipoevento'> extends True ? Prisma__tipoeventoClient<tipoeventoGetPayload<T>> : Prisma__tipoeventoClient<tipoeventoGetPayload<T> | null, null>

    /**
     * Find one Tipoevento that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tipoeventoFindUniqueOrThrowArgs} args - Arguments to find a Tipoevento
     * @example
     * // Get one Tipoevento
     * const tipoevento = await prisma.tipoevento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tipoeventoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, tipoeventoFindUniqueOrThrowArgs>
    ): Prisma__tipoeventoClient<tipoeventoGetPayload<T>>

    /**
     * Find the first Tipoevento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoeventoFindFirstArgs} args - Arguments to find a Tipoevento
     * @example
     * // Get one Tipoevento
     * const tipoevento = await prisma.tipoevento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tipoeventoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, tipoeventoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'tipoevento'> extends True ? Prisma__tipoeventoClient<tipoeventoGetPayload<T>> : Prisma__tipoeventoClient<tipoeventoGetPayload<T> | null, null>

    /**
     * Find the first Tipoevento that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoeventoFindFirstOrThrowArgs} args - Arguments to find a Tipoevento
     * @example
     * // Get one Tipoevento
     * const tipoevento = await prisma.tipoevento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tipoeventoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, tipoeventoFindFirstOrThrowArgs>
    ): Prisma__tipoeventoClient<tipoeventoGetPayload<T>>

    /**
     * Find zero or more Tipoeventos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoeventoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipoeventos
     * const tipoeventos = await prisma.tipoevento.findMany()
     * 
     * // Get first 10 Tipoeventos
     * const tipoeventos = await prisma.tipoevento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoeventoWithIdOnly = await prisma.tipoevento.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tipoeventoFindManyArgs>(
      args?: SelectSubset<T, tipoeventoFindManyArgs>
    ): Prisma.PrismaPromise<Array<tipoeventoGetPayload<T>>>

    /**
     * Create a Tipoevento.
     * @param {tipoeventoCreateArgs} args - Arguments to create a Tipoevento.
     * @example
     * // Create one Tipoevento
     * const Tipoevento = await prisma.tipoevento.create({
     *   data: {
     *     // ... data to create a Tipoevento
     *   }
     * })
     * 
    **/
    create<T extends tipoeventoCreateArgs>(
      args: SelectSubset<T, tipoeventoCreateArgs>
    ): Prisma__tipoeventoClient<tipoeventoGetPayload<T>>

    /**
     * Create many Tipoeventos.
     *     @param {tipoeventoCreateManyArgs} args - Arguments to create many Tipoeventos.
     *     @example
     *     // Create many Tipoeventos
     *     const tipoevento = await prisma.tipoevento.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tipoeventoCreateManyArgs>(
      args?: SelectSubset<T, tipoeventoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tipoevento.
     * @param {tipoeventoDeleteArgs} args - Arguments to delete one Tipoevento.
     * @example
     * // Delete one Tipoevento
     * const Tipoevento = await prisma.tipoevento.delete({
     *   where: {
     *     // ... filter to delete one Tipoevento
     *   }
     * })
     * 
    **/
    delete<T extends tipoeventoDeleteArgs>(
      args: SelectSubset<T, tipoeventoDeleteArgs>
    ): Prisma__tipoeventoClient<tipoeventoGetPayload<T>>

    /**
     * Update one Tipoevento.
     * @param {tipoeventoUpdateArgs} args - Arguments to update one Tipoevento.
     * @example
     * // Update one Tipoevento
     * const tipoevento = await prisma.tipoevento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tipoeventoUpdateArgs>(
      args: SelectSubset<T, tipoeventoUpdateArgs>
    ): Prisma__tipoeventoClient<tipoeventoGetPayload<T>>

    /**
     * Delete zero or more Tipoeventos.
     * @param {tipoeventoDeleteManyArgs} args - Arguments to filter Tipoeventos to delete.
     * @example
     * // Delete a few Tipoeventos
     * const { count } = await prisma.tipoevento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tipoeventoDeleteManyArgs>(
      args?: SelectSubset<T, tipoeventoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipoeventos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoeventoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipoeventos
     * const tipoevento = await prisma.tipoevento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tipoeventoUpdateManyArgs>(
      args: SelectSubset<T, tipoeventoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tipoevento.
     * @param {tipoeventoUpsertArgs} args - Arguments to update or create a Tipoevento.
     * @example
     * // Update or create a Tipoevento
     * const tipoevento = await prisma.tipoevento.upsert({
     *   create: {
     *     // ... data to create a Tipoevento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipoevento we want to update
     *   }
     * })
    **/
    upsert<T extends tipoeventoUpsertArgs>(
      args: SelectSubset<T, tipoeventoUpsertArgs>
    ): Prisma__tipoeventoClient<tipoeventoGetPayload<T>>

    /**
     * Count the number of Tipoeventos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoeventoCountArgs} args - Arguments to filter Tipoeventos to count.
     * @example
     * // Count the number of Tipoeventos
     * const count = await prisma.tipoevento.count({
     *   where: {
     *     // ... the filter for the Tipoeventos we want to count
     *   }
     * })
    **/
    count<T extends tipoeventoCountArgs>(
      args?: Subset<T, tipoeventoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoeventoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipoevento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoeventoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoeventoAggregateArgs>(args: Subset<T, TipoeventoAggregateArgs>): Prisma.PrismaPromise<GetTipoeventoAggregateType<T>>

    /**
     * Group by Tipoevento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoeventoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoeventoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoeventoGroupByArgs['orderBy'] }
        : { orderBy?: TipoeventoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoeventoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoeventoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for tipoevento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__tipoeventoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    segnalazione<T extends tipoevento$segnalazioneArgs= {}>(args?: Subset<T, tipoevento$segnalazioneArgs>): Prisma.PrismaPromise<Array<segnalazioneGetPayload<T>>| Null>;

    segnalazionestorico<T extends tipoevento$segnalazionestoricoArgs= {}>(args?: Subset<T, tipoevento$segnalazionestoricoArgs>): Prisma.PrismaPromise<Array<segnalazionestoricoGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * tipoevento base type for findUnique actions
   */
  export type tipoeventoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the tipoevento
     */
    select?: tipoeventoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoeventoInclude | null
    /**
     * Filter, which tipoevento to fetch.
     */
    where: tipoeventoWhereUniqueInput
  }

  /**
   * tipoevento findUnique
   */
  export interface tipoeventoFindUniqueArgs extends tipoeventoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tipoevento findUniqueOrThrow
   */
  export type tipoeventoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tipoevento
     */
    select?: tipoeventoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoeventoInclude | null
    /**
     * Filter, which tipoevento to fetch.
     */
    where: tipoeventoWhereUniqueInput
  }


  /**
   * tipoevento base type for findFirst actions
   */
  export type tipoeventoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the tipoevento
     */
    select?: tipoeventoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoeventoInclude | null
    /**
     * Filter, which tipoevento to fetch.
     */
    where?: tipoeventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoeventos to fetch.
     */
    orderBy?: Enumerable<tipoeventoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipoeventos.
     */
    cursor?: tipoeventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoeventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoeventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipoeventos.
     */
    distinct?: Enumerable<TipoeventoScalarFieldEnum>
  }

  /**
   * tipoevento findFirst
   */
  export interface tipoeventoFindFirstArgs extends tipoeventoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tipoevento findFirstOrThrow
   */
  export type tipoeventoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tipoevento
     */
    select?: tipoeventoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoeventoInclude | null
    /**
     * Filter, which tipoevento to fetch.
     */
    where?: tipoeventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoeventos to fetch.
     */
    orderBy?: Enumerable<tipoeventoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipoeventos.
     */
    cursor?: tipoeventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoeventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoeventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipoeventos.
     */
    distinct?: Enumerable<TipoeventoScalarFieldEnum>
  }


  /**
   * tipoevento findMany
   */
  export type tipoeventoFindManyArgs = {
    /**
     * Select specific fields to fetch from the tipoevento
     */
    select?: tipoeventoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoeventoInclude | null
    /**
     * Filter, which tipoeventos to fetch.
     */
    where?: tipoeventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoeventos to fetch.
     */
    orderBy?: Enumerable<tipoeventoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipoeventos.
     */
    cursor?: tipoeventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoeventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoeventos.
     */
    skip?: number
    distinct?: Enumerable<TipoeventoScalarFieldEnum>
  }


  /**
   * tipoevento create
   */
  export type tipoeventoCreateArgs = {
    /**
     * Select specific fields to fetch from the tipoevento
     */
    select?: tipoeventoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoeventoInclude | null
    /**
     * The data needed to create a tipoevento.
     */
    data: XOR<tipoeventoCreateInput, tipoeventoUncheckedCreateInput>
  }


  /**
   * tipoevento createMany
   */
  export type tipoeventoCreateManyArgs = {
    /**
     * The data used to create many tipoeventos.
     */
    data: Enumerable<tipoeventoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * tipoevento update
   */
  export type tipoeventoUpdateArgs = {
    /**
     * Select specific fields to fetch from the tipoevento
     */
    select?: tipoeventoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoeventoInclude | null
    /**
     * The data needed to update a tipoevento.
     */
    data: XOR<tipoeventoUpdateInput, tipoeventoUncheckedUpdateInput>
    /**
     * Choose, which tipoevento to update.
     */
    where: tipoeventoWhereUniqueInput
  }


  /**
   * tipoevento updateMany
   */
  export type tipoeventoUpdateManyArgs = {
    /**
     * The data used to update tipoeventos.
     */
    data: XOR<tipoeventoUpdateManyMutationInput, tipoeventoUncheckedUpdateManyInput>
    /**
     * Filter which tipoeventos to update
     */
    where?: tipoeventoWhereInput
  }


  /**
   * tipoevento upsert
   */
  export type tipoeventoUpsertArgs = {
    /**
     * Select specific fields to fetch from the tipoevento
     */
    select?: tipoeventoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoeventoInclude | null
    /**
     * The filter to search for the tipoevento to update in case it exists.
     */
    where: tipoeventoWhereUniqueInput
    /**
     * In case the tipoevento found by the `where` argument doesn't exist, create a new tipoevento with this data.
     */
    create: XOR<tipoeventoCreateInput, tipoeventoUncheckedCreateInput>
    /**
     * In case the tipoevento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipoeventoUpdateInput, tipoeventoUncheckedUpdateInput>
  }


  /**
   * tipoevento delete
   */
  export type tipoeventoDeleteArgs = {
    /**
     * Select specific fields to fetch from the tipoevento
     */
    select?: tipoeventoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoeventoInclude | null
    /**
     * Filter which tipoevento to delete.
     */
    where: tipoeventoWhereUniqueInput
  }


  /**
   * tipoevento deleteMany
   */
  export type tipoeventoDeleteManyArgs = {
    /**
     * Filter which tipoeventos to delete
     */
    where?: tipoeventoWhereInput
  }


  /**
   * tipoevento.segnalazione
   */
  export type tipoevento$segnalazioneArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    where?: segnalazioneWhereInput
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    cursor?: segnalazioneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * tipoevento.segnalazionestorico
   */
  export type tipoevento$segnalazionestoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    where?: segnalazionestoricoWhereInput
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    cursor?: segnalazionestoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * tipoevento without action
   */
  export type tipoeventoArgs = {
    /**
     * Select specific fields to fetch from the tipoevento
     */
    select?: tipoeventoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoeventoInclude | null
  }



  /**
   * Model tipologia
   */


  export type AggregateTipologia = {
    _count: TipologiaCountAggregateOutputType | null
    _avg: TipologiaAvgAggregateOutputType | null
    _sum: TipologiaSumAggregateOutputType | null
    _min: TipologiaMinAggregateOutputType | null
    _max: TipologiaMaxAggregateOutputType | null
  }

  export type TipologiaAvgAggregateOutputType = {
    id: number | null
  }

  export type TipologiaSumAggregateOutputType = {
    id: number | null
  }

  export type TipologiaMinAggregateOutputType = {
    id: number | null
    proprieta: string | null
  }

  export type TipologiaMaxAggregateOutputType = {
    id: number | null
    proprieta: string | null
  }

  export type TipologiaCountAggregateOutputType = {
    id: number
    proprieta: number
    _all: number
  }


  export type TipologiaAvgAggregateInputType = {
    id?: true
  }

  export type TipologiaSumAggregateInputType = {
    id?: true
  }

  export type TipologiaMinAggregateInputType = {
    id?: true
    proprieta?: true
  }

  export type TipologiaMaxAggregateInputType = {
    id?: true
    proprieta?: true
  }

  export type TipologiaCountAggregateInputType = {
    id?: true
    proprieta?: true
    _all?: true
  }

  export type TipologiaAggregateArgs = {
    /**
     * Filter which tipologia to aggregate.
     */
    where?: tipologiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipologias to fetch.
     */
    orderBy?: Enumerable<tipologiaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipologiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipologias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipologias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipologias
    **/
    _count?: true | TipologiaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipologiaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipologiaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipologiaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipologiaMaxAggregateInputType
  }

  export type GetTipologiaAggregateType<T extends TipologiaAggregateArgs> = {
        [P in keyof T & keyof AggregateTipologia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipologia[P]>
      : GetScalarType<T[P], AggregateTipologia[P]>
  }




  export type TipologiaGroupByArgs = {
    where?: tipologiaWhereInput
    orderBy?: Enumerable<tipologiaOrderByWithAggregationInput>
    by: TipologiaScalarFieldEnum[]
    having?: tipologiaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipologiaCountAggregateInputType | true
    _avg?: TipologiaAvgAggregateInputType
    _sum?: TipologiaSumAggregateInputType
    _min?: TipologiaMinAggregateInputType
    _max?: TipologiaMaxAggregateInputType
  }


  export type TipologiaGroupByOutputType = {
    id: number
    proprieta: string | null
    _count: TipologiaCountAggregateOutputType | null
    _avg: TipologiaAvgAggregateOutputType | null
    _sum: TipologiaSumAggregateOutputType | null
    _min: TipologiaMinAggregateOutputType | null
    _max: TipologiaMaxAggregateOutputType | null
  }

  type GetTipologiaGroupByPayload<T extends TipologiaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<TipologiaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipologiaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipologiaGroupByOutputType[P]>
            : GetScalarType<T[P], TipologiaGroupByOutputType[P]>
        }
      >
    >


  export type tipologiaSelect = {
    id?: boolean
    proprieta?: boolean
  }


  export type tipologiaGetPayload<S extends boolean | null | undefined | tipologiaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? tipologia :
    S extends undefined ? never :
    S extends { include: any } & (tipologiaArgs | tipologiaFindManyArgs)
    ? tipologia 
    : S extends { select: any } & (tipologiaArgs | tipologiaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof tipologia ? tipologia[P] : never
  } 
      : tipologia


  type tipologiaCountArgs = 
    Omit<tipologiaFindManyArgs, 'select' | 'include'> & {
      select?: TipologiaCountAggregateInputType | true
    }

  export interface tipologiaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Tipologia that matches the filter.
     * @param {tipologiaFindUniqueArgs} args - Arguments to find a Tipologia
     * @example
     * // Get one Tipologia
     * const tipologia = await prisma.tipologia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tipologiaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, tipologiaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'tipologia'> extends True ? Prisma__tipologiaClient<tipologiaGetPayload<T>> : Prisma__tipologiaClient<tipologiaGetPayload<T> | null, null>

    /**
     * Find one Tipologia that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tipologiaFindUniqueOrThrowArgs} args - Arguments to find a Tipologia
     * @example
     * // Get one Tipologia
     * const tipologia = await prisma.tipologia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tipologiaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, tipologiaFindUniqueOrThrowArgs>
    ): Prisma__tipologiaClient<tipologiaGetPayload<T>>

    /**
     * Find the first Tipologia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipologiaFindFirstArgs} args - Arguments to find a Tipologia
     * @example
     * // Get one Tipologia
     * const tipologia = await prisma.tipologia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tipologiaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, tipologiaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'tipologia'> extends True ? Prisma__tipologiaClient<tipologiaGetPayload<T>> : Prisma__tipologiaClient<tipologiaGetPayload<T> | null, null>

    /**
     * Find the first Tipologia that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipologiaFindFirstOrThrowArgs} args - Arguments to find a Tipologia
     * @example
     * // Get one Tipologia
     * const tipologia = await prisma.tipologia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tipologiaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, tipologiaFindFirstOrThrowArgs>
    ): Prisma__tipologiaClient<tipologiaGetPayload<T>>

    /**
     * Find zero or more Tipologias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipologiaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipologias
     * const tipologias = await prisma.tipologia.findMany()
     * 
     * // Get first 10 Tipologias
     * const tipologias = await prisma.tipologia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipologiaWithIdOnly = await prisma.tipologia.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tipologiaFindManyArgs>(
      args?: SelectSubset<T, tipologiaFindManyArgs>
    ): Prisma.PrismaPromise<Array<tipologiaGetPayload<T>>>

    /**
     * Create a Tipologia.
     * @param {tipologiaCreateArgs} args - Arguments to create a Tipologia.
     * @example
     * // Create one Tipologia
     * const Tipologia = await prisma.tipologia.create({
     *   data: {
     *     // ... data to create a Tipologia
     *   }
     * })
     * 
    **/
    create<T extends tipologiaCreateArgs>(
      args: SelectSubset<T, tipologiaCreateArgs>
    ): Prisma__tipologiaClient<tipologiaGetPayload<T>>

    /**
     * Create many Tipologias.
     *     @param {tipologiaCreateManyArgs} args - Arguments to create many Tipologias.
     *     @example
     *     // Create many Tipologias
     *     const tipologia = await prisma.tipologia.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tipologiaCreateManyArgs>(
      args?: SelectSubset<T, tipologiaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tipologia.
     * @param {tipologiaDeleteArgs} args - Arguments to delete one Tipologia.
     * @example
     * // Delete one Tipologia
     * const Tipologia = await prisma.tipologia.delete({
     *   where: {
     *     // ... filter to delete one Tipologia
     *   }
     * })
     * 
    **/
    delete<T extends tipologiaDeleteArgs>(
      args: SelectSubset<T, tipologiaDeleteArgs>
    ): Prisma__tipologiaClient<tipologiaGetPayload<T>>

    /**
     * Update one Tipologia.
     * @param {tipologiaUpdateArgs} args - Arguments to update one Tipologia.
     * @example
     * // Update one Tipologia
     * const tipologia = await prisma.tipologia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tipologiaUpdateArgs>(
      args: SelectSubset<T, tipologiaUpdateArgs>
    ): Prisma__tipologiaClient<tipologiaGetPayload<T>>

    /**
     * Delete zero or more Tipologias.
     * @param {tipologiaDeleteManyArgs} args - Arguments to filter Tipologias to delete.
     * @example
     * // Delete a few Tipologias
     * const { count } = await prisma.tipologia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tipologiaDeleteManyArgs>(
      args?: SelectSubset<T, tipologiaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipologias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipologiaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipologias
     * const tipologia = await prisma.tipologia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tipologiaUpdateManyArgs>(
      args: SelectSubset<T, tipologiaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tipologia.
     * @param {tipologiaUpsertArgs} args - Arguments to update or create a Tipologia.
     * @example
     * // Update or create a Tipologia
     * const tipologia = await prisma.tipologia.upsert({
     *   create: {
     *     // ... data to create a Tipologia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipologia we want to update
     *   }
     * })
    **/
    upsert<T extends tipologiaUpsertArgs>(
      args: SelectSubset<T, tipologiaUpsertArgs>
    ): Prisma__tipologiaClient<tipologiaGetPayload<T>>

    /**
     * Count the number of Tipologias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipologiaCountArgs} args - Arguments to filter Tipologias to count.
     * @example
     * // Count the number of Tipologias
     * const count = await prisma.tipologia.count({
     *   where: {
     *     // ... the filter for the Tipologias we want to count
     *   }
     * })
    **/
    count<T extends tipologiaCountArgs>(
      args?: Subset<T, tipologiaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipologiaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipologia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipologiaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipologiaAggregateArgs>(args: Subset<T, TipologiaAggregateArgs>): Prisma.PrismaPromise<GetTipologiaAggregateType<T>>

    /**
     * Group by Tipologia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipologiaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipologiaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipologiaGroupByArgs['orderBy'] }
        : { orderBy?: TipologiaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipologiaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipologiaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for tipologia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__tipologiaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * tipologia base type for findUnique actions
   */
  export type tipologiaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the tipologia
     */
    select?: tipologiaSelect | null
    /**
     * Filter, which tipologia to fetch.
     */
    where: tipologiaWhereUniqueInput
  }

  /**
   * tipologia findUnique
   */
  export interface tipologiaFindUniqueArgs extends tipologiaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tipologia findUniqueOrThrow
   */
  export type tipologiaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tipologia
     */
    select?: tipologiaSelect | null
    /**
     * Filter, which tipologia to fetch.
     */
    where: tipologiaWhereUniqueInput
  }


  /**
   * tipologia base type for findFirst actions
   */
  export type tipologiaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the tipologia
     */
    select?: tipologiaSelect | null
    /**
     * Filter, which tipologia to fetch.
     */
    where?: tipologiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipologias to fetch.
     */
    orderBy?: Enumerable<tipologiaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipologias.
     */
    cursor?: tipologiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipologias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipologias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipologias.
     */
    distinct?: Enumerable<TipologiaScalarFieldEnum>
  }

  /**
   * tipologia findFirst
   */
  export interface tipologiaFindFirstArgs extends tipologiaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tipologia findFirstOrThrow
   */
  export type tipologiaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tipologia
     */
    select?: tipologiaSelect | null
    /**
     * Filter, which tipologia to fetch.
     */
    where?: tipologiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipologias to fetch.
     */
    orderBy?: Enumerable<tipologiaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipologias.
     */
    cursor?: tipologiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipologias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipologias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipologias.
     */
    distinct?: Enumerable<TipologiaScalarFieldEnum>
  }


  /**
   * tipologia findMany
   */
  export type tipologiaFindManyArgs = {
    /**
     * Select specific fields to fetch from the tipologia
     */
    select?: tipologiaSelect | null
    /**
     * Filter, which tipologias to fetch.
     */
    where?: tipologiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipologias to fetch.
     */
    orderBy?: Enumerable<tipologiaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipologias.
     */
    cursor?: tipologiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipologias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipologias.
     */
    skip?: number
    distinct?: Enumerable<TipologiaScalarFieldEnum>
  }


  /**
   * tipologia create
   */
  export type tipologiaCreateArgs = {
    /**
     * Select specific fields to fetch from the tipologia
     */
    select?: tipologiaSelect | null
    /**
     * The data needed to create a tipologia.
     */
    data: XOR<tipologiaCreateInput, tipologiaUncheckedCreateInput>
  }


  /**
   * tipologia createMany
   */
  export type tipologiaCreateManyArgs = {
    /**
     * The data used to create many tipologias.
     */
    data: Enumerable<tipologiaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * tipologia update
   */
  export type tipologiaUpdateArgs = {
    /**
     * Select specific fields to fetch from the tipologia
     */
    select?: tipologiaSelect | null
    /**
     * The data needed to update a tipologia.
     */
    data: XOR<tipologiaUpdateInput, tipologiaUncheckedUpdateInput>
    /**
     * Choose, which tipologia to update.
     */
    where: tipologiaWhereUniqueInput
  }


  /**
   * tipologia updateMany
   */
  export type tipologiaUpdateManyArgs = {
    /**
     * The data used to update tipologias.
     */
    data: XOR<tipologiaUpdateManyMutationInput, tipologiaUncheckedUpdateManyInput>
    /**
     * Filter which tipologias to update
     */
    where?: tipologiaWhereInput
  }


  /**
   * tipologia upsert
   */
  export type tipologiaUpsertArgs = {
    /**
     * Select specific fields to fetch from the tipologia
     */
    select?: tipologiaSelect | null
    /**
     * The filter to search for the tipologia to update in case it exists.
     */
    where: tipologiaWhereUniqueInput
    /**
     * In case the tipologia found by the `where` argument doesn't exist, create a new tipologia with this data.
     */
    create: XOR<tipologiaCreateInput, tipologiaUncheckedCreateInput>
    /**
     * In case the tipologia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipologiaUpdateInput, tipologiaUncheckedUpdateInput>
  }


  /**
   * tipologia delete
   */
  export type tipologiaDeleteArgs = {
    /**
     * Select specific fields to fetch from the tipologia
     */
    select?: tipologiaSelect | null
    /**
     * Filter which tipologia to delete.
     */
    where: tipologiaWhereUniqueInput
  }


  /**
   * tipologia deleteMany
   */
  export type tipologiaDeleteManyArgs = {
    /**
     * Filter which tipologias to delete
     */
    where?: tipologiaWhereInput
  }


  /**
   * tipologia without action
   */
  export type tipologiaArgs = {
    /**
     * Select specific fields to fetch from the tipologia
     */
    select?: tipologiaSelect | null
  }



  /**
   * Model tipooggetto
   */


  export type AggregateTipooggetto = {
    _count: TipooggettoCountAggregateOutputType | null
    _avg: TipooggettoAvgAggregateOutputType | null
    _sum: TipooggettoSumAggregateOutputType | null
    _min: TipooggettoMinAggregateOutputType | null
    _max: TipooggettoMaxAggregateOutputType | null
  }

  export type TipooggettoAvgAggregateOutputType = {
    id: number | null
  }

  export type TipooggettoSumAggregateOutputType = {
    id: number | null
  }

  export type TipooggettoMinAggregateOutputType = {
    id: number | null
    value: string | null
    tabellaNome: string | null
  }

  export type TipooggettoMaxAggregateOutputType = {
    id: number | null
    value: string | null
    tabellaNome: string | null
  }

  export type TipooggettoCountAggregateOutputType = {
    id: number
    value: number
    tabellaNome: number
    _all: number
  }


  export type TipooggettoAvgAggregateInputType = {
    id?: true
  }

  export type TipooggettoSumAggregateInputType = {
    id?: true
  }

  export type TipooggettoMinAggregateInputType = {
    id?: true
    value?: true
    tabellaNome?: true
  }

  export type TipooggettoMaxAggregateInputType = {
    id?: true
    value?: true
    tabellaNome?: true
  }

  export type TipooggettoCountAggregateInputType = {
    id?: true
    value?: true
    tabellaNome?: true
    _all?: true
  }

  export type TipooggettoAggregateArgs = {
    /**
     * Filter which tipooggetto to aggregate.
     */
    where?: tipooggettoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipooggettos to fetch.
     */
    orderBy?: Enumerable<tipooggettoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipooggettoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipooggettos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipooggettos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipooggettos
    **/
    _count?: true | TipooggettoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipooggettoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipooggettoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipooggettoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipooggettoMaxAggregateInputType
  }

  export type GetTipooggettoAggregateType<T extends TipooggettoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipooggetto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipooggetto[P]>
      : GetScalarType<T[P], AggregateTipooggetto[P]>
  }




  export type TipooggettoGroupByArgs = {
    where?: tipooggettoWhereInput
    orderBy?: Enumerable<tipooggettoOrderByWithAggregationInput>
    by: TipooggettoScalarFieldEnum[]
    having?: tipooggettoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipooggettoCountAggregateInputType | true
    _avg?: TipooggettoAvgAggregateInputType
    _sum?: TipooggettoSumAggregateInputType
    _min?: TipooggettoMinAggregateInputType
    _max?: TipooggettoMaxAggregateInputType
  }


  export type TipooggettoGroupByOutputType = {
    id: number
    value: string | null
    tabellaNome: string | null
    _count: TipooggettoCountAggregateOutputType | null
    _avg: TipooggettoAvgAggregateOutputType | null
    _sum: TipooggettoSumAggregateOutputType | null
    _min: TipooggettoMinAggregateOutputType | null
    _max: TipooggettoMaxAggregateOutputType | null
  }

  type GetTipooggettoGroupByPayload<T extends TipooggettoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<TipooggettoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipooggettoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipooggettoGroupByOutputType[P]>
            : GetScalarType<T[P], TipooggettoGroupByOutputType[P]>
        }
      >
    >


  export type tipooggettoSelect = {
    id?: boolean
    value?: boolean
    tabellaNome?: boolean
  }


  export type tipooggettoGetPayload<S extends boolean | null | undefined | tipooggettoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? tipooggetto :
    S extends undefined ? never :
    S extends { include: any } & (tipooggettoArgs | tipooggettoFindManyArgs)
    ? tipooggetto 
    : S extends { select: any } & (tipooggettoArgs | tipooggettoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof tipooggetto ? tipooggetto[P] : never
  } 
      : tipooggetto


  type tipooggettoCountArgs = 
    Omit<tipooggettoFindManyArgs, 'select' | 'include'> & {
      select?: TipooggettoCountAggregateInputType | true
    }

  export interface tipooggettoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Tipooggetto that matches the filter.
     * @param {tipooggettoFindUniqueArgs} args - Arguments to find a Tipooggetto
     * @example
     * // Get one Tipooggetto
     * const tipooggetto = await prisma.tipooggetto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tipooggettoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, tipooggettoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'tipooggetto'> extends True ? Prisma__tipooggettoClient<tipooggettoGetPayload<T>> : Prisma__tipooggettoClient<tipooggettoGetPayload<T> | null, null>

    /**
     * Find one Tipooggetto that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tipooggettoFindUniqueOrThrowArgs} args - Arguments to find a Tipooggetto
     * @example
     * // Get one Tipooggetto
     * const tipooggetto = await prisma.tipooggetto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tipooggettoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, tipooggettoFindUniqueOrThrowArgs>
    ): Prisma__tipooggettoClient<tipooggettoGetPayload<T>>

    /**
     * Find the first Tipooggetto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipooggettoFindFirstArgs} args - Arguments to find a Tipooggetto
     * @example
     * // Get one Tipooggetto
     * const tipooggetto = await prisma.tipooggetto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tipooggettoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, tipooggettoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'tipooggetto'> extends True ? Prisma__tipooggettoClient<tipooggettoGetPayload<T>> : Prisma__tipooggettoClient<tipooggettoGetPayload<T> | null, null>

    /**
     * Find the first Tipooggetto that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipooggettoFindFirstOrThrowArgs} args - Arguments to find a Tipooggetto
     * @example
     * // Get one Tipooggetto
     * const tipooggetto = await prisma.tipooggetto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tipooggettoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, tipooggettoFindFirstOrThrowArgs>
    ): Prisma__tipooggettoClient<tipooggettoGetPayload<T>>

    /**
     * Find zero or more Tipooggettos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipooggettoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipooggettos
     * const tipooggettos = await prisma.tipooggetto.findMany()
     * 
     * // Get first 10 Tipooggettos
     * const tipooggettos = await prisma.tipooggetto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipooggettoWithIdOnly = await prisma.tipooggetto.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tipooggettoFindManyArgs>(
      args?: SelectSubset<T, tipooggettoFindManyArgs>
    ): Prisma.PrismaPromise<Array<tipooggettoGetPayload<T>>>

    /**
     * Create a Tipooggetto.
     * @param {tipooggettoCreateArgs} args - Arguments to create a Tipooggetto.
     * @example
     * // Create one Tipooggetto
     * const Tipooggetto = await prisma.tipooggetto.create({
     *   data: {
     *     // ... data to create a Tipooggetto
     *   }
     * })
     * 
    **/
    create<T extends tipooggettoCreateArgs>(
      args: SelectSubset<T, tipooggettoCreateArgs>
    ): Prisma__tipooggettoClient<tipooggettoGetPayload<T>>

    /**
     * Create many Tipooggettos.
     *     @param {tipooggettoCreateManyArgs} args - Arguments to create many Tipooggettos.
     *     @example
     *     // Create many Tipooggettos
     *     const tipooggetto = await prisma.tipooggetto.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tipooggettoCreateManyArgs>(
      args?: SelectSubset<T, tipooggettoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tipooggetto.
     * @param {tipooggettoDeleteArgs} args - Arguments to delete one Tipooggetto.
     * @example
     * // Delete one Tipooggetto
     * const Tipooggetto = await prisma.tipooggetto.delete({
     *   where: {
     *     // ... filter to delete one Tipooggetto
     *   }
     * })
     * 
    **/
    delete<T extends tipooggettoDeleteArgs>(
      args: SelectSubset<T, tipooggettoDeleteArgs>
    ): Prisma__tipooggettoClient<tipooggettoGetPayload<T>>

    /**
     * Update one Tipooggetto.
     * @param {tipooggettoUpdateArgs} args - Arguments to update one Tipooggetto.
     * @example
     * // Update one Tipooggetto
     * const tipooggetto = await prisma.tipooggetto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tipooggettoUpdateArgs>(
      args: SelectSubset<T, tipooggettoUpdateArgs>
    ): Prisma__tipooggettoClient<tipooggettoGetPayload<T>>

    /**
     * Delete zero or more Tipooggettos.
     * @param {tipooggettoDeleteManyArgs} args - Arguments to filter Tipooggettos to delete.
     * @example
     * // Delete a few Tipooggettos
     * const { count } = await prisma.tipooggetto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tipooggettoDeleteManyArgs>(
      args?: SelectSubset<T, tipooggettoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipooggettos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipooggettoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipooggettos
     * const tipooggetto = await prisma.tipooggetto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tipooggettoUpdateManyArgs>(
      args: SelectSubset<T, tipooggettoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tipooggetto.
     * @param {tipooggettoUpsertArgs} args - Arguments to update or create a Tipooggetto.
     * @example
     * // Update or create a Tipooggetto
     * const tipooggetto = await prisma.tipooggetto.upsert({
     *   create: {
     *     // ... data to create a Tipooggetto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipooggetto we want to update
     *   }
     * })
    **/
    upsert<T extends tipooggettoUpsertArgs>(
      args: SelectSubset<T, tipooggettoUpsertArgs>
    ): Prisma__tipooggettoClient<tipooggettoGetPayload<T>>

    /**
     * Count the number of Tipooggettos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipooggettoCountArgs} args - Arguments to filter Tipooggettos to count.
     * @example
     * // Count the number of Tipooggettos
     * const count = await prisma.tipooggetto.count({
     *   where: {
     *     // ... the filter for the Tipooggettos we want to count
     *   }
     * })
    **/
    count<T extends tipooggettoCountArgs>(
      args?: Subset<T, tipooggettoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipooggettoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipooggetto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipooggettoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipooggettoAggregateArgs>(args: Subset<T, TipooggettoAggregateArgs>): Prisma.PrismaPromise<GetTipooggettoAggregateType<T>>

    /**
     * Group by Tipooggetto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipooggettoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipooggettoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipooggettoGroupByArgs['orderBy'] }
        : { orderBy?: TipooggettoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipooggettoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipooggettoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for tipooggetto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__tipooggettoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * tipooggetto base type for findUnique actions
   */
  export type tipooggettoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the tipooggetto
     */
    select?: tipooggettoSelect | null
    /**
     * Filter, which tipooggetto to fetch.
     */
    where: tipooggettoWhereUniqueInput
  }

  /**
   * tipooggetto findUnique
   */
  export interface tipooggettoFindUniqueArgs extends tipooggettoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tipooggetto findUniqueOrThrow
   */
  export type tipooggettoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tipooggetto
     */
    select?: tipooggettoSelect | null
    /**
     * Filter, which tipooggetto to fetch.
     */
    where: tipooggettoWhereUniqueInput
  }


  /**
   * tipooggetto base type for findFirst actions
   */
  export type tipooggettoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the tipooggetto
     */
    select?: tipooggettoSelect | null
    /**
     * Filter, which tipooggetto to fetch.
     */
    where?: tipooggettoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipooggettos to fetch.
     */
    orderBy?: Enumerable<tipooggettoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipooggettos.
     */
    cursor?: tipooggettoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipooggettos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipooggettos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipooggettos.
     */
    distinct?: Enumerable<TipooggettoScalarFieldEnum>
  }

  /**
   * tipooggetto findFirst
   */
  export interface tipooggettoFindFirstArgs extends tipooggettoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tipooggetto findFirstOrThrow
   */
  export type tipooggettoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tipooggetto
     */
    select?: tipooggettoSelect | null
    /**
     * Filter, which tipooggetto to fetch.
     */
    where?: tipooggettoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipooggettos to fetch.
     */
    orderBy?: Enumerable<tipooggettoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipooggettos.
     */
    cursor?: tipooggettoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipooggettos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipooggettos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipooggettos.
     */
    distinct?: Enumerable<TipooggettoScalarFieldEnum>
  }


  /**
   * tipooggetto findMany
   */
  export type tipooggettoFindManyArgs = {
    /**
     * Select specific fields to fetch from the tipooggetto
     */
    select?: tipooggettoSelect | null
    /**
     * Filter, which tipooggettos to fetch.
     */
    where?: tipooggettoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipooggettos to fetch.
     */
    orderBy?: Enumerable<tipooggettoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipooggettos.
     */
    cursor?: tipooggettoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipooggettos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipooggettos.
     */
    skip?: number
    distinct?: Enumerable<TipooggettoScalarFieldEnum>
  }


  /**
   * tipooggetto create
   */
  export type tipooggettoCreateArgs = {
    /**
     * Select specific fields to fetch from the tipooggetto
     */
    select?: tipooggettoSelect | null
    /**
     * The data needed to create a tipooggetto.
     */
    data: XOR<tipooggettoCreateInput, tipooggettoUncheckedCreateInput>
  }


  /**
   * tipooggetto createMany
   */
  export type tipooggettoCreateManyArgs = {
    /**
     * The data used to create many tipooggettos.
     */
    data: Enumerable<tipooggettoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * tipooggetto update
   */
  export type tipooggettoUpdateArgs = {
    /**
     * Select specific fields to fetch from the tipooggetto
     */
    select?: tipooggettoSelect | null
    /**
     * The data needed to update a tipooggetto.
     */
    data: XOR<tipooggettoUpdateInput, tipooggettoUncheckedUpdateInput>
    /**
     * Choose, which tipooggetto to update.
     */
    where: tipooggettoWhereUniqueInput
  }


  /**
   * tipooggetto updateMany
   */
  export type tipooggettoUpdateManyArgs = {
    /**
     * The data used to update tipooggettos.
     */
    data: XOR<tipooggettoUpdateManyMutationInput, tipooggettoUncheckedUpdateManyInput>
    /**
     * Filter which tipooggettos to update
     */
    where?: tipooggettoWhereInput
  }


  /**
   * tipooggetto upsert
   */
  export type tipooggettoUpsertArgs = {
    /**
     * Select specific fields to fetch from the tipooggetto
     */
    select?: tipooggettoSelect | null
    /**
     * The filter to search for the tipooggetto to update in case it exists.
     */
    where: tipooggettoWhereUniqueInput
    /**
     * In case the tipooggetto found by the `where` argument doesn't exist, create a new tipooggetto with this data.
     */
    create: XOR<tipooggettoCreateInput, tipooggettoUncheckedCreateInput>
    /**
     * In case the tipooggetto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipooggettoUpdateInput, tipooggettoUncheckedUpdateInput>
  }


  /**
   * tipooggetto delete
   */
  export type tipooggettoDeleteArgs = {
    /**
     * Select specific fields to fetch from the tipooggetto
     */
    select?: tipooggettoSelect | null
    /**
     * Filter which tipooggetto to delete.
     */
    where: tipooggettoWhereUniqueInput
  }


  /**
   * tipooggetto deleteMany
   */
  export type tipooggettoDeleteManyArgs = {
    /**
     * Filter which tipooggettos to delete
     */
    where?: tipooggettoWhereInput
  }


  /**
   * tipooggetto without action
   */
  export type tipooggettoArgs = {
    /**
     * Select specific fields to fetch from the tipooggetto
     */
    select?: tipooggettoSelect | null
  }



  /**
   * Model tipoprovvedimento
   */


  export type AggregateTipoprovvedimento = {
    _count: TipoprovvedimentoCountAggregateOutputType | null
    _avg: TipoprovvedimentoAvgAggregateOutputType | null
    _sum: TipoprovvedimentoSumAggregateOutputType | null
    _min: TipoprovvedimentoMinAggregateOutputType | null
    _max: TipoprovvedimentoMaxAggregateOutputType | null
  }

  export type TipoprovvedimentoAvgAggregateOutputType = {
    id: number | null
  }

  export type TipoprovvedimentoSumAggregateOutputType = {
    id: number | null
  }

  export type TipoprovvedimentoMinAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type TipoprovvedimentoMaxAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type TipoprovvedimentoCountAggregateOutputType = {
    id: number
    value: number
    _all: number
  }


  export type TipoprovvedimentoAvgAggregateInputType = {
    id?: true
  }

  export type TipoprovvedimentoSumAggregateInputType = {
    id?: true
  }

  export type TipoprovvedimentoMinAggregateInputType = {
    id?: true
    value?: true
  }

  export type TipoprovvedimentoMaxAggregateInputType = {
    id?: true
    value?: true
  }

  export type TipoprovvedimentoCountAggregateInputType = {
    id?: true
    value?: true
    _all?: true
  }

  export type TipoprovvedimentoAggregateArgs = {
    /**
     * Filter which tipoprovvedimento to aggregate.
     */
    where?: tipoprovvedimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoprovvedimentos to fetch.
     */
    orderBy?: Enumerable<tipoprovvedimentoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipoprovvedimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoprovvedimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoprovvedimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipoprovvedimentos
    **/
    _count?: true | TipoprovvedimentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoprovvedimentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoprovvedimentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoprovvedimentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoprovvedimentoMaxAggregateInputType
  }

  export type GetTipoprovvedimentoAggregateType<T extends TipoprovvedimentoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoprovvedimento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoprovvedimento[P]>
      : GetScalarType<T[P], AggregateTipoprovvedimento[P]>
  }




  export type TipoprovvedimentoGroupByArgs = {
    where?: tipoprovvedimentoWhereInput
    orderBy?: Enumerable<tipoprovvedimentoOrderByWithAggregationInput>
    by: TipoprovvedimentoScalarFieldEnum[]
    having?: tipoprovvedimentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoprovvedimentoCountAggregateInputType | true
    _avg?: TipoprovvedimentoAvgAggregateInputType
    _sum?: TipoprovvedimentoSumAggregateInputType
    _min?: TipoprovvedimentoMinAggregateInputType
    _max?: TipoprovvedimentoMaxAggregateInputType
  }


  export type TipoprovvedimentoGroupByOutputType = {
    id: number
    value: string | null
    _count: TipoprovvedimentoCountAggregateOutputType | null
    _avg: TipoprovvedimentoAvgAggregateOutputType | null
    _sum: TipoprovvedimentoSumAggregateOutputType | null
    _min: TipoprovvedimentoMinAggregateOutputType | null
    _max: TipoprovvedimentoMaxAggregateOutputType | null
  }

  type GetTipoprovvedimentoGroupByPayload<T extends TipoprovvedimentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<TipoprovvedimentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoprovvedimentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoprovvedimentoGroupByOutputType[P]>
            : GetScalarType<T[P], TipoprovvedimentoGroupByOutputType[P]>
        }
      >
    >


  export type tipoprovvedimentoSelect = {
    id?: boolean
    value?: boolean
    segnalazione?: boolean | tipoprovvedimento$segnalazioneArgs
    segnalazionestorico?: boolean | tipoprovvedimento$segnalazionestoricoArgs
    _count?: boolean | TipoprovvedimentoCountOutputTypeArgs
  }


  export type tipoprovvedimentoInclude = {
    segnalazione?: boolean | tipoprovvedimento$segnalazioneArgs
    segnalazionestorico?: boolean | tipoprovvedimento$segnalazionestoricoArgs
    _count?: boolean | TipoprovvedimentoCountOutputTypeArgs
  }

  export type tipoprovvedimentoGetPayload<S extends boolean | null | undefined | tipoprovvedimentoArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? tipoprovvedimento :
    S extends undefined ? never :
    S extends { include: any } & (tipoprovvedimentoArgs | tipoprovvedimentoFindManyArgs)
    ? tipoprovvedimento  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['include'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['include'][P]>>  :
        P extends '_count' ? TipoprovvedimentoCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (tipoprovvedimentoArgs | tipoprovvedimentoFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['select'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['select'][P]>>  :
        P extends '_count' ? TipoprovvedimentoCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof tipoprovvedimento ? tipoprovvedimento[P] : never
  } 
      : tipoprovvedimento


  type tipoprovvedimentoCountArgs = 
    Omit<tipoprovvedimentoFindManyArgs, 'select' | 'include'> & {
      select?: TipoprovvedimentoCountAggregateInputType | true
    }

  export interface tipoprovvedimentoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Tipoprovvedimento that matches the filter.
     * @param {tipoprovvedimentoFindUniqueArgs} args - Arguments to find a Tipoprovvedimento
     * @example
     * // Get one Tipoprovvedimento
     * const tipoprovvedimento = await prisma.tipoprovvedimento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tipoprovvedimentoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, tipoprovvedimentoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'tipoprovvedimento'> extends True ? Prisma__tipoprovvedimentoClient<tipoprovvedimentoGetPayload<T>> : Prisma__tipoprovvedimentoClient<tipoprovvedimentoGetPayload<T> | null, null>

    /**
     * Find one Tipoprovvedimento that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tipoprovvedimentoFindUniqueOrThrowArgs} args - Arguments to find a Tipoprovvedimento
     * @example
     * // Get one Tipoprovvedimento
     * const tipoprovvedimento = await prisma.tipoprovvedimento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tipoprovvedimentoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, tipoprovvedimentoFindUniqueOrThrowArgs>
    ): Prisma__tipoprovvedimentoClient<tipoprovvedimentoGetPayload<T>>

    /**
     * Find the first Tipoprovvedimento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoprovvedimentoFindFirstArgs} args - Arguments to find a Tipoprovvedimento
     * @example
     * // Get one Tipoprovvedimento
     * const tipoprovvedimento = await prisma.tipoprovvedimento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tipoprovvedimentoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, tipoprovvedimentoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'tipoprovvedimento'> extends True ? Prisma__tipoprovvedimentoClient<tipoprovvedimentoGetPayload<T>> : Prisma__tipoprovvedimentoClient<tipoprovvedimentoGetPayload<T> | null, null>

    /**
     * Find the first Tipoprovvedimento that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoprovvedimentoFindFirstOrThrowArgs} args - Arguments to find a Tipoprovvedimento
     * @example
     * // Get one Tipoprovvedimento
     * const tipoprovvedimento = await prisma.tipoprovvedimento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tipoprovvedimentoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, tipoprovvedimentoFindFirstOrThrowArgs>
    ): Prisma__tipoprovvedimentoClient<tipoprovvedimentoGetPayload<T>>

    /**
     * Find zero or more Tipoprovvedimentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoprovvedimentoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipoprovvedimentos
     * const tipoprovvedimentos = await prisma.tipoprovvedimento.findMany()
     * 
     * // Get first 10 Tipoprovvedimentos
     * const tipoprovvedimentos = await prisma.tipoprovvedimento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoprovvedimentoWithIdOnly = await prisma.tipoprovvedimento.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tipoprovvedimentoFindManyArgs>(
      args?: SelectSubset<T, tipoprovvedimentoFindManyArgs>
    ): Prisma.PrismaPromise<Array<tipoprovvedimentoGetPayload<T>>>

    /**
     * Create a Tipoprovvedimento.
     * @param {tipoprovvedimentoCreateArgs} args - Arguments to create a Tipoprovvedimento.
     * @example
     * // Create one Tipoprovvedimento
     * const Tipoprovvedimento = await prisma.tipoprovvedimento.create({
     *   data: {
     *     // ... data to create a Tipoprovvedimento
     *   }
     * })
     * 
    **/
    create<T extends tipoprovvedimentoCreateArgs>(
      args: SelectSubset<T, tipoprovvedimentoCreateArgs>
    ): Prisma__tipoprovvedimentoClient<tipoprovvedimentoGetPayload<T>>

    /**
     * Create many Tipoprovvedimentos.
     *     @param {tipoprovvedimentoCreateManyArgs} args - Arguments to create many Tipoprovvedimentos.
     *     @example
     *     // Create many Tipoprovvedimentos
     *     const tipoprovvedimento = await prisma.tipoprovvedimento.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tipoprovvedimentoCreateManyArgs>(
      args?: SelectSubset<T, tipoprovvedimentoCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tipoprovvedimento.
     * @param {tipoprovvedimentoDeleteArgs} args - Arguments to delete one Tipoprovvedimento.
     * @example
     * // Delete one Tipoprovvedimento
     * const Tipoprovvedimento = await prisma.tipoprovvedimento.delete({
     *   where: {
     *     // ... filter to delete one Tipoprovvedimento
     *   }
     * })
     * 
    **/
    delete<T extends tipoprovvedimentoDeleteArgs>(
      args: SelectSubset<T, tipoprovvedimentoDeleteArgs>
    ): Prisma__tipoprovvedimentoClient<tipoprovvedimentoGetPayload<T>>

    /**
     * Update one Tipoprovvedimento.
     * @param {tipoprovvedimentoUpdateArgs} args - Arguments to update one Tipoprovvedimento.
     * @example
     * // Update one Tipoprovvedimento
     * const tipoprovvedimento = await prisma.tipoprovvedimento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tipoprovvedimentoUpdateArgs>(
      args: SelectSubset<T, tipoprovvedimentoUpdateArgs>
    ): Prisma__tipoprovvedimentoClient<tipoprovvedimentoGetPayload<T>>

    /**
     * Delete zero or more Tipoprovvedimentos.
     * @param {tipoprovvedimentoDeleteManyArgs} args - Arguments to filter Tipoprovvedimentos to delete.
     * @example
     * // Delete a few Tipoprovvedimentos
     * const { count } = await prisma.tipoprovvedimento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tipoprovvedimentoDeleteManyArgs>(
      args?: SelectSubset<T, tipoprovvedimentoDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipoprovvedimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoprovvedimentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipoprovvedimentos
     * const tipoprovvedimento = await prisma.tipoprovvedimento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tipoprovvedimentoUpdateManyArgs>(
      args: SelectSubset<T, tipoprovvedimentoUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tipoprovvedimento.
     * @param {tipoprovvedimentoUpsertArgs} args - Arguments to update or create a Tipoprovvedimento.
     * @example
     * // Update or create a Tipoprovvedimento
     * const tipoprovvedimento = await prisma.tipoprovvedimento.upsert({
     *   create: {
     *     // ... data to create a Tipoprovvedimento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipoprovvedimento we want to update
     *   }
     * })
    **/
    upsert<T extends tipoprovvedimentoUpsertArgs>(
      args: SelectSubset<T, tipoprovvedimentoUpsertArgs>
    ): Prisma__tipoprovvedimentoClient<tipoprovvedimentoGetPayload<T>>

    /**
     * Count the number of Tipoprovvedimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoprovvedimentoCountArgs} args - Arguments to filter Tipoprovvedimentos to count.
     * @example
     * // Count the number of Tipoprovvedimentos
     * const count = await prisma.tipoprovvedimento.count({
     *   where: {
     *     // ... the filter for the Tipoprovvedimentos we want to count
     *   }
     * })
    **/
    count<T extends tipoprovvedimentoCountArgs>(
      args?: Subset<T, tipoprovvedimentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoprovvedimentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipoprovvedimento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoprovvedimentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoprovvedimentoAggregateArgs>(args: Subset<T, TipoprovvedimentoAggregateArgs>): Prisma.PrismaPromise<GetTipoprovvedimentoAggregateType<T>>

    /**
     * Group by Tipoprovvedimento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoprovvedimentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoprovvedimentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoprovvedimentoGroupByArgs['orderBy'] }
        : { orderBy?: TipoprovvedimentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoprovvedimentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoprovvedimentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for tipoprovvedimento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__tipoprovvedimentoClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    segnalazione<T extends tipoprovvedimento$segnalazioneArgs= {}>(args?: Subset<T, tipoprovvedimento$segnalazioneArgs>): Prisma.PrismaPromise<Array<segnalazioneGetPayload<T>>| Null>;

    segnalazionestorico<T extends tipoprovvedimento$segnalazionestoricoArgs= {}>(args?: Subset<T, tipoprovvedimento$segnalazionestoricoArgs>): Prisma.PrismaPromise<Array<segnalazionestoricoGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * tipoprovvedimento base type for findUnique actions
   */
  export type tipoprovvedimentoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the tipoprovvedimento
     */
    select?: tipoprovvedimentoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoprovvedimentoInclude | null
    /**
     * Filter, which tipoprovvedimento to fetch.
     */
    where: tipoprovvedimentoWhereUniqueInput
  }

  /**
   * tipoprovvedimento findUnique
   */
  export interface tipoprovvedimentoFindUniqueArgs extends tipoprovvedimentoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tipoprovvedimento findUniqueOrThrow
   */
  export type tipoprovvedimentoFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tipoprovvedimento
     */
    select?: tipoprovvedimentoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoprovvedimentoInclude | null
    /**
     * Filter, which tipoprovvedimento to fetch.
     */
    where: tipoprovvedimentoWhereUniqueInput
  }


  /**
   * tipoprovvedimento base type for findFirst actions
   */
  export type tipoprovvedimentoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the tipoprovvedimento
     */
    select?: tipoprovvedimentoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoprovvedimentoInclude | null
    /**
     * Filter, which tipoprovvedimento to fetch.
     */
    where?: tipoprovvedimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoprovvedimentos to fetch.
     */
    orderBy?: Enumerable<tipoprovvedimentoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipoprovvedimentos.
     */
    cursor?: tipoprovvedimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoprovvedimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoprovvedimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipoprovvedimentos.
     */
    distinct?: Enumerable<TipoprovvedimentoScalarFieldEnum>
  }

  /**
   * tipoprovvedimento findFirst
   */
  export interface tipoprovvedimentoFindFirstArgs extends tipoprovvedimentoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tipoprovvedimento findFirstOrThrow
   */
  export type tipoprovvedimentoFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tipoprovvedimento
     */
    select?: tipoprovvedimentoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoprovvedimentoInclude | null
    /**
     * Filter, which tipoprovvedimento to fetch.
     */
    where?: tipoprovvedimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoprovvedimentos to fetch.
     */
    orderBy?: Enumerable<tipoprovvedimentoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipoprovvedimentos.
     */
    cursor?: tipoprovvedimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoprovvedimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoprovvedimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipoprovvedimentos.
     */
    distinct?: Enumerable<TipoprovvedimentoScalarFieldEnum>
  }


  /**
   * tipoprovvedimento findMany
   */
  export type tipoprovvedimentoFindManyArgs = {
    /**
     * Select specific fields to fetch from the tipoprovvedimento
     */
    select?: tipoprovvedimentoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoprovvedimentoInclude | null
    /**
     * Filter, which tipoprovvedimentos to fetch.
     */
    where?: tipoprovvedimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoprovvedimentos to fetch.
     */
    orderBy?: Enumerable<tipoprovvedimentoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipoprovvedimentos.
     */
    cursor?: tipoprovvedimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoprovvedimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoprovvedimentos.
     */
    skip?: number
    distinct?: Enumerable<TipoprovvedimentoScalarFieldEnum>
  }


  /**
   * tipoprovvedimento create
   */
  export type tipoprovvedimentoCreateArgs = {
    /**
     * Select specific fields to fetch from the tipoprovvedimento
     */
    select?: tipoprovvedimentoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoprovvedimentoInclude | null
    /**
     * The data needed to create a tipoprovvedimento.
     */
    data: XOR<tipoprovvedimentoCreateInput, tipoprovvedimentoUncheckedCreateInput>
  }


  /**
   * tipoprovvedimento createMany
   */
  export type tipoprovvedimentoCreateManyArgs = {
    /**
     * The data used to create many tipoprovvedimentos.
     */
    data: Enumerable<tipoprovvedimentoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * tipoprovvedimento update
   */
  export type tipoprovvedimentoUpdateArgs = {
    /**
     * Select specific fields to fetch from the tipoprovvedimento
     */
    select?: tipoprovvedimentoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoprovvedimentoInclude | null
    /**
     * The data needed to update a tipoprovvedimento.
     */
    data: XOR<tipoprovvedimentoUpdateInput, tipoprovvedimentoUncheckedUpdateInput>
    /**
     * Choose, which tipoprovvedimento to update.
     */
    where: tipoprovvedimentoWhereUniqueInput
  }


  /**
   * tipoprovvedimento updateMany
   */
  export type tipoprovvedimentoUpdateManyArgs = {
    /**
     * The data used to update tipoprovvedimentos.
     */
    data: XOR<tipoprovvedimentoUpdateManyMutationInput, tipoprovvedimentoUncheckedUpdateManyInput>
    /**
     * Filter which tipoprovvedimentos to update
     */
    where?: tipoprovvedimentoWhereInput
  }


  /**
   * tipoprovvedimento upsert
   */
  export type tipoprovvedimentoUpsertArgs = {
    /**
     * Select specific fields to fetch from the tipoprovvedimento
     */
    select?: tipoprovvedimentoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoprovvedimentoInclude | null
    /**
     * The filter to search for the tipoprovvedimento to update in case it exists.
     */
    where: tipoprovvedimentoWhereUniqueInput
    /**
     * In case the tipoprovvedimento found by the `where` argument doesn't exist, create a new tipoprovvedimento with this data.
     */
    create: XOR<tipoprovvedimentoCreateInput, tipoprovvedimentoUncheckedCreateInput>
    /**
     * In case the tipoprovvedimento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipoprovvedimentoUpdateInput, tipoprovvedimentoUncheckedUpdateInput>
  }


  /**
   * tipoprovvedimento delete
   */
  export type tipoprovvedimentoDeleteArgs = {
    /**
     * Select specific fields to fetch from the tipoprovvedimento
     */
    select?: tipoprovvedimentoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoprovvedimentoInclude | null
    /**
     * Filter which tipoprovvedimento to delete.
     */
    where: tipoprovvedimentoWhereUniqueInput
  }


  /**
   * tipoprovvedimento deleteMany
   */
  export type tipoprovvedimentoDeleteManyArgs = {
    /**
     * Filter which tipoprovvedimentos to delete
     */
    where?: tipoprovvedimentoWhereInput
  }


  /**
   * tipoprovvedimento.segnalazione
   */
  export type tipoprovvedimento$segnalazioneArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    where?: segnalazioneWhereInput
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    cursor?: segnalazioneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * tipoprovvedimento.segnalazionestorico
   */
  export type tipoprovvedimento$segnalazionestoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    where?: segnalazionestoricoWhereInput
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    cursor?: segnalazionestoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * tipoprovvedimento without action
   */
  export type tipoprovvedimentoArgs = {
    /**
     * Select specific fields to fetch from the tipoprovvedimento
     */
    select?: tipoprovvedimentoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tipoprovvedimentoInclude | null
  }



  /**
   * Model tiposegnalatore
   */


  export type AggregateTiposegnalatore = {
    _count: TiposegnalatoreCountAggregateOutputType | null
    _avg: TiposegnalatoreAvgAggregateOutputType | null
    _sum: TiposegnalatoreSumAggregateOutputType | null
    _min: TiposegnalatoreMinAggregateOutputType | null
    _max: TiposegnalatoreMaxAggregateOutputType | null
  }

  export type TiposegnalatoreAvgAggregateOutputType = {
    id: number | null
  }

  export type TiposegnalatoreSumAggregateOutputType = {
    id: number | null
  }

  export type TiposegnalatoreMinAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type TiposegnalatoreMaxAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type TiposegnalatoreCountAggregateOutputType = {
    id: number
    value: number
    _all: number
  }


  export type TiposegnalatoreAvgAggregateInputType = {
    id?: true
  }

  export type TiposegnalatoreSumAggregateInputType = {
    id?: true
  }

  export type TiposegnalatoreMinAggregateInputType = {
    id?: true
    value?: true
  }

  export type TiposegnalatoreMaxAggregateInputType = {
    id?: true
    value?: true
  }

  export type TiposegnalatoreCountAggregateInputType = {
    id?: true
    value?: true
    _all?: true
  }

  export type TiposegnalatoreAggregateArgs = {
    /**
     * Filter which tiposegnalatore to aggregate.
     */
    where?: tiposegnalatoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tiposegnalatores to fetch.
     */
    orderBy?: Enumerable<tiposegnalatoreOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tiposegnalatoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tiposegnalatores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tiposegnalatores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tiposegnalatores
    **/
    _count?: true | TiposegnalatoreCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TiposegnalatoreAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TiposegnalatoreSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TiposegnalatoreMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TiposegnalatoreMaxAggregateInputType
  }

  export type GetTiposegnalatoreAggregateType<T extends TiposegnalatoreAggregateArgs> = {
        [P in keyof T & keyof AggregateTiposegnalatore]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTiposegnalatore[P]>
      : GetScalarType<T[P], AggregateTiposegnalatore[P]>
  }




  export type TiposegnalatoreGroupByArgs = {
    where?: tiposegnalatoreWhereInput
    orderBy?: Enumerable<tiposegnalatoreOrderByWithAggregationInput>
    by: TiposegnalatoreScalarFieldEnum[]
    having?: tiposegnalatoreScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TiposegnalatoreCountAggregateInputType | true
    _avg?: TiposegnalatoreAvgAggregateInputType
    _sum?: TiposegnalatoreSumAggregateInputType
    _min?: TiposegnalatoreMinAggregateInputType
    _max?: TiposegnalatoreMaxAggregateInputType
  }


  export type TiposegnalatoreGroupByOutputType = {
    id: number
    value: string | null
    _count: TiposegnalatoreCountAggregateOutputType | null
    _avg: TiposegnalatoreAvgAggregateOutputType | null
    _sum: TiposegnalatoreSumAggregateOutputType | null
    _min: TiposegnalatoreMinAggregateOutputType | null
    _max: TiposegnalatoreMaxAggregateOutputType | null
  }

  type GetTiposegnalatoreGroupByPayload<T extends TiposegnalatoreGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<TiposegnalatoreGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TiposegnalatoreGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TiposegnalatoreGroupByOutputType[P]>
            : GetScalarType<T[P], TiposegnalatoreGroupByOutputType[P]>
        }
      >
    >


  export type tiposegnalatoreSelect = {
    id?: boolean
    value?: boolean
  }


  export type tiposegnalatoreGetPayload<S extends boolean | null | undefined | tiposegnalatoreArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? tiposegnalatore :
    S extends undefined ? never :
    S extends { include: any } & (tiposegnalatoreArgs | tiposegnalatoreFindManyArgs)
    ? tiposegnalatore 
    : S extends { select: any } & (tiposegnalatoreArgs | tiposegnalatoreFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof tiposegnalatore ? tiposegnalatore[P] : never
  } 
      : tiposegnalatore


  type tiposegnalatoreCountArgs = 
    Omit<tiposegnalatoreFindManyArgs, 'select' | 'include'> & {
      select?: TiposegnalatoreCountAggregateInputType | true
    }

  export interface tiposegnalatoreDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Tiposegnalatore that matches the filter.
     * @param {tiposegnalatoreFindUniqueArgs} args - Arguments to find a Tiposegnalatore
     * @example
     * // Get one Tiposegnalatore
     * const tiposegnalatore = await prisma.tiposegnalatore.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tiposegnalatoreFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, tiposegnalatoreFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'tiposegnalatore'> extends True ? Prisma__tiposegnalatoreClient<tiposegnalatoreGetPayload<T>> : Prisma__tiposegnalatoreClient<tiposegnalatoreGetPayload<T> | null, null>

    /**
     * Find one Tiposegnalatore that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tiposegnalatoreFindUniqueOrThrowArgs} args - Arguments to find a Tiposegnalatore
     * @example
     * // Get one Tiposegnalatore
     * const tiposegnalatore = await prisma.tiposegnalatore.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tiposegnalatoreFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, tiposegnalatoreFindUniqueOrThrowArgs>
    ): Prisma__tiposegnalatoreClient<tiposegnalatoreGetPayload<T>>

    /**
     * Find the first Tiposegnalatore that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiposegnalatoreFindFirstArgs} args - Arguments to find a Tiposegnalatore
     * @example
     * // Get one Tiposegnalatore
     * const tiposegnalatore = await prisma.tiposegnalatore.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tiposegnalatoreFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, tiposegnalatoreFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'tiposegnalatore'> extends True ? Prisma__tiposegnalatoreClient<tiposegnalatoreGetPayload<T>> : Prisma__tiposegnalatoreClient<tiposegnalatoreGetPayload<T> | null, null>

    /**
     * Find the first Tiposegnalatore that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiposegnalatoreFindFirstOrThrowArgs} args - Arguments to find a Tiposegnalatore
     * @example
     * // Get one Tiposegnalatore
     * const tiposegnalatore = await prisma.tiposegnalatore.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tiposegnalatoreFindFirstOrThrowArgs>(
      args?: SelectSubset<T, tiposegnalatoreFindFirstOrThrowArgs>
    ): Prisma__tiposegnalatoreClient<tiposegnalatoreGetPayload<T>>

    /**
     * Find zero or more Tiposegnalatores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiposegnalatoreFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tiposegnalatores
     * const tiposegnalatores = await prisma.tiposegnalatore.findMany()
     * 
     * // Get first 10 Tiposegnalatores
     * const tiposegnalatores = await prisma.tiposegnalatore.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tiposegnalatoreWithIdOnly = await prisma.tiposegnalatore.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tiposegnalatoreFindManyArgs>(
      args?: SelectSubset<T, tiposegnalatoreFindManyArgs>
    ): Prisma.PrismaPromise<Array<tiposegnalatoreGetPayload<T>>>

    /**
     * Create a Tiposegnalatore.
     * @param {tiposegnalatoreCreateArgs} args - Arguments to create a Tiposegnalatore.
     * @example
     * // Create one Tiposegnalatore
     * const Tiposegnalatore = await prisma.tiposegnalatore.create({
     *   data: {
     *     // ... data to create a Tiposegnalatore
     *   }
     * })
     * 
    **/
    create<T extends tiposegnalatoreCreateArgs>(
      args: SelectSubset<T, tiposegnalatoreCreateArgs>
    ): Prisma__tiposegnalatoreClient<tiposegnalatoreGetPayload<T>>

    /**
     * Create many Tiposegnalatores.
     *     @param {tiposegnalatoreCreateManyArgs} args - Arguments to create many Tiposegnalatores.
     *     @example
     *     // Create many Tiposegnalatores
     *     const tiposegnalatore = await prisma.tiposegnalatore.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tiposegnalatoreCreateManyArgs>(
      args?: SelectSubset<T, tiposegnalatoreCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tiposegnalatore.
     * @param {tiposegnalatoreDeleteArgs} args - Arguments to delete one Tiposegnalatore.
     * @example
     * // Delete one Tiposegnalatore
     * const Tiposegnalatore = await prisma.tiposegnalatore.delete({
     *   where: {
     *     // ... filter to delete one Tiposegnalatore
     *   }
     * })
     * 
    **/
    delete<T extends tiposegnalatoreDeleteArgs>(
      args: SelectSubset<T, tiposegnalatoreDeleteArgs>
    ): Prisma__tiposegnalatoreClient<tiposegnalatoreGetPayload<T>>

    /**
     * Update one Tiposegnalatore.
     * @param {tiposegnalatoreUpdateArgs} args - Arguments to update one Tiposegnalatore.
     * @example
     * // Update one Tiposegnalatore
     * const tiposegnalatore = await prisma.tiposegnalatore.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tiposegnalatoreUpdateArgs>(
      args: SelectSubset<T, tiposegnalatoreUpdateArgs>
    ): Prisma__tiposegnalatoreClient<tiposegnalatoreGetPayload<T>>

    /**
     * Delete zero or more Tiposegnalatores.
     * @param {tiposegnalatoreDeleteManyArgs} args - Arguments to filter Tiposegnalatores to delete.
     * @example
     * // Delete a few Tiposegnalatores
     * const { count } = await prisma.tiposegnalatore.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tiposegnalatoreDeleteManyArgs>(
      args?: SelectSubset<T, tiposegnalatoreDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tiposegnalatores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiposegnalatoreUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tiposegnalatores
     * const tiposegnalatore = await prisma.tiposegnalatore.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tiposegnalatoreUpdateManyArgs>(
      args: SelectSubset<T, tiposegnalatoreUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tiposegnalatore.
     * @param {tiposegnalatoreUpsertArgs} args - Arguments to update or create a Tiposegnalatore.
     * @example
     * // Update or create a Tiposegnalatore
     * const tiposegnalatore = await prisma.tiposegnalatore.upsert({
     *   create: {
     *     // ... data to create a Tiposegnalatore
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tiposegnalatore we want to update
     *   }
     * })
    **/
    upsert<T extends tiposegnalatoreUpsertArgs>(
      args: SelectSubset<T, tiposegnalatoreUpsertArgs>
    ): Prisma__tiposegnalatoreClient<tiposegnalatoreGetPayload<T>>

    /**
     * Count the number of Tiposegnalatores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiposegnalatoreCountArgs} args - Arguments to filter Tiposegnalatores to count.
     * @example
     * // Count the number of Tiposegnalatores
     * const count = await prisma.tiposegnalatore.count({
     *   where: {
     *     // ... the filter for the Tiposegnalatores we want to count
     *   }
     * })
    **/
    count<T extends tiposegnalatoreCountArgs>(
      args?: Subset<T, tiposegnalatoreCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TiposegnalatoreCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tiposegnalatore.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TiposegnalatoreAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TiposegnalatoreAggregateArgs>(args: Subset<T, TiposegnalatoreAggregateArgs>): Prisma.PrismaPromise<GetTiposegnalatoreAggregateType<T>>

    /**
     * Group by Tiposegnalatore.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TiposegnalatoreGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TiposegnalatoreGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TiposegnalatoreGroupByArgs['orderBy'] }
        : { orderBy?: TiposegnalatoreGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TiposegnalatoreGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTiposegnalatoreGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for tiposegnalatore.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__tiposegnalatoreClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * tiposegnalatore base type for findUnique actions
   */
  export type tiposegnalatoreFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the tiposegnalatore
     */
    select?: tiposegnalatoreSelect | null
    /**
     * Filter, which tiposegnalatore to fetch.
     */
    where: tiposegnalatoreWhereUniqueInput
  }

  /**
   * tiposegnalatore findUnique
   */
  export interface tiposegnalatoreFindUniqueArgs extends tiposegnalatoreFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tiposegnalatore findUniqueOrThrow
   */
  export type tiposegnalatoreFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tiposegnalatore
     */
    select?: tiposegnalatoreSelect | null
    /**
     * Filter, which tiposegnalatore to fetch.
     */
    where: tiposegnalatoreWhereUniqueInput
  }


  /**
   * tiposegnalatore base type for findFirst actions
   */
  export type tiposegnalatoreFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the tiposegnalatore
     */
    select?: tiposegnalatoreSelect | null
    /**
     * Filter, which tiposegnalatore to fetch.
     */
    where?: tiposegnalatoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tiposegnalatores to fetch.
     */
    orderBy?: Enumerable<tiposegnalatoreOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tiposegnalatores.
     */
    cursor?: tiposegnalatoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tiposegnalatores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tiposegnalatores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tiposegnalatores.
     */
    distinct?: Enumerable<TiposegnalatoreScalarFieldEnum>
  }

  /**
   * tiposegnalatore findFirst
   */
  export interface tiposegnalatoreFindFirstArgs extends tiposegnalatoreFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tiposegnalatore findFirstOrThrow
   */
  export type tiposegnalatoreFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tiposegnalatore
     */
    select?: tiposegnalatoreSelect | null
    /**
     * Filter, which tiposegnalatore to fetch.
     */
    where?: tiposegnalatoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tiposegnalatores to fetch.
     */
    orderBy?: Enumerable<tiposegnalatoreOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tiposegnalatores.
     */
    cursor?: tiposegnalatoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tiposegnalatores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tiposegnalatores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tiposegnalatores.
     */
    distinct?: Enumerable<TiposegnalatoreScalarFieldEnum>
  }


  /**
   * tiposegnalatore findMany
   */
  export type tiposegnalatoreFindManyArgs = {
    /**
     * Select specific fields to fetch from the tiposegnalatore
     */
    select?: tiposegnalatoreSelect | null
    /**
     * Filter, which tiposegnalatores to fetch.
     */
    where?: tiposegnalatoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tiposegnalatores to fetch.
     */
    orderBy?: Enumerable<tiposegnalatoreOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tiposegnalatores.
     */
    cursor?: tiposegnalatoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tiposegnalatores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tiposegnalatores.
     */
    skip?: number
    distinct?: Enumerable<TiposegnalatoreScalarFieldEnum>
  }


  /**
   * tiposegnalatore create
   */
  export type tiposegnalatoreCreateArgs = {
    /**
     * Select specific fields to fetch from the tiposegnalatore
     */
    select?: tiposegnalatoreSelect | null
    /**
     * The data needed to create a tiposegnalatore.
     */
    data: XOR<tiposegnalatoreCreateInput, tiposegnalatoreUncheckedCreateInput>
  }


  /**
   * tiposegnalatore createMany
   */
  export type tiposegnalatoreCreateManyArgs = {
    /**
     * The data used to create many tiposegnalatores.
     */
    data: Enumerable<tiposegnalatoreCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * tiposegnalatore update
   */
  export type tiposegnalatoreUpdateArgs = {
    /**
     * Select specific fields to fetch from the tiposegnalatore
     */
    select?: tiposegnalatoreSelect | null
    /**
     * The data needed to update a tiposegnalatore.
     */
    data: XOR<tiposegnalatoreUpdateInput, tiposegnalatoreUncheckedUpdateInput>
    /**
     * Choose, which tiposegnalatore to update.
     */
    where: tiposegnalatoreWhereUniqueInput
  }


  /**
   * tiposegnalatore updateMany
   */
  export type tiposegnalatoreUpdateManyArgs = {
    /**
     * The data used to update tiposegnalatores.
     */
    data: XOR<tiposegnalatoreUpdateManyMutationInput, tiposegnalatoreUncheckedUpdateManyInput>
    /**
     * Filter which tiposegnalatores to update
     */
    where?: tiposegnalatoreWhereInput
  }


  /**
   * tiposegnalatore upsert
   */
  export type tiposegnalatoreUpsertArgs = {
    /**
     * Select specific fields to fetch from the tiposegnalatore
     */
    select?: tiposegnalatoreSelect | null
    /**
     * The filter to search for the tiposegnalatore to update in case it exists.
     */
    where: tiposegnalatoreWhereUniqueInput
    /**
     * In case the tiposegnalatore found by the `where` argument doesn't exist, create a new tiposegnalatore with this data.
     */
    create: XOR<tiposegnalatoreCreateInput, tiposegnalatoreUncheckedCreateInput>
    /**
     * In case the tiposegnalatore was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tiposegnalatoreUpdateInput, tiposegnalatoreUncheckedUpdateInput>
  }


  /**
   * tiposegnalatore delete
   */
  export type tiposegnalatoreDeleteArgs = {
    /**
     * Select specific fields to fetch from the tiposegnalatore
     */
    select?: tiposegnalatoreSelect | null
    /**
     * Filter which tiposegnalatore to delete.
     */
    where: tiposegnalatoreWhereUniqueInput
  }


  /**
   * tiposegnalatore deleteMany
   */
  export type tiposegnalatoreDeleteManyArgs = {
    /**
     * Filter which tiposegnalatores to delete
     */
    where?: tiposegnalatoreWhereInput
  }


  /**
   * tiposegnalatore without action
   */
  export type tiposegnalatoreArgs = {
    /**
     * Select specific fields to fetch from the tiposegnalatore
     */
    select?: tiposegnalatoreSelect | null
  }



  /**
   * Model tiposeverita
   */


  export type AggregateTiposeverita = {
    _count: TiposeveritaCountAggregateOutputType | null
    _avg: TiposeveritaAvgAggregateOutputType | null
    _sum: TiposeveritaSumAggregateOutputType | null
    _min: TiposeveritaMinAggregateOutputType | null
    _max: TiposeveritaMaxAggregateOutputType | null
  }

  export type TiposeveritaAvgAggregateOutputType = {
    id: number | null
  }

  export type TiposeveritaSumAggregateOutputType = {
    id: number | null
  }

  export type TiposeveritaMinAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type TiposeveritaMaxAggregateOutputType = {
    id: number | null
    value: string | null
  }

  export type TiposeveritaCountAggregateOutputType = {
    id: number
    value: number
    _all: number
  }


  export type TiposeveritaAvgAggregateInputType = {
    id?: true
  }

  export type TiposeveritaSumAggregateInputType = {
    id?: true
  }

  export type TiposeveritaMinAggregateInputType = {
    id?: true
    value?: true
  }

  export type TiposeveritaMaxAggregateInputType = {
    id?: true
    value?: true
  }

  export type TiposeveritaCountAggregateInputType = {
    id?: true
    value?: true
    _all?: true
  }

  export type TiposeveritaAggregateArgs = {
    /**
     * Filter which tiposeverita to aggregate.
     */
    where?: tiposeveritaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tiposeveritas to fetch.
     */
    orderBy?: Enumerable<tiposeveritaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tiposeveritaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tiposeveritas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tiposeveritas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tiposeveritas
    **/
    _count?: true | TiposeveritaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TiposeveritaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TiposeveritaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TiposeveritaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TiposeveritaMaxAggregateInputType
  }

  export type GetTiposeveritaAggregateType<T extends TiposeveritaAggregateArgs> = {
        [P in keyof T & keyof AggregateTiposeverita]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTiposeverita[P]>
      : GetScalarType<T[P], AggregateTiposeverita[P]>
  }




  export type TiposeveritaGroupByArgs = {
    where?: tiposeveritaWhereInput
    orderBy?: Enumerable<tiposeveritaOrderByWithAggregationInput>
    by: TiposeveritaScalarFieldEnum[]
    having?: tiposeveritaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TiposeveritaCountAggregateInputType | true
    _avg?: TiposeveritaAvgAggregateInputType
    _sum?: TiposeveritaSumAggregateInputType
    _min?: TiposeveritaMinAggregateInputType
    _max?: TiposeveritaMaxAggregateInputType
  }


  export type TiposeveritaGroupByOutputType = {
    id: number
    value: string | null
    _count: TiposeveritaCountAggregateOutputType | null
    _avg: TiposeveritaAvgAggregateOutputType | null
    _sum: TiposeveritaSumAggregateOutputType | null
    _min: TiposeveritaMinAggregateOutputType | null
    _max: TiposeveritaMaxAggregateOutputType | null
  }

  type GetTiposeveritaGroupByPayload<T extends TiposeveritaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<TiposeveritaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TiposeveritaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TiposeveritaGroupByOutputType[P]>
            : GetScalarType<T[P], TiposeveritaGroupByOutputType[P]>
        }
      >
    >


  export type tiposeveritaSelect = {
    id?: boolean
    value?: boolean
    segnalazione?: boolean | tiposeverita$segnalazioneArgs
    segnalazionestorico?: boolean | tiposeverita$segnalazionestoricoArgs
    _count?: boolean | TiposeveritaCountOutputTypeArgs
  }


  export type tiposeveritaInclude = {
    segnalazione?: boolean | tiposeverita$segnalazioneArgs
    segnalazionestorico?: boolean | tiposeverita$segnalazionestoricoArgs
    _count?: boolean | TiposeveritaCountOutputTypeArgs
  }

  export type tiposeveritaGetPayload<S extends boolean | null | undefined | tiposeveritaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? tiposeverita :
    S extends undefined ? never :
    S extends { include: any } & (tiposeveritaArgs | tiposeveritaFindManyArgs)
    ? tiposeverita  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['include'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['include'][P]>>  :
        P extends '_count' ? TiposeveritaCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (tiposeveritaArgs | tiposeveritaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'segnalazione' ? Array < segnalazioneGetPayload<S['select'][P]>>  :
        P extends 'segnalazionestorico' ? Array < segnalazionestoricoGetPayload<S['select'][P]>>  :
        P extends '_count' ? TiposeveritaCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof tiposeverita ? tiposeverita[P] : never
  } 
      : tiposeverita


  type tiposeveritaCountArgs = 
    Omit<tiposeveritaFindManyArgs, 'select' | 'include'> & {
      select?: TiposeveritaCountAggregateInputType | true
    }

  export interface tiposeveritaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Tiposeverita that matches the filter.
     * @param {tiposeveritaFindUniqueArgs} args - Arguments to find a Tiposeverita
     * @example
     * // Get one Tiposeverita
     * const tiposeverita = await prisma.tiposeverita.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tiposeveritaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, tiposeveritaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'tiposeverita'> extends True ? Prisma__tiposeveritaClient<tiposeveritaGetPayload<T>> : Prisma__tiposeveritaClient<tiposeveritaGetPayload<T> | null, null>

    /**
     * Find one Tiposeverita that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tiposeveritaFindUniqueOrThrowArgs} args - Arguments to find a Tiposeverita
     * @example
     * // Get one Tiposeverita
     * const tiposeverita = await prisma.tiposeverita.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tiposeveritaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, tiposeveritaFindUniqueOrThrowArgs>
    ): Prisma__tiposeveritaClient<tiposeveritaGetPayload<T>>

    /**
     * Find the first Tiposeverita that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiposeveritaFindFirstArgs} args - Arguments to find a Tiposeverita
     * @example
     * // Get one Tiposeverita
     * const tiposeverita = await prisma.tiposeverita.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tiposeveritaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, tiposeveritaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'tiposeverita'> extends True ? Prisma__tiposeveritaClient<tiposeveritaGetPayload<T>> : Prisma__tiposeveritaClient<tiposeveritaGetPayload<T> | null, null>

    /**
     * Find the first Tiposeverita that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiposeveritaFindFirstOrThrowArgs} args - Arguments to find a Tiposeverita
     * @example
     * // Get one Tiposeverita
     * const tiposeverita = await prisma.tiposeverita.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tiposeveritaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, tiposeveritaFindFirstOrThrowArgs>
    ): Prisma__tiposeveritaClient<tiposeveritaGetPayload<T>>

    /**
     * Find zero or more Tiposeveritas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiposeveritaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tiposeveritas
     * const tiposeveritas = await prisma.tiposeverita.findMany()
     * 
     * // Get first 10 Tiposeveritas
     * const tiposeveritas = await prisma.tiposeverita.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tiposeveritaWithIdOnly = await prisma.tiposeverita.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tiposeveritaFindManyArgs>(
      args?: SelectSubset<T, tiposeveritaFindManyArgs>
    ): Prisma.PrismaPromise<Array<tiposeveritaGetPayload<T>>>

    /**
     * Create a Tiposeverita.
     * @param {tiposeveritaCreateArgs} args - Arguments to create a Tiposeverita.
     * @example
     * // Create one Tiposeverita
     * const Tiposeverita = await prisma.tiposeverita.create({
     *   data: {
     *     // ... data to create a Tiposeverita
     *   }
     * })
     * 
    **/
    create<T extends tiposeveritaCreateArgs>(
      args: SelectSubset<T, tiposeveritaCreateArgs>
    ): Prisma__tiposeveritaClient<tiposeveritaGetPayload<T>>

    /**
     * Create many Tiposeveritas.
     *     @param {tiposeveritaCreateManyArgs} args - Arguments to create many Tiposeveritas.
     *     @example
     *     // Create many Tiposeveritas
     *     const tiposeverita = await prisma.tiposeverita.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tiposeveritaCreateManyArgs>(
      args?: SelectSubset<T, tiposeveritaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tiposeverita.
     * @param {tiposeveritaDeleteArgs} args - Arguments to delete one Tiposeverita.
     * @example
     * // Delete one Tiposeverita
     * const Tiposeverita = await prisma.tiposeverita.delete({
     *   where: {
     *     // ... filter to delete one Tiposeverita
     *   }
     * })
     * 
    **/
    delete<T extends tiposeveritaDeleteArgs>(
      args: SelectSubset<T, tiposeveritaDeleteArgs>
    ): Prisma__tiposeveritaClient<tiposeveritaGetPayload<T>>

    /**
     * Update one Tiposeverita.
     * @param {tiposeveritaUpdateArgs} args - Arguments to update one Tiposeverita.
     * @example
     * // Update one Tiposeverita
     * const tiposeverita = await prisma.tiposeverita.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tiposeveritaUpdateArgs>(
      args: SelectSubset<T, tiposeveritaUpdateArgs>
    ): Prisma__tiposeveritaClient<tiposeveritaGetPayload<T>>

    /**
     * Delete zero or more Tiposeveritas.
     * @param {tiposeveritaDeleteManyArgs} args - Arguments to filter Tiposeveritas to delete.
     * @example
     * // Delete a few Tiposeveritas
     * const { count } = await prisma.tiposeverita.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tiposeveritaDeleteManyArgs>(
      args?: SelectSubset<T, tiposeveritaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tiposeveritas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiposeveritaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tiposeveritas
     * const tiposeverita = await prisma.tiposeverita.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tiposeveritaUpdateManyArgs>(
      args: SelectSubset<T, tiposeveritaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tiposeverita.
     * @param {tiposeveritaUpsertArgs} args - Arguments to update or create a Tiposeverita.
     * @example
     * // Update or create a Tiposeverita
     * const tiposeverita = await prisma.tiposeverita.upsert({
     *   create: {
     *     // ... data to create a Tiposeverita
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tiposeverita we want to update
     *   }
     * })
    **/
    upsert<T extends tiposeveritaUpsertArgs>(
      args: SelectSubset<T, tiposeveritaUpsertArgs>
    ): Prisma__tiposeveritaClient<tiposeveritaGetPayload<T>>

    /**
     * Count the number of Tiposeveritas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiposeveritaCountArgs} args - Arguments to filter Tiposeveritas to count.
     * @example
     * // Count the number of Tiposeveritas
     * const count = await prisma.tiposeverita.count({
     *   where: {
     *     // ... the filter for the Tiposeveritas we want to count
     *   }
     * })
    **/
    count<T extends tiposeveritaCountArgs>(
      args?: Subset<T, tiposeveritaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TiposeveritaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tiposeverita.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TiposeveritaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TiposeveritaAggregateArgs>(args: Subset<T, TiposeveritaAggregateArgs>): Prisma.PrismaPromise<GetTiposeveritaAggregateType<T>>

    /**
     * Group by Tiposeverita.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TiposeveritaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TiposeveritaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TiposeveritaGroupByArgs['orderBy'] }
        : { orderBy?: TiposeveritaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TiposeveritaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTiposeveritaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for tiposeverita.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__tiposeveritaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    segnalazione<T extends tiposeverita$segnalazioneArgs= {}>(args?: Subset<T, tiposeverita$segnalazioneArgs>): Prisma.PrismaPromise<Array<segnalazioneGetPayload<T>>| Null>;

    segnalazionestorico<T extends tiposeverita$segnalazionestoricoArgs= {}>(args?: Subset<T, tiposeverita$segnalazionestoricoArgs>): Prisma.PrismaPromise<Array<segnalazionestoricoGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * tiposeverita base type for findUnique actions
   */
  export type tiposeveritaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the tiposeverita
     */
    select?: tiposeveritaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tiposeveritaInclude | null
    /**
     * Filter, which tiposeverita to fetch.
     */
    where: tiposeveritaWhereUniqueInput
  }

  /**
   * tiposeverita findUnique
   */
  export interface tiposeveritaFindUniqueArgs extends tiposeveritaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tiposeverita findUniqueOrThrow
   */
  export type tiposeveritaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tiposeverita
     */
    select?: tiposeveritaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tiposeveritaInclude | null
    /**
     * Filter, which tiposeverita to fetch.
     */
    where: tiposeveritaWhereUniqueInput
  }


  /**
   * tiposeverita base type for findFirst actions
   */
  export type tiposeveritaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the tiposeverita
     */
    select?: tiposeveritaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tiposeveritaInclude | null
    /**
     * Filter, which tiposeverita to fetch.
     */
    where?: tiposeveritaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tiposeveritas to fetch.
     */
    orderBy?: Enumerable<tiposeveritaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tiposeveritas.
     */
    cursor?: tiposeveritaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tiposeveritas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tiposeveritas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tiposeveritas.
     */
    distinct?: Enumerable<TiposeveritaScalarFieldEnum>
  }

  /**
   * tiposeverita findFirst
   */
  export interface tiposeveritaFindFirstArgs extends tiposeveritaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tiposeverita findFirstOrThrow
   */
  export type tiposeveritaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tiposeverita
     */
    select?: tiposeveritaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tiposeveritaInclude | null
    /**
     * Filter, which tiposeverita to fetch.
     */
    where?: tiposeveritaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tiposeveritas to fetch.
     */
    orderBy?: Enumerable<tiposeveritaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tiposeveritas.
     */
    cursor?: tiposeveritaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tiposeveritas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tiposeveritas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tiposeveritas.
     */
    distinct?: Enumerable<TiposeveritaScalarFieldEnum>
  }


  /**
   * tiposeverita findMany
   */
  export type tiposeveritaFindManyArgs = {
    /**
     * Select specific fields to fetch from the tiposeverita
     */
    select?: tiposeveritaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tiposeveritaInclude | null
    /**
     * Filter, which tiposeveritas to fetch.
     */
    where?: tiposeveritaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tiposeveritas to fetch.
     */
    orderBy?: Enumerable<tiposeveritaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tiposeveritas.
     */
    cursor?: tiposeveritaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tiposeveritas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tiposeveritas.
     */
    skip?: number
    distinct?: Enumerable<TiposeveritaScalarFieldEnum>
  }


  /**
   * tiposeverita create
   */
  export type tiposeveritaCreateArgs = {
    /**
     * Select specific fields to fetch from the tiposeverita
     */
    select?: tiposeveritaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tiposeveritaInclude | null
    /**
     * The data needed to create a tiposeverita.
     */
    data: XOR<tiposeveritaCreateInput, tiposeveritaUncheckedCreateInput>
  }


  /**
   * tiposeverita createMany
   */
  export type tiposeveritaCreateManyArgs = {
    /**
     * The data used to create many tiposeveritas.
     */
    data: Enumerable<tiposeveritaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * tiposeverita update
   */
  export type tiposeveritaUpdateArgs = {
    /**
     * Select specific fields to fetch from the tiposeverita
     */
    select?: tiposeveritaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tiposeveritaInclude | null
    /**
     * The data needed to update a tiposeverita.
     */
    data: XOR<tiposeveritaUpdateInput, tiposeveritaUncheckedUpdateInput>
    /**
     * Choose, which tiposeverita to update.
     */
    where: tiposeveritaWhereUniqueInput
  }


  /**
   * tiposeverita updateMany
   */
  export type tiposeveritaUpdateManyArgs = {
    /**
     * The data used to update tiposeveritas.
     */
    data: XOR<tiposeveritaUpdateManyMutationInput, tiposeveritaUncheckedUpdateManyInput>
    /**
     * Filter which tiposeveritas to update
     */
    where?: tiposeveritaWhereInput
  }


  /**
   * tiposeverita upsert
   */
  export type tiposeveritaUpsertArgs = {
    /**
     * Select specific fields to fetch from the tiposeverita
     */
    select?: tiposeveritaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tiposeveritaInclude | null
    /**
     * The filter to search for the tiposeverita to update in case it exists.
     */
    where: tiposeveritaWhereUniqueInput
    /**
     * In case the tiposeverita found by the `where` argument doesn't exist, create a new tiposeverita with this data.
     */
    create: XOR<tiposeveritaCreateInput, tiposeveritaUncheckedCreateInput>
    /**
     * In case the tiposeverita was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tiposeveritaUpdateInput, tiposeveritaUncheckedUpdateInput>
  }


  /**
   * tiposeverita delete
   */
  export type tiposeveritaDeleteArgs = {
    /**
     * Select specific fields to fetch from the tiposeverita
     */
    select?: tiposeveritaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tiposeveritaInclude | null
    /**
     * Filter which tiposeverita to delete.
     */
    where: tiposeveritaWhereUniqueInput
  }


  /**
   * tiposeverita deleteMany
   */
  export type tiposeveritaDeleteManyArgs = {
    /**
     * Filter which tiposeveritas to delete
     */
    where?: tiposeveritaWhereInput
  }


  /**
   * tiposeverita.segnalazione
   */
  export type tiposeverita$segnalazioneArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    where?: segnalazioneWhereInput
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    cursor?: segnalazioneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * tiposeverita.segnalazionestorico
   */
  export type tiposeverita$segnalazionestoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    where?: segnalazionestoricoWhereInput
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    cursor?: segnalazionestoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * tiposeverita without action
   */
  export type tiposeveritaArgs = {
    /**
     * Select specific fields to fetch from the tiposeverita
     */
    select?: tiposeveritaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tiposeveritaInclude | null
  }



  /**
   * Model utenti
   */


  export type AggregateUtenti = {
    _count: UtentiCountAggregateOutputType | null
    _avg: UtentiAvgAggregateOutputType | null
    _sum: UtentiSumAggregateOutputType | null
    _min: UtentiMinAggregateOutputType | null
    _max: UtentiMaxAggregateOutputType | null
  }

  export type UtentiAvgAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idGruppo: number | null
  }

  export type UtentiSumAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    idGruppo: number | null
  }

  export type UtentiMinAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    nome: string | null
    cognome: string | null
    username: string | null
    password: string | null
    email: string | null
    status: string | null
    permessi: string | null
    dataCreazione: string | null
    dataModifica: string | null
    dataSospensione: string | null
    idGruppo: number | null
    del: string | null
    scadenzaPassword: string | null
    roles: string | null
  }

  export type UtentiMaxAggregateOutputType = {
    id: number | null
    idAppalto: number | null
    nome: string | null
    cognome: string | null
    username: string | null
    password: string | null
    email: string | null
    status: string | null
    permessi: string | null
    dataCreazione: string | null
    dataModifica: string | null
    dataSospensione: string | null
    idGruppo: number | null
    del: string | null
    scadenzaPassword: string | null
    roles: string | null
  }

  export type UtentiCountAggregateOutputType = {
    id: number
    idAppalto: number
    nome: number
    cognome: number
    username: number
    password: number
    email: number
    status: number
    permessi: number
    dataCreazione: number
    dataModifica: number
    dataSospensione: number
    idGruppo: number
    del: number
    scadenzaPassword: number
    roles: number
    _all: number
  }


  export type UtentiAvgAggregateInputType = {
    id?: true
    idAppalto?: true
    idGruppo?: true
  }

  export type UtentiSumAggregateInputType = {
    id?: true
    idAppalto?: true
    idGruppo?: true
  }

  export type UtentiMinAggregateInputType = {
    id?: true
    idAppalto?: true
    nome?: true
    cognome?: true
    username?: true
    password?: true
    email?: true
    status?: true
    permessi?: true
    dataCreazione?: true
    dataModifica?: true
    dataSospensione?: true
    idGruppo?: true
    del?: true
    scadenzaPassword?: true
    roles?: true
  }

  export type UtentiMaxAggregateInputType = {
    id?: true
    idAppalto?: true
    nome?: true
    cognome?: true
    username?: true
    password?: true
    email?: true
    status?: true
    permessi?: true
    dataCreazione?: true
    dataModifica?: true
    dataSospensione?: true
    idGruppo?: true
    del?: true
    scadenzaPassword?: true
    roles?: true
  }

  export type UtentiCountAggregateInputType = {
    id?: true
    idAppalto?: true
    nome?: true
    cognome?: true
    username?: true
    password?: true
    email?: true
    status?: true
    permessi?: true
    dataCreazione?: true
    dataModifica?: true
    dataSospensione?: true
    idGruppo?: true
    del?: true
    scadenzaPassword?: true
    roles?: true
    _all?: true
  }

  export type UtentiAggregateArgs = {
    /**
     * Filter which utenti to aggregate.
     */
    where?: utentiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of utentis to fetch.
     */
    orderBy?: Enumerable<utentiOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: utentiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` utentis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` utentis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned utentis
    **/
    _count?: true | UtentiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UtentiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UtentiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UtentiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UtentiMaxAggregateInputType
  }

  export type GetUtentiAggregateType<T extends UtentiAggregateArgs> = {
        [P in keyof T & keyof AggregateUtenti]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUtenti[P]>
      : GetScalarType<T[P], AggregateUtenti[P]>
  }




  export type UtentiGroupByArgs = {
    where?: utentiWhereInput
    orderBy?: Enumerable<utentiOrderByWithAggregationInput>
    by: UtentiScalarFieldEnum[]
    having?: utentiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UtentiCountAggregateInputType | true
    _avg?: UtentiAvgAggregateInputType
    _sum?: UtentiSumAggregateInputType
    _min?: UtentiMinAggregateInputType
    _max?: UtentiMaxAggregateInputType
  }


  export type UtentiGroupByOutputType = {
    id: number
    idAppalto: number | null
    nome: string | null
    cognome: string | null
    username: string | null
    password: string | null
    email: string
    status: string | null
    permessi: string | null
    dataCreazione: string | null
    dataModifica: string | null
    dataSospensione: string | null
    idGruppo: number | null
    del: string | null
    scadenzaPassword: string | null
    roles: string | null
    _count: UtentiCountAggregateOutputType | null
    _avg: UtentiAvgAggregateOutputType | null
    _sum: UtentiSumAggregateOutputType | null
    _min: UtentiMinAggregateOutputType | null
    _max: UtentiMaxAggregateOutputType | null
  }

  type GetUtentiGroupByPayload<T extends UtentiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<UtentiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UtentiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UtentiGroupByOutputType[P]>
            : GetScalarType<T[P], UtentiGroupByOutputType[P]>
        }
      >
    >


  export type utentiSelect = {
    id?: boolean
    idAppalto?: boolean
    nome?: boolean
    cognome?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    status?: boolean
    permessi?: boolean
    dataCreazione?: boolean
    dataModifica?: boolean
    dataSospensione?: boolean
    idGruppo?: boolean
    del?: boolean
    scadenzaPassword?: boolean
    roles?: boolean
    catastoanomalia?: boolean | utenti$catastoanomaliaArgs
    catastolinker?: boolean | utenti$catastolinkerArgs
    lavoro_lavoro_idUtenteStatoToutenti?: boolean | utenti$lavoro_lavoro_idUtenteStatoToutentiArgs
    lavoro_lavoro_idUtenteToutenti?: boolean | utenti$lavoro_lavoro_idUtenteToutentiArgs
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: boolean | utenti$lavorostorico_lavorostorico_idUtenteStatoToutentiArgs
    lavorostorico_lavorostorico_idUtenteToutenti?: boolean | utenti$lavorostorico_lavorostorico_idUtenteToutentiArgs
    livelliservizio?: boolean | utenti$livelliservizioArgs
    oggettocivetta?: boolean | utenti$oggettocivettaArgs
    pratica?: boolean | utenti$praticaArgs
    praticastorico?: boolean | utenti$praticastoricoArgs
    registrorichiedente?: boolean | utenti$registrorichiedenteArgs
    segnalazione_segnalazione_idUtenteStatoToutenti?: boolean | utenti$segnalazione_segnalazione_idUtenteStatoToutentiArgs
    segnalazione_segnalazione_idUtenteToutenti?: boolean | utenti$segnalazione_segnalazione_idUtenteToutentiArgs
    segnalazionestatostorico?: boolean | utenti$segnalazionestatostoricoArgs
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: boolean | utenti$segnalazionestorico_segnalazionestorico_idUtenteStatoToutentiArgs
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: boolean | utenti$segnalazionestorico_segnalazionestorico_idUtenteToutentiArgs
    gruppo?: boolean | gruppoArgs
    _count?: boolean | UtentiCountOutputTypeArgs
  }


  export type utentiInclude = {
    catastoanomalia?: boolean | utenti$catastoanomaliaArgs
    catastolinker?: boolean | utenti$catastolinkerArgs
    lavoro_lavoro_idUtenteStatoToutenti?: boolean | utenti$lavoro_lavoro_idUtenteStatoToutentiArgs
    lavoro_lavoro_idUtenteToutenti?: boolean | utenti$lavoro_lavoro_idUtenteToutentiArgs
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: boolean | utenti$lavorostorico_lavorostorico_idUtenteStatoToutentiArgs
    lavorostorico_lavorostorico_idUtenteToutenti?: boolean | utenti$lavorostorico_lavorostorico_idUtenteToutentiArgs
    livelliservizio?: boolean | utenti$livelliservizioArgs
    oggettocivetta?: boolean | utenti$oggettocivettaArgs
    pratica?: boolean | utenti$praticaArgs
    praticastorico?: boolean | utenti$praticastoricoArgs
    registrorichiedente?: boolean | utenti$registrorichiedenteArgs
    segnalazione_segnalazione_idUtenteStatoToutenti?: boolean | utenti$segnalazione_segnalazione_idUtenteStatoToutentiArgs
    segnalazione_segnalazione_idUtenteToutenti?: boolean | utenti$segnalazione_segnalazione_idUtenteToutentiArgs
    segnalazionestatostorico?: boolean | utenti$segnalazionestatostoricoArgs
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: boolean | utenti$segnalazionestorico_segnalazionestorico_idUtenteStatoToutentiArgs
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: boolean | utenti$segnalazionestorico_segnalazionestorico_idUtenteToutentiArgs
    gruppo?: boolean | gruppoArgs
    _count?: boolean | UtentiCountOutputTypeArgs
  }

  export type utentiGetPayload<S extends boolean | null | undefined | utentiArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? utenti :
    S extends undefined ? never :
    S extends { include: any } & (utentiArgs | utentiFindManyArgs)
    ? utenti  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'catastoanomalia' ? Array < catastoanomaliaGetPayload<S['include'][P]>>  :
        P extends 'catastolinker' ? Array < catastolinkerGetPayload<S['include'][P]>>  :
        P extends 'lavoro_lavoro_idUtenteStatoToutenti' ? Array < lavoroGetPayload<S['include'][P]>>  :
        P extends 'lavoro_lavoro_idUtenteToutenti' ? Array < lavoroGetPayload<S['include'][P]>>  :
        P extends 'lavorostorico_lavorostorico_idUtenteStatoToutenti' ? Array < lavorostoricoGetPayload<S['include'][P]>>  :
        P extends 'lavorostorico_lavorostorico_idUtenteToutenti' ? Array < lavorostoricoGetPayload<S['include'][P]>>  :
        P extends 'livelliservizio' ? Array < livelliservizioGetPayload<S['include'][P]>>  :
        P extends 'oggettocivetta' ? Array < oggettocivettaGetPayload<S['include'][P]>>  :
        P extends 'pratica' ? Array < praticaGetPayload<S['include'][P]>>  :
        P extends 'praticastorico' ? Array < praticastoricoGetPayload<S['include'][P]>>  :
        P extends 'registrorichiedente' ? Array < registrorichiedenteGetPayload<S['include'][P]>>  :
        P extends 'segnalazione_segnalazione_idUtenteStatoToutenti' ? Array < segnalazioneGetPayload<S['include'][P]>>  :
        P extends 'segnalazione_segnalazione_idUtenteToutenti' ? Array < segnalazioneGetPayload<S['include'][P]>>  :
        P extends 'segnalazionestatostorico' ? Array < segnalazionestatostoricoGetPayload<S['include'][P]>>  :
        P extends 'segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti' ? Array < segnalazionestoricoGetPayload<S['include'][P]>>  :
        P extends 'segnalazionestorico_segnalazionestorico_idUtenteToutenti' ? Array < segnalazionestoricoGetPayload<S['include'][P]>>  :
        P extends 'gruppo' ? gruppoGetPayload<S['include'][P]> | null :
        P extends '_count' ? UtentiCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (utentiArgs | utentiFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'catastoanomalia' ? Array < catastoanomaliaGetPayload<S['select'][P]>>  :
        P extends 'catastolinker' ? Array < catastolinkerGetPayload<S['select'][P]>>  :
        P extends 'lavoro_lavoro_idUtenteStatoToutenti' ? Array < lavoroGetPayload<S['select'][P]>>  :
        P extends 'lavoro_lavoro_idUtenteToutenti' ? Array < lavoroGetPayload<S['select'][P]>>  :
        P extends 'lavorostorico_lavorostorico_idUtenteStatoToutenti' ? Array < lavorostoricoGetPayload<S['select'][P]>>  :
        P extends 'lavorostorico_lavorostorico_idUtenteToutenti' ? Array < lavorostoricoGetPayload<S['select'][P]>>  :
        P extends 'livelliservizio' ? Array < livelliservizioGetPayload<S['select'][P]>>  :
        P extends 'oggettocivetta' ? Array < oggettocivettaGetPayload<S['select'][P]>>  :
        P extends 'pratica' ? Array < praticaGetPayload<S['select'][P]>>  :
        P extends 'praticastorico' ? Array < praticastoricoGetPayload<S['select'][P]>>  :
        P extends 'registrorichiedente' ? Array < registrorichiedenteGetPayload<S['select'][P]>>  :
        P extends 'segnalazione_segnalazione_idUtenteStatoToutenti' ? Array < segnalazioneGetPayload<S['select'][P]>>  :
        P extends 'segnalazione_segnalazione_idUtenteToutenti' ? Array < segnalazioneGetPayload<S['select'][P]>>  :
        P extends 'segnalazionestatostorico' ? Array < segnalazionestatostoricoGetPayload<S['select'][P]>>  :
        P extends 'segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti' ? Array < segnalazionestoricoGetPayload<S['select'][P]>>  :
        P extends 'segnalazionestorico_segnalazionestorico_idUtenteToutenti' ? Array < segnalazionestoricoGetPayload<S['select'][P]>>  :
        P extends 'gruppo' ? gruppoGetPayload<S['select'][P]> | null :
        P extends '_count' ? UtentiCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof utenti ? utenti[P] : never
  } 
      : utenti


  type utentiCountArgs = 
    Omit<utentiFindManyArgs, 'select' | 'include'> & {
      select?: UtentiCountAggregateInputType | true
    }

  export interface utentiDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Utenti that matches the filter.
     * @param {utentiFindUniqueArgs} args - Arguments to find a Utenti
     * @example
     * // Get one Utenti
     * const utenti = await prisma.utenti.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends utentiFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, utentiFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'utenti'> extends True ? Prisma__utentiClient<utentiGetPayload<T>> : Prisma__utentiClient<utentiGetPayload<T> | null, null>

    /**
     * Find one Utenti that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {utentiFindUniqueOrThrowArgs} args - Arguments to find a Utenti
     * @example
     * // Get one Utenti
     * const utenti = await prisma.utenti.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends utentiFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, utentiFindUniqueOrThrowArgs>
    ): Prisma__utentiClient<utentiGetPayload<T>>

    /**
     * Find the first Utenti that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utentiFindFirstArgs} args - Arguments to find a Utenti
     * @example
     * // Get one Utenti
     * const utenti = await prisma.utenti.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends utentiFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, utentiFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'utenti'> extends True ? Prisma__utentiClient<utentiGetPayload<T>> : Prisma__utentiClient<utentiGetPayload<T> | null, null>

    /**
     * Find the first Utenti that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utentiFindFirstOrThrowArgs} args - Arguments to find a Utenti
     * @example
     * // Get one Utenti
     * const utenti = await prisma.utenti.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends utentiFindFirstOrThrowArgs>(
      args?: SelectSubset<T, utentiFindFirstOrThrowArgs>
    ): Prisma__utentiClient<utentiGetPayload<T>>

    /**
     * Find zero or more Utentis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utentiFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Utentis
     * const utentis = await prisma.utenti.findMany()
     * 
     * // Get first 10 Utentis
     * const utentis = await prisma.utenti.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const utentiWithIdOnly = await prisma.utenti.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends utentiFindManyArgs>(
      args?: SelectSubset<T, utentiFindManyArgs>
    ): Prisma.PrismaPromise<Array<utentiGetPayload<T>>>

    /**
     * Create a Utenti.
     * @param {utentiCreateArgs} args - Arguments to create a Utenti.
     * @example
     * // Create one Utenti
     * const Utenti = await prisma.utenti.create({
     *   data: {
     *     // ... data to create a Utenti
     *   }
     * })
     * 
    **/
    create<T extends utentiCreateArgs>(
      args: SelectSubset<T, utentiCreateArgs>
    ): Prisma__utentiClient<utentiGetPayload<T>>

    /**
     * Create many Utentis.
     *     @param {utentiCreateManyArgs} args - Arguments to create many Utentis.
     *     @example
     *     // Create many Utentis
     *     const utenti = await prisma.utenti.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends utentiCreateManyArgs>(
      args?: SelectSubset<T, utentiCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Utenti.
     * @param {utentiDeleteArgs} args - Arguments to delete one Utenti.
     * @example
     * // Delete one Utenti
     * const Utenti = await prisma.utenti.delete({
     *   where: {
     *     // ... filter to delete one Utenti
     *   }
     * })
     * 
    **/
    delete<T extends utentiDeleteArgs>(
      args: SelectSubset<T, utentiDeleteArgs>
    ): Prisma__utentiClient<utentiGetPayload<T>>

    /**
     * Update one Utenti.
     * @param {utentiUpdateArgs} args - Arguments to update one Utenti.
     * @example
     * // Update one Utenti
     * const utenti = await prisma.utenti.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends utentiUpdateArgs>(
      args: SelectSubset<T, utentiUpdateArgs>
    ): Prisma__utentiClient<utentiGetPayload<T>>

    /**
     * Delete zero or more Utentis.
     * @param {utentiDeleteManyArgs} args - Arguments to filter Utentis to delete.
     * @example
     * // Delete a few Utentis
     * const { count } = await prisma.utenti.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends utentiDeleteManyArgs>(
      args?: SelectSubset<T, utentiDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Utentis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utentiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Utentis
     * const utenti = await prisma.utenti.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends utentiUpdateManyArgs>(
      args: SelectSubset<T, utentiUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Utenti.
     * @param {utentiUpsertArgs} args - Arguments to update or create a Utenti.
     * @example
     * // Update or create a Utenti
     * const utenti = await prisma.utenti.upsert({
     *   create: {
     *     // ... data to create a Utenti
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Utenti we want to update
     *   }
     * })
    **/
    upsert<T extends utentiUpsertArgs>(
      args: SelectSubset<T, utentiUpsertArgs>
    ): Prisma__utentiClient<utentiGetPayload<T>>

    /**
     * Count the number of Utentis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utentiCountArgs} args - Arguments to filter Utentis to count.
     * @example
     * // Count the number of Utentis
     * const count = await prisma.utenti.count({
     *   where: {
     *     // ... the filter for the Utentis we want to count
     *   }
     * })
    **/
    count<T extends utentiCountArgs>(
      args?: Subset<T, utentiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UtentiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Utenti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UtentiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UtentiAggregateArgs>(args: Subset<T, UtentiAggregateArgs>): Prisma.PrismaPromise<GetUtentiAggregateType<T>>

    /**
     * Group by Utenti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UtentiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UtentiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UtentiGroupByArgs['orderBy'] }
        : { orderBy?: UtentiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UtentiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUtentiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for utenti.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__utentiClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    catastoanomalia<T extends utenti$catastoanomaliaArgs= {}>(args?: Subset<T, utenti$catastoanomaliaArgs>): Prisma.PrismaPromise<Array<catastoanomaliaGetPayload<T>>| Null>;

    catastolinker<T extends utenti$catastolinkerArgs= {}>(args?: Subset<T, utenti$catastolinkerArgs>): Prisma.PrismaPromise<Array<catastolinkerGetPayload<T>>| Null>;

    lavoro_lavoro_idUtenteStatoToutenti<T extends utenti$lavoro_lavoro_idUtenteStatoToutentiArgs= {}>(args?: Subset<T, utenti$lavoro_lavoro_idUtenteStatoToutentiArgs>): Prisma.PrismaPromise<Array<lavoroGetPayload<T>>| Null>;

    lavoro_lavoro_idUtenteToutenti<T extends utenti$lavoro_lavoro_idUtenteToutentiArgs= {}>(args?: Subset<T, utenti$lavoro_lavoro_idUtenteToutentiArgs>): Prisma.PrismaPromise<Array<lavoroGetPayload<T>>| Null>;

    lavorostorico_lavorostorico_idUtenteStatoToutenti<T extends utenti$lavorostorico_lavorostorico_idUtenteStatoToutentiArgs= {}>(args?: Subset<T, utenti$lavorostorico_lavorostorico_idUtenteStatoToutentiArgs>): Prisma.PrismaPromise<Array<lavorostoricoGetPayload<T>>| Null>;

    lavorostorico_lavorostorico_idUtenteToutenti<T extends utenti$lavorostorico_lavorostorico_idUtenteToutentiArgs= {}>(args?: Subset<T, utenti$lavorostorico_lavorostorico_idUtenteToutentiArgs>): Prisma.PrismaPromise<Array<lavorostoricoGetPayload<T>>| Null>;

    livelliservizio<T extends utenti$livelliservizioArgs= {}>(args?: Subset<T, utenti$livelliservizioArgs>): Prisma.PrismaPromise<Array<livelliservizioGetPayload<T>>| Null>;

    oggettocivetta<T extends utenti$oggettocivettaArgs= {}>(args?: Subset<T, utenti$oggettocivettaArgs>): Prisma.PrismaPromise<Array<oggettocivettaGetPayload<T>>| Null>;

    pratica<T extends utenti$praticaArgs= {}>(args?: Subset<T, utenti$praticaArgs>): Prisma.PrismaPromise<Array<praticaGetPayload<T>>| Null>;

    praticastorico<T extends utenti$praticastoricoArgs= {}>(args?: Subset<T, utenti$praticastoricoArgs>): Prisma.PrismaPromise<Array<praticastoricoGetPayload<T>>| Null>;

    registrorichiedente<T extends utenti$registrorichiedenteArgs= {}>(args?: Subset<T, utenti$registrorichiedenteArgs>): Prisma.PrismaPromise<Array<registrorichiedenteGetPayload<T>>| Null>;

    segnalazione_segnalazione_idUtenteStatoToutenti<T extends utenti$segnalazione_segnalazione_idUtenteStatoToutentiArgs= {}>(args?: Subset<T, utenti$segnalazione_segnalazione_idUtenteStatoToutentiArgs>): Prisma.PrismaPromise<Array<segnalazioneGetPayload<T>>| Null>;

    segnalazione_segnalazione_idUtenteToutenti<T extends utenti$segnalazione_segnalazione_idUtenteToutentiArgs= {}>(args?: Subset<T, utenti$segnalazione_segnalazione_idUtenteToutentiArgs>): Prisma.PrismaPromise<Array<segnalazioneGetPayload<T>>| Null>;

    segnalazionestatostorico<T extends utenti$segnalazionestatostoricoArgs= {}>(args?: Subset<T, utenti$segnalazionestatostoricoArgs>): Prisma.PrismaPromise<Array<segnalazionestatostoricoGetPayload<T>>| Null>;

    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti<T extends utenti$segnalazionestorico_segnalazionestorico_idUtenteStatoToutentiArgs= {}>(args?: Subset<T, utenti$segnalazionestorico_segnalazionestorico_idUtenteStatoToutentiArgs>): Prisma.PrismaPromise<Array<segnalazionestoricoGetPayload<T>>| Null>;

    segnalazionestorico_segnalazionestorico_idUtenteToutenti<T extends utenti$segnalazionestorico_segnalazionestorico_idUtenteToutentiArgs= {}>(args?: Subset<T, utenti$segnalazionestorico_segnalazionestorico_idUtenteToutentiArgs>): Prisma.PrismaPromise<Array<segnalazionestoricoGetPayload<T>>| Null>;

    gruppo<T extends gruppoArgs= {}>(args?: Subset<T, gruppoArgs>): Prisma__gruppoClient<gruppoGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * utenti base type for findUnique actions
   */
  export type utentiFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the utenti
     */
    select?: utentiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: utentiInclude | null
    /**
     * Filter, which utenti to fetch.
     */
    where: utentiWhereUniqueInput
  }

  /**
   * utenti findUnique
   */
  export interface utentiFindUniqueArgs extends utentiFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * utenti findUniqueOrThrow
   */
  export type utentiFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the utenti
     */
    select?: utentiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: utentiInclude | null
    /**
     * Filter, which utenti to fetch.
     */
    where: utentiWhereUniqueInput
  }


  /**
   * utenti base type for findFirst actions
   */
  export type utentiFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the utenti
     */
    select?: utentiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: utentiInclude | null
    /**
     * Filter, which utenti to fetch.
     */
    where?: utentiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of utentis to fetch.
     */
    orderBy?: Enumerable<utentiOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for utentis.
     */
    cursor?: utentiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` utentis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` utentis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of utentis.
     */
    distinct?: Enumerable<UtentiScalarFieldEnum>
  }

  /**
   * utenti findFirst
   */
  export interface utentiFindFirstArgs extends utentiFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * utenti findFirstOrThrow
   */
  export type utentiFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the utenti
     */
    select?: utentiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: utentiInclude | null
    /**
     * Filter, which utenti to fetch.
     */
    where?: utentiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of utentis to fetch.
     */
    orderBy?: Enumerable<utentiOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for utentis.
     */
    cursor?: utentiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` utentis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` utentis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of utentis.
     */
    distinct?: Enumerable<UtentiScalarFieldEnum>
  }


  /**
   * utenti findMany
   */
  export type utentiFindManyArgs = {
    /**
     * Select specific fields to fetch from the utenti
     */
    select?: utentiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: utentiInclude | null
    /**
     * Filter, which utentis to fetch.
     */
    where?: utentiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of utentis to fetch.
     */
    orderBy?: Enumerable<utentiOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing utentis.
     */
    cursor?: utentiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` utentis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` utentis.
     */
    skip?: number
    distinct?: Enumerable<UtentiScalarFieldEnum>
  }


  /**
   * utenti create
   */
  export type utentiCreateArgs = {
    /**
     * Select specific fields to fetch from the utenti
     */
    select?: utentiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: utentiInclude | null
    /**
     * The data needed to create a utenti.
     */
    data: XOR<utentiCreateInput, utentiUncheckedCreateInput>
  }


  /**
   * utenti createMany
   */
  export type utentiCreateManyArgs = {
    /**
     * The data used to create many utentis.
     */
    data: Enumerable<utentiCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * utenti update
   */
  export type utentiUpdateArgs = {
    /**
     * Select specific fields to fetch from the utenti
     */
    select?: utentiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: utentiInclude | null
    /**
     * The data needed to update a utenti.
     */
    data: XOR<utentiUpdateInput, utentiUncheckedUpdateInput>
    /**
     * Choose, which utenti to update.
     */
    where: utentiWhereUniqueInput
  }


  /**
   * utenti updateMany
   */
  export type utentiUpdateManyArgs = {
    /**
     * The data used to update utentis.
     */
    data: XOR<utentiUpdateManyMutationInput, utentiUncheckedUpdateManyInput>
    /**
     * Filter which utentis to update
     */
    where?: utentiWhereInput
  }


  /**
   * utenti upsert
   */
  export type utentiUpsertArgs = {
    /**
     * Select specific fields to fetch from the utenti
     */
    select?: utentiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: utentiInclude | null
    /**
     * The filter to search for the utenti to update in case it exists.
     */
    where: utentiWhereUniqueInput
    /**
     * In case the utenti found by the `where` argument doesn't exist, create a new utenti with this data.
     */
    create: XOR<utentiCreateInput, utentiUncheckedCreateInput>
    /**
     * In case the utenti was found with the provided `where` argument, update it with this data.
     */
    update: XOR<utentiUpdateInput, utentiUncheckedUpdateInput>
  }


  /**
   * utenti delete
   */
  export type utentiDeleteArgs = {
    /**
     * Select specific fields to fetch from the utenti
     */
    select?: utentiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: utentiInclude | null
    /**
     * Filter which utenti to delete.
     */
    where: utentiWhereUniqueInput
  }


  /**
   * utenti deleteMany
   */
  export type utentiDeleteManyArgs = {
    /**
     * Filter which utentis to delete
     */
    where?: utentiWhereInput
  }


  /**
   * utenti.catastoanomalia
   */
  export type utenti$catastoanomaliaArgs = {
    /**
     * Select specific fields to fetch from the catastoanomalia
     */
    select?: catastoanomaliaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastoanomaliaInclude | null
    where?: catastoanomaliaWhereInput
    orderBy?: Enumerable<catastoanomaliaOrderByWithRelationInput>
    cursor?: catastoanomaliaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<CatastoanomaliaScalarFieldEnum>
  }


  /**
   * utenti.catastolinker
   */
  export type utenti$catastolinkerArgs = {
    /**
     * Select specific fields to fetch from the catastolinker
     */
    select?: catastolinkerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catastolinkerInclude | null
    where?: catastolinkerWhereInput
    orderBy?: Enumerable<catastolinkerOrderByWithRelationInput>
    cursor?: catastolinkerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<CatastolinkerScalarFieldEnum>
  }


  /**
   * utenti.lavoro_lavoro_idUtenteStatoToutenti
   */
  export type utenti$lavoro_lavoro_idUtenteStatoToutentiArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    where?: lavoroWhereInput
    orderBy?: Enumerable<lavoroOrderByWithRelationInput>
    cursor?: lavoroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LavoroScalarFieldEnum>
  }


  /**
   * utenti.lavoro_lavoro_idUtenteToutenti
   */
  export type utenti$lavoro_lavoro_idUtenteToutentiArgs = {
    /**
     * Select specific fields to fetch from the lavoro
     */
    select?: lavoroSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavoroInclude | null
    where?: lavoroWhereInput
    orderBy?: Enumerable<lavoroOrderByWithRelationInput>
    cursor?: lavoroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LavoroScalarFieldEnum>
  }


  /**
   * utenti.lavorostorico_lavorostorico_idUtenteStatoToutenti
   */
  export type utenti$lavorostorico_lavorostorico_idUtenteStatoToutentiArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    where?: lavorostoricoWhereInput
    orderBy?: Enumerable<lavorostoricoOrderByWithRelationInput>
    cursor?: lavorostoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LavorostoricoScalarFieldEnum>
  }


  /**
   * utenti.lavorostorico_lavorostorico_idUtenteToutenti
   */
  export type utenti$lavorostorico_lavorostorico_idUtenteToutentiArgs = {
    /**
     * Select specific fields to fetch from the lavorostorico
     */
    select?: lavorostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: lavorostoricoInclude | null
    where?: lavorostoricoWhereInput
    orderBy?: Enumerable<lavorostoricoOrderByWithRelationInput>
    cursor?: lavorostoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LavorostoricoScalarFieldEnum>
  }


  /**
   * utenti.livelliservizio
   */
  export type utenti$livelliservizioArgs = {
    /**
     * Select specific fields to fetch from the livelliservizio
     */
    select?: livelliservizioSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: livelliservizioInclude | null
    where?: livelliservizioWhereInput
    orderBy?: Enumerable<livelliservizioOrderByWithRelationInput>
    cursor?: livelliservizioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LivelliservizioScalarFieldEnum>
  }


  /**
   * utenti.oggettocivetta
   */
  export type utenti$oggettocivettaArgs = {
    /**
     * Select specific fields to fetch from the oggettocivetta
     */
    select?: oggettocivettaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: oggettocivettaInclude | null
    where?: oggettocivettaWhereInput
    orderBy?: Enumerable<oggettocivettaOrderByWithRelationInput>
    cursor?: oggettocivettaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<OggettocivettaScalarFieldEnum>
  }


  /**
   * utenti.pratica
   */
  export type utenti$praticaArgs = {
    /**
     * Select specific fields to fetch from the pratica
     */
    select?: praticaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticaInclude | null
    where?: praticaWhereInput
    orderBy?: Enumerable<praticaOrderByWithRelationInput>
    cursor?: praticaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<PraticaScalarFieldEnum>
  }


  /**
   * utenti.praticastorico
   */
  export type utenti$praticastoricoArgs = {
    /**
     * Select specific fields to fetch from the praticastorico
     */
    select?: praticastoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: praticastoricoInclude | null
    where?: praticastoricoWhereInput
    orderBy?: Enumerable<praticastoricoOrderByWithRelationInput>
    cursor?: praticastoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<PraticastoricoScalarFieldEnum>
  }


  /**
   * utenti.registrorichiedente
   */
  export type utenti$registrorichiedenteArgs = {
    /**
     * Select specific fields to fetch from the registrorichiedente
     */
    select?: registrorichiedenteSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: registrorichiedenteInclude | null
    where?: registrorichiedenteWhereInput
    orderBy?: Enumerable<registrorichiedenteOrderByWithRelationInput>
    cursor?: registrorichiedenteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<RegistrorichiedenteScalarFieldEnum>
  }


  /**
   * utenti.segnalazione_segnalazione_idUtenteStatoToutenti
   */
  export type utenti$segnalazione_segnalazione_idUtenteStatoToutentiArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    where?: segnalazioneWhereInput
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    cursor?: segnalazioneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * utenti.segnalazione_segnalazione_idUtenteToutenti
   */
  export type utenti$segnalazione_segnalazione_idUtenteToutentiArgs = {
    /**
     * Select specific fields to fetch from the segnalazione
     */
    select?: segnalazioneSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazioneInclude | null
    where?: segnalazioneWhereInput
    orderBy?: Enumerable<segnalazioneOrderByWithRelationInput>
    cursor?: segnalazioneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazioneScalarFieldEnum>
  }


  /**
   * utenti.segnalazionestatostorico
   */
  export type utenti$segnalazionestatostoricoArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestatostorico
     */
    select?: segnalazionestatostoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestatostoricoInclude | null
    where?: segnalazionestatostoricoWhereInput
    orderBy?: Enumerable<segnalazionestatostoricoOrderByWithRelationInput>
    cursor?: segnalazionestatostoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestatostoricoScalarFieldEnum>
  }


  /**
   * utenti.segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti
   */
  export type utenti$segnalazionestorico_segnalazionestorico_idUtenteStatoToutentiArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    where?: segnalazionestoricoWhereInput
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    cursor?: segnalazionestoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * utenti.segnalazionestorico_segnalazionestorico_idUtenteToutenti
   */
  export type utenti$segnalazionestorico_segnalazionestorico_idUtenteToutentiArgs = {
    /**
     * Select specific fields to fetch from the segnalazionestorico
     */
    select?: segnalazionestoricoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: segnalazionestoricoInclude | null
    where?: segnalazionestoricoWhereInput
    orderBy?: Enumerable<segnalazionestoricoOrderByWithRelationInput>
    cursor?: segnalazionestoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SegnalazionestoricoScalarFieldEnum>
  }


  /**
   * utenti without action
   */
  export type utentiArgs = {
    /**
     * Select specific fields to fetch from the utenti
     */
    select?: utentiSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: utentiInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const AllegatoScalarFieldEnum: {
    id: 'id',
    tabella_appartenenza: 'tabella_appartenenza',
    id_tabella_appartenenza: 'id_tabella_appartenenza',
    descrizione: 'descrizione',
    path: 'path',
    filename_disk: 'filename_disk',
    filename_originale: 'filename_originale',
    id_operatore_salvataggio: 'id_operatore_salvataggio',
    dt_salvataggio: 'dt_salvataggio',
    del: 'del'
  };

  export type AllegatoScalarFieldEnum = (typeof AllegatoScalarFieldEnum)[keyof typeof AllegatoScalarFieldEnum]


  export const AppaltoScalarFieldEnum: {
    id: 'id',
    tipologia: 'tipologia',
    dataModifica: 'dataModifica'
  };

  export type AppaltoScalarFieldEnum = (typeof AppaltoScalarFieldEnum)[keyof typeof AppaltoScalarFieldEnum]


  export const AttrezzaturaScalarFieldEnum: {
    id: 'id',
    tipologiaAttrezzatura: 'tipologiaAttrezzatura',
    descrizione: 'descrizione',
    dataModifica: 'dataModifica'
  };

  export type AttrezzaturaScalarFieldEnum = (typeof AttrezzaturaScalarFieldEnum)[keyof typeof AttrezzaturaScalarFieldEnum]


  export const Catasto_monitoraggioScalarFieldEnum: {
    id: 'id',
    tabellaCatasto: 'tabellaCatasto',
    tabellaMonitoraggio: 'tabellaMonitoraggio',
    idElemento: 'idElemento'
  };

  export type Catasto_monitoraggioScalarFieldEnum = (typeof Catasto_monitoraggioScalarFieldEnum)[keyof typeof Catasto_monitoraggioScalarFieldEnum]


  export const CatastoanomaliaScalarFieldEnum: {
    id: 'id',
    idUtente: 'idUtente',
    idAppalto: 'idAppalto',
    dataModifica: 'dataModifica',
    adjacentLayer: 'adjacentLayer',
    adjacentLayerGeom: 'adjacentLayerGeom'
  };

  export type CatastoanomaliaScalarFieldEnum = (typeof CatastoanomaliaScalarFieldEnum)[keyof typeof CatastoanomaliaScalarFieldEnum]


  export const CatastolinkerScalarFieldEnum: {
    id: 'id',
    idCatasto: 'idCatasto',
    idAppalto: 'idAppalto',
    idUtente: 'idUtente',
    dataModifica: 'dataModifica',
    idSegnalazione: 'idSegnalazione',
    idLavoro: 'idLavoro',
    statoSegnalazione: 'statoSegnalazione',
    statoLavoro: 'statoLavoro',
    flg_catasto: 'flg_catasto',
    idPratica: 'idPratica',
    geojson: 'geojson'
  };

  export type CatastolinkerScalarFieldEnum = (typeof CatastolinkerScalarFieldEnum)[keyof typeof CatastolinkerScalarFieldEnum]


  export const CategoriaanomaliaScalarFieldEnum: {
    id: 'id',
    value: 'value',
    tabellaNome: 'tabellaNome',
    modalitaInserimento: 'modalitaInserimento'
  };

  export type CategoriaanomaliaScalarFieldEnum = (typeof CategoriaanomaliaScalarFieldEnum)[keyof typeof CategoriaanomaliaScalarFieldEnum]


  export const Categoriaanomalia_sottocategoriaanomaliaScalarFieldEnum: {
    id: 'id',
    id_categoria_anomalia: 'id_categoria_anomalia',
    id_sottocategoria_anomalia: 'id_sottocategoria_anomalia'
  };

  export type Categoriaanomalia_sottocategoriaanomaliaScalarFieldEnum = (typeof Categoriaanomalia_sottocategoriaanomaliaScalarFieldEnum)[keyof typeof Categoriaanomalia_sottocategoriaanomaliaScalarFieldEnum]


  export const Categoriaanomalia_sottocategorialavoroScalarFieldEnum: {
    id: 'id',
    id_categoria_lavoro: 'id_categoria_lavoro',
    id_sottocategoria_lavoro: 'id_sottocategoria_lavoro'
  };

  export type Categoriaanomalia_sottocategorialavoroScalarFieldEnum = (typeof Categoriaanomalia_sottocategorialavoroScalarFieldEnum)[keyof typeof Categoriaanomalia_sottocategorialavoroScalarFieldEnum]


  export const ContabilitaScalarFieldEnum: {
    id: 'id',
    prezzario: 'prezzario',
    descrizioneContabilita: 'descrizioneContabilita',
    proprieta: 'proprieta'
  };

  export type ContabilitaScalarFieldEnum = (typeof ContabilitaScalarFieldEnum)[keyof typeof ContabilitaScalarFieldEnum]


  export const EventoScalarFieldEnum: {
    id: 'id',
    idUtente: 'idUtente',
    idAppalto: 'idAppalto',
    tipoEvento: 'tipoEvento',
    generatoDa: 'generatoDa',
    idPratica: 'idPratica',
    noteEvento: 'noteEvento',
    lavoriEvento: 'lavoriEvento',
    statoEvento: 'statoEvento',
    documentiCorrelati: 'documentiCorrelati',
    propietaEvento: 'propietaEvento',
    severitaEvento: 'severitaEvento'
  };

  export type EventoScalarFieldEnum = (typeof EventoScalarFieldEnum)[keyof typeof EventoScalarFieldEnum]


  export const FilelinkerScalarFieldEnum: {
    id: 'id',
    metadata: 'metadata'
  };

  export type FilelinkerScalarFieldEnum = (typeof FilelinkerScalarFieldEnum)[keyof typeof FilelinkerScalarFieldEnum]


  export const FiltroScalarFieldEnum: {
    id: 'id',
    idUtente: 'idUtente',
    json: 'json',
    tipo: 'tipo',
    nome: 'nome'
  };

  export type FiltroScalarFieldEnum = (typeof FiltroScalarFieldEnum)[keyof typeof FiltroScalarFieldEnum]


  export const Filtro_colonneScalarFieldEnum: {
    id: 'id',
    idUtente: 'idUtente',
    json: 'json',
    tabella: 'tabella'
  };

  export type Filtro_colonneScalarFieldEnum = (typeof Filtro_colonneScalarFieldEnum)[keyof typeof Filtro_colonneScalarFieldEnum]


  export const FontiScalarFieldEnum: {
    id: 'id',
    value: 'value'
  };

  export type FontiScalarFieldEnum = (typeof FontiScalarFieldEnum)[keyof typeof FontiScalarFieldEnum]


  export const GruppoScalarFieldEnum: {
    id: 'id',
    idAppalto: 'idAppalto',
    descrizione: 'descrizione',
    dataModifica: 'dataModifica'
  };

  export type GruppoScalarFieldEnum = (typeof GruppoScalarFieldEnum)[keyof typeof GruppoScalarFieldEnum]


  export const ImpresaScalarFieldEnum: {
    id: 'id',
    value: 'value'
  };

  export type ImpresaScalarFieldEnum = (typeof ImpresaScalarFieldEnum)[keyof typeof ImpresaScalarFieldEnum]


  export const LavoroScalarFieldEnum: {
    id: 'id',
    idAppalto: 'idAppalto',
    idEvento: 'idEvento',
    idPratica: 'idPratica',
    idPOI: 'idPOI',
    idUtente: 'idUtente',
    dataCreazione: 'dataCreazione',
    dataModifica: 'dataModifica',
    dataChiusura: 'dataChiusura',
    localizzazioneDichiarata: 'localizzazioneDichiarata',
    categoriaLavoro: 'categoriaLavoro',
    dettaglioLavoro: 'dettaglioLavoro',
    noteLavoro: 'noteLavoro',
    contabilitaLavoro: 'contabilitaLavoro',
    attrezzaturaLavoro: 'attrezzaturaLavoro',
    mezzoLavoro: 'mezzoLavoro',
    personaleLavoro: 'personaleLavoro',
    dataModificaStato: 'dataModificaStato',
    stato: 'stato',
    notaStato: 'notaStato',
    idUtenteStato: 'idUtenteStato',
    localizzazioneDichiarataQuartiere: 'localizzazioneDichiarataQuartiere',
    statoCorrenteLavoro: 'statoCorrenteLavoro',
    del: 'del',
    dataInizioProgrammata: 'dataInizioProgrammata',
    dataInizioEffettiva: 'dataInizioEffettiva',
    dataInizioMassima: 'dataInizioMassima',
    dataFineProgrammata: 'dataFineProgrammata',
    dataFineEffettiva: 'dataFineEffettiva',
    dataFineMassima: 'dataFineMassima',
    delOggettiCatasto: 'delOggettiCatasto',
    quantita: 'quantita',
    operatore: 'operatore',
    sospeso: 'sospeso',
    dataora_ini_sospensione: 'dataora_ini_sospensione',
    dataora_fine_sospensione: 'dataora_fine_sospensione',
    tempo_sospensione: 'tempo_sospensione',
    note_sospensione: 'note_sospensione',
    impresaEsecutrice: 'impresaEsecutrice',
    segnaleticatemporanea: 'segnaleticatemporanea',
    tipolavoro: 'tipolavoro',
    statoMessaInSicurezza: 'statoMessaInSicurezza',
    dataMessaInSicurezza: 'dataMessaInSicurezza',
    notePubbliche: 'notePubbliche'
  };

  export type LavoroScalarFieldEnum = (typeof LavoroScalarFieldEnum)[keyof typeof LavoroScalarFieldEnum]


  export const LavorostoricoScalarFieldEnum: {
    id: 'id',
    idLavoro: 'idLavoro',
    idAppalto: 'idAppalto',
    idEvento: 'idEvento',
    idPratica: 'idPratica',
    idPOI: 'idPOI',
    idUtente: 'idUtente',
    dataCreazione: 'dataCreazione',
    dataModifica: 'dataModifica',
    dataChiusura: 'dataChiusura',
    localizzazioneDichiarata: 'localizzazioneDichiarata',
    categoriaLavoro: 'categoriaLavoro',
    dettaglioLavoro: 'dettaglioLavoro',
    noteLavoro: 'noteLavoro',
    contabilitaLavoro: 'contabilitaLavoro',
    attrezzaturaLavoro: 'attrezzaturaLavoro',
    mezzoLavoro: 'mezzoLavoro',
    personaleLavoro: 'personaleLavoro',
    dataModificaStato: 'dataModificaStato',
    stato: 'stato',
    notaStato: 'notaStato',
    idUtenteStato: 'idUtenteStato',
    sospeso: 'sospeso',
    dataora_ini_sospensione: 'dataora_ini_sospensione',
    dataora_fine_sospensione: 'dataora_fine_sospensione',
    tempo_sospensione: 'tempo_sospensione',
    note_sospensione: 'note_sospensione',
    dataInizioProgrammata: 'dataInizioProgrammata',
    dataInizioEffettiva: 'dataInizioEffettiva',
    dataInizioMassima: 'dataInizioMassima',
    dataFineProgrammata: 'dataFineProgrammata',
    dataFineEffettiva: 'dataFineEffettiva',
    dataFineMassima: 'dataFineMassima',
    localizzazioneDichiarataQuartiere: 'localizzazioneDichiarataQuartiere',
    statoCorrenteLavoro: 'statoCorrenteLavoro',
    delOggettiCatasto: 'delOggettiCatasto',
    del: 'del',
    quantita: 'quantita',
    operatore: 'operatore',
    impresaEsecutrice: 'impresaEsecutrice',
    segnaleticatemporanea: 'segnaleticatemporanea',
    tipolavoro: 'tipolavoro',
    statoMessaInSicurezza: 'statoMessaInSicurezza',
    dataMessaInSicurezza: 'dataMessaInSicurezza',
    flgCambioStato: 'flgCambioStato',
    notePubbliche: 'notePubbliche'
  };

  export type LavorostoricoScalarFieldEnum = (typeof LavorostoricoScalarFieldEnum)[keyof typeof LavorostoricoScalarFieldEnum]


  export const LivelliservizioScalarFieldEnum: {
    id: 'id',
    idAppalto: 'idAppalto',
    idUtente: 'idUtente',
    dataModifica: 'dataModifica',
    idLds: 'idLds',
    risultato: 'risultato',
    detrazioneEffettivo: 'detrazioneEffettivo',
    premioEffettivo: 'premioEffettivo',
    chiave: 'chiave',
    unita: 'unita',
    idSegnalazione: 'idSegnalazione',
    idLavoro: 'idLavoro',
    dataIntervalloDa: 'dataIntervalloDa',
    dataIntervalloA: 'dataIntervalloA',
    dataRichiesta: 'dataRichiesta',
    dataInizioEffettivaLavoro: 'dataInizioEffettivaLavoro',
    dataChiusuraSegnalazione: 'dataChiusuraSegnalazione',
    dataFineMassima: 'dataFineMassima',
    elaborato: 'elaborato',
    idSchedulatore: 'idSchedulatore',
    tipolavoro: 'tipolavoro',
    note: 'note',
    dataCreazioneSegnalazione: 'dataCreazioneSegnalazione'
  };

  export type LivelliservizioScalarFieldEnum = (typeof LivelliservizioScalarFieldEnum)[keyof typeof LivelliservizioScalarFieldEnum]


  export const LivelliserviziocanoneScalarFieldEnum: {
    id: 'id',
    idLds: 'idLds',
    anno: 'anno',
    semestre: 'semestre',
    trimestre: 'trimestre',
    canoneCalcoloLdS: 'canoneCalcoloLdS'
  };

  export type LivelliserviziocanoneScalarFieldEnum = (typeof LivelliserviziocanoneScalarFieldEnum)[keyof typeof LivelliserviziocanoneScalarFieldEnum]


  export const LivelliserviziodescrizioneScalarFieldEnum: {
    id: 'id',
    ambito: 'ambito',
    lds: 'lds',
    parametroValutazione: 'parametroValutazione',
    ldsOT: 'ldsOT',
    ldsCPT: 'ldsCPT',
    indiceScostamento: 'indiceScostamento',
    penaleUnitaria: 'penaleUnitaria',
    controllo: 'controllo',
    note: 'note',
    tipo: 'tipo',
    funzione: 'funzione',
    tipoEstrazione: 'tipoEstrazione'
  };

  export type LivelliserviziodescrizioneScalarFieldEnum = (typeof LivelliserviziodescrizioneScalarFieldEnum)[keyof typeof LivelliserviziodescrizioneScalarFieldEnum]


  export const LivelliservizioschedulatoreScalarFieldEnum: {
    id: 'id',
    idAppalto: 'idAppalto',
    tipologia: 'tipologia',
    anno: 'anno',
    semestre: 'semestre',
    stato: 'stato',
    idUtente: 'idUtente',
    dataCreazione: 'dataCreazione'
  };

  export type LivelliservizioschedulatoreScalarFieldEnum = (typeof LivelliservizioschedulatoreScalarFieldEnum)[keyof typeof LivelliservizioschedulatoreScalarFieldEnum]


  export const MezzoScalarFieldEnum: {
    id: 'id',
    tipologiaMezzo: 'tipologiaMezzo',
    descrizione: 'descrizione',
    dataModifica: 'dataModifica'
  };

  export type MezzoScalarFieldEnum = (typeof MezzoScalarFieldEnum)[keyof typeof MezzoScalarFieldEnum]


  export const OggettoScalarFieldEnum: {
    id: 'id',
    catastoId: 'catastoId'
  };

  export type OggettoScalarFieldEnum = (typeof OggettoScalarFieldEnum)[keyof typeof OggettoScalarFieldEnum]


  export const OggettocivettaScalarFieldEnum: {
    id: 'id',
    idSegnalazione: 'idSegnalazione',
    idOggettoCatasto: 'idOggettoCatasto',
    idAppalto: 'idAppalto',
    idUtente: 'idUtente',
    dataModifica: 'dataModifica',
    idRifCivetta: 'idRifCivetta'
  };

  export type OggettocivettaScalarFieldEnum = (typeof OggettocivettaScalarFieldEnum)[keyof typeof OggettocivettaScalarFieldEnum]


  export const PersonaleScalarFieldEnum: {
    id: 'id',
    idUtente: 'idUtente',
    tipologiaPersonale: 'tipologiaPersonale',
    descrizione: 'descrizione',
    dataModifica: 'dataModifica'
  };

  export type PersonaleScalarFieldEnum = (typeof PersonaleScalarFieldEnum)[keyof typeof PersonaleScalarFieldEnum]


  export const PoiScalarFieldEnum: {
    id: 'id',
    descrizione: 'descrizione',
    dataInizio: 'dataInizio',
    dataFine: 'dataFine',
    idAppalto: 'idAppalto',
    notePOI: 'notePOI'
  };

  export type PoiScalarFieldEnum = (typeof PoiScalarFieldEnum)[keyof typeof PoiScalarFieldEnum]


  export const PraticaScalarFieldEnum: {
    id: 'id',
    idUtente: 'idUtente',
    idAppalto: 'idAppalto',
    dataModifica: 'dataModifica',
    dataChiusura: 'dataChiusura',
    nomePratica: 'nomePratica',
    localizzazioneDichiarataQuartiere: 'localizzazioneDichiarataQuartiere',
    localizzazioneDichiarata: 'localizzazioneDichiarata',
    notePratica: 'notePratica',
    importoPratica: 'importoPratica',
    del: 'del',
    dataCreazione: 'dataCreazione',
    statoCorrentePratica: 'statoCorrentePratica',
    delLavori: 'delLavori'
  };

  export type PraticaScalarFieldEnum = (typeof PraticaScalarFieldEnum)[keyof typeof PraticaScalarFieldEnum]


  export const PraticastoricoScalarFieldEnum: {
    id: 'id',
    idPratica: 'idPratica',
    idAppalto: 'idAppalto',
    idUtente: 'idUtente',
    nomePratica: 'nomePratica',
    localizzazioneDichiarataQuartiere: 'localizzazioneDichiarataQuartiere',
    localizzazioneDichiarata: 'localizzazioneDichiarata',
    dataModifica: 'dataModifica',
    dataChiusura: 'dataChiusura',
    notePratica: 'notePratica',
    importoPratica: 'importoPratica',
    del: 'del',
    dataCreazione: 'dataCreazione',
    statoCorrentePratica: 'statoCorrentePratica',
    delLavori: 'delLavori'
  };

  export type PraticastoricoScalarFieldEnum = (typeof PraticastoricoScalarFieldEnum)[keyof typeof PraticastoricoScalarFieldEnum]


  export const PrezzarioScalarFieldEnum: {
    id: 'id',
    descrizione: 'descrizione',
    unitaDiMisura: 'unitaDiMisura',
    prezzo: 'prezzo'
  };

  export type PrezzarioScalarFieldEnum = (typeof PrezzarioScalarFieldEnum)[keyof typeof PrezzarioScalarFieldEnum]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const RegistrorichiedenteScalarFieldEnum: {
    id: 'id',
    idAppalto: 'idAppalto',
    noteSegnalatore: 'noteSegnalatore',
    dataCreazione: 'dataCreazione',
    dataModifica: 'dataModifica',
    dataRichiesta: 'dataRichiesta',
    localizzazioneNote: 'localizzazioneNote',
    descrizioneAnomalia: 'descrizioneAnomalia',
    idUtente: 'idUtente',
    idSegnalazione: 'idSegnalazione',
    idSegnalatore: 'idSegnalatore',
    fonteSegnalazione: 'fonteSegnalazione',
    idSegnalazioneGetico: 'idSegnalazioneGetico',
    del: 'del'
  };

  export type RegistrorichiedenteScalarFieldEnum = (typeof RegistrorichiedenteScalarFieldEnum)[keyof typeof RegistrorichiedenteScalarFieldEnum]


  export const SegnalatoreScalarFieldEnum: {
    id: 'id',
    idAppalto: 'idAppalto',
    tipoSegnalatore: 'tipoSegnalatore',
    nomeSegnalatore: 'nomeSegnalatore',
    cognomeSegnalatore: 'cognomeSegnalatore',
    telefonoSegnalatore: 'telefonoSegnalatore',
    emailSegnalatore: 'emailSegnalatore',
    cellulareSegnalatore: 'cellulareSegnalatore',
    pecSegnalatore: 'pecSegnalatore'
  };

  export type SegnalatoreScalarFieldEnum = (typeof SegnalatoreScalarFieldEnum)[keyof typeof SegnalatoreScalarFieldEnum]


  export const SegnalazioneScalarFieldEnum: {
    id: 'id',
    idAppalto: 'idAppalto',
    noteSegnalatore: 'noteSegnalatore',
    segnalatori: 'segnalatori',
    dataCreazione: 'dataCreazione',
    dataModifica: 'dataModifica',
    dataRichiesta: 'dataRichiesta',
    localizzazioneDichiarata: 'localizzazioneDichiarata',
    localizzazioneDichiarataCivico: 'localizzazioneDichiarataCivico',
    localizzazioneNote: 'localizzazioneNote',
    descrizioneAnomalia: 'descrizioneAnomalia',
    commentoAnomalia: 'commentoAnomalia',
    idEvento: 'idEvento',
    idPratica: 'idPratica',
    dataModificaStato: 'dataModificaStato',
    stato: 'stato',
    notaStato: 'notaStato',
    idUtente: 'idUtente',
    idUtenteStato: 'idUtenteStato',
    idSegnalatore: 'idSegnalatore',
    fonteSegnalazione: 'fonteSegnalazione',
    categoriaAnomalia: 'categoriaAnomalia',
    dettaglioAnomalia: 'dettaglioAnomalia',
    severitaEvento: 'severitaEvento',
    tipoEvento: 'tipoEvento',
    idTecnico: 'idTecnico',
    localizzazioneDichiarataQuartiere: 'localizzazioneDichiarataQuartiere',
    idLavoroAssociato: 'idLavoroAssociato',
    dataChiusura: 'dataChiusura',
    statoCorrenteSegnalazione: 'statoCorrenteSegnalazione',
    del: 'del',
    idSegnalazioneGetico: 'idSegnalazioneGetico',
    delOggettiCatasto: 'delOggettiCatasto',
    sottoservizi: 'sottoservizi',
    sinistri: 'sinistri',
    richiestaSopralluogo: 'richiestaSopralluogo',
    numeroProvvedimento: 'numeroProvvedimento',
    idTipoProvvedimento: 'idTipoProvvedimento'
  };

  export type SegnalazioneScalarFieldEnum = (typeof SegnalazioneScalarFieldEnum)[keyof typeof SegnalazioneScalarFieldEnum]


  export const Segnalazione_geticoScalarFieldEnum: {
    id: 'id',
    id_ticket: 'id_ticket',
    segnalante_nome: 'segnalante_nome',
    segnalante_cognome: 'segnalante_cognome',
    segnalante_email: 'segnalante_email',
    segnalante_telefono: 'segnalante_telefono',
    luogo_indirizzo: 'luogo_indirizzo',
    luogo_civico: 'luogo_civico',
    luogo_ubicazione: 'luogo_ubicazione',
    descrizione: 'descrizione',
    tipologia: 'tipologia',
    flg_stato: 'flg_stato',
    luogo_quartiere: 'luogo_quartiere',
    dataRichiesta: 'dataRichiesta',
    dataInoltro: 'dataInoltro',
    ufficioProvenienza: 'ufficioProvenienza',
    luogo_civico2: 'luogo_civico2',
    luogo_indirizzo2: 'luogo_indirizzo2',
    ufficio_inoltro: 'ufficio_inoltro',
    json_uffici: 'json_uffici',
    note_esito: 'note_esito',
    sopralluogo: 'sopralluogo',
    sopralluogo_note: 'sopralluogo_note',
    sopralluogo_effettuato: 'sopralluogo_effettuato',
    sopralluogo_importato: 'sopralluogo_importato',
    sopralluogo_catasto_json: 'sopralluogo_catasto_json'
  };

  export type Segnalazione_geticoScalarFieldEnum = (typeof Segnalazione_geticoScalarFieldEnum)[keyof typeof Segnalazione_geticoScalarFieldEnum]


  export const SegnalazionestatostoricoScalarFieldEnum: {
    id: 'id',
    idAppalto: 'idAppalto',
    idSegnalazione: 'idSegnalazione',
    idUtente: 'idUtente',
    dataModifica: 'dataModifica',
    stato: 'stato',
    notaStato: 'notaStato'
  };

  export type SegnalazionestatostoricoScalarFieldEnum = (typeof SegnalazionestatostoricoScalarFieldEnum)[keyof typeof SegnalazionestatostoricoScalarFieldEnum]


  export const SegnalazionestoricoScalarFieldEnum: {
    id: 'id',
    idAppalto: 'idAppalto',
    idSegnalazione: 'idSegnalazione',
    noteSegnalatore: 'noteSegnalatore',
    segnalatori: 'segnalatori',
    dataCreazione: 'dataCreazione',
    dataModifica: 'dataModifica',
    dataRichiesta: 'dataRichiesta',
    localizzazioneDichiarata: 'localizzazioneDichiarata',
    localizzazioneNote: 'localizzazioneNote',
    descrizioneAnomalia: 'descrizioneAnomalia',
    commentoAnomalia: 'commentoAnomalia',
    idEvento: 'idEvento',
    idPratica: 'idPratica',
    dataModificaStato: 'dataModificaStato',
    stato: 'stato',
    notaStato: 'notaStato',
    flgCambioStato: 'flgCambioStato',
    idUtente: 'idUtente',
    idUtenteStato: 'idUtenteStato',
    idSegnalatore: 'idSegnalatore',
    fonteSegnalazione: 'fonteSegnalazione',
    categoriaAnomalia: 'categoriaAnomalia',
    dettaglioAnomalia: 'dettaglioAnomalia',
    severitaEvento: 'severitaEvento',
    tipoEvento: 'tipoEvento',
    idLavoroAssociato: 'idLavoroAssociato',
    statoCorrenteSegnalazione: 'statoCorrenteSegnalazione',
    idSegnalazioneGetico: 'idSegnalazioneGetico',
    sottoservizi: 'sottoservizi',
    sinistri: 'sinistri',
    richiestaSopralluogo: 'richiestaSopralluogo',
    delOggettiCatasto: 'delOggettiCatasto',
    idTecnico: 'idTecnico',
    numeroProvvedimento: 'numeroProvvedimento',
    dataChiusura: 'dataChiusura',
    localizzazioneDichiarataQuartiere: 'localizzazioneDichiarataQuartiere',
    localizzazioneDichiarataCivico: 'localizzazioneDichiarataCivico',
    del: 'del',
    idTipoProvvedimento: 'idTipoProvvedimento'
  };

  export type SegnalazionestoricoScalarFieldEnum = (typeof SegnalazionestoricoScalarFieldEnum)[keyof typeof SegnalazionestoricoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const SottocategoriaanomaliaScalarFieldEnum: {
    id: 'id',
    value: 'value'
  };

  export type SottocategoriaanomaliaScalarFieldEnum = (typeof SottocategoriaanomaliaScalarFieldEnum)[keyof typeof SottocategoriaanomaliaScalarFieldEnum]


  export const Sottocategoriaanomalia_sottocategorialavoroScalarFieldEnum: {
    id: 'id',
    id_categoria_anomalia: 'id_categoria_anomalia',
    id_sottocategoria_anomalia: 'id_sottocategoria_anomalia',
    id_sottocategoria_lavoro: 'id_sottocategoria_lavoro'
  };

  export type Sottocategoriaanomalia_sottocategorialavoroScalarFieldEnum = (typeof Sottocategoriaanomalia_sottocategorialavoroScalarFieldEnum)[keyof typeof Sottocategoriaanomalia_sottocategorialavoroScalarFieldEnum]


  export const SottocategorialavoroScalarFieldEnum: {
    id: 'id',
    value: 'value'
  };

  export type SottocategorialavoroScalarFieldEnum = (typeof SottocategorialavoroScalarFieldEnum)[keyof typeof SottocategorialavoroScalarFieldEnum]


  export const StatoScalarFieldEnum: {
    id: 'id',
    idEvento: 'idEvento',
    classeCorrente: 'classeCorrente',
    statoCorrente: 'statoCorrente',
    idUtente: 'idUtente',
    storiaStato: 'storiaStato'
  };

  export type StatoScalarFieldEnum = (typeof StatoScalarFieldEnum)[keyof typeof StatoScalarFieldEnum]


  export const StoriastatoScalarFieldEnum: {
    id: 'id',
    statoStorico: 'statoStorico',
    stato: 'stato',
    dataStato: 'dataStato'
  };

  export type StoriastatoScalarFieldEnum = (typeof StoriastatoScalarFieldEnum)[keyof typeof StoriastatoScalarFieldEnum]


  export const TecniciScalarFieldEnum: {
    id: 'id',
    value: 'value'
  };

  export type TecniciScalarFieldEnum = (typeof TecniciScalarFieldEnum)[keyof typeof TecniciScalarFieldEnum]


  export const TipoeventoScalarFieldEnum: {
    id: 'id',
    value: 'value'
  };

  export type TipoeventoScalarFieldEnum = (typeof TipoeventoScalarFieldEnum)[keyof typeof TipoeventoScalarFieldEnum]


  export const TipologiaScalarFieldEnum: {
    id: 'id',
    proprieta: 'proprieta'
  };

  export type TipologiaScalarFieldEnum = (typeof TipologiaScalarFieldEnum)[keyof typeof TipologiaScalarFieldEnum]


  export const TipooggettoScalarFieldEnum: {
    id: 'id',
    value: 'value',
    tabellaNome: 'tabellaNome'
  };

  export type TipooggettoScalarFieldEnum = (typeof TipooggettoScalarFieldEnum)[keyof typeof TipooggettoScalarFieldEnum]


  export const TipoprovvedimentoScalarFieldEnum: {
    id: 'id',
    value: 'value'
  };

  export type TipoprovvedimentoScalarFieldEnum = (typeof TipoprovvedimentoScalarFieldEnum)[keyof typeof TipoprovvedimentoScalarFieldEnum]


  export const TiposegnalatoreScalarFieldEnum: {
    id: 'id',
    value: 'value'
  };

  export type TiposegnalatoreScalarFieldEnum = (typeof TiposegnalatoreScalarFieldEnum)[keyof typeof TiposegnalatoreScalarFieldEnum]


  export const TiposeveritaScalarFieldEnum: {
    id: 'id',
    value: 'value'
  };

  export type TiposeveritaScalarFieldEnum = (typeof TiposeveritaScalarFieldEnum)[keyof typeof TiposeveritaScalarFieldEnum]


  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UtentiScalarFieldEnum: {
    id: 'id',
    idAppalto: 'idAppalto',
    nome: 'nome',
    cognome: 'cognome',
    username: 'username',
    password: 'password',
    email: 'email',
    status: 'status',
    permessi: 'permessi',
    dataCreazione: 'dataCreazione',
    dataModifica: 'dataModifica',
    dataSospensione: 'dataSospensione',
    idGruppo: 'idGruppo',
    del: 'del',
    scadenzaPassword: 'scadenzaPassword',
    roles: 'roles'
  };

  export type UtentiScalarFieldEnum = (typeof UtentiScalarFieldEnum)[keyof typeof UtentiScalarFieldEnum]


  /**
   * Deep Input Types
   */


  export type allegatoWhereInput = {
    AND?: Enumerable<allegatoWhereInput>
    OR?: Enumerable<allegatoWhereInput>
    NOT?: Enumerable<allegatoWhereInput>
    id?: IntFilter | number
    tabella_appartenenza?: StringNullableFilter | string | null
    id_tabella_appartenenza?: IntNullableFilter | number | null
    descrizione?: StringNullableFilter | string | null
    path?: StringNullableFilter | string | null
    filename_disk?: StringNullableFilter | string | null
    filename_originale?: StringNullableFilter | string | null
    id_operatore_salvataggio?: IntNullableFilter | number | null
    dt_salvataggio?: DateTimeNullableFilter | Date | string | null
    del?: IntNullableFilter | number | null
  }

  export type allegatoOrderByWithRelationInput = {
    id?: SortOrder
    tabella_appartenenza?: SortOrder
    id_tabella_appartenenza?: SortOrder
    descrizione?: SortOrder
    path?: SortOrder
    filename_disk?: SortOrder
    filename_originale?: SortOrder
    id_operatore_salvataggio?: SortOrder
    dt_salvataggio?: SortOrder
    del?: SortOrder
  }

  export type allegatoWhereUniqueInput = {
    id?: number
  }

  export type allegatoOrderByWithAggregationInput = {
    id?: SortOrder
    tabella_appartenenza?: SortOrder
    id_tabella_appartenenza?: SortOrder
    descrizione?: SortOrder
    path?: SortOrder
    filename_disk?: SortOrder
    filename_originale?: SortOrder
    id_operatore_salvataggio?: SortOrder
    dt_salvataggio?: SortOrder
    del?: SortOrder
    _count?: allegatoCountOrderByAggregateInput
    _avg?: allegatoAvgOrderByAggregateInput
    _max?: allegatoMaxOrderByAggregateInput
    _min?: allegatoMinOrderByAggregateInput
    _sum?: allegatoSumOrderByAggregateInput
  }

  export type allegatoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<allegatoScalarWhereWithAggregatesInput>
    OR?: Enumerable<allegatoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<allegatoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    tabella_appartenenza?: StringNullableWithAggregatesFilter | string | null
    id_tabella_appartenenza?: IntNullableWithAggregatesFilter | number | null
    descrizione?: StringNullableWithAggregatesFilter | string | null
    path?: StringNullableWithAggregatesFilter | string | null
    filename_disk?: StringNullableWithAggregatesFilter | string | null
    filename_originale?: StringNullableWithAggregatesFilter | string | null
    id_operatore_salvataggio?: IntNullableWithAggregatesFilter | number | null
    dt_salvataggio?: DateTimeNullableWithAggregatesFilter | Date | string | null
    del?: IntNullableWithAggregatesFilter | number | null
  }

  export type appaltoWhereInput = {
    AND?: Enumerable<appaltoWhereInput>
    OR?: Enumerable<appaltoWhereInput>
    NOT?: Enumerable<appaltoWhereInput>
    id?: IntFilter | number
    tipologia?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
  }

  export type appaltoOrderByWithRelationInput = {
    id?: SortOrder
    tipologia?: SortOrder
    dataModifica?: SortOrder
  }

  export type appaltoWhereUniqueInput = {
    id?: number
  }

  export type appaltoOrderByWithAggregationInput = {
    id?: SortOrder
    tipologia?: SortOrder
    dataModifica?: SortOrder
    _count?: appaltoCountOrderByAggregateInput
    _avg?: appaltoAvgOrderByAggregateInput
    _max?: appaltoMaxOrderByAggregateInput
    _min?: appaltoMinOrderByAggregateInput
    _sum?: appaltoSumOrderByAggregateInput
  }

  export type appaltoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<appaltoScalarWhereWithAggregatesInput>
    OR?: Enumerable<appaltoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<appaltoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    tipologia?: IntNullableWithAggregatesFilter | number | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
  }

  export type attrezzaturaWhereInput = {
    AND?: Enumerable<attrezzaturaWhereInput>
    OR?: Enumerable<attrezzaturaWhereInput>
    NOT?: Enumerable<attrezzaturaWhereInput>
    id?: IntFilter | number
    tipologiaAttrezzatura?: IntNullableFilter | number | null
    descrizione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
  }

  export type attrezzaturaOrderByWithRelationInput = {
    id?: SortOrder
    tipologiaAttrezzatura?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type attrezzaturaWhereUniqueInput = {
    id?: number
  }

  export type attrezzaturaOrderByWithAggregationInput = {
    id?: SortOrder
    tipologiaAttrezzatura?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
    _count?: attrezzaturaCountOrderByAggregateInput
    _avg?: attrezzaturaAvgOrderByAggregateInput
    _max?: attrezzaturaMaxOrderByAggregateInput
    _min?: attrezzaturaMinOrderByAggregateInput
    _sum?: attrezzaturaSumOrderByAggregateInput
  }

  export type attrezzaturaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<attrezzaturaScalarWhereWithAggregatesInput>
    OR?: Enumerable<attrezzaturaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<attrezzaturaScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    tipologiaAttrezzatura?: IntNullableWithAggregatesFilter | number | null
    descrizione?: StringNullableWithAggregatesFilter | string | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
  }

  export type catasto_monitoraggioWhereInput = {
    AND?: Enumerable<catasto_monitoraggioWhereInput>
    OR?: Enumerable<catasto_monitoraggioWhereInput>
    NOT?: Enumerable<catasto_monitoraggioWhereInput>
    id?: IntFilter | number
    tabellaCatasto?: StringNullableFilter | string | null
    tabellaMonitoraggio?: StringNullableFilter | string | null
    idElemento?: StringNullableFilter | string | null
  }

  export type catasto_monitoraggioOrderByWithRelationInput = {
    id?: SortOrder
    tabellaCatasto?: SortOrder
    tabellaMonitoraggio?: SortOrder
    idElemento?: SortOrder
  }

  export type catasto_monitoraggioWhereUniqueInput = {
    id?: number
  }

  export type catasto_monitoraggioOrderByWithAggregationInput = {
    id?: SortOrder
    tabellaCatasto?: SortOrder
    tabellaMonitoraggio?: SortOrder
    idElemento?: SortOrder
    _count?: catasto_monitoraggioCountOrderByAggregateInput
    _avg?: catasto_monitoraggioAvgOrderByAggregateInput
    _max?: catasto_monitoraggioMaxOrderByAggregateInput
    _min?: catasto_monitoraggioMinOrderByAggregateInput
    _sum?: catasto_monitoraggioSumOrderByAggregateInput
  }

  export type catasto_monitoraggioScalarWhereWithAggregatesInput = {
    AND?: Enumerable<catasto_monitoraggioScalarWhereWithAggregatesInput>
    OR?: Enumerable<catasto_monitoraggioScalarWhereWithAggregatesInput>
    NOT?: Enumerable<catasto_monitoraggioScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    tabellaCatasto?: StringNullableWithAggregatesFilter | string | null
    tabellaMonitoraggio?: StringNullableWithAggregatesFilter | string | null
    idElemento?: StringNullableWithAggregatesFilter | string | null
  }

  export type catastoanomaliaWhereInput = {
    AND?: Enumerable<catastoanomaliaWhereInput>
    OR?: Enumerable<catastoanomaliaWhereInput>
    NOT?: Enumerable<catastoanomaliaWhereInput>
    id?: IntFilter | number
    idUtente?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
    adjacentLayer?: StringNullableFilter | string | null
    adjacentLayerGeom?: StringNullableFilter | string | null
    utenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
  }

  export type catastoanomaliaOrderByWithRelationInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    dataModifica?: SortOrder
    adjacentLayer?: SortOrder
    adjacentLayerGeom?: SortOrder
    utenti?: utentiOrderByWithRelationInput
  }

  export type catastoanomaliaWhereUniqueInput = {
    id?: number
  }

  export type catastoanomaliaOrderByWithAggregationInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    dataModifica?: SortOrder
    adjacentLayer?: SortOrder
    adjacentLayerGeom?: SortOrder
    _count?: catastoanomaliaCountOrderByAggregateInput
    _avg?: catastoanomaliaAvgOrderByAggregateInput
    _max?: catastoanomaliaMaxOrderByAggregateInput
    _min?: catastoanomaliaMinOrderByAggregateInput
    _sum?: catastoanomaliaSumOrderByAggregateInput
  }

  export type catastoanomaliaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<catastoanomaliaScalarWhereWithAggregatesInput>
    OR?: Enumerable<catastoanomaliaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<catastoanomaliaScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idUtente?: IntNullableWithAggregatesFilter | number | null
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    adjacentLayer?: StringNullableWithAggregatesFilter | string | null
    adjacentLayerGeom?: StringNullableWithAggregatesFilter | string | null
  }

  export type catastolinkerWhereInput = {
    AND?: Enumerable<catastolinkerWhereInput>
    OR?: Enumerable<catastolinkerWhereInput>
    NOT?: Enumerable<catastolinkerWhereInput>
    id?: IntFilter | number
    idCatasto?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
    idSegnalazione?: IntNullableFilter | number | null
    idLavoro?: IntNullableFilter | number | null
    statoSegnalazione?: StringNullableFilter | string | null
    statoLavoro?: StringNullableFilter | string | null
    flg_catasto?: IntNullableFilter | number | null
    idPratica?: IntNullableFilter | number | null
    geojson?: StringNullableFilter | string | null
    lavoro?: XOR<LavoroRelationFilter, lavoroWhereInput> | null
    pratica?: XOR<PraticaRelationFilter, praticaWhereInput> | null
    utenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
  }

  export type catastolinkerOrderByWithRelationInput = {
    id?: SortOrder
    idCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    statoSegnalazione?: SortOrder
    statoLavoro?: SortOrder
    flg_catasto?: SortOrder
    idPratica?: SortOrder
    geojson?: SortOrder
    lavoro?: lavoroOrderByWithRelationInput
    pratica?: praticaOrderByWithRelationInput
    utenti?: utentiOrderByWithRelationInput
  }

  export type catastolinkerWhereUniqueInput = {
    id?: number
  }

  export type catastolinkerOrderByWithAggregationInput = {
    id?: SortOrder
    idCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    statoSegnalazione?: SortOrder
    statoLavoro?: SortOrder
    flg_catasto?: SortOrder
    idPratica?: SortOrder
    geojson?: SortOrder
    _count?: catastolinkerCountOrderByAggregateInput
    _avg?: catastolinkerAvgOrderByAggregateInput
    _max?: catastolinkerMaxOrderByAggregateInput
    _min?: catastolinkerMinOrderByAggregateInput
    _sum?: catastolinkerSumOrderByAggregateInput
  }

  export type catastolinkerScalarWhereWithAggregatesInput = {
    AND?: Enumerable<catastolinkerScalarWhereWithAggregatesInput>
    OR?: Enumerable<catastolinkerScalarWhereWithAggregatesInput>
    NOT?: Enumerable<catastolinkerScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idCatasto?: IntNullableWithAggregatesFilter | number | null
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    idUtente?: IntNullableWithAggregatesFilter | number | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    idSegnalazione?: IntNullableWithAggregatesFilter | number | null
    idLavoro?: IntNullableWithAggregatesFilter | number | null
    statoSegnalazione?: StringNullableWithAggregatesFilter | string | null
    statoLavoro?: StringNullableWithAggregatesFilter | string | null
    flg_catasto?: IntNullableWithAggregatesFilter | number | null
    idPratica?: IntNullableWithAggregatesFilter | number | null
    geojson?: StringNullableWithAggregatesFilter | string | null
  }

  export type categoriaanomaliaWhereInput = {
    AND?: Enumerable<categoriaanomaliaWhereInput>
    OR?: Enumerable<categoriaanomaliaWhereInput>
    NOT?: Enumerable<categoriaanomaliaWhereInput>
    id?: IntFilter | number
    value?: StringNullableFilter | string | null
    tabellaNome?: StringNullableFilter | string | null
    modalitaInserimento?: StringNullableFilter | string | null
    categoriaanomalia_sottocategoriaanomalia?: Categoriaanomalia_sottocategoriaanomaliaListRelationFilter
    categoriaanomalia_sottocategorialavoro?: Categoriaanomalia_sottocategorialavoroListRelationFilter
    lavoro?: LavoroListRelationFilter
    lavorostorico?: LavorostoricoListRelationFilter
    segnalazione?: SegnalazioneListRelationFilter
    segnalazionestorico?: SegnalazionestoricoListRelationFilter
    sottocategoriaanomalia_sottocategorialavoro?: Sottocategoriaanomalia_sottocategorialavoroListRelationFilter
  }

  export type categoriaanomaliaOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    tabellaNome?: SortOrder
    modalitaInserimento?: SortOrder
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaOrderByRelationAggregateInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroOrderByRelationAggregateInput
    lavoro?: lavoroOrderByRelationAggregateInput
    lavorostorico?: lavorostoricoOrderByRelationAggregateInput
    segnalazione?: segnalazioneOrderByRelationAggregateInput
    segnalazionestorico?: segnalazionestoricoOrderByRelationAggregateInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroOrderByRelationAggregateInput
  }

  export type categoriaanomaliaWhereUniqueInput = {
    id?: number
  }

  export type categoriaanomaliaOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    tabellaNome?: SortOrder
    modalitaInserimento?: SortOrder
    _count?: categoriaanomaliaCountOrderByAggregateInput
    _avg?: categoriaanomaliaAvgOrderByAggregateInput
    _max?: categoriaanomaliaMaxOrderByAggregateInput
    _min?: categoriaanomaliaMinOrderByAggregateInput
    _sum?: categoriaanomaliaSumOrderByAggregateInput
  }

  export type categoriaanomaliaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<categoriaanomaliaScalarWhereWithAggregatesInput>
    OR?: Enumerable<categoriaanomaliaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<categoriaanomaliaScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    value?: StringNullableWithAggregatesFilter | string | null
    tabellaNome?: StringNullableWithAggregatesFilter | string | null
    modalitaInserimento?: StringNullableWithAggregatesFilter | string | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaWhereInput = {
    AND?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereInput>
    OR?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereInput>
    NOT?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereInput>
    id?: IntFilter | number
    id_categoria_anomalia?: IntNullableFilter | number | null
    id_sottocategoria_anomalia?: IntNullableFilter | number | null
    categoriaanomalia?: XOR<CategoriaanomaliaRelationFilter, categoriaanomaliaWhereInput> | null
    sottocategoriaanomalia?: XOR<SottocategoriaanomaliaRelationFilter, sottocategoriaanomaliaWhereInput> | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaOrderByWithRelationInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
    categoriaanomalia?: categoriaanomaliaOrderByWithRelationInput
    sottocategoriaanomalia?: sottocategoriaanomaliaOrderByWithRelationInput
  }

  export type categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput = {
    id?: number
  }

  export type categoriaanomalia_sottocategoriaanomaliaOrderByWithAggregationInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
    _count?: categoriaanomalia_sottocategoriaanomaliaCountOrderByAggregateInput
    _avg?: categoriaanomalia_sottocategoriaanomaliaAvgOrderByAggregateInput
    _max?: categoriaanomalia_sottocategoriaanomaliaMaxOrderByAggregateInput
    _min?: categoriaanomalia_sottocategoriaanomaliaMinOrderByAggregateInput
    _sum?: categoriaanomalia_sottocategoriaanomaliaSumOrderByAggregateInput
  }

  export type categoriaanomalia_sottocategoriaanomaliaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<categoriaanomalia_sottocategoriaanomaliaScalarWhereWithAggregatesInput>
    OR?: Enumerable<categoriaanomalia_sottocategoriaanomaliaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<categoriaanomalia_sottocategoriaanomaliaScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    id_categoria_anomalia?: IntNullableWithAggregatesFilter | number | null
    id_sottocategoria_anomalia?: IntNullableWithAggregatesFilter | number | null
  }

  export type categoriaanomalia_sottocategorialavoroWhereInput = {
    AND?: Enumerable<categoriaanomalia_sottocategorialavoroWhereInput>
    OR?: Enumerable<categoriaanomalia_sottocategorialavoroWhereInput>
    NOT?: Enumerable<categoriaanomalia_sottocategorialavoroWhereInput>
    id?: IntFilter | number
    id_categoria_lavoro?: IntNullableFilter | number | null
    id_sottocategoria_lavoro?: IntNullableFilter | number | null
    categoriaanomalia?: XOR<CategoriaanomaliaRelationFilter, categoriaanomaliaWhereInput> | null
    sottocategorialavoro?: XOR<SottocategorialavoroRelationFilter, sottocategorialavoroWhereInput> | null
  }

  export type categoriaanomalia_sottocategorialavoroOrderByWithRelationInput = {
    id?: SortOrder
    id_categoria_lavoro?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
    categoriaanomalia?: categoriaanomaliaOrderByWithRelationInput
    sottocategorialavoro?: sottocategorialavoroOrderByWithRelationInput
  }

  export type categoriaanomalia_sottocategorialavoroWhereUniqueInput = {
    id?: number
  }

  export type categoriaanomalia_sottocategorialavoroOrderByWithAggregationInput = {
    id?: SortOrder
    id_categoria_lavoro?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
    _count?: categoriaanomalia_sottocategorialavoroCountOrderByAggregateInput
    _avg?: categoriaanomalia_sottocategorialavoroAvgOrderByAggregateInput
    _max?: categoriaanomalia_sottocategorialavoroMaxOrderByAggregateInput
    _min?: categoriaanomalia_sottocategorialavoroMinOrderByAggregateInput
    _sum?: categoriaanomalia_sottocategorialavoroSumOrderByAggregateInput
  }

  export type categoriaanomalia_sottocategorialavoroScalarWhereWithAggregatesInput = {
    AND?: Enumerable<categoriaanomalia_sottocategorialavoroScalarWhereWithAggregatesInput>
    OR?: Enumerable<categoriaanomalia_sottocategorialavoroScalarWhereWithAggregatesInput>
    NOT?: Enumerable<categoriaanomalia_sottocategorialavoroScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    id_categoria_lavoro?: IntNullableWithAggregatesFilter | number | null
    id_sottocategoria_lavoro?: IntNullableWithAggregatesFilter | number | null
  }

  export type contabilitaWhereInput = {
    AND?: Enumerable<contabilitaWhereInput>
    OR?: Enumerable<contabilitaWhereInput>
    NOT?: Enumerable<contabilitaWhereInput>
    id?: IntFilter | number
    prezzario?: IntNullableFilter | number | null
    descrizioneContabilita?: IntNullableFilter | number | null
    proprieta?: StringNullableFilter | string | null
  }

  export type contabilitaOrderByWithRelationInput = {
    id?: SortOrder
    prezzario?: SortOrder
    descrizioneContabilita?: SortOrder
    proprieta?: SortOrder
  }

  export type contabilitaWhereUniqueInput = {
    id?: number
  }

  export type contabilitaOrderByWithAggregationInput = {
    id?: SortOrder
    prezzario?: SortOrder
    descrizioneContabilita?: SortOrder
    proprieta?: SortOrder
    _count?: contabilitaCountOrderByAggregateInput
    _avg?: contabilitaAvgOrderByAggregateInput
    _max?: contabilitaMaxOrderByAggregateInput
    _min?: contabilitaMinOrderByAggregateInput
    _sum?: contabilitaSumOrderByAggregateInput
  }

  export type contabilitaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<contabilitaScalarWhereWithAggregatesInput>
    OR?: Enumerable<contabilitaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<contabilitaScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    prezzario?: IntNullableWithAggregatesFilter | number | null
    descrizioneContabilita?: IntNullableWithAggregatesFilter | number | null
    proprieta?: StringNullableWithAggregatesFilter | string | null
  }

  export type eventoWhereInput = {
    AND?: Enumerable<eventoWhereInput>
    OR?: Enumerable<eventoWhereInput>
    NOT?: Enumerable<eventoWhereInput>
    id?: IntFilter | number
    idUtente?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    tipoEvento?: IntNullableFilter | number | null
    generatoDa?: StringNullableFilter | string | null
    idPratica?: IntNullableFilter | number | null
    noteEvento?: StringNullableFilter | string | null
    lavoriEvento?: IntNullableFilter | number | null
    statoEvento?: IntNullableFilter | number | null
    documentiCorrelati?: IntNullableFilter | number | null
    propietaEvento?: StringNullableFilter | string | null
    severitaEvento?: IntNullableFilter | number | null
  }

  export type eventoOrderByWithRelationInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    tipoEvento?: SortOrder
    generatoDa?: SortOrder
    idPratica?: SortOrder
    noteEvento?: SortOrder
    lavoriEvento?: SortOrder
    statoEvento?: SortOrder
    documentiCorrelati?: SortOrder
    propietaEvento?: SortOrder
    severitaEvento?: SortOrder
  }

  export type eventoWhereUniqueInput = {
    id?: number
  }

  export type eventoOrderByWithAggregationInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    tipoEvento?: SortOrder
    generatoDa?: SortOrder
    idPratica?: SortOrder
    noteEvento?: SortOrder
    lavoriEvento?: SortOrder
    statoEvento?: SortOrder
    documentiCorrelati?: SortOrder
    propietaEvento?: SortOrder
    severitaEvento?: SortOrder
    _count?: eventoCountOrderByAggregateInput
    _avg?: eventoAvgOrderByAggregateInput
    _max?: eventoMaxOrderByAggregateInput
    _min?: eventoMinOrderByAggregateInput
    _sum?: eventoSumOrderByAggregateInput
  }

  export type eventoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<eventoScalarWhereWithAggregatesInput>
    OR?: Enumerable<eventoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<eventoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idUtente?: IntNullableWithAggregatesFilter | number | null
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    tipoEvento?: IntNullableWithAggregatesFilter | number | null
    generatoDa?: StringNullableWithAggregatesFilter | string | null
    idPratica?: IntNullableWithAggregatesFilter | number | null
    noteEvento?: StringNullableWithAggregatesFilter | string | null
    lavoriEvento?: IntNullableWithAggregatesFilter | number | null
    statoEvento?: IntNullableWithAggregatesFilter | number | null
    documentiCorrelati?: IntNullableWithAggregatesFilter | number | null
    propietaEvento?: StringNullableWithAggregatesFilter | string | null
    severitaEvento?: IntNullableWithAggregatesFilter | number | null
  }

  export type filelinkerWhereInput = {
    AND?: Enumerable<filelinkerWhereInput>
    OR?: Enumerable<filelinkerWhereInput>
    NOT?: Enumerable<filelinkerWhereInput>
    id?: IntFilter | number
    metadata?: StringNullableFilter | string | null
  }

  export type filelinkerOrderByWithRelationInput = {
    id?: SortOrder
    metadata?: SortOrder
  }

  export type filelinkerWhereUniqueInput = {
    id?: number
  }

  export type filelinkerOrderByWithAggregationInput = {
    id?: SortOrder
    metadata?: SortOrder
    _count?: filelinkerCountOrderByAggregateInput
    _avg?: filelinkerAvgOrderByAggregateInput
    _max?: filelinkerMaxOrderByAggregateInput
    _min?: filelinkerMinOrderByAggregateInput
    _sum?: filelinkerSumOrderByAggregateInput
  }

  export type filelinkerScalarWhereWithAggregatesInput = {
    AND?: Enumerable<filelinkerScalarWhereWithAggregatesInput>
    OR?: Enumerable<filelinkerScalarWhereWithAggregatesInput>
    NOT?: Enumerable<filelinkerScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    metadata?: StringNullableWithAggregatesFilter | string | null
  }

  export type filtroWhereInput = {
    AND?: Enumerable<filtroWhereInput>
    OR?: Enumerable<filtroWhereInput>
    NOT?: Enumerable<filtroWhereInput>
    id?: IntFilter | number
    idUtente?: IntNullableFilter | number | null
    json?: StringNullableFilter | string | null
    tipo?: StringNullableFilter | string | null
    nome?: StringNullableFilter | string | null
  }

  export type filtroOrderByWithRelationInput = {
    id?: SortOrder
    idUtente?: SortOrder
    json?: SortOrder
    tipo?: SortOrder
    nome?: SortOrder
  }

  export type filtroWhereUniqueInput = {
    id?: number
  }

  export type filtroOrderByWithAggregationInput = {
    id?: SortOrder
    idUtente?: SortOrder
    json?: SortOrder
    tipo?: SortOrder
    nome?: SortOrder
    _count?: filtroCountOrderByAggregateInput
    _avg?: filtroAvgOrderByAggregateInput
    _max?: filtroMaxOrderByAggregateInput
    _min?: filtroMinOrderByAggregateInput
    _sum?: filtroSumOrderByAggregateInput
  }

  export type filtroScalarWhereWithAggregatesInput = {
    AND?: Enumerable<filtroScalarWhereWithAggregatesInput>
    OR?: Enumerable<filtroScalarWhereWithAggregatesInput>
    NOT?: Enumerable<filtroScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idUtente?: IntNullableWithAggregatesFilter | number | null
    json?: StringNullableWithAggregatesFilter | string | null
    tipo?: StringNullableWithAggregatesFilter | string | null
    nome?: StringNullableWithAggregatesFilter | string | null
  }

  export type filtro_colonneWhereInput = {
    AND?: Enumerable<filtro_colonneWhereInput>
    OR?: Enumerable<filtro_colonneWhereInput>
    NOT?: Enumerable<filtro_colonneWhereInput>
    id?: IntFilter | number
    idUtente?: IntNullableFilter | number | null
    json?: StringNullableFilter | string | null
    tabella?: StringNullableFilter | string | null
  }

  export type filtro_colonneOrderByWithRelationInput = {
    id?: SortOrder
    idUtente?: SortOrder
    json?: SortOrder
    tabella?: SortOrder
  }

  export type filtro_colonneWhereUniqueInput = {
    id?: number
  }

  export type filtro_colonneOrderByWithAggregationInput = {
    id?: SortOrder
    idUtente?: SortOrder
    json?: SortOrder
    tabella?: SortOrder
    _count?: filtro_colonneCountOrderByAggregateInput
    _avg?: filtro_colonneAvgOrderByAggregateInput
    _max?: filtro_colonneMaxOrderByAggregateInput
    _min?: filtro_colonneMinOrderByAggregateInput
    _sum?: filtro_colonneSumOrderByAggregateInput
  }

  export type filtro_colonneScalarWhereWithAggregatesInput = {
    AND?: Enumerable<filtro_colonneScalarWhereWithAggregatesInput>
    OR?: Enumerable<filtro_colonneScalarWhereWithAggregatesInput>
    NOT?: Enumerable<filtro_colonneScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idUtente?: IntNullableWithAggregatesFilter | number | null
    json?: StringNullableWithAggregatesFilter | string | null
    tabella?: StringNullableWithAggregatesFilter | string | null
  }

  export type fontiWhereInput = {
    AND?: Enumerable<fontiWhereInput>
    OR?: Enumerable<fontiWhereInput>
    NOT?: Enumerable<fontiWhereInput>
    id?: IntFilter | number
    value?: StringNullableFilter | string | null
    registrorichiedente?: RegistrorichiedenteListRelationFilter
    segnalazione?: SegnalazioneListRelationFilter
    segnalazionestorico?: SegnalazionestoricoListRelationFilter
  }

  export type fontiOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    registrorichiedente?: registrorichiedenteOrderByRelationAggregateInput
    segnalazione?: segnalazioneOrderByRelationAggregateInput
    segnalazionestorico?: segnalazionestoricoOrderByRelationAggregateInput
  }

  export type fontiWhereUniqueInput = {
    id?: number
  }

  export type fontiOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    _count?: fontiCountOrderByAggregateInput
    _avg?: fontiAvgOrderByAggregateInput
    _max?: fontiMaxOrderByAggregateInput
    _min?: fontiMinOrderByAggregateInput
    _sum?: fontiSumOrderByAggregateInput
  }

  export type fontiScalarWhereWithAggregatesInput = {
    AND?: Enumerable<fontiScalarWhereWithAggregatesInput>
    OR?: Enumerable<fontiScalarWhereWithAggregatesInput>
    NOT?: Enumerable<fontiScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    value?: StringNullableWithAggregatesFilter | string | null
  }

  export type gruppoWhereInput = {
    AND?: Enumerable<gruppoWhereInput>
    OR?: Enumerable<gruppoWhereInput>
    NOT?: Enumerable<gruppoWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    descrizione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    utenti?: UtentiListRelationFilter
  }

  export type gruppoOrderByWithRelationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
    utenti?: utentiOrderByRelationAggregateInput
  }

  export type gruppoWhereUniqueInput = {
    id?: number
  }

  export type gruppoOrderByWithAggregationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
    _count?: gruppoCountOrderByAggregateInput
    _avg?: gruppoAvgOrderByAggregateInput
    _max?: gruppoMaxOrderByAggregateInput
    _min?: gruppoMinOrderByAggregateInput
    _sum?: gruppoSumOrderByAggregateInput
  }

  export type gruppoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gruppoScalarWhereWithAggregatesInput>
    OR?: Enumerable<gruppoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gruppoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    descrizione?: StringNullableWithAggregatesFilter | string | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
  }

  export type impresaWhereInput = {
    AND?: Enumerable<impresaWhereInput>
    OR?: Enumerable<impresaWhereInput>
    NOT?: Enumerable<impresaWhereInput>
    id?: IntFilter | number
    value?: StringNullableFilter | string | null
    lavoro?: LavoroListRelationFilter
    lavorostorico?: LavorostoricoListRelationFilter
  }

  export type impresaOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    lavoro?: lavoroOrderByRelationAggregateInput
    lavorostorico?: lavorostoricoOrderByRelationAggregateInput
  }

  export type impresaWhereUniqueInput = {
    id?: number
  }

  export type impresaOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    _count?: impresaCountOrderByAggregateInput
    _avg?: impresaAvgOrderByAggregateInput
    _max?: impresaMaxOrderByAggregateInput
    _min?: impresaMinOrderByAggregateInput
    _sum?: impresaSumOrderByAggregateInput
  }

  export type impresaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<impresaScalarWhereWithAggregatesInput>
    OR?: Enumerable<impresaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<impresaScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    value?: StringNullableWithAggregatesFilter | string | null
  }

  export type lavoroWhereInput = {
    AND?: Enumerable<lavoroWhereInput>
    OR?: Enumerable<lavoroWhereInput>
    NOT?: Enumerable<lavoroWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    idEvento?: IntNullableFilter | number | null
    idPratica?: IntNullableFilter | number | null
    idPOI?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    dataCreazione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataChiusura?: StringNullableFilter | string | null
    localizzazioneDichiarata?: StringNullableFilter | string | null
    categoriaLavoro?: IntNullableFilter | number | null
    dettaglioLavoro?: IntNullableFilter | number | null
    noteLavoro?: StringNullableFilter | string | null
    contabilitaLavoro?: IntNullableFilter | number | null
    attrezzaturaLavoro?: IntNullableFilter | number | null
    mezzoLavoro?: IntNullableFilter | number | null
    personaleLavoro?: IntNullableFilter | number | null
    dataModificaStato?: StringNullableFilter | string | null
    stato?: StringNullableFilter | string | null
    notaStato?: StringNullableFilter | string | null
    idUtenteStato?: IntNullableFilter | number | null
    localizzazioneDichiarataQuartiere?: StringNullableFilter | string | null
    statoCorrenteLavoro?: StringNullableFilter | string | null
    del?: StringNullableFilter | string | null
    dataInizioProgrammata?: StringNullableFilter | string | null
    dataInizioEffettiva?: StringNullableFilter | string | null
    dataInizioMassima?: StringNullableFilter | string | null
    dataFineProgrammata?: StringNullableFilter | string | null
    dataFineEffettiva?: StringNullableFilter | string | null
    dataFineMassima?: StringNullableFilter | string | null
    delOggettiCatasto?: StringNullableFilter | string | null
    quantita?: StringNullableFilter | string | null
    operatore?: StringNullableFilter | string | null
    sospeso?: IntNullableFilter | number | null
    dataora_ini_sospensione?: StringNullableFilter | string | null
    dataora_fine_sospensione?: StringNullableFilter | string | null
    tempo_sospensione?: IntNullableFilter | number | null
    note_sospensione?: StringNullableFilter | string | null
    impresaEsecutrice?: IntNullableFilter | number | null
    segnaleticatemporanea?: StringNullableFilter | string | null
    tipolavoro?: StringNullableFilter | string | null
    statoMessaInSicurezza?: StringNullableFilter | string | null
    dataMessaInSicurezza?: StringNullableFilter | string | null
    notePubbliche?: StringNullableFilter | string | null
    catastolinker?: CatastolinkerListRelationFilter
    categoriaanomalia?: XOR<CategoriaanomaliaRelationFilter, categoriaanomaliaWhereInput> | null
    sottocategorialavoro?: XOR<SottocategorialavoroRelationFilter, sottocategorialavoroWhereInput> | null
    utenti_lavoro_idUtenteStatoToutenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
    utenti_lavoro_idUtenteToutenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
    impresa?: XOR<ImpresaRelationFilter, impresaWhereInput> | null
  }

  export type lavoroOrderByWithRelationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarata?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    noteLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtenteStato?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    statoCorrenteLavoro?: SortOrder
    del?: SortOrder
    dataInizioProgrammata?: SortOrder
    dataInizioEffettiva?: SortOrder
    dataInizioMassima?: SortOrder
    dataFineProgrammata?: SortOrder
    dataFineEffettiva?: SortOrder
    dataFineMassima?: SortOrder
    delOggettiCatasto?: SortOrder
    quantita?: SortOrder
    operatore?: SortOrder
    sospeso?: SortOrder
    dataora_ini_sospensione?: SortOrder
    dataora_fine_sospensione?: SortOrder
    tempo_sospensione?: SortOrder
    note_sospensione?: SortOrder
    impresaEsecutrice?: SortOrder
    segnaleticatemporanea?: SortOrder
    tipolavoro?: SortOrder
    statoMessaInSicurezza?: SortOrder
    dataMessaInSicurezza?: SortOrder
    notePubbliche?: SortOrder
    catastolinker?: catastolinkerOrderByRelationAggregateInput
    categoriaanomalia?: categoriaanomaliaOrderByWithRelationInput
    sottocategorialavoro?: sottocategorialavoroOrderByWithRelationInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiOrderByWithRelationInput
    utenti_lavoro_idUtenteToutenti?: utentiOrderByWithRelationInput
    impresa?: impresaOrderByWithRelationInput
  }

  export type lavoroWhereUniqueInput = {
    id?: number
  }

  export type lavoroOrderByWithAggregationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarata?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    noteLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtenteStato?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    statoCorrenteLavoro?: SortOrder
    del?: SortOrder
    dataInizioProgrammata?: SortOrder
    dataInizioEffettiva?: SortOrder
    dataInizioMassima?: SortOrder
    dataFineProgrammata?: SortOrder
    dataFineEffettiva?: SortOrder
    dataFineMassima?: SortOrder
    delOggettiCatasto?: SortOrder
    quantita?: SortOrder
    operatore?: SortOrder
    sospeso?: SortOrder
    dataora_ini_sospensione?: SortOrder
    dataora_fine_sospensione?: SortOrder
    tempo_sospensione?: SortOrder
    note_sospensione?: SortOrder
    impresaEsecutrice?: SortOrder
    segnaleticatemporanea?: SortOrder
    tipolavoro?: SortOrder
    statoMessaInSicurezza?: SortOrder
    dataMessaInSicurezza?: SortOrder
    notePubbliche?: SortOrder
    _count?: lavoroCountOrderByAggregateInput
    _avg?: lavoroAvgOrderByAggregateInput
    _max?: lavoroMaxOrderByAggregateInput
    _min?: lavoroMinOrderByAggregateInput
    _sum?: lavoroSumOrderByAggregateInput
  }

  export type lavoroScalarWhereWithAggregatesInput = {
    AND?: Enumerable<lavoroScalarWhereWithAggregatesInput>
    OR?: Enumerable<lavoroScalarWhereWithAggregatesInput>
    NOT?: Enumerable<lavoroScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    idEvento?: IntNullableWithAggregatesFilter | number | null
    idPratica?: IntNullableWithAggregatesFilter | number | null
    idPOI?: IntNullableWithAggregatesFilter | number | null
    idUtente?: IntNullableWithAggregatesFilter | number | null
    dataCreazione?: StringNullableWithAggregatesFilter | string | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    dataChiusura?: StringNullableWithAggregatesFilter | string | null
    localizzazioneDichiarata?: StringNullableWithAggregatesFilter | string | null
    categoriaLavoro?: IntNullableWithAggregatesFilter | number | null
    dettaglioLavoro?: IntNullableWithAggregatesFilter | number | null
    noteLavoro?: StringNullableWithAggregatesFilter | string | null
    contabilitaLavoro?: IntNullableWithAggregatesFilter | number | null
    attrezzaturaLavoro?: IntNullableWithAggregatesFilter | number | null
    mezzoLavoro?: IntNullableWithAggregatesFilter | number | null
    personaleLavoro?: IntNullableWithAggregatesFilter | number | null
    dataModificaStato?: StringNullableWithAggregatesFilter | string | null
    stato?: StringNullableWithAggregatesFilter | string | null
    notaStato?: StringNullableWithAggregatesFilter | string | null
    idUtenteStato?: IntNullableWithAggregatesFilter | number | null
    localizzazioneDichiarataQuartiere?: StringNullableWithAggregatesFilter | string | null
    statoCorrenteLavoro?: StringNullableWithAggregatesFilter | string | null
    del?: StringNullableWithAggregatesFilter | string | null
    dataInizioProgrammata?: StringNullableWithAggregatesFilter | string | null
    dataInizioEffettiva?: StringNullableWithAggregatesFilter | string | null
    dataInizioMassima?: StringNullableWithAggregatesFilter | string | null
    dataFineProgrammata?: StringNullableWithAggregatesFilter | string | null
    dataFineEffettiva?: StringNullableWithAggregatesFilter | string | null
    dataFineMassima?: StringNullableWithAggregatesFilter | string | null
    delOggettiCatasto?: StringNullableWithAggregatesFilter | string | null
    quantita?: StringNullableWithAggregatesFilter | string | null
    operatore?: StringNullableWithAggregatesFilter | string | null
    sospeso?: IntNullableWithAggregatesFilter | number | null
    dataora_ini_sospensione?: StringNullableWithAggregatesFilter | string | null
    dataora_fine_sospensione?: StringNullableWithAggregatesFilter | string | null
    tempo_sospensione?: IntNullableWithAggregatesFilter | number | null
    note_sospensione?: StringNullableWithAggregatesFilter | string | null
    impresaEsecutrice?: IntNullableWithAggregatesFilter | number | null
    segnaleticatemporanea?: StringNullableWithAggregatesFilter | string | null
    tipolavoro?: StringNullableWithAggregatesFilter | string | null
    statoMessaInSicurezza?: StringNullableWithAggregatesFilter | string | null
    dataMessaInSicurezza?: StringNullableWithAggregatesFilter | string | null
    notePubbliche?: StringNullableWithAggregatesFilter | string | null
  }

  export type lavorostoricoWhereInput = {
    AND?: Enumerable<lavorostoricoWhereInput>
    OR?: Enumerable<lavorostoricoWhereInput>
    NOT?: Enumerable<lavorostoricoWhereInput>
    id?: IntFilter | number
    idLavoro?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    idEvento?: IntNullableFilter | number | null
    idPratica?: IntNullableFilter | number | null
    idPOI?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    dataCreazione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataChiusura?: StringNullableFilter | string | null
    localizzazioneDichiarata?: StringNullableFilter | string | null
    categoriaLavoro?: IntNullableFilter | number | null
    dettaglioLavoro?: IntNullableFilter | number | null
    noteLavoro?: StringNullableFilter | string | null
    contabilitaLavoro?: IntNullableFilter | number | null
    attrezzaturaLavoro?: IntNullableFilter | number | null
    mezzoLavoro?: IntNullableFilter | number | null
    personaleLavoro?: IntNullableFilter | number | null
    dataModificaStato?: StringNullableFilter | string | null
    stato?: StringNullableFilter | string | null
    notaStato?: StringNullableFilter | string | null
    idUtenteStato?: IntNullableFilter | number | null
    sospeso?: IntNullableFilter | number | null
    dataora_ini_sospensione?: StringNullableFilter | string | null
    dataora_fine_sospensione?: StringNullableFilter | string | null
    tempo_sospensione?: IntNullableFilter | number | null
    note_sospensione?: StringNullableFilter | string | null
    dataInizioProgrammata?: StringNullableFilter | string | null
    dataInizioEffettiva?: StringNullableFilter | string | null
    dataInizioMassima?: StringNullableFilter | string | null
    dataFineProgrammata?: StringNullableFilter | string | null
    dataFineEffettiva?: StringNullableFilter | string | null
    dataFineMassima?: StringNullableFilter | string | null
    localizzazioneDichiarataQuartiere?: StringNullableFilter | string | null
    statoCorrenteLavoro?: StringNullableFilter | string | null
    delOggettiCatasto?: StringNullableFilter | string | null
    del?: StringNullableFilter | string | null
    quantita?: StringNullableFilter | string | null
    operatore?: StringNullableFilter | string | null
    impresaEsecutrice?: IntNullableFilter | number | null
    segnaleticatemporanea?: StringNullableFilter | string | null
    tipolavoro?: StringNullableFilter | string | null
    statoMessaInSicurezza?: StringNullableFilter | string | null
    dataMessaInSicurezza?: StringNullableFilter | string | null
    flgCambioStato?: StringNullableFilter | string | null
    notePubbliche?: StringNullableFilter | string | null
    categoriaanomalia?: XOR<CategoriaanomaliaRelationFilter, categoriaanomaliaWhereInput> | null
    sottocategorialavoro?: XOR<SottocategorialavoroRelationFilter, sottocategorialavoroWhereInput> | null
    utenti_lavorostorico_idUtenteStatoToutenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
    utenti_lavorostorico_idUtenteToutenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
    impresa?: XOR<ImpresaRelationFilter, impresaWhereInput> | null
  }

  export type lavorostoricoOrderByWithRelationInput = {
    id?: SortOrder
    idLavoro?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarata?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    noteLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtenteStato?: SortOrder
    sospeso?: SortOrder
    dataora_ini_sospensione?: SortOrder
    dataora_fine_sospensione?: SortOrder
    tempo_sospensione?: SortOrder
    note_sospensione?: SortOrder
    dataInizioProgrammata?: SortOrder
    dataInizioEffettiva?: SortOrder
    dataInizioMassima?: SortOrder
    dataFineProgrammata?: SortOrder
    dataFineEffettiva?: SortOrder
    dataFineMassima?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    statoCorrenteLavoro?: SortOrder
    delOggettiCatasto?: SortOrder
    del?: SortOrder
    quantita?: SortOrder
    operatore?: SortOrder
    impresaEsecutrice?: SortOrder
    segnaleticatemporanea?: SortOrder
    tipolavoro?: SortOrder
    statoMessaInSicurezza?: SortOrder
    dataMessaInSicurezza?: SortOrder
    flgCambioStato?: SortOrder
    notePubbliche?: SortOrder
    categoriaanomalia?: categoriaanomaliaOrderByWithRelationInput
    sottocategorialavoro?: sottocategorialavoroOrderByWithRelationInput
    utenti_lavorostorico_idUtenteStatoToutenti?: utentiOrderByWithRelationInput
    utenti_lavorostorico_idUtenteToutenti?: utentiOrderByWithRelationInput
    impresa?: impresaOrderByWithRelationInput
  }

  export type lavorostoricoWhereUniqueInput = {
    id?: number
  }

  export type lavorostoricoOrderByWithAggregationInput = {
    id?: SortOrder
    idLavoro?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarata?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    noteLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtenteStato?: SortOrder
    sospeso?: SortOrder
    dataora_ini_sospensione?: SortOrder
    dataora_fine_sospensione?: SortOrder
    tempo_sospensione?: SortOrder
    note_sospensione?: SortOrder
    dataInizioProgrammata?: SortOrder
    dataInizioEffettiva?: SortOrder
    dataInizioMassima?: SortOrder
    dataFineProgrammata?: SortOrder
    dataFineEffettiva?: SortOrder
    dataFineMassima?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    statoCorrenteLavoro?: SortOrder
    delOggettiCatasto?: SortOrder
    del?: SortOrder
    quantita?: SortOrder
    operatore?: SortOrder
    impresaEsecutrice?: SortOrder
    segnaleticatemporanea?: SortOrder
    tipolavoro?: SortOrder
    statoMessaInSicurezza?: SortOrder
    dataMessaInSicurezza?: SortOrder
    flgCambioStato?: SortOrder
    notePubbliche?: SortOrder
    _count?: lavorostoricoCountOrderByAggregateInput
    _avg?: lavorostoricoAvgOrderByAggregateInput
    _max?: lavorostoricoMaxOrderByAggregateInput
    _min?: lavorostoricoMinOrderByAggregateInput
    _sum?: lavorostoricoSumOrderByAggregateInput
  }

  export type lavorostoricoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<lavorostoricoScalarWhereWithAggregatesInput>
    OR?: Enumerable<lavorostoricoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<lavorostoricoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idLavoro?: IntNullableWithAggregatesFilter | number | null
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    idEvento?: IntNullableWithAggregatesFilter | number | null
    idPratica?: IntNullableWithAggregatesFilter | number | null
    idPOI?: IntNullableWithAggregatesFilter | number | null
    idUtente?: IntNullableWithAggregatesFilter | number | null
    dataCreazione?: StringNullableWithAggregatesFilter | string | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    dataChiusura?: StringNullableWithAggregatesFilter | string | null
    localizzazioneDichiarata?: StringNullableWithAggregatesFilter | string | null
    categoriaLavoro?: IntNullableWithAggregatesFilter | number | null
    dettaglioLavoro?: IntNullableWithAggregatesFilter | number | null
    noteLavoro?: StringNullableWithAggregatesFilter | string | null
    contabilitaLavoro?: IntNullableWithAggregatesFilter | number | null
    attrezzaturaLavoro?: IntNullableWithAggregatesFilter | number | null
    mezzoLavoro?: IntNullableWithAggregatesFilter | number | null
    personaleLavoro?: IntNullableWithAggregatesFilter | number | null
    dataModificaStato?: StringNullableWithAggregatesFilter | string | null
    stato?: StringNullableWithAggregatesFilter | string | null
    notaStato?: StringNullableWithAggregatesFilter | string | null
    idUtenteStato?: IntNullableWithAggregatesFilter | number | null
    sospeso?: IntNullableWithAggregatesFilter | number | null
    dataora_ini_sospensione?: StringNullableWithAggregatesFilter | string | null
    dataora_fine_sospensione?: StringNullableWithAggregatesFilter | string | null
    tempo_sospensione?: IntNullableWithAggregatesFilter | number | null
    note_sospensione?: StringNullableWithAggregatesFilter | string | null
    dataInizioProgrammata?: StringNullableWithAggregatesFilter | string | null
    dataInizioEffettiva?: StringNullableWithAggregatesFilter | string | null
    dataInizioMassima?: StringNullableWithAggregatesFilter | string | null
    dataFineProgrammata?: StringNullableWithAggregatesFilter | string | null
    dataFineEffettiva?: StringNullableWithAggregatesFilter | string | null
    dataFineMassima?: StringNullableWithAggregatesFilter | string | null
    localizzazioneDichiarataQuartiere?: StringNullableWithAggregatesFilter | string | null
    statoCorrenteLavoro?: StringNullableWithAggregatesFilter | string | null
    delOggettiCatasto?: StringNullableWithAggregatesFilter | string | null
    del?: StringNullableWithAggregatesFilter | string | null
    quantita?: StringNullableWithAggregatesFilter | string | null
    operatore?: StringNullableWithAggregatesFilter | string | null
    impresaEsecutrice?: IntNullableWithAggregatesFilter | number | null
    segnaleticatemporanea?: StringNullableWithAggregatesFilter | string | null
    tipolavoro?: StringNullableWithAggregatesFilter | string | null
    statoMessaInSicurezza?: StringNullableWithAggregatesFilter | string | null
    dataMessaInSicurezza?: StringNullableWithAggregatesFilter | string | null
    flgCambioStato?: StringNullableWithAggregatesFilter | string | null
    notePubbliche?: StringNullableWithAggregatesFilter | string | null
  }

  export type livelliservizioWhereInput = {
    AND?: Enumerable<livelliservizioWhereInput>
    OR?: Enumerable<livelliservizioWhereInput>
    NOT?: Enumerable<livelliservizioWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
    idLds?: IntNullableFilter | number | null
    risultato?: StringNullableFilter | string | null
    detrazioneEffettivo?: StringNullableFilter | string | null
    premioEffettivo?: StringNullableFilter | string | null
    chiave?: StringNullableFilter | string | null
    unita?: StringNullableFilter | string | null
    idSegnalazione?: IntNullableFilter | number | null
    idLavoro?: IntNullableFilter | number | null
    dataIntervalloDa?: StringNullableFilter | string | null
    dataIntervalloA?: StringNullableFilter | string | null
    dataRichiesta?: StringNullableFilter | string | null
    dataInizioEffettivaLavoro?: StringNullableFilter | string | null
    dataChiusuraSegnalazione?: StringNullableFilter | string | null
    dataFineMassima?: StringNullableFilter | string | null
    elaborato?: IntNullableFilter | number | null
    idSchedulatore?: IntNullableFilter | number | null
    tipolavoro?: StringNullableFilter | string | null
    note?: StringNullableFilter | string | null
    dataCreazioneSegnalazione?: StringNullableFilter | string | null
    livelliserviziodescrizione?: XOR<LivelliserviziodescrizioneRelationFilter, livelliserviziodescrizioneWhereInput> | null
    utenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
  }

  export type livelliservizioOrderByWithRelationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idLds?: SortOrder
    risultato?: SortOrder
    detrazioneEffettivo?: SortOrder
    premioEffettivo?: SortOrder
    chiave?: SortOrder
    unita?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    dataIntervalloDa?: SortOrder
    dataIntervalloA?: SortOrder
    dataRichiesta?: SortOrder
    dataInizioEffettivaLavoro?: SortOrder
    dataChiusuraSegnalazione?: SortOrder
    dataFineMassima?: SortOrder
    elaborato?: SortOrder
    idSchedulatore?: SortOrder
    tipolavoro?: SortOrder
    note?: SortOrder
    dataCreazioneSegnalazione?: SortOrder
    livelliserviziodescrizione?: livelliserviziodescrizioneOrderByWithRelationInput
    utenti?: utentiOrderByWithRelationInput
  }

  export type livelliservizioWhereUniqueInput = {
    id?: number
  }

  export type livelliservizioOrderByWithAggregationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idLds?: SortOrder
    risultato?: SortOrder
    detrazioneEffettivo?: SortOrder
    premioEffettivo?: SortOrder
    chiave?: SortOrder
    unita?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    dataIntervalloDa?: SortOrder
    dataIntervalloA?: SortOrder
    dataRichiesta?: SortOrder
    dataInizioEffettivaLavoro?: SortOrder
    dataChiusuraSegnalazione?: SortOrder
    dataFineMassima?: SortOrder
    elaborato?: SortOrder
    idSchedulatore?: SortOrder
    tipolavoro?: SortOrder
    note?: SortOrder
    dataCreazioneSegnalazione?: SortOrder
    _count?: livelliservizioCountOrderByAggregateInput
    _avg?: livelliservizioAvgOrderByAggregateInput
    _max?: livelliservizioMaxOrderByAggregateInput
    _min?: livelliservizioMinOrderByAggregateInput
    _sum?: livelliservizioSumOrderByAggregateInput
  }

  export type livelliservizioScalarWhereWithAggregatesInput = {
    AND?: Enumerable<livelliservizioScalarWhereWithAggregatesInput>
    OR?: Enumerable<livelliservizioScalarWhereWithAggregatesInput>
    NOT?: Enumerable<livelliservizioScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    idUtente?: IntNullableWithAggregatesFilter | number | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    idLds?: IntNullableWithAggregatesFilter | number | null
    risultato?: StringNullableWithAggregatesFilter | string | null
    detrazioneEffettivo?: StringNullableWithAggregatesFilter | string | null
    premioEffettivo?: StringNullableWithAggregatesFilter | string | null
    chiave?: StringNullableWithAggregatesFilter | string | null
    unita?: StringNullableWithAggregatesFilter | string | null
    idSegnalazione?: IntNullableWithAggregatesFilter | number | null
    idLavoro?: IntNullableWithAggregatesFilter | number | null
    dataIntervalloDa?: StringNullableWithAggregatesFilter | string | null
    dataIntervalloA?: StringNullableWithAggregatesFilter | string | null
    dataRichiesta?: StringNullableWithAggregatesFilter | string | null
    dataInizioEffettivaLavoro?: StringNullableWithAggregatesFilter | string | null
    dataChiusuraSegnalazione?: StringNullableWithAggregatesFilter | string | null
    dataFineMassima?: StringNullableWithAggregatesFilter | string | null
    elaborato?: IntNullableWithAggregatesFilter | number | null
    idSchedulatore?: IntNullableWithAggregatesFilter | number | null
    tipolavoro?: StringNullableWithAggregatesFilter | string | null
    note?: StringNullableWithAggregatesFilter | string | null
    dataCreazioneSegnalazione?: StringNullableWithAggregatesFilter | string | null
  }

  export type livelliserviziocanoneWhereInput = {
    AND?: Enumerable<livelliserviziocanoneWhereInput>
    OR?: Enumerable<livelliserviziocanoneWhereInput>
    NOT?: Enumerable<livelliserviziocanoneWhereInput>
    id?: IntFilter | number
    idLds?: IntNullableFilter | number | null
    anno?: StringNullableFilter | string | null
    semestre?: IntNullableFilter | number | null
    trimestre?: IntNullableFilter | number | null
    canoneCalcoloLdS?: FloatNullableFilter | number | null
  }

  export type livelliserviziocanoneOrderByWithRelationInput = {
    id?: SortOrder
    idLds?: SortOrder
    anno?: SortOrder
    semestre?: SortOrder
    trimestre?: SortOrder
    canoneCalcoloLdS?: SortOrder
  }

  export type livelliserviziocanoneWhereUniqueInput = {
    id?: number
  }

  export type livelliserviziocanoneOrderByWithAggregationInput = {
    id?: SortOrder
    idLds?: SortOrder
    anno?: SortOrder
    semestre?: SortOrder
    trimestre?: SortOrder
    canoneCalcoloLdS?: SortOrder
    _count?: livelliserviziocanoneCountOrderByAggregateInput
    _avg?: livelliserviziocanoneAvgOrderByAggregateInput
    _max?: livelliserviziocanoneMaxOrderByAggregateInput
    _min?: livelliserviziocanoneMinOrderByAggregateInput
    _sum?: livelliserviziocanoneSumOrderByAggregateInput
  }

  export type livelliserviziocanoneScalarWhereWithAggregatesInput = {
    AND?: Enumerable<livelliserviziocanoneScalarWhereWithAggregatesInput>
    OR?: Enumerable<livelliserviziocanoneScalarWhereWithAggregatesInput>
    NOT?: Enumerable<livelliserviziocanoneScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idLds?: IntNullableWithAggregatesFilter | number | null
    anno?: StringNullableWithAggregatesFilter | string | null
    semestre?: IntNullableWithAggregatesFilter | number | null
    trimestre?: IntNullableWithAggregatesFilter | number | null
    canoneCalcoloLdS?: FloatNullableWithAggregatesFilter | number | null
  }

  export type livelliserviziodescrizioneWhereInput = {
    AND?: Enumerable<livelliserviziodescrizioneWhereInput>
    OR?: Enumerable<livelliserviziodescrizioneWhereInput>
    NOT?: Enumerable<livelliserviziodescrizioneWhereInput>
    id?: IntFilter | number
    ambito?: StringNullableFilter | string | null
    lds?: StringNullableFilter | string | null
    parametroValutazione?: StringNullableFilter | string | null
    ldsOT?: StringNullableFilter | string | null
    ldsCPT?: StringNullableFilter | string | null
    indiceScostamento?: StringNullableFilter | string | null
    penaleUnitaria?: IntNullableFilter | number | null
    controllo?: StringNullableFilter | string | null
    note?: StringNullableFilter | string | null
    tipo?: StringNullableFilter | string | null
    funzione?: StringNullableFilter | string | null
    tipoEstrazione?: StringNullableFilter | string | null
    livelliservizio?: LivelliservizioListRelationFilter
  }

  export type livelliserviziodescrizioneOrderByWithRelationInput = {
    id?: SortOrder
    ambito?: SortOrder
    lds?: SortOrder
    parametroValutazione?: SortOrder
    ldsOT?: SortOrder
    ldsCPT?: SortOrder
    indiceScostamento?: SortOrder
    penaleUnitaria?: SortOrder
    controllo?: SortOrder
    note?: SortOrder
    tipo?: SortOrder
    funzione?: SortOrder
    tipoEstrazione?: SortOrder
    livelliservizio?: livelliservizioOrderByRelationAggregateInput
  }

  export type livelliserviziodescrizioneWhereUniqueInput = {
    id?: number
  }

  export type livelliserviziodescrizioneOrderByWithAggregationInput = {
    id?: SortOrder
    ambito?: SortOrder
    lds?: SortOrder
    parametroValutazione?: SortOrder
    ldsOT?: SortOrder
    ldsCPT?: SortOrder
    indiceScostamento?: SortOrder
    penaleUnitaria?: SortOrder
    controllo?: SortOrder
    note?: SortOrder
    tipo?: SortOrder
    funzione?: SortOrder
    tipoEstrazione?: SortOrder
    _count?: livelliserviziodescrizioneCountOrderByAggregateInput
    _avg?: livelliserviziodescrizioneAvgOrderByAggregateInput
    _max?: livelliserviziodescrizioneMaxOrderByAggregateInput
    _min?: livelliserviziodescrizioneMinOrderByAggregateInput
    _sum?: livelliserviziodescrizioneSumOrderByAggregateInput
  }

  export type livelliserviziodescrizioneScalarWhereWithAggregatesInput = {
    AND?: Enumerable<livelliserviziodescrizioneScalarWhereWithAggregatesInput>
    OR?: Enumerable<livelliserviziodescrizioneScalarWhereWithAggregatesInput>
    NOT?: Enumerable<livelliserviziodescrizioneScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    ambito?: StringNullableWithAggregatesFilter | string | null
    lds?: StringNullableWithAggregatesFilter | string | null
    parametroValutazione?: StringNullableWithAggregatesFilter | string | null
    ldsOT?: StringNullableWithAggregatesFilter | string | null
    ldsCPT?: StringNullableWithAggregatesFilter | string | null
    indiceScostamento?: StringNullableWithAggregatesFilter | string | null
    penaleUnitaria?: IntNullableWithAggregatesFilter | number | null
    controllo?: StringNullableWithAggregatesFilter | string | null
    note?: StringNullableWithAggregatesFilter | string | null
    tipo?: StringNullableWithAggregatesFilter | string | null
    funzione?: StringNullableWithAggregatesFilter | string | null
    tipoEstrazione?: StringNullableWithAggregatesFilter | string | null
  }

  export type livelliservizioschedulatoreWhereInput = {
    AND?: Enumerable<livelliservizioschedulatoreWhereInput>
    OR?: Enumerable<livelliservizioschedulatoreWhereInput>
    NOT?: Enumerable<livelliservizioschedulatoreWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    tipologia?: StringNullableFilter | string | null
    anno?: IntNullableFilter | number | null
    semestre?: IntNullableFilter | number | null
    stato?: StringNullableFilter | string | null
    idUtente?: IntNullableFilter | number | null
    dataCreazione?: StringNullableFilter | string | null
  }

  export type livelliservizioschedulatoreOrderByWithRelationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    tipologia?: SortOrder
    anno?: SortOrder
    semestre?: SortOrder
    stato?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
  }

  export type livelliservizioschedulatoreWhereUniqueInput = {
    id?: number
  }

  export type livelliservizioschedulatoreOrderByWithAggregationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    tipologia?: SortOrder
    anno?: SortOrder
    semestre?: SortOrder
    stato?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
    _count?: livelliservizioschedulatoreCountOrderByAggregateInput
    _avg?: livelliservizioschedulatoreAvgOrderByAggregateInput
    _max?: livelliservizioschedulatoreMaxOrderByAggregateInput
    _min?: livelliservizioschedulatoreMinOrderByAggregateInput
    _sum?: livelliservizioschedulatoreSumOrderByAggregateInput
  }

  export type livelliservizioschedulatoreScalarWhereWithAggregatesInput = {
    AND?: Enumerable<livelliservizioschedulatoreScalarWhereWithAggregatesInput>
    OR?: Enumerable<livelliservizioschedulatoreScalarWhereWithAggregatesInput>
    NOT?: Enumerable<livelliservizioschedulatoreScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    tipologia?: StringNullableWithAggregatesFilter | string | null
    anno?: IntNullableWithAggregatesFilter | number | null
    semestre?: IntNullableWithAggregatesFilter | number | null
    stato?: StringNullableWithAggregatesFilter | string | null
    idUtente?: IntNullableWithAggregatesFilter | number | null
    dataCreazione?: StringNullableWithAggregatesFilter | string | null
  }

  export type mezzoWhereInput = {
    AND?: Enumerable<mezzoWhereInput>
    OR?: Enumerable<mezzoWhereInput>
    NOT?: Enumerable<mezzoWhereInput>
    id?: IntFilter | number
    tipologiaMezzo?: IntNullableFilter | number | null
    descrizione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
  }

  export type mezzoOrderByWithRelationInput = {
    id?: SortOrder
    tipologiaMezzo?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type mezzoWhereUniqueInput = {
    id?: number
  }

  export type mezzoOrderByWithAggregationInput = {
    id?: SortOrder
    tipologiaMezzo?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
    _count?: mezzoCountOrderByAggregateInput
    _avg?: mezzoAvgOrderByAggregateInput
    _max?: mezzoMaxOrderByAggregateInput
    _min?: mezzoMinOrderByAggregateInput
    _sum?: mezzoSumOrderByAggregateInput
  }

  export type mezzoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<mezzoScalarWhereWithAggregatesInput>
    OR?: Enumerable<mezzoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<mezzoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    tipologiaMezzo?: IntNullableWithAggregatesFilter | number | null
    descrizione?: StringNullableWithAggregatesFilter | string | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
  }

  export type oggettoWhereInput = {
    AND?: Enumerable<oggettoWhereInput>
    OR?: Enumerable<oggettoWhereInput>
    NOT?: Enumerable<oggettoWhereInput>
    id?: IntFilter | number
    catastoId?: IntNullableFilter | number | null
  }

  export type oggettoOrderByWithRelationInput = {
    id?: SortOrder
    catastoId?: SortOrder
  }

  export type oggettoWhereUniqueInput = {
    id?: number
  }

  export type oggettoOrderByWithAggregationInput = {
    id?: SortOrder
    catastoId?: SortOrder
    _count?: oggettoCountOrderByAggregateInput
    _avg?: oggettoAvgOrderByAggregateInput
    _max?: oggettoMaxOrderByAggregateInput
    _min?: oggettoMinOrderByAggregateInput
    _sum?: oggettoSumOrderByAggregateInput
  }

  export type oggettoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<oggettoScalarWhereWithAggregatesInput>
    OR?: Enumerable<oggettoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<oggettoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    catastoId?: IntNullableWithAggregatesFilter | number | null
  }

  export type oggettocivettaWhereInput = {
    AND?: Enumerable<oggettocivettaWhereInput>
    OR?: Enumerable<oggettocivettaWhereInput>
    NOT?: Enumerable<oggettocivettaWhereInput>
    id?: IntFilter | number
    idSegnalazione?: IntNullableFilter | number | null
    idOggettoCatasto?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
    idRifCivetta?: IntNullableFilter | number | null
    utenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
  }

  export type oggettocivettaOrderByWithRelationInput = {
    id?: SortOrder
    idSegnalazione?: SortOrder
    idOggettoCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idRifCivetta?: SortOrder
    utenti?: utentiOrderByWithRelationInput
  }

  export type oggettocivettaWhereUniqueInput = {
    id?: number
  }

  export type oggettocivettaOrderByWithAggregationInput = {
    id?: SortOrder
    idSegnalazione?: SortOrder
    idOggettoCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idRifCivetta?: SortOrder
    _count?: oggettocivettaCountOrderByAggregateInput
    _avg?: oggettocivettaAvgOrderByAggregateInput
    _max?: oggettocivettaMaxOrderByAggregateInput
    _min?: oggettocivettaMinOrderByAggregateInput
    _sum?: oggettocivettaSumOrderByAggregateInput
  }

  export type oggettocivettaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<oggettocivettaScalarWhereWithAggregatesInput>
    OR?: Enumerable<oggettocivettaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<oggettocivettaScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idSegnalazione?: IntNullableWithAggregatesFilter | number | null
    idOggettoCatasto?: IntNullableWithAggregatesFilter | number | null
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    idUtente?: IntNullableWithAggregatesFilter | number | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    idRifCivetta?: IntNullableWithAggregatesFilter | number | null
  }

  export type personaleWhereInput = {
    AND?: Enumerable<personaleWhereInput>
    OR?: Enumerable<personaleWhereInput>
    NOT?: Enumerable<personaleWhereInput>
    id?: IntFilter | number
    idUtente?: IntNullableFilter | number | null
    tipologiaPersonale?: IntNullableFilter | number | null
    descrizione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
  }

  export type personaleOrderByWithRelationInput = {
    id?: SortOrder
    idUtente?: SortOrder
    tipologiaPersonale?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type personaleWhereUniqueInput = {
    id?: number
  }

  export type personaleOrderByWithAggregationInput = {
    id?: SortOrder
    idUtente?: SortOrder
    tipologiaPersonale?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
    _count?: personaleCountOrderByAggregateInput
    _avg?: personaleAvgOrderByAggregateInput
    _max?: personaleMaxOrderByAggregateInput
    _min?: personaleMinOrderByAggregateInput
    _sum?: personaleSumOrderByAggregateInput
  }

  export type personaleScalarWhereWithAggregatesInput = {
    AND?: Enumerable<personaleScalarWhereWithAggregatesInput>
    OR?: Enumerable<personaleScalarWhereWithAggregatesInput>
    NOT?: Enumerable<personaleScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idUtente?: IntNullableWithAggregatesFilter | number | null
    tipologiaPersonale?: IntNullableWithAggregatesFilter | number | null
    descrizione?: StringNullableWithAggregatesFilter | string | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
  }

  export type poiWhereInput = {
    AND?: Enumerable<poiWhereInput>
    OR?: Enumerable<poiWhereInput>
    NOT?: Enumerable<poiWhereInput>
    id?: IntFilter | number
    descrizione?: StringNullableFilter | string | null
    dataInizio?: StringNullableFilter | string | null
    dataFine?: StringNullableFilter | string | null
    idAppalto?: IntNullableFilter | number | null
    notePOI?: StringNullableFilter | string | null
  }

  export type poiOrderByWithRelationInput = {
    id?: SortOrder
    descrizione?: SortOrder
    dataInizio?: SortOrder
    dataFine?: SortOrder
    idAppalto?: SortOrder
    notePOI?: SortOrder
  }

  export type poiWhereUniqueInput = {
    id?: number
  }

  export type poiOrderByWithAggregationInput = {
    id?: SortOrder
    descrizione?: SortOrder
    dataInizio?: SortOrder
    dataFine?: SortOrder
    idAppalto?: SortOrder
    notePOI?: SortOrder
    _count?: poiCountOrderByAggregateInput
    _avg?: poiAvgOrderByAggregateInput
    _max?: poiMaxOrderByAggregateInput
    _min?: poiMinOrderByAggregateInput
    _sum?: poiSumOrderByAggregateInput
  }

  export type poiScalarWhereWithAggregatesInput = {
    AND?: Enumerable<poiScalarWhereWithAggregatesInput>
    OR?: Enumerable<poiScalarWhereWithAggregatesInput>
    NOT?: Enumerable<poiScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    descrizione?: StringNullableWithAggregatesFilter | string | null
    dataInizio?: StringNullableWithAggregatesFilter | string | null
    dataFine?: StringNullableWithAggregatesFilter | string | null
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    notePOI?: StringNullableWithAggregatesFilter | string | null
  }

  export type praticaWhereInput = {
    AND?: Enumerable<praticaWhereInput>
    OR?: Enumerable<praticaWhereInput>
    NOT?: Enumerable<praticaWhereInput>
    id?: IntFilter | number
    idUtente?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
    dataChiusura?: StringNullableFilter | string | null
    nomePratica?: StringNullableFilter | string | null
    localizzazioneDichiarataQuartiere?: StringNullableFilter | string | null
    localizzazioneDichiarata?: StringNullableFilter | string | null
    notePratica?: StringNullableFilter | string | null
    importoPratica?: StringNullableFilter | string | null
    del?: StringNullableFilter | string | null
    dataCreazione?: StringNullableFilter | string | null
    statoCorrentePratica?: StringNullableFilter | string | null
    delLavori?: StringNullableFilter | string | null
    catastolinker?: CatastolinkerListRelationFilter
    utenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
  }

  export type praticaOrderByWithRelationInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    nomePratica?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarata?: SortOrder
    notePratica?: SortOrder
    importoPratica?: SortOrder
    del?: SortOrder
    dataCreazione?: SortOrder
    statoCorrentePratica?: SortOrder
    delLavori?: SortOrder
    catastolinker?: catastolinkerOrderByRelationAggregateInput
    utenti?: utentiOrderByWithRelationInput
  }

  export type praticaWhereUniqueInput = {
    id?: number
  }

  export type praticaOrderByWithAggregationInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    nomePratica?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarata?: SortOrder
    notePratica?: SortOrder
    importoPratica?: SortOrder
    del?: SortOrder
    dataCreazione?: SortOrder
    statoCorrentePratica?: SortOrder
    delLavori?: SortOrder
    _count?: praticaCountOrderByAggregateInput
    _avg?: praticaAvgOrderByAggregateInput
    _max?: praticaMaxOrderByAggregateInput
    _min?: praticaMinOrderByAggregateInput
    _sum?: praticaSumOrderByAggregateInput
  }

  export type praticaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<praticaScalarWhereWithAggregatesInput>
    OR?: Enumerable<praticaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<praticaScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idUtente?: IntNullableWithAggregatesFilter | number | null
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    dataChiusura?: StringNullableWithAggregatesFilter | string | null
    nomePratica?: StringNullableWithAggregatesFilter | string | null
    localizzazioneDichiarataQuartiere?: StringNullableWithAggregatesFilter | string | null
    localizzazioneDichiarata?: StringNullableWithAggregatesFilter | string | null
    notePratica?: StringNullableWithAggregatesFilter | string | null
    importoPratica?: StringNullableWithAggregatesFilter | string | null
    del?: StringNullableWithAggregatesFilter | string | null
    dataCreazione?: StringNullableWithAggregatesFilter | string | null
    statoCorrentePratica?: StringNullableWithAggregatesFilter | string | null
    delLavori?: StringNullableWithAggregatesFilter | string | null
  }

  export type praticastoricoWhereInput = {
    AND?: Enumerable<praticastoricoWhereInput>
    OR?: Enumerable<praticastoricoWhereInput>
    NOT?: Enumerable<praticastoricoWhereInput>
    id?: IntFilter | number
    idPratica?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    nomePratica?: StringNullableFilter | string | null
    localizzazioneDichiarataQuartiere?: StringNullableFilter | string | null
    localizzazioneDichiarata?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataChiusura?: StringNullableFilter | string | null
    notePratica?: StringNullableFilter | string | null
    importoPratica?: StringNullableFilter | string | null
    del?: StringNullableFilter | string | null
    dataCreazione?: StringNullableFilter | string | null
    statoCorrentePratica?: StringNullableFilter | string | null
    delLavori?: StringNullableFilter | string | null
    utenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
  }

  export type praticastoricoOrderByWithRelationInput = {
    id?: SortOrder
    idPratica?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    nomePratica?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarata?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    notePratica?: SortOrder
    importoPratica?: SortOrder
    del?: SortOrder
    dataCreazione?: SortOrder
    statoCorrentePratica?: SortOrder
    delLavori?: SortOrder
    utenti?: utentiOrderByWithRelationInput
  }

  export type praticastoricoWhereUniqueInput = {
    id?: number
  }

  export type praticastoricoOrderByWithAggregationInput = {
    id?: SortOrder
    idPratica?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    nomePratica?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarata?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    notePratica?: SortOrder
    importoPratica?: SortOrder
    del?: SortOrder
    dataCreazione?: SortOrder
    statoCorrentePratica?: SortOrder
    delLavori?: SortOrder
    _count?: praticastoricoCountOrderByAggregateInput
    _avg?: praticastoricoAvgOrderByAggregateInput
    _max?: praticastoricoMaxOrderByAggregateInput
    _min?: praticastoricoMinOrderByAggregateInput
    _sum?: praticastoricoSumOrderByAggregateInput
  }

  export type praticastoricoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<praticastoricoScalarWhereWithAggregatesInput>
    OR?: Enumerable<praticastoricoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<praticastoricoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idPratica?: IntNullableWithAggregatesFilter | number | null
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    idUtente?: IntNullableWithAggregatesFilter | number | null
    nomePratica?: StringNullableWithAggregatesFilter | string | null
    localizzazioneDichiarataQuartiere?: StringNullableWithAggregatesFilter | string | null
    localizzazioneDichiarata?: StringNullableWithAggregatesFilter | string | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    dataChiusura?: StringNullableWithAggregatesFilter | string | null
    notePratica?: StringNullableWithAggregatesFilter | string | null
    importoPratica?: StringNullableWithAggregatesFilter | string | null
    del?: StringNullableWithAggregatesFilter | string | null
    dataCreazione?: StringNullableWithAggregatesFilter | string | null
    statoCorrentePratica?: StringNullableWithAggregatesFilter | string | null
    delLavori?: StringNullableWithAggregatesFilter | string | null
  }

  export type prezzarioWhereInput = {
    AND?: Enumerable<prezzarioWhereInput>
    OR?: Enumerable<prezzarioWhereInput>
    NOT?: Enumerable<prezzarioWhereInput>
    id?: IntFilter | number
    descrizione?: StringNullableFilter | string | null
    unitaDiMisura?: StringNullableFilter | string | null
    prezzo?: StringNullableFilter | string | null
  }

  export type prezzarioOrderByWithRelationInput = {
    id?: SortOrder
    descrizione?: SortOrder
    unitaDiMisura?: SortOrder
    prezzo?: SortOrder
  }

  export type prezzarioWhereUniqueInput = {
    id?: number
  }

  export type prezzarioOrderByWithAggregationInput = {
    id?: SortOrder
    descrizione?: SortOrder
    unitaDiMisura?: SortOrder
    prezzo?: SortOrder
    _count?: prezzarioCountOrderByAggregateInput
    _avg?: prezzarioAvgOrderByAggregateInput
    _max?: prezzarioMaxOrderByAggregateInput
    _min?: prezzarioMinOrderByAggregateInput
    _sum?: prezzarioSumOrderByAggregateInput
  }

  export type prezzarioScalarWhereWithAggregatesInput = {
    AND?: Enumerable<prezzarioScalarWhereWithAggregatesInput>
    OR?: Enumerable<prezzarioScalarWhereWithAggregatesInput>
    NOT?: Enumerable<prezzarioScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    descrizione?: StringNullableWithAggregatesFilter | string | null
    unitaDiMisura?: StringNullableWithAggregatesFilter | string | null
    prezzo?: StringNullableWithAggregatesFilter | string | null
  }

  export type registrorichiedenteWhereInput = {
    AND?: Enumerable<registrorichiedenteWhereInput>
    OR?: Enumerable<registrorichiedenteWhereInput>
    NOT?: Enumerable<registrorichiedenteWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    noteSegnalatore?: StringNullableFilter | string | null
    dataCreazione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataRichiesta?: StringNullableFilter | string | null
    localizzazioneNote?: StringNullableFilter | string | null
    descrizioneAnomalia?: StringNullableFilter | string | null
    idUtente?: IntNullableFilter | number | null
    idSegnalazione?: IntNullableFilter | number | null
    idSegnalatore?: IntNullableFilter | number | null
    fonteSegnalazione?: IntNullableFilter | number | null
    idSegnalazioneGetico?: IntNullableFilter | number | null
    del?: StringNullableFilter | string | null
    fonti?: XOR<FontiRelationFilter, fontiWhereInput> | null
    segnalatore?: XOR<SegnalatoreRelationFilter, segnalatoreWhereInput> | null
    segnalazione_getico?: XOR<Segnalazione_geticoRelationFilter, segnalazione_geticoWhereInput> | null
    utenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
  }

  export type registrorichiedenteOrderByWithRelationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    noteSegnalatore?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    idUtente?: SortOrder
    idSegnalazione?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    idSegnalazioneGetico?: SortOrder
    del?: SortOrder
    fonti?: fontiOrderByWithRelationInput
    segnalatore?: segnalatoreOrderByWithRelationInput
    segnalazione_getico?: segnalazione_geticoOrderByWithRelationInput
    utenti?: utentiOrderByWithRelationInput
  }

  export type registrorichiedenteWhereUniqueInput = {
    id?: number
  }

  export type registrorichiedenteOrderByWithAggregationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    noteSegnalatore?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    idUtente?: SortOrder
    idSegnalazione?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    idSegnalazioneGetico?: SortOrder
    del?: SortOrder
    _count?: registrorichiedenteCountOrderByAggregateInput
    _avg?: registrorichiedenteAvgOrderByAggregateInput
    _max?: registrorichiedenteMaxOrderByAggregateInput
    _min?: registrorichiedenteMinOrderByAggregateInput
    _sum?: registrorichiedenteSumOrderByAggregateInput
  }

  export type registrorichiedenteScalarWhereWithAggregatesInput = {
    AND?: Enumerable<registrorichiedenteScalarWhereWithAggregatesInput>
    OR?: Enumerable<registrorichiedenteScalarWhereWithAggregatesInput>
    NOT?: Enumerable<registrorichiedenteScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    noteSegnalatore?: StringNullableWithAggregatesFilter | string | null
    dataCreazione?: StringNullableWithAggregatesFilter | string | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    dataRichiesta?: StringNullableWithAggregatesFilter | string | null
    localizzazioneNote?: StringNullableWithAggregatesFilter | string | null
    descrizioneAnomalia?: StringNullableWithAggregatesFilter | string | null
    idUtente?: IntNullableWithAggregatesFilter | number | null
    idSegnalazione?: IntNullableWithAggregatesFilter | number | null
    idSegnalatore?: IntNullableWithAggregatesFilter | number | null
    fonteSegnalazione?: IntNullableWithAggregatesFilter | number | null
    idSegnalazioneGetico?: IntNullableWithAggregatesFilter | number | null
    del?: StringNullableWithAggregatesFilter | string | null
  }

  export type segnalatoreWhereInput = {
    AND?: Enumerable<segnalatoreWhereInput>
    OR?: Enumerable<segnalatoreWhereInput>
    NOT?: Enumerable<segnalatoreWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    tipoSegnalatore?: IntNullableFilter | number | null
    nomeSegnalatore?: StringNullableFilter | string | null
    cognomeSegnalatore?: StringNullableFilter | string | null
    telefonoSegnalatore?: StringNullableFilter | string | null
    emailSegnalatore?: StringNullableFilter | string | null
    cellulareSegnalatore?: StringNullableFilter | string | null
    pecSegnalatore?: StringNullableFilter | string | null
    registrorichiedente?: RegistrorichiedenteListRelationFilter
    segnalazione?: SegnalazioneListRelationFilter
    segnalazionestorico?: SegnalazionestoricoListRelationFilter
  }

  export type segnalatoreOrderByWithRelationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    tipoSegnalatore?: SortOrder
    nomeSegnalatore?: SortOrder
    cognomeSegnalatore?: SortOrder
    telefonoSegnalatore?: SortOrder
    emailSegnalatore?: SortOrder
    cellulareSegnalatore?: SortOrder
    pecSegnalatore?: SortOrder
    registrorichiedente?: registrorichiedenteOrderByRelationAggregateInput
    segnalazione?: segnalazioneOrderByRelationAggregateInput
    segnalazionestorico?: segnalazionestoricoOrderByRelationAggregateInput
  }

  export type segnalatoreWhereUniqueInput = {
    id?: number
  }

  export type segnalatoreOrderByWithAggregationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    tipoSegnalatore?: SortOrder
    nomeSegnalatore?: SortOrder
    cognomeSegnalatore?: SortOrder
    telefonoSegnalatore?: SortOrder
    emailSegnalatore?: SortOrder
    cellulareSegnalatore?: SortOrder
    pecSegnalatore?: SortOrder
    _count?: segnalatoreCountOrderByAggregateInput
    _avg?: segnalatoreAvgOrderByAggregateInput
    _max?: segnalatoreMaxOrderByAggregateInput
    _min?: segnalatoreMinOrderByAggregateInput
    _sum?: segnalatoreSumOrderByAggregateInput
  }

  export type segnalatoreScalarWhereWithAggregatesInput = {
    AND?: Enumerable<segnalatoreScalarWhereWithAggregatesInput>
    OR?: Enumerable<segnalatoreScalarWhereWithAggregatesInput>
    NOT?: Enumerable<segnalatoreScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    tipoSegnalatore?: IntNullableWithAggregatesFilter | number | null
    nomeSegnalatore?: StringNullableWithAggregatesFilter | string | null
    cognomeSegnalatore?: StringNullableWithAggregatesFilter | string | null
    telefonoSegnalatore?: StringNullableWithAggregatesFilter | string | null
    emailSegnalatore?: StringNullableWithAggregatesFilter | string | null
    cellulareSegnalatore?: StringNullableWithAggregatesFilter | string | null
    pecSegnalatore?: StringNullableWithAggregatesFilter | string | null
  }

  export type segnalazioneWhereInput = {
    AND?: Enumerable<segnalazioneWhereInput>
    OR?: Enumerable<segnalazioneWhereInput>
    NOT?: Enumerable<segnalazioneWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    noteSegnalatore?: StringNullableFilter | string | null
    segnalatori?: IntNullableListFilter
    dataCreazione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataRichiesta?: StringNullableFilter | string | null
    localizzazioneDichiarata?: StringNullableFilter | string | null
    localizzazioneDichiarataCivico?: StringNullableFilter | string | null
    localizzazioneNote?: StringNullableFilter | string | null
    descrizioneAnomalia?: StringNullableFilter | string | null
    commentoAnomalia?: StringNullableFilter | string | null
    idEvento?: IntNullableFilter | number | null
    idPratica?: IntNullableFilter | number | null
    dataModificaStato?: StringNullableFilter | string | null
    stato?: StringNullableFilter | string | null
    notaStato?: StringNullableFilter | string | null
    idUtente?: IntNullableFilter | number | null
    idUtenteStato?: IntNullableFilter | number | null
    idSegnalatore?: IntNullableFilter | number | null
    fonteSegnalazione?: IntNullableFilter | number | null
    categoriaAnomalia?: IntNullableFilter | number | null
    dettaglioAnomalia?: IntNullableFilter | number | null
    severitaEvento?: IntNullableFilter | number | null
    tipoEvento?: IntNullableFilter | number | null
    idTecnico?: IntNullableFilter | number | null
    localizzazioneDichiarataQuartiere?: StringNullableFilter | string | null
    idLavoroAssociato?: StringNullableFilter | string | null
    dataChiusura?: StringNullableFilter | string | null
    statoCorrenteSegnalazione?: StringNullableFilter | string | null
    del?: StringNullableFilter | string | null
    idSegnalazioneGetico?: IntNullableFilter | number | null
    delOggettiCatasto?: StringNullableFilter | string | null
    sottoservizi?: StringNullableFilter | string | null
    sinistri?: StringNullableFilter | string | null
    richiestaSopralluogo?: StringNullableFilter | string | null
    numeroProvvedimento?: StringNullableFilter | string | null
    idTipoProvvedimento?: IntNullableFilter | number | null
    categoriaanomalia?: XOR<CategoriaanomaliaRelationFilter, categoriaanomaliaWhereInput> | null
    sottocategoriaanomalia?: XOR<SottocategoriaanomaliaRelationFilter, sottocategoriaanomaliaWhereInput> | null
    fonti?: XOR<FontiRelationFilter, fontiWhereInput> | null
    segnalatore?: XOR<SegnalatoreRelationFilter, segnalatoreWhereInput> | null
    segnalazione_getico?: XOR<Segnalazione_geticoRelationFilter, segnalazione_geticoWhereInput> | null
    tecnici?: XOR<TecniciRelationFilter, tecniciWhereInput> | null
    tipoprovvedimento?: XOR<TipoprovvedimentoRelationFilter, tipoprovvedimentoWhereInput> | null
    utenti_segnalazione_idUtenteStatoToutenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
    utenti_segnalazione_idUtenteToutenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
    tiposeverita?: XOR<TiposeveritaRelationFilter, tiposeveritaWhereInput> | null
    tipoevento?: XOR<TipoeventoRelationFilter, tipoeventoWhereInput> | null
    segnalazionestatostorico?: SegnalazionestatostoricoListRelationFilter
  }

  export type segnalazioneOrderByWithRelationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    noteSegnalatore?: SortOrder
    segnalatori?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneDichiarata?: SortOrder
    localizzazioneDichiarataCivico?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    commentoAnomalia?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idTecnico?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    idLavoroAssociato?: SortOrder
    dataChiusura?: SortOrder
    statoCorrenteSegnalazione?: SortOrder
    del?: SortOrder
    idSegnalazioneGetico?: SortOrder
    delOggettiCatasto?: SortOrder
    sottoservizi?: SortOrder
    sinistri?: SortOrder
    richiestaSopralluogo?: SortOrder
    numeroProvvedimento?: SortOrder
    idTipoProvvedimento?: SortOrder
    categoriaanomalia?: categoriaanomaliaOrderByWithRelationInput
    sottocategoriaanomalia?: sottocategoriaanomaliaOrderByWithRelationInput
    fonti?: fontiOrderByWithRelationInput
    segnalatore?: segnalatoreOrderByWithRelationInput
    segnalazione_getico?: segnalazione_geticoOrderByWithRelationInput
    tecnici?: tecniciOrderByWithRelationInput
    tipoprovvedimento?: tipoprovvedimentoOrderByWithRelationInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiOrderByWithRelationInput
    utenti_segnalazione_idUtenteToutenti?: utentiOrderByWithRelationInput
    tiposeverita?: tiposeveritaOrderByWithRelationInput
    tipoevento?: tipoeventoOrderByWithRelationInput
    segnalazionestatostorico?: segnalazionestatostoricoOrderByRelationAggregateInput
  }

  export type segnalazioneWhereUniqueInput = {
    id?: number
  }

  export type segnalazioneOrderByWithAggregationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    noteSegnalatore?: SortOrder
    segnalatori?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneDichiarata?: SortOrder
    localizzazioneDichiarataCivico?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    commentoAnomalia?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idTecnico?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    idLavoroAssociato?: SortOrder
    dataChiusura?: SortOrder
    statoCorrenteSegnalazione?: SortOrder
    del?: SortOrder
    idSegnalazioneGetico?: SortOrder
    delOggettiCatasto?: SortOrder
    sottoservizi?: SortOrder
    sinistri?: SortOrder
    richiestaSopralluogo?: SortOrder
    numeroProvvedimento?: SortOrder
    idTipoProvvedimento?: SortOrder
    _count?: segnalazioneCountOrderByAggregateInput
    _avg?: segnalazioneAvgOrderByAggregateInput
    _max?: segnalazioneMaxOrderByAggregateInput
    _min?: segnalazioneMinOrderByAggregateInput
    _sum?: segnalazioneSumOrderByAggregateInput
  }

  export type segnalazioneScalarWhereWithAggregatesInput = {
    AND?: Enumerable<segnalazioneScalarWhereWithAggregatesInput>
    OR?: Enumerable<segnalazioneScalarWhereWithAggregatesInput>
    NOT?: Enumerable<segnalazioneScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    noteSegnalatore?: StringNullableWithAggregatesFilter | string | null
    segnalatori?: IntNullableListFilter
    dataCreazione?: StringNullableWithAggregatesFilter | string | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    dataRichiesta?: StringNullableWithAggregatesFilter | string | null
    localizzazioneDichiarata?: StringNullableWithAggregatesFilter | string | null
    localizzazioneDichiarataCivico?: StringNullableWithAggregatesFilter | string | null
    localizzazioneNote?: StringNullableWithAggregatesFilter | string | null
    descrizioneAnomalia?: StringNullableWithAggregatesFilter | string | null
    commentoAnomalia?: StringNullableWithAggregatesFilter | string | null
    idEvento?: IntNullableWithAggregatesFilter | number | null
    idPratica?: IntNullableWithAggregatesFilter | number | null
    dataModificaStato?: StringNullableWithAggregatesFilter | string | null
    stato?: StringNullableWithAggregatesFilter | string | null
    notaStato?: StringNullableWithAggregatesFilter | string | null
    idUtente?: IntNullableWithAggregatesFilter | number | null
    idUtenteStato?: IntNullableWithAggregatesFilter | number | null
    idSegnalatore?: IntNullableWithAggregatesFilter | number | null
    fonteSegnalazione?: IntNullableWithAggregatesFilter | number | null
    categoriaAnomalia?: IntNullableWithAggregatesFilter | number | null
    dettaglioAnomalia?: IntNullableWithAggregatesFilter | number | null
    severitaEvento?: IntNullableWithAggregatesFilter | number | null
    tipoEvento?: IntNullableWithAggregatesFilter | number | null
    idTecnico?: IntNullableWithAggregatesFilter | number | null
    localizzazioneDichiarataQuartiere?: StringNullableWithAggregatesFilter | string | null
    idLavoroAssociato?: StringNullableWithAggregatesFilter | string | null
    dataChiusura?: StringNullableWithAggregatesFilter | string | null
    statoCorrenteSegnalazione?: StringNullableWithAggregatesFilter | string | null
    del?: StringNullableWithAggregatesFilter | string | null
    idSegnalazioneGetico?: IntNullableWithAggregatesFilter | number | null
    delOggettiCatasto?: StringNullableWithAggregatesFilter | string | null
    sottoservizi?: StringNullableWithAggregatesFilter | string | null
    sinistri?: StringNullableWithAggregatesFilter | string | null
    richiestaSopralluogo?: StringNullableWithAggregatesFilter | string | null
    numeroProvvedimento?: StringNullableWithAggregatesFilter | string | null
    idTipoProvvedimento?: IntNullableWithAggregatesFilter | number | null
  }

  export type segnalazione_geticoWhereInput = {
    AND?: Enumerable<segnalazione_geticoWhereInput>
    OR?: Enumerable<segnalazione_geticoWhereInput>
    NOT?: Enumerable<segnalazione_geticoWhereInput>
    id?: IntFilter | number
    id_ticket?: StringNullableFilter | string | null
    segnalante_nome?: StringNullableFilter | string | null
    segnalante_cognome?: StringNullableFilter | string | null
    segnalante_email?: StringNullableFilter | string | null
    segnalante_telefono?: StringNullableFilter | string | null
    luogo_indirizzo?: StringNullableFilter | string | null
    luogo_civico?: StringNullableFilter | string | null
    luogo_ubicazione?: StringNullableFilter | string | null
    descrizione?: StringNullableFilter | string | null
    tipologia?: StringNullableFilter | string | null
    flg_stato?: StringNullableFilter | string | null
    luogo_quartiere?: StringNullableFilter | string | null
    dataRichiesta?: StringNullableFilter | string | null
    dataInoltro?: StringNullableFilter | string | null
    ufficioProvenienza?: StringNullableFilter | string | null
    luogo_civico2?: StringNullableFilter | string | null
    luogo_indirizzo2?: StringNullableFilter | string | null
    ufficio_inoltro?: StringNullableFilter | string | null
    json_uffici?: StringNullableFilter | string | null
    note_esito?: StringNullableFilter | string | null
    sopralluogo?: StringNullableFilter | string | null
    sopralluogo_note?: StringNullableFilter | string | null
    sopralluogo_effettuato?: StringNullableFilter | string | null
    sopralluogo_importato?: StringNullableFilter | string | null
    sopralluogo_catasto_json?: StringNullableFilter | string | null
    registrorichiedente?: RegistrorichiedenteListRelationFilter
    segnalazione?: SegnalazioneListRelationFilter
    segnalazionestorico?: SegnalazionestoricoListRelationFilter
  }

  export type segnalazione_geticoOrderByWithRelationInput = {
    id?: SortOrder
    id_ticket?: SortOrder
    segnalante_nome?: SortOrder
    segnalante_cognome?: SortOrder
    segnalante_email?: SortOrder
    segnalante_telefono?: SortOrder
    luogo_indirizzo?: SortOrder
    luogo_civico?: SortOrder
    luogo_ubicazione?: SortOrder
    descrizione?: SortOrder
    tipologia?: SortOrder
    flg_stato?: SortOrder
    luogo_quartiere?: SortOrder
    dataRichiesta?: SortOrder
    dataInoltro?: SortOrder
    ufficioProvenienza?: SortOrder
    luogo_civico2?: SortOrder
    luogo_indirizzo2?: SortOrder
    ufficio_inoltro?: SortOrder
    json_uffici?: SortOrder
    note_esito?: SortOrder
    sopralluogo?: SortOrder
    sopralluogo_note?: SortOrder
    sopralluogo_effettuato?: SortOrder
    sopralluogo_importato?: SortOrder
    sopralluogo_catasto_json?: SortOrder
    registrorichiedente?: registrorichiedenteOrderByRelationAggregateInput
    segnalazione?: segnalazioneOrderByRelationAggregateInput
    segnalazionestorico?: segnalazionestoricoOrderByRelationAggregateInput
  }

  export type segnalazione_geticoWhereUniqueInput = {
    id?: number
  }

  export type segnalazione_geticoOrderByWithAggregationInput = {
    id?: SortOrder
    id_ticket?: SortOrder
    segnalante_nome?: SortOrder
    segnalante_cognome?: SortOrder
    segnalante_email?: SortOrder
    segnalante_telefono?: SortOrder
    luogo_indirizzo?: SortOrder
    luogo_civico?: SortOrder
    luogo_ubicazione?: SortOrder
    descrizione?: SortOrder
    tipologia?: SortOrder
    flg_stato?: SortOrder
    luogo_quartiere?: SortOrder
    dataRichiesta?: SortOrder
    dataInoltro?: SortOrder
    ufficioProvenienza?: SortOrder
    luogo_civico2?: SortOrder
    luogo_indirizzo2?: SortOrder
    ufficio_inoltro?: SortOrder
    json_uffici?: SortOrder
    note_esito?: SortOrder
    sopralluogo?: SortOrder
    sopralluogo_note?: SortOrder
    sopralluogo_effettuato?: SortOrder
    sopralluogo_importato?: SortOrder
    sopralluogo_catasto_json?: SortOrder
    _count?: segnalazione_geticoCountOrderByAggregateInput
    _avg?: segnalazione_geticoAvgOrderByAggregateInput
    _max?: segnalazione_geticoMaxOrderByAggregateInput
    _min?: segnalazione_geticoMinOrderByAggregateInput
    _sum?: segnalazione_geticoSumOrderByAggregateInput
  }

  export type segnalazione_geticoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<segnalazione_geticoScalarWhereWithAggregatesInput>
    OR?: Enumerable<segnalazione_geticoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<segnalazione_geticoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    id_ticket?: StringNullableWithAggregatesFilter | string | null
    segnalante_nome?: StringNullableWithAggregatesFilter | string | null
    segnalante_cognome?: StringNullableWithAggregatesFilter | string | null
    segnalante_email?: StringNullableWithAggregatesFilter | string | null
    segnalante_telefono?: StringNullableWithAggregatesFilter | string | null
    luogo_indirizzo?: StringNullableWithAggregatesFilter | string | null
    luogo_civico?: StringNullableWithAggregatesFilter | string | null
    luogo_ubicazione?: StringNullableWithAggregatesFilter | string | null
    descrizione?: StringNullableWithAggregatesFilter | string | null
    tipologia?: StringNullableWithAggregatesFilter | string | null
    flg_stato?: StringNullableWithAggregatesFilter | string | null
    luogo_quartiere?: StringNullableWithAggregatesFilter | string | null
    dataRichiesta?: StringNullableWithAggregatesFilter | string | null
    dataInoltro?: StringNullableWithAggregatesFilter | string | null
    ufficioProvenienza?: StringNullableWithAggregatesFilter | string | null
    luogo_civico2?: StringNullableWithAggregatesFilter | string | null
    luogo_indirizzo2?: StringNullableWithAggregatesFilter | string | null
    ufficio_inoltro?: StringNullableWithAggregatesFilter | string | null
    json_uffici?: StringNullableWithAggregatesFilter | string | null
    note_esito?: StringNullableWithAggregatesFilter | string | null
    sopralluogo?: StringNullableWithAggregatesFilter | string | null
    sopralluogo_note?: StringNullableWithAggregatesFilter | string | null
    sopralluogo_effettuato?: StringNullableWithAggregatesFilter | string | null
    sopralluogo_importato?: StringNullableWithAggregatesFilter | string | null
    sopralluogo_catasto_json?: StringNullableWithAggregatesFilter | string | null
  }

  export type segnalazionestatostoricoWhereInput = {
    AND?: Enumerable<segnalazionestatostoricoWhereInput>
    OR?: Enumerable<segnalazionestatostoricoWhereInput>
    NOT?: Enumerable<segnalazionestatostoricoWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    idSegnalazione?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
    stato?: StringNullableFilter | string | null
    notaStato?: StringNullableFilter | string | null
    segnalazione?: XOR<SegnalazioneRelationFilter, segnalazioneWhereInput> | null
    utenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
  }

  export type segnalazionestatostoricoOrderByWithRelationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    segnalazione?: segnalazioneOrderByWithRelationInput
    utenti?: utentiOrderByWithRelationInput
  }

  export type segnalazionestatostoricoWhereUniqueInput = {
    id?: number
  }

  export type segnalazionestatostoricoOrderByWithAggregationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    _count?: segnalazionestatostoricoCountOrderByAggregateInput
    _avg?: segnalazionestatostoricoAvgOrderByAggregateInput
    _max?: segnalazionestatostoricoMaxOrderByAggregateInput
    _min?: segnalazionestatostoricoMinOrderByAggregateInput
    _sum?: segnalazionestatostoricoSumOrderByAggregateInput
  }

  export type segnalazionestatostoricoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<segnalazionestatostoricoScalarWhereWithAggregatesInput>
    OR?: Enumerable<segnalazionestatostoricoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<segnalazionestatostoricoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    idSegnalazione?: IntNullableWithAggregatesFilter | number | null
    idUtente?: IntNullableWithAggregatesFilter | number | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    stato?: StringNullableWithAggregatesFilter | string | null
    notaStato?: StringNullableWithAggregatesFilter | string | null
  }

  export type segnalazionestoricoWhereInput = {
    AND?: Enumerable<segnalazionestoricoWhereInput>
    OR?: Enumerable<segnalazionestoricoWhereInput>
    NOT?: Enumerable<segnalazionestoricoWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    idSegnalazione?: IntNullableFilter | number | null
    noteSegnalatore?: StringNullableFilter | string | null
    segnalatori?: IntNullableListFilter
    dataCreazione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataRichiesta?: StringNullableFilter | string | null
    localizzazioneDichiarata?: StringNullableFilter | string | null
    localizzazioneNote?: StringNullableFilter | string | null
    descrizioneAnomalia?: StringNullableFilter | string | null
    commentoAnomalia?: StringNullableFilter | string | null
    idEvento?: IntNullableFilter | number | null
    idPratica?: IntNullableFilter | number | null
    dataModificaStato?: StringNullableFilter | string | null
    stato?: StringNullableFilter | string | null
    notaStato?: StringNullableFilter | string | null
    flgCambioStato?: StringNullableFilter | string | null
    idUtente?: IntNullableFilter | number | null
    idUtenteStato?: IntNullableFilter | number | null
    idSegnalatore?: IntNullableFilter | number | null
    fonteSegnalazione?: IntNullableFilter | number | null
    categoriaAnomalia?: IntNullableFilter | number | null
    dettaglioAnomalia?: IntNullableFilter | number | null
    severitaEvento?: IntNullableFilter | number | null
    tipoEvento?: IntNullableFilter | number | null
    idLavoroAssociato?: StringNullableFilter | string | null
    statoCorrenteSegnalazione?: StringNullableFilter | string | null
    idSegnalazioneGetico?: IntNullableFilter | number | null
    sottoservizi?: StringNullableFilter | string | null
    sinistri?: StringNullableFilter | string | null
    richiestaSopralluogo?: StringNullableFilter | string | null
    delOggettiCatasto?: StringNullableFilter | string | null
    idTecnico?: IntNullableFilter | number | null
    numeroProvvedimento?: StringNullableFilter | string | null
    dataChiusura?: StringNullableFilter | string | null
    localizzazioneDichiarataQuartiere?: StringNullableFilter | string | null
    localizzazioneDichiarataCivico?: StringNullableFilter | string | null
    del?: StringNullableFilter | string | null
    idTipoProvvedimento?: IntNullableFilter | number | null
    categoriaanomalia?: XOR<CategoriaanomaliaRelationFilter, categoriaanomaliaWhereInput> | null
    sottocategoriaanomalia?: XOR<SottocategoriaanomaliaRelationFilter, sottocategoriaanomaliaWhereInput> | null
    fonti?: XOR<FontiRelationFilter, fontiWhereInput> | null
    segnalatore?: XOR<SegnalatoreRelationFilter, segnalatoreWhereInput> | null
    segnalazione_getico?: XOR<Segnalazione_geticoRelationFilter, segnalazione_geticoWhereInput> | null
    tecnici?: XOR<TecniciRelationFilter, tecniciWhereInput> | null
    tipoprovvedimento?: XOR<TipoprovvedimentoRelationFilter, tipoprovvedimentoWhereInput> | null
    utenti_segnalazionestorico_idUtenteStatoToutenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
    utenti_segnalazionestorico_idUtenteToutenti?: XOR<UtentiRelationFilter, utentiWhereInput> | null
    tiposeverita?: XOR<TiposeveritaRelationFilter, tiposeveritaWhereInput> | null
    tipoevento?: XOR<TipoeventoRelationFilter, tipoeventoWhereInput> | null
  }

  export type segnalazionestoricoOrderByWithRelationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    noteSegnalatore?: SortOrder
    segnalatori?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneDichiarata?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    commentoAnomalia?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    flgCambioStato?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idLavoroAssociato?: SortOrder
    statoCorrenteSegnalazione?: SortOrder
    idSegnalazioneGetico?: SortOrder
    sottoservizi?: SortOrder
    sinistri?: SortOrder
    richiestaSopralluogo?: SortOrder
    delOggettiCatasto?: SortOrder
    idTecnico?: SortOrder
    numeroProvvedimento?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarataCivico?: SortOrder
    del?: SortOrder
    idTipoProvvedimento?: SortOrder
    categoriaanomalia?: categoriaanomaliaOrderByWithRelationInput
    sottocategoriaanomalia?: sottocategoriaanomaliaOrderByWithRelationInput
    fonti?: fontiOrderByWithRelationInput
    segnalatore?: segnalatoreOrderByWithRelationInput
    segnalazione_getico?: segnalazione_geticoOrderByWithRelationInput
    tecnici?: tecniciOrderByWithRelationInput
    tipoprovvedimento?: tipoprovvedimentoOrderByWithRelationInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiOrderByWithRelationInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiOrderByWithRelationInput
    tiposeverita?: tiposeveritaOrderByWithRelationInput
    tipoevento?: tipoeventoOrderByWithRelationInput
  }

  export type segnalazionestoricoWhereUniqueInput = {
    id?: number
  }

  export type segnalazionestoricoOrderByWithAggregationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    noteSegnalatore?: SortOrder
    segnalatori?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneDichiarata?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    commentoAnomalia?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    flgCambioStato?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idLavoroAssociato?: SortOrder
    statoCorrenteSegnalazione?: SortOrder
    idSegnalazioneGetico?: SortOrder
    sottoservizi?: SortOrder
    sinistri?: SortOrder
    richiestaSopralluogo?: SortOrder
    delOggettiCatasto?: SortOrder
    idTecnico?: SortOrder
    numeroProvvedimento?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarataCivico?: SortOrder
    del?: SortOrder
    idTipoProvvedimento?: SortOrder
    _count?: segnalazionestoricoCountOrderByAggregateInput
    _avg?: segnalazionestoricoAvgOrderByAggregateInput
    _max?: segnalazionestoricoMaxOrderByAggregateInput
    _min?: segnalazionestoricoMinOrderByAggregateInput
    _sum?: segnalazionestoricoSumOrderByAggregateInput
  }

  export type segnalazionestoricoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<segnalazionestoricoScalarWhereWithAggregatesInput>
    OR?: Enumerable<segnalazionestoricoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<segnalazionestoricoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    idSegnalazione?: IntNullableWithAggregatesFilter | number | null
    noteSegnalatore?: StringNullableWithAggregatesFilter | string | null
    segnalatori?: IntNullableListFilter
    dataCreazione?: StringNullableWithAggregatesFilter | string | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    dataRichiesta?: StringNullableWithAggregatesFilter | string | null
    localizzazioneDichiarata?: StringNullableWithAggregatesFilter | string | null
    localizzazioneNote?: StringNullableWithAggregatesFilter | string | null
    descrizioneAnomalia?: StringNullableWithAggregatesFilter | string | null
    commentoAnomalia?: StringNullableWithAggregatesFilter | string | null
    idEvento?: IntNullableWithAggregatesFilter | number | null
    idPratica?: IntNullableWithAggregatesFilter | number | null
    dataModificaStato?: StringNullableWithAggregatesFilter | string | null
    stato?: StringNullableWithAggregatesFilter | string | null
    notaStato?: StringNullableWithAggregatesFilter | string | null
    flgCambioStato?: StringNullableWithAggregatesFilter | string | null
    idUtente?: IntNullableWithAggregatesFilter | number | null
    idUtenteStato?: IntNullableWithAggregatesFilter | number | null
    idSegnalatore?: IntNullableWithAggregatesFilter | number | null
    fonteSegnalazione?: IntNullableWithAggregatesFilter | number | null
    categoriaAnomalia?: IntNullableWithAggregatesFilter | number | null
    dettaglioAnomalia?: IntNullableWithAggregatesFilter | number | null
    severitaEvento?: IntNullableWithAggregatesFilter | number | null
    tipoEvento?: IntNullableWithAggregatesFilter | number | null
    idLavoroAssociato?: StringNullableWithAggregatesFilter | string | null
    statoCorrenteSegnalazione?: StringNullableWithAggregatesFilter | string | null
    idSegnalazioneGetico?: IntNullableWithAggregatesFilter | number | null
    sottoservizi?: StringNullableWithAggregatesFilter | string | null
    sinistri?: StringNullableWithAggregatesFilter | string | null
    richiestaSopralluogo?: StringNullableWithAggregatesFilter | string | null
    delOggettiCatasto?: StringNullableWithAggregatesFilter | string | null
    idTecnico?: IntNullableWithAggregatesFilter | number | null
    numeroProvvedimento?: StringNullableWithAggregatesFilter | string | null
    dataChiusura?: StringNullableWithAggregatesFilter | string | null
    localizzazioneDichiarataQuartiere?: StringNullableWithAggregatesFilter | string | null
    localizzazioneDichiarataCivico?: StringNullableWithAggregatesFilter | string | null
    del?: StringNullableWithAggregatesFilter | string | null
    idTipoProvvedimento?: IntNullableWithAggregatesFilter | number | null
  }

  export type sottocategoriaanomaliaWhereInput = {
    AND?: Enumerable<sottocategoriaanomaliaWhereInput>
    OR?: Enumerable<sottocategoriaanomaliaWhereInput>
    NOT?: Enumerable<sottocategoriaanomaliaWhereInput>
    id?: IntFilter | number
    value?: StringNullableFilter | string | null
    categoriaanomalia_sottocategoriaanomalia?: Categoriaanomalia_sottocategoriaanomaliaListRelationFilter
    segnalazione?: SegnalazioneListRelationFilter
    segnalazionestorico?: SegnalazionestoricoListRelationFilter
    sottocategoriaanomalia_sottocategorialavoro?: Sottocategoriaanomalia_sottocategorialavoroListRelationFilter
  }

  export type sottocategoriaanomaliaOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaOrderByRelationAggregateInput
    segnalazione?: segnalazioneOrderByRelationAggregateInput
    segnalazionestorico?: segnalazionestoricoOrderByRelationAggregateInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroOrderByRelationAggregateInput
  }

  export type sottocategoriaanomaliaWhereUniqueInput = {
    id?: number
  }

  export type sottocategoriaanomaliaOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    _count?: sottocategoriaanomaliaCountOrderByAggregateInput
    _avg?: sottocategoriaanomaliaAvgOrderByAggregateInput
    _max?: sottocategoriaanomaliaMaxOrderByAggregateInput
    _min?: sottocategoriaanomaliaMinOrderByAggregateInput
    _sum?: sottocategoriaanomaliaSumOrderByAggregateInput
  }

  export type sottocategoriaanomaliaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sottocategoriaanomaliaScalarWhereWithAggregatesInput>
    OR?: Enumerable<sottocategoriaanomaliaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sottocategoriaanomaliaScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    value?: StringNullableWithAggregatesFilter | string | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroWhereInput = {
    AND?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereInput>
    OR?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereInput>
    NOT?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereInput>
    id?: IntFilter | number
    id_categoria_anomalia?: IntNullableFilter | number | null
    id_sottocategoria_anomalia?: IntNullableFilter | number | null
    id_sottocategoria_lavoro?: IntNullableFilter | number | null
    categoriaanomalia?: XOR<CategoriaanomaliaRelationFilter, categoriaanomaliaWhereInput> | null
    sottocategoriaanomalia?: XOR<SottocategoriaanomaliaRelationFilter, sottocategoriaanomaliaWhereInput> | null
    sottocategorialavoro?: XOR<SottocategorialavoroRelationFilter, sottocategorialavoroWhereInput> | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroOrderByWithRelationInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
    categoriaanomalia?: categoriaanomaliaOrderByWithRelationInput
    sottocategoriaanomalia?: sottocategoriaanomaliaOrderByWithRelationInput
    sottocategorialavoro?: sottocategorialavoroOrderByWithRelationInput
  }

  export type sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput = {
    id?: number
  }

  export type sottocategoriaanomalia_sottocategorialavoroOrderByWithAggregationInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
    _count?: sottocategoriaanomalia_sottocategorialavoroCountOrderByAggregateInput
    _avg?: sottocategoriaanomalia_sottocategorialavoroAvgOrderByAggregateInput
    _max?: sottocategoriaanomalia_sottocategorialavoroMaxOrderByAggregateInput
    _min?: sottocategoriaanomalia_sottocategorialavoroMinOrderByAggregateInput
    _sum?: sottocategoriaanomalia_sottocategorialavoroSumOrderByAggregateInput
  }

  export type sottocategoriaanomalia_sottocategorialavoroScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sottocategoriaanomalia_sottocategorialavoroScalarWhereWithAggregatesInput>
    OR?: Enumerable<sottocategoriaanomalia_sottocategorialavoroScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sottocategoriaanomalia_sottocategorialavoroScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    id_categoria_anomalia?: IntNullableWithAggregatesFilter | number | null
    id_sottocategoria_anomalia?: IntNullableWithAggregatesFilter | number | null
    id_sottocategoria_lavoro?: IntNullableWithAggregatesFilter | number | null
  }

  export type sottocategorialavoroWhereInput = {
    AND?: Enumerable<sottocategorialavoroWhereInput>
    OR?: Enumerable<sottocategorialavoroWhereInput>
    NOT?: Enumerable<sottocategorialavoroWhereInput>
    id?: IntFilter | number
    value?: StringNullableFilter | string | null
    categoriaanomalia_sottocategorialavoro?: Categoriaanomalia_sottocategorialavoroListRelationFilter
    lavoro?: LavoroListRelationFilter
    lavorostorico?: LavorostoricoListRelationFilter
    sottocategoriaanomalia_sottocategorialavoro?: Sottocategoriaanomalia_sottocategorialavoroListRelationFilter
  }

  export type sottocategorialavoroOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroOrderByRelationAggregateInput
    lavoro?: lavoroOrderByRelationAggregateInput
    lavorostorico?: lavorostoricoOrderByRelationAggregateInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroOrderByRelationAggregateInput
  }

  export type sottocategorialavoroWhereUniqueInput = {
    id?: number
  }

  export type sottocategorialavoroOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    _count?: sottocategorialavoroCountOrderByAggregateInput
    _avg?: sottocategorialavoroAvgOrderByAggregateInput
    _max?: sottocategorialavoroMaxOrderByAggregateInput
    _min?: sottocategorialavoroMinOrderByAggregateInput
    _sum?: sottocategorialavoroSumOrderByAggregateInput
  }

  export type sottocategorialavoroScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sottocategorialavoroScalarWhereWithAggregatesInput>
    OR?: Enumerable<sottocategorialavoroScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sottocategorialavoroScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    value?: StringNullableWithAggregatesFilter | string | null
  }

  export type statoWhereInput = {
    AND?: Enumerable<statoWhereInput>
    OR?: Enumerable<statoWhereInput>
    NOT?: Enumerable<statoWhereInput>
    id?: IntFilter | number
    idEvento?: IntNullableFilter | number | null
    classeCorrente?: IntNullableFilter | number | null
    statoCorrente?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    storiaStato?: IntNullableFilter | number | null
  }

  export type statoOrderByWithRelationInput = {
    id?: SortOrder
    idEvento?: SortOrder
    classeCorrente?: SortOrder
    statoCorrente?: SortOrder
    idUtente?: SortOrder
    storiaStato?: SortOrder
  }

  export type statoWhereUniqueInput = {
    id?: number
  }

  export type statoOrderByWithAggregationInput = {
    id?: SortOrder
    idEvento?: SortOrder
    classeCorrente?: SortOrder
    statoCorrente?: SortOrder
    idUtente?: SortOrder
    storiaStato?: SortOrder
    _count?: statoCountOrderByAggregateInput
    _avg?: statoAvgOrderByAggregateInput
    _max?: statoMaxOrderByAggregateInput
    _min?: statoMinOrderByAggregateInput
    _sum?: statoSumOrderByAggregateInput
  }

  export type statoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<statoScalarWhereWithAggregatesInput>
    OR?: Enumerable<statoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<statoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idEvento?: IntNullableWithAggregatesFilter | number | null
    classeCorrente?: IntNullableWithAggregatesFilter | number | null
    statoCorrente?: IntNullableWithAggregatesFilter | number | null
    idUtente?: IntNullableWithAggregatesFilter | number | null
    storiaStato?: IntNullableWithAggregatesFilter | number | null
  }

  export type storiastatoWhereInput = {
    AND?: Enumerable<storiastatoWhereInput>
    OR?: Enumerable<storiastatoWhereInput>
    NOT?: Enumerable<storiastatoWhereInput>
    id?: IntFilter | number
    statoStorico?: IntNullableFilter | number | null
    stato?: IntNullableFilter | number | null
    dataStato?: StringNullableFilter | string | null
  }

  export type storiastatoOrderByWithRelationInput = {
    id?: SortOrder
    statoStorico?: SortOrder
    stato?: SortOrder
    dataStato?: SortOrder
  }

  export type storiastatoWhereUniqueInput = {
    id?: number
  }

  export type storiastatoOrderByWithAggregationInput = {
    id?: SortOrder
    statoStorico?: SortOrder
    stato?: SortOrder
    dataStato?: SortOrder
    _count?: storiastatoCountOrderByAggregateInput
    _avg?: storiastatoAvgOrderByAggregateInput
    _max?: storiastatoMaxOrderByAggregateInput
    _min?: storiastatoMinOrderByAggregateInput
    _sum?: storiastatoSumOrderByAggregateInput
  }

  export type storiastatoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<storiastatoScalarWhereWithAggregatesInput>
    OR?: Enumerable<storiastatoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<storiastatoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    statoStorico?: IntNullableWithAggregatesFilter | number | null
    stato?: IntNullableWithAggregatesFilter | number | null
    dataStato?: StringNullableWithAggregatesFilter | string | null
  }

  export type tecniciWhereInput = {
    AND?: Enumerable<tecniciWhereInput>
    OR?: Enumerable<tecniciWhereInput>
    NOT?: Enumerable<tecniciWhereInput>
    id?: IntFilter | number
    value?: StringNullableFilter | string | null
    segnalazione?: SegnalazioneListRelationFilter
    segnalazionestorico?: SegnalazionestoricoListRelationFilter
  }

  export type tecniciOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    segnalazione?: segnalazioneOrderByRelationAggregateInput
    segnalazionestorico?: segnalazionestoricoOrderByRelationAggregateInput
  }

  export type tecniciWhereUniqueInput = {
    id?: number
  }

  export type tecniciOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    _count?: tecniciCountOrderByAggregateInput
    _avg?: tecniciAvgOrderByAggregateInput
    _max?: tecniciMaxOrderByAggregateInput
    _min?: tecniciMinOrderByAggregateInput
    _sum?: tecniciSumOrderByAggregateInput
  }

  export type tecniciScalarWhereWithAggregatesInput = {
    AND?: Enumerable<tecniciScalarWhereWithAggregatesInput>
    OR?: Enumerable<tecniciScalarWhereWithAggregatesInput>
    NOT?: Enumerable<tecniciScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    value?: StringNullableWithAggregatesFilter | string | null
  }

  export type tipoeventoWhereInput = {
    AND?: Enumerable<tipoeventoWhereInput>
    OR?: Enumerable<tipoeventoWhereInput>
    NOT?: Enumerable<tipoeventoWhereInput>
    id?: IntFilter | number
    value?: StringNullableFilter | string | null
    segnalazione?: SegnalazioneListRelationFilter
    segnalazionestorico?: SegnalazionestoricoListRelationFilter
  }

  export type tipoeventoOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    segnalazione?: segnalazioneOrderByRelationAggregateInput
    segnalazionestorico?: segnalazionestoricoOrderByRelationAggregateInput
  }

  export type tipoeventoWhereUniqueInput = {
    id?: number
  }

  export type tipoeventoOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    _count?: tipoeventoCountOrderByAggregateInput
    _avg?: tipoeventoAvgOrderByAggregateInput
    _max?: tipoeventoMaxOrderByAggregateInput
    _min?: tipoeventoMinOrderByAggregateInput
    _sum?: tipoeventoSumOrderByAggregateInput
  }

  export type tipoeventoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<tipoeventoScalarWhereWithAggregatesInput>
    OR?: Enumerable<tipoeventoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<tipoeventoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    value?: StringNullableWithAggregatesFilter | string | null
  }

  export type tipologiaWhereInput = {
    AND?: Enumerable<tipologiaWhereInput>
    OR?: Enumerable<tipologiaWhereInput>
    NOT?: Enumerable<tipologiaWhereInput>
    id?: IntFilter | number
    proprieta?: StringNullableFilter | string | null
  }

  export type tipologiaOrderByWithRelationInput = {
    id?: SortOrder
    proprieta?: SortOrder
  }

  export type tipologiaWhereUniqueInput = {
    id?: number
  }

  export type tipologiaOrderByWithAggregationInput = {
    id?: SortOrder
    proprieta?: SortOrder
    _count?: tipologiaCountOrderByAggregateInput
    _avg?: tipologiaAvgOrderByAggregateInput
    _max?: tipologiaMaxOrderByAggregateInput
    _min?: tipologiaMinOrderByAggregateInput
    _sum?: tipologiaSumOrderByAggregateInput
  }

  export type tipologiaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<tipologiaScalarWhereWithAggregatesInput>
    OR?: Enumerable<tipologiaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<tipologiaScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    proprieta?: StringNullableWithAggregatesFilter | string | null
  }

  export type tipooggettoWhereInput = {
    AND?: Enumerable<tipooggettoWhereInput>
    OR?: Enumerable<tipooggettoWhereInput>
    NOT?: Enumerable<tipooggettoWhereInput>
    id?: IntFilter | number
    value?: StringNullableFilter | string | null
    tabellaNome?: StringNullableFilter | string | null
  }

  export type tipooggettoOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    tabellaNome?: SortOrder
  }

  export type tipooggettoWhereUniqueInput = {
    id?: number
  }

  export type tipooggettoOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    tabellaNome?: SortOrder
    _count?: tipooggettoCountOrderByAggregateInput
    _avg?: tipooggettoAvgOrderByAggregateInput
    _max?: tipooggettoMaxOrderByAggregateInput
    _min?: tipooggettoMinOrderByAggregateInput
    _sum?: tipooggettoSumOrderByAggregateInput
  }

  export type tipooggettoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<tipooggettoScalarWhereWithAggregatesInput>
    OR?: Enumerable<tipooggettoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<tipooggettoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    value?: StringNullableWithAggregatesFilter | string | null
    tabellaNome?: StringNullableWithAggregatesFilter | string | null
  }

  export type tipoprovvedimentoWhereInput = {
    AND?: Enumerable<tipoprovvedimentoWhereInput>
    OR?: Enumerable<tipoprovvedimentoWhereInput>
    NOT?: Enumerable<tipoprovvedimentoWhereInput>
    id?: IntFilter | number
    value?: StringNullableFilter | string | null
    segnalazione?: SegnalazioneListRelationFilter
    segnalazionestorico?: SegnalazionestoricoListRelationFilter
  }

  export type tipoprovvedimentoOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    segnalazione?: segnalazioneOrderByRelationAggregateInput
    segnalazionestorico?: segnalazionestoricoOrderByRelationAggregateInput
  }

  export type tipoprovvedimentoWhereUniqueInput = {
    id?: number
  }

  export type tipoprovvedimentoOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    _count?: tipoprovvedimentoCountOrderByAggregateInput
    _avg?: tipoprovvedimentoAvgOrderByAggregateInput
    _max?: tipoprovvedimentoMaxOrderByAggregateInput
    _min?: tipoprovvedimentoMinOrderByAggregateInput
    _sum?: tipoprovvedimentoSumOrderByAggregateInput
  }

  export type tipoprovvedimentoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<tipoprovvedimentoScalarWhereWithAggregatesInput>
    OR?: Enumerable<tipoprovvedimentoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<tipoprovvedimentoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    value?: StringNullableWithAggregatesFilter | string | null
  }

  export type tiposegnalatoreWhereInput = {
    AND?: Enumerable<tiposegnalatoreWhereInput>
    OR?: Enumerable<tiposegnalatoreWhereInput>
    NOT?: Enumerable<tiposegnalatoreWhereInput>
    id?: IntFilter | number
    value?: StringNullableFilter | string | null
  }

  export type tiposegnalatoreOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tiposegnalatoreWhereUniqueInput = {
    id?: number
  }

  export type tiposegnalatoreOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    _count?: tiposegnalatoreCountOrderByAggregateInput
    _avg?: tiposegnalatoreAvgOrderByAggregateInput
    _max?: tiposegnalatoreMaxOrderByAggregateInput
    _min?: tiposegnalatoreMinOrderByAggregateInput
    _sum?: tiposegnalatoreSumOrderByAggregateInput
  }

  export type tiposegnalatoreScalarWhereWithAggregatesInput = {
    AND?: Enumerable<tiposegnalatoreScalarWhereWithAggregatesInput>
    OR?: Enumerable<tiposegnalatoreScalarWhereWithAggregatesInput>
    NOT?: Enumerable<tiposegnalatoreScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    value?: StringNullableWithAggregatesFilter | string | null
  }

  export type tiposeveritaWhereInput = {
    AND?: Enumerable<tiposeveritaWhereInput>
    OR?: Enumerable<tiposeveritaWhereInput>
    NOT?: Enumerable<tiposeveritaWhereInput>
    id?: IntFilter | number
    value?: StringNullableFilter | string | null
    segnalazione?: SegnalazioneListRelationFilter
    segnalazionestorico?: SegnalazionestoricoListRelationFilter
  }

  export type tiposeveritaOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    segnalazione?: segnalazioneOrderByRelationAggregateInput
    segnalazionestorico?: segnalazionestoricoOrderByRelationAggregateInput
  }

  export type tiposeveritaWhereUniqueInput = {
    id?: number
  }

  export type tiposeveritaOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    _count?: tiposeveritaCountOrderByAggregateInput
    _avg?: tiposeveritaAvgOrderByAggregateInput
    _max?: tiposeveritaMaxOrderByAggregateInput
    _min?: tiposeveritaMinOrderByAggregateInput
    _sum?: tiposeveritaSumOrderByAggregateInput
  }

  export type tiposeveritaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<tiposeveritaScalarWhereWithAggregatesInput>
    OR?: Enumerable<tiposeveritaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<tiposeveritaScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    value?: StringNullableWithAggregatesFilter | string | null
  }

  export type utentiWhereInput = {
    AND?: Enumerable<utentiWhereInput>
    OR?: Enumerable<utentiWhereInput>
    NOT?: Enumerable<utentiWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    nome?: StringNullableFilter | string | null
    cognome?: StringNullableFilter | string | null
    username?: StringNullableFilter | string | null
    password?: StringNullableFilter | string | null
    email?: StringFilter | string
    status?: StringNullableFilter | string | null
    permessi?: StringNullableFilter | string | null
    dataCreazione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataSospensione?: StringNullableFilter | string | null
    idGruppo?: IntNullableFilter | number | null
    del?: StringNullableFilter | string | null
    scadenzaPassword?: StringNullableFilter | string | null
    roles?: StringNullableFilter | string | null
    catastoanomalia?: CatastoanomaliaListRelationFilter
    catastolinker?: CatastolinkerListRelationFilter
    lavoro_lavoro_idUtenteStatoToutenti?: LavoroListRelationFilter
    lavoro_lavoro_idUtenteToutenti?: LavoroListRelationFilter
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: LavorostoricoListRelationFilter
    lavorostorico_lavorostorico_idUtenteToutenti?: LavorostoricoListRelationFilter
    livelliservizio?: LivelliservizioListRelationFilter
    oggettocivetta?: OggettocivettaListRelationFilter
    pratica?: PraticaListRelationFilter
    praticastorico?: PraticastoricoListRelationFilter
    registrorichiedente?: RegistrorichiedenteListRelationFilter
    segnalazione_segnalazione_idUtenteStatoToutenti?: SegnalazioneListRelationFilter
    segnalazione_segnalazione_idUtenteToutenti?: SegnalazioneListRelationFilter
    segnalazionestatostorico?: SegnalazionestatostoricoListRelationFilter
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: SegnalazionestoricoListRelationFilter
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: SegnalazionestoricoListRelationFilter
    gruppo?: XOR<GruppoRelationFilter, gruppoWhereInput> | null
  }

  export type utentiOrderByWithRelationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    nome?: SortOrder
    cognome?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    status?: SortOrder
    permessi?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataSospensione?: SortOrder
    idGruppo?: SortOrder
    del?: SortOrder
    scadenzaPassword?: SortOrder
    roles?: SortOrder
    catastoanomalia?: catastoanomaliaOrderByRelationAggregateInput
    catastolinker?: catastolinkerOrderByRelationAggregateInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroOrderByRelationAggregateInput
    lavoro_lavoro_idUtenteToutenti?: lavoroOrderByRelationAggregateInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoOrderByRelationAggregateInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoOrderByRelationAggregateInput
    livelliservizio?: livelliservizioOrderByRelationAggregateInput
    oggettocivetta?: oggettocivettaOrderByRelationAggregateInput
    pratica?: praticaOrderByRelationAggregateInput
    praticastorico?: praticastoricoOrderByRelationAggregateInput
    registrorichiedente?: registrorichiedenteOrderByRelationAggregateInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneOrderByRelationAggregateInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneOrderByRelationAggregateInput
    segnalazionestatostorico?: segnalazionestatostoricoOrderByRelationAggregateInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoOrderByRelationAggregateInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoOrderByRelationAggregateInput
    gruppo?: gruppoOrderByWithRelationInput
  }

  export type utentiWhereUniqueInput = {
    id?: number
  }

  export type utentiOrderByWithAggregationInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    nome?: SortOrder
    cognome?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    status?: SortOrder
    permessi?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataSospensione?: SortOrder
    idGruppo?: SortOrder
    del?: SortOrder
    scadenzaPassword?: SortOrder
    roles?: SortOrder
    _count?: utentiCountOrderByAggregateInput
    _avg?: utentiAvgOrderByAggregateInput
    _max?: utentiMaxOrderByAggregateInput
    _min?: utentiMinOrderByAggregateInput
    _sum?: utentiSumOrderByAggregateInput
  }

  export type utentiScalarWhereWithAggregatesInput = {
    AND?: Enumerable<utentiScalarWhereWithAggregatesInput>
    OR?: Enumerable<utentiScalarWhereWithAggregatesInput>
    NOT?: Enumerable<utentiScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    idAppalto?: IntNullableWithAggregatesFilter | number | null
    nome?: StringNullableWithAggregatesFilter | string | null
    cognome?: StringNullableWithAggregatesFilter | string | null
    username?: StringNullableWithAggregatesFilter | string | null
    password?: StringNullableWithAggregatesFilter | string | null
    email?: StringWithAggregatesFilter | string
    status?: StringNullableWithAggregatesFilter | string | null
    permessi?: StringNullableWithAggregatesFilter | string | null
    dataCreazione?: StringNullableWithAggregatesFilter | string | null
    dataModifica?: StringNullableWithAggregatesFilter | string | null
    dataSospensione?: StringNullableWithAggregatesFilter | string | null
    idGruppo?: IntNullableWithAggregatesFilter | number | null
    del?: StringNullableWithAggregatesFilter | string | null
    scadenzaPassword?: StringNullableWithAggregatesFilter | string | null
    roles?: StringNullableWithAggregatesFilter | string | null
  }

  export type allegatoCreateInput = {
    tabella_appartenenza?: string | null
    id_tabella_appartenenza?: number | null
    descrizione?: string | null
    path?: string | null
    filename_disk?: string | null
    filename_originale?: string | null
    id_operatore_salvataggio?: number | null
    dt_salvataggio?: Date | string | null
    del?: number | null
  }

  export type allegatoUncheckedCreateInput = {
    id?: number
    tabella_appartenenza?: string | null
    id_tabella_appartenenza?: number | null
    descrizione?: string | null
    path?: string | null
    filename_disk?: string | null
    filename_originale?: string | null
    id_operatore_salvataggio?: number | null
    dt_salvataggio?: Date | string | null
    del?: number | null
  }

  export type allegatoUpdateInput = {
    tabella_appartenenza?: NullableStringFieldUpdateOperationsInput | string | null
    id_tabella_appartenenza?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    path?: NullableStringFieldUpdateOperationsInput | string | null
    filename_disk?: NullableStringFieldUpdateOperationsInput | string | null
    filename_originale?: NullableStringFieldUpdateOperationsInput | string | null
    id_operatore_salvataggio?: NullableIntFieldUpdateOperationsInput | number | null
    dt_salvataggio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    del?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type allegatoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tabella_appartenenza?: NullableStringFieldUpdateOperationsInput | string | null
    id_tabella_appartenenza?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    path?: NullableStringFieldUpdateOperationsInput | string | null
    filename_disk?: NullableStringFieldUpdateOperationsInput | string | null
    filename_originale?: NullableStringFieldUpdateOperationsInput | string | null
    id_operatore_salvataggio?: NullableIntFieldUpdateOperationsInput | number | null
    dt_salvataggio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    del?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type allegatoCreateManyInput = {
    id?: number
    tabella_appartenenza?: string | null
    id_tabella_appartenenza?: number | null
    descrizione?: string | null
    path?: string | null
    filename_disk?: string | null
    filename_originale?: string | null
    id_operatore_salvataggio?: number | null
    dt_salvataggio?: Date | string | null
    del?: number | null
  }

  export type allegatoUpdateManyMutationInput = {
    tabella_appartenenza?: NullableStringFieldUpdateOperationsInput | string | null
    id_tabella_appartenenza?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    path?: NullableStringFieldUpdateOperationsInput | string | null
    filename_disk?: NullableStringFieldUpdateOperationsInput | string | null
    filename_originale?: NullableStringFieldUpdateOperationsInput | string | null
    id_operatore_salvataggio?: NullableIntFieldUpdateOperationsInput | number | null
    dt_salvataggio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    del?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type allegatoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tabella_appartenenza?: NullableStringFieldUpdateOperationsInput | string | null
    id_tabella_appartenenza?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    path?: NullableStringFieldUpdateOperationsInput | string | null
    filename_disk?: NullableStringFieldUpdateOperationsInput | string | null
    filename_originale?: NullableStringFieldUpdateOperationsInput | string | null
    id_operatore_salvataggio?: NullableIntFieldUpdateOperationsInput | number | null
    dt_salvataggio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    del?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type appaltoCreateInput = {
    tipologia?: number | null
    dataModifica?: string | null
  }

  export type appaltoUncheckedCreateInput = {
    id?: number
    tipologia?: number | null
    dataModifica?: string | null
  }

  export type appaltoUpdateInput = {
    tipologia?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type appaltoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipologia?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type appaltoCreateManyInput = {
    id?: number
    tipologia?: number | null
    dataModifica?: string | null
  }

  export type appaltoUpdateManyMutationInput = {
    tipologia?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type appaltoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipologia?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type attrezzaturaCreateInput = {
    tipologiaAttrezzatura?: number | null
    descrizione?: string | null
    dataModifica?: string | null
  }

  export type attrezzaturaUncheckedCreateInput = {
    id?: number
    tipologiaAttrezzatura?: number | null
    descrizione?: string | null
    dataModifica?: string | null
  }

  export type attrezzaturaUpdateInput = {
    tipologiaAttrezzatura?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type attrezzaturaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipologiaAttrezzatura?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type attrezzaturaCreateManyInput = {
    id?: number
    tipologiaAttrezzatura?: number | null
    descrizione?: string | null
    dataModifica?: string | null
  }

  export type attrezzaturaUpdateManyMutationInput = {
    tipologiaAttrezzatura?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type attrezzaturaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipologiaAttrezzatura?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catasto_monitoraggioCreateInput = {
    tabellaCatasto?: string | null
    tabellaMonitoraggio?: string | null
    idElemento?: string | null
  }

  export type catasto_monitoraggioUncheckedCreateInput = {
    id?: number
    tabellaCatasto?: string | null
    tabellaMonitoraggio?: string | null
    idElemento?: string | null
  }

  export type catasto_monitoraggioUpdateInput = {
    tabellaCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaMonitoraggio?: NullableStringFieldUpdateOperationsInput | string | null
    idElemento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catasto_monitoraggioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tabellaCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaMonitoraggio?: NullableStringFieldUpdateOperationsInput | string | null
    idElemento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catasto_monitoraggioCreateManyInput = {
    id?: number
    tabellaCatasto?: string | null
    tabellaMonitoraggio?: string | null
    idElemento?: string | null
  }

  export type catasto_monitoraggioUpdateManyMutationInput = {
    tabellaCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaMonitoraggio?: NullableStringFieldUpdateOperationsInput | string | null
    idElemento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catasto_monitoraggioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tabellaCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaMonitoraggio?: NullableStringFieldUpdateOperationsInput | string | null
    idElemento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catastoanomaliaCreateInput = {
    idAppalto?: number | null
    dataModifica?: string | null
    adjacentLayer?: string | null
    adjacentLayerGeom?: string | null
    utenti?: utentiCreateNestedOneWithoutCatastoanomaliaInput
  }

  export type catastoanomaliaUncheckedCreateInput = {
    id?: number
    idUtente?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    adjacentLayer?: string | null
    adjacentLayerGeom?: string | null
  }

  export type catastoanomaliaUpdateInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayer?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayerGeom?: NullableStringFieldUpdateOperationsInput | string | null
    utenti?: utentiUpdateOneWithoutCatastoanomaliaNestedInput
  }

  export type catastoanomaliaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayer?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayerGeom?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catastoanomaliaCreateManyInput = {
    id?: number
    idUtente?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    adjacentLayer?: string | null
    adjacentLayerGeom?: string | null
  }

  export type catastoanomaliaUpdateManyMutationInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayer?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayerGeom?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catastoanomaliaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayer?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayerGeom?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catastolinkerCreateInput = {
    idCatasto?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    idSegnalazione?: number | null
    statoSegnalazione?: string | null
    statoLavoro?: string | null
    flg_catasto?: number | null
    geojson?: string | null
    lavoro?: lavoroCreateNestedOneWithoutCatastolinkerInput
    pratica?: praticaCreateNestedOneWithoutCatastolinkerInput
    utenti?: utentiCreateNestedOneWithoutCatastolinkerInput
  }

  export type catastolinkerUncheckedCreateInput = {
    id?: number
    idCatasto?: number | null
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    statoSegnalazione?: string | null
    statoLavoro?: string | null
    flg_catasto?: number | null
    idPratica?: number | null
    geojson?: string | null
  }

  export type catastolinkerUpdateInput = {
    idCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    statoSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    flg_catasto?: NullableIntFieldUpdateOperationsInput | number | null
    geojson?: NullableStringFieldUpdateOperationsInput | string | null
    lavoro?: lavoroUpdateOneWithoutCatastolinkerNestedInput
    pratica?: praticaUpdateOneWithoutCatastolinkerNestedInput
    utenti?: utentiUpdateOneWithoutCatastolinkerNestedInput
  }

  export type catastolinkerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    statoSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    flg_catasto?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    geojson?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catastolinkerCreateManyInput = {
    id?: number
    idCatasto?: number | null
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    statoSegnalazione?: string | null
    statoLavoro?: string | null
    flg_catasto?: number | null
    idPratica?: number | null
    geojson?: string | null
  }

  export type catastolinkerUpdateManyMutationInput = {
    idCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    statoSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    flg_catasto?: NullableIntFieldUpdateOperationsInput | number | null
    geojson?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catastolinkerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    statoSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    flg_catasto?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    geojson?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type categoriaanomaliaCreateInput = {
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutCategoriaanomaliaInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaUncheckedCreateInput = {
    id?: number
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaUpdateInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutCategoriaanomaliaNestedInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type categoriaanomaliaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type categoriaanomaliaCreateManyInput = {
    id?: number
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
  }

  export type categoriaanomaliaUpdateManyMutationInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type categoriaanomaliaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaCreateInput = {
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutCategoriaanomalia_sottocategoriaanomaliaInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutCategoriaanomalia_sottocategoriaanomaliaInput
  }

  export type categoriaanomalia_sottocategoriaanomaliaUncheckedCreateInput = {
    id?: number
    id_categoria_anomalia?: number | null
    id_sottocategoria_anomalia?: number | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaUpdateInput = {
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutCategoriaanomalia_sottocategoriaanomaliaNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutCategoriaanomalia_sottocategoriaanomaliaNestedInput
  }

  export type categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_categoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
    id_sottocategoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaCreateManyInput = {
    id?: number
    id_categoria_anomalia?: number | null
    id_sottocategoria_anomalia?: number | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaUpdateManyMutationInput = {

  }

  export type categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_categoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
    id_sottocategoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type categoriaanomalia_sottocategorialavoroCreateInput = {
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutCategoriaanomalia_sottocategorialavoroInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutCategoriaanomalia_sottocategorialavoroInput
  }

  export type categoriaanomalia_sottocategorialavoroUncheckedCreateInput = {
    id?: number
    id_categoria_lavoro?: number | null
    id_sottocategoria_lavoro?: number | null
  }

  export type categoriaanomalia_sottocategorialavoroUpdateInput = {
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutCategoriaanomalia_sottocategorialavoroNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutCategoriaanomalia_sottocategorialavoroNestedInput
  }

  export type categoriaanomalia_sottocategorialavoroUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_categoria_lavoro?: NullableIntFieldUpdateOperationsInput | number | null
    id_sottocategoria_lavoro?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type categoriaanomalia_sottocategorialavoroCreateManyInput = {
    id?: number
    id_categoria_lavoro?: number | null
    id_sottocategoria_lavoro?: number | null
  }

  export type categoriaanomalia_sottocategorialavoroUpdateManyMutationInput = {

  }

  export type categoriaanomalia_sottocategorialavoroUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_categoria_lavoro?: NullableIntFieldUpdateOperationsInput | number | null
    id_sottocategoria_lavoro?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type contabilitaCreateInput = {
    prezzario?: number | null
    descrizioneContabilita?: number | null
    proprieta?: string | null
  }

  export type contabilitaUncheckedCreateInput = {
    id?: number
    prezzario?: number | null
    descrizioneContabilita?: number | null
    proprieta?: string | null
  }

  export type contabilitaUpdateInput = {
    prezzario?: NullableIntFieldUpdateOperationsInput | number | null
    descrizioneContabilita?: NullableIntFieldUpdateOperationsInput | number | null
    proprieta?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type contabilitaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    prezzario?: NullableIntFieldUpdateOperationsInput | number | null
    descrizioneContabilita?: NullableIntFieldUpdateOperationsInput | number | null
    proprieta?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type contabilitaCreateManyInput = {
    id?: number
    prezzario?: number | null
    descrizioneContabilita?: number | null
    proprieta?: string | null
  }

  export type contabilitaUpdateManyMutationInput = {
    prezzario?: NullableIntFieldUpdateOperationsInput | number | null
    descrizioneContabilita?: NullableIntFieldUpdateOperationsInput | number | null
    proprieta?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type contabilitaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    prezzario?: NullableIntFieldUpdateOperationsInput | number | null
    descrizioneContabilita?: NullableIntFieldUpdateOperationsInput | number | null
    proprieta?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type eventoCreateInput = {
    idUtente?: number | null
    idAppalto?: number | null
    tipoEvento?: number | null
    generatoDa?: string | null
    idPratica?: number | null
    noteEvento?: string | null
    lavoriEvento?: number | null
    statoEvento?: number | null
    documentiCorrelati?: number | null
    propietaEvento?: string | null
    severitaEvento?: number | null
  }

  export type eventoUncheckedCreateInput = {
    id?: number
    idUtente?: number | null
    idAppalto?: number | null
    tipoEvento?: number | null
    generatoDa?: string | null
    idPratica?: number | null
    noteEvento?: string | null
    lavoriEvento?: number | null
    statoEvento?: number | null
    documentiCorrelati?: number | null
    propietaEvento?: string | null
    severitaEvento?: number | null
  }

  export type eventoUpdateInput = {
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    generatoDa?: NullableStringFieldUpdateOperationsInput | string | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    noteEvento?: NullableStringFieldUpdateOperationsInput | string | null
    lavoriEvento?: NullableIntFieldUpdateOperationsInput | number | null
    statoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    documentiCorrelati?: NullableIntFieldUpdateOperationsInput | number | null
    propietaEvento?: NullableStringFieldUpdateOperationsInput | string | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type eventoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    generatoDa?: NullableStringFieldUpdateOperationsInput | string | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    noteEvento?: NullableStringFieldUpdateOperationsInput | string | null
    lavoriEvento?: NullableIntFieldUpdateOperationsInput | number | null
    statoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    documentiCorrelati?: NullableIntFieldUpdateOperationsInput | number | null
    propietaEvento?: NullableStringFieldUpdateOperationsInput | string | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type eventoCreateManyInput = {
    id?: number
    idUtente?: number | null
    idAppalto?: number | null
    tipoEvento?: number | null
    generatoDa?: string | null
    idPratica?: number | null
    noteEvento?: string | null
    lavoriEvento?: number | null
    statoEvento?: number | null
    documentiCorrelati?: number | null
    propietaEvento?: string | null
    severitaEvento?: number | null
  }

  export type eventoUpdateManyMutationInput = {
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    generatoDa?: NullableStringFieldUpdateOperationsInput | string | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    noteEvento?: NullableStringFieldUpdateOperationsInput | string | null
    lavoriEvento?: NullableIntFieldUpdateOperationsInput | number | null
    statoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    documentiCorrelati?: NullableIntFieldUpdateOperationsInput | number | null
    propietaEvento?: NullableStringFieldUpdateOperationsInput | string | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type eventoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    generatoDa?: NullableStringFieldUpdateOperationsInput | string | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    noteEvento?: NullableStringFieldUpdateOperationsInput | string | null
    lavoriEvento?: NullableIntFieldUpdateOperationsInput | number | null
    statoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    documentiCorrelati?: NullableIntFieldUpdateOperationsInput | number | null
    propietaEvento?: NullableStringFieldUpdateOperationsInput | string | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type filelinkerCreateInput = {
    metadata?: string | null
  }

  export type filelinkerUncheckedCreateInput = {
    id?: number
    metadata?: string | null
  }

  export type filelinkerUpdateInput = {
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type filelinkerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type filelinkerCreateManyInput = {
    id?: number
    metadata?: string | null
  }

  export type filelinkerUpdateManyMutationInput = {
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type filelinkerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type filtroCreateInput = {
    idUtente?: number | null
    json?: string | null
    tipo?: string | null
    nome?: string | null
  }

  export type filtroUncheckedCreateInput = {
    id?: number
    idUtente?: number | null
    json?: string | null
    tipo?: string | null
    nome?: string | null
  }

  export type filtroUpdateInput = {
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    json?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type filtroUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    json?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type filtroCreateManyInput = {
    id?: number
    idUtente?: number | null
    json?: string | null
    tipo?: string | null
    nome?: string | null
  }

  export type filtroUpdateManyMutationInput = {
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    json?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type filtroUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    json?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type filtro_colonneCreateInput = {
    idUtente?: number | null
    json?: string | null
    tabella?: string | null
  }

  export type filtro_colonneUncheckedCreateInput = {
    id?: number
    idUtente?: number | null
    json?: string | null
    tabella?: string | null
  }

  export type filtro_colonneUpdateInput = {
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    json?: NullableStringFieldUpdateOperationsInput | string | null
    tabella?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type filtro_colonneUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    json?: NullableStringFieldUpdateOperationsInput | string | null
    tabella?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type filtro_colonneCreateManyInput = {
    id?: number
    idUtente?: number | null
    json?: string | null
    tabella?: string | null
  }

  export type filtro_colonneUpdateManyMutationInput = {
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    json?: NullableStringFieldUpdateOperationsInput | string | null
    tabella?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type filtro_colonneUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    json?: NullableStringFieldUpdateOperationsInput | string | null
    tabella?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fontiCreateInput = {
    value?: string | null
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutFontiInput
    segnalazione?: segnalazioneCreateNestedManyWithoutFontiInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutFontiInput
  }

  export type fontiUncheckedCreateInput = {
    id?: number
    value?: string | null
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutFontiInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutFontiInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutFontiInput
  }

  export type fontiUpdateInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUpdateManyWithoutFontiNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutFontiNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutFontiNestedInput
  }

  export type fontiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutFontiNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutFontiNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutFontiNestedInput
  }

  export type fontiCreateManyInput = {
    id?: number
    value?: string | null
  }

  export type fontiUpdateManyMutationInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fontiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gruppoCreateInput = {
    idAppalto?: number | null
    descrizione?: string | null
    dataModifica?: string | null
    utenti?: utentiCreateNestedManyWithoutGruppoInput
  }

  export type gruppoUncheckedCreateInput = {
    id?: number
    idAppalto?: number | null
    descrizione?: string | null
    dataModifica?: string | null
    utenti?: utentiUncheckedCreateNestedManyWithoutGruppoInput
  }

  export type gruppoUpdateInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    utenti?: utentiUpdateManyWithoutGruppoNestedInput
  }

  export type gruppoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    utenti?: utentiUncheckedUpdateManyWithoutGruppoNestedInput
  }

  export type gruppoCreateManyInput = {
    id?: number
    idAppalto?: number | null
    descrizione?: string | null
    dataModifica?: string | null
  }

  export type gruppoUpdateManyMutationInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gruppoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type impresaCreateInput = {
    value?: string | null
    lavoro?: lavoroCreateNestedManyWithoutImpresaInput
    lavorostorico?: lavorostoricoCreateNestedManyWithoutImpresaInput
  }

  export type impresaUncheckedCreateInput = {
    id?: number
    value?: string | null
    lavoro?: lavoroUncheckedCreateNestedManyWithoutImpresaInput
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutImpresaInput
  }

  export type impresaUpdateInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    lavoro?: lavoroUpdateManyWithoutImpresaNestedInput
    lavorostorico?: lavorostoricoUpdateManyWithoutImpresaNestedInput
  }

  export type impresaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    lavoro?: lavoroUncheckedUpdateManyWithoutImpresaNestedInput
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutImpresaNestedInput
  }

  export type impresaCreateManyInput = {
    id?: number
    value?: string | null
  }

  export type impresaUpdateManyMutationInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type impresaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavoroCreateInput = {
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    catastolinker?: catastolinkerCreateNestedManyWithoutLavoroInput
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutLavoroInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutLavoroInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteStatoToutentiInput
    utenti_lavoro_idUtenteToutenti?: utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteToutentiInput
    impresa?: impresaCreateNestedOneWithoutLavoroInput
  }

  export type lavoroUncheckedCreateInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutLavoroInput
  }

  export type lavoroUpdateInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUpdateManyWithoutLavoroNestedInput
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutLavoroNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutLavoroNestedInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiUpdateOneWithoutLavoro_lavoro_idUtenteStatoToutentiNestedInput
    utenti_lavoro_idUtenteToutenti?: utentiUpdateOneWithoutLavoro_lavoro_idUtenteToutentiNestedInput
    impresa?: impresaUpdateOneWithoutLavoroNestedInput
  }

  export type lavoroUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutLavoroNestedInput
  }

  export type lavoroCreateManyInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
  }

  export type lavoroUpdateManyMutationInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavoroUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavorostoricoCreateInput = {
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutLavorostoricoInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutLavorostoricoInput
    utenti_lavorostorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput
    utenti_lavorostorico_idUtenteToutenti?: utentiCreateNestedOneWithoutLavorostorico_lavorostorico_idUtenteToutentiInput
    impresa?: impresaCreateNestedOneWithoutLavorostoricoInput
  }

  export type lavorostoricoUncheckedCreateInput = {
    id?: number
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
  }

  export type lavorostoricoUpdateInput = {
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutLavorostoricoNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutLavorostoricoNestedInput
    utenti_lavorostorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiNestedInput
    utenti_lavorostorico_idUtenteToutenti?: utentiUpdateOneWithoutLavorostorico_lavorostorico_idUtenteToutentiNestedInput
    impresa?: impresaUpdateOneWithoutLavorostoricoNestedInput
  }

  export type lavorostoricoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavorostoricoCreateManyInput = {
    id?: number
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
  }

  export type lavorostoricoUpdateManyMutationInput = {
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavorostoricoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliservizioCreateInput = {
    idAppalto?: number | null
    dataModifica?: string | null
    risultato?: string | null
    detrazioneEffettivo?: string | null
    premioEffettivo?: string | null
    chiave?: string | null
    unita?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    dataIntervalloDa?: string | null
    dataIntervalloA?: string | null
    dataRichiesta?: string | null
    dataInizioEffettivaLavoro?: string | null
    dataChiusuraSegnalazione?: string | null
    dataFineMassima?: string | null
    elaborato?: number | null
    idSchedulatore?: number | null
    tipolavoro?: string | null
    note?: string | null
    dataCreazioneSegnalazione?: string | null
    livelliserviziodescrizione?: livelliserviziodescrizioneCreateNestedOneWithoutLivelliservizioInput
    utenti?: utentiCreateNestedOneWithoutLivelliservizioInput
  }

  export type livelliservizioUncheckedCreateInput = {
    id?: number
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    idLds?: number | null
    risultato?: string | null
    detrazioneEffettivo?: string | null
    premioEffettivo?: string | null
    chiave?: string | null
    unita?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    dataIntervalloDa?: string | null
    dataIntervalloA?: string | null
    dataRichiesta?: string | null
    dataInizioEffettivaLavoro?: string | null
    dataChiusuraSegnalazione?: string | null
    dataFineMassima?: string | null
    elaborato?: number | null
    idSchedulatore?: number | null
    tipolavoro?: string | null
    note?: string | null
    dataCreazioneSegnalazione?: string | null
  }

  export type livelliservizioUpdateInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    risultato?: NullableStringFieldUpdateOperationsInput | string | null
    detrazioneEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    premioEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    chiave?: NullableStringFieldUpdateOperationsInput | string | null
    unita?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataIntervalloDa?: NullableStringFieldUpdateOperationsInput | string | null
    dataIntervalloA?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettivaLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusuraSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    elaborato?: NullableIntFieldUpdateOperationsInput | number | null
    idSchedulatore?: NullableIntFieldUpdateOperationsInput | number | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazioneSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    livelliserviziodescrizione?: livelliserviziodescrizioneUpdateOneWithoutLivelliservizioNestedInput
    utenti?: utentiUpdateOneWithoutLivelliservizioNestedInput
  }

  export type livelliservizioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idLds?: NullableIntFieldUpdateOperationsInput | number | null
    risultato?: NullableStringFieldUpdateOperationsInput | string | null
    detrazioneEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    premioEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    chiave?: NullableStringFieldUpdateOperationsInput | string | null
    unita?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataIntervalloDa?: NullableStringFieldUpdateOperationsInput | string | null
    dataIntervalloA?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettivaLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusuraSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    elaborato?: NullableIntFieldUpdateOperationsInput | number | null
    idSchedulatore?: NullableIntFieldUpdateOperationsInput | number | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazioneSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliservizioCreateManyInput = {
    id?: number
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    idLds?: number | null
    risultato?: string | null
    detrazioneEffettivo?: string | null
    premioEffettivo?: string | null
    chiave?: string | null
    unita?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    dataIntervalloDa?: string | null
    dataIntervalloA?: string | null
    dataRichiesta?: string | null
    dataInizioEffettivaLavoro?: string | null
    dataChiusuraSegnalazione?: string | null
    dataFineMassima?: string | null
    elaborato?: number | null
    idSchedulatore?: number | null
    tipolavoro?: string | null
    note?: string | null
    dataCreazioneSegnalazione?: string | null
  }

  export type livelliservizioUpdateManyMutationInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    risultato?: NullableStringFieldUpdateOperationsInput | string | null
    detrazioneEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    premioEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    chiave?: NullableStringFieldUpdateOperationsInput | string | null
    unita?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataIntervalloDa?: NullableStringFieldUpdateOperationsInput | string | null
    dataIntervalloA?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettivaLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusuraSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    elaborato?: NullableIntFieldUpdateOperationsInput | number | null
    idSchedulatore?: NullableIntFieldUpdateOperationsInput | number | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazioneSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliservizioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idLds?: NullableIntFieldUpdateOperationsInput | number | null
    risultato?: NullableStringFieldUpdateOperationsInput | string | null
    detrazioneEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    premioEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    chiave?: NullableStringFieldUpdateOperationsInput | string | null
    unita?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataIntervalloDa?: NullableStringFieldUpdateOperationsInput | string | null
    dataIntervalloA?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettivaLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusuraSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    elaborato?: NullableIntFieldUpdateOperationsInput | number | null
    idSchedulatore?: NullableIntFieldUpdateOperationsInput | number | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazioneSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliserviziocanoneCreateInput = {
    idLds?: number | null
    anno?: string | null
    semestre?: number | null
    trimestre?: number | null
    canoneCalcoloLdS?: number | null
  }

  export type livelliserviziocanoneUncheckedCreateInput = {
    id?: number
    idLds?: number | null
    anno?: string | null
    semestre?: number | null
    trimestre?: number | null
    canoneCalcoloLdS?: number | null
  }

  export type livelliserviziocanoneUpdateInput = {
    idLds?: NullableIntFieldUpdateOperationsInput | number | null
    anno?: NullableStringFieldUpdateOperationsInput | string | null
    semestre?: NullableIntFieldUpdateOperationsInput | number | null
    trimestre?: NullableIntFieldUpdateOperationsInput | number | null
    canoneCalcoloLdS?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type livelliserviziocanoneUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idLds?: NullableIntFieldUpdateOperationsInput | number | null
    anno?: NullableStringFieldUpdateOperationsInput | string | null
    semestre?: NullableIntFieldUpdateOperationsInput | number | null
    trimestre?: NullableIntFieldUpdateOperationsInput | number | null
    canoneCalcoloLdS?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type livelliserviziocanoneCreateManyInput = {
    id?: number
    idLds?: number | null
    anno?: string | null
    semestre?: number | null
    trimestre?: number | null
    canoneCalcoloLdS?: number | null
  }

  export type livelliserviziocanoneUpdateManyMutationInput = {
    idLds?: NullableIntFieldUpdateOperationsInput | number | null
    anno?: NullableStringFieldUpdateOperationsInput | string | null
    semestre?: NullableIntFieldUpdateOperationsInput | number | null
    trimestre?: NullableIntFieldUpdateOperationsInput | number | null
    canoneCalcoloLdS?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type livelliserviziocanoneUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idLds?: NullableIntFieldUpdateOperationsInput | number | null
    anno?: NullableStringFieldUpdateOperationsInput | string | null
    semestre?: NullableIntFieldUpdateOperationsInput | number | null
    trimestre?: NullableIntFieldUpdateOperationsInput | number | null
    canoneCalcoloLdS?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type livelliserviziodescrizioneCreateInput = {
    ambito?: string | null
    lds?: string | null
    parametroValutazione?: string | null
    ldsOT?: string | null
    ldsCPT?: string | null
    indiceScostamento?: string | null
    penaleUnitaria?: number | null
    controllo?: string | null
    note?: string | null
    tipo?: string | null
    funzione?: string | null
    tipoEstrazione?: string | null
    livelliservizio?: livelliservizioCreateNestedManyWithoutLivelliserviziodescrizioneInput
  }

  export type livelliserviziodescrizioneUncheckedCreateInput = {
    id?: number
    ambito?: string | null
    lds?: string | null
    parametroValutazione?: string | null
    ldsOT?: string | null
    ldsCPT?: string | null
    indiceScostamento?: string | null
    penaleUnitaria?: number | null
    controllo?: string | null
    note?: string | null
    tipo?: string | null
    funzione?: string | null
    tipoEstrazione?: string | null
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutLivelliserviziodescrizioneInput
  }

  export type livelliserviziodescrizioneUpdateInput = {
    ambito?: NullableStringFieldUpdateOperationsInput | string | null
    lds?: NullableStringFieldUpdateOperationsInput | string | null
    parametroValutazione?: NullableStringFieldUpdateOperationsInput | string | null
    ldsOT?: NullableStringFieldUpdateOperationsInput | string | null
    ldsCPT?: NullableStringFieldUpdateOperationsInput | string | null
    indiceScostamento?: NullableStringFieldUpdateOperationsInput | string | null
    penaleUnitaria?: NullableIntFieldUpdateOperationsInput | number | null
    controllo?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    funzione?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEstrazione?: NullableStringFieldUpdateOperationsInput | string | null
    livelliservizio?: livelliservizioUpdateManyWithoutLivelliserviziodescrizioneNestedInput
  }

  export type livelliserviziodescrizioneUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ambito?: NullableStringFieldUpdateOperationsInput | string | null
    lds?: NullableStringFieldUpdateOperationsInput | string | null
    parametroValutazione?: NullableStringFieldUpdateOperationsInput | string | null
    ldsOT?: NullableStringFieldUpdateOperationsInput | string | null
    ldsCPT?: NullableStringFieldUpdateOperationsInput | string | null
    indiceScostamento?: NullableStringFieldUpdateOperationsInput | string | null
    penaleUnitaria?: NullableIntFieldUpdateOperationsInput | number | null
    controllo?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    funzione?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEstrazione?: NullableStringFieldUpdateOperationsInput | string | null
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutLivelliserviziodescrizioneNestedInput
  }

  export type livelliserviziodescrizioneCreateManyInput = {
    id?: number
    ambito?: string | null
    lds?: string | null
    parametroValutazione?: string | null
    ldsOT?: string | null
    ldsCPT?: string | null
    indiceScostamento?: string | null
    penaleUnitaria?: number | null
    controllo?: string | null
    note?: string | null
    tipo?: string | null
    funzione?: string | null
    tipoEstrazione?: string | null
  }

  export type livelliserviziodescrizioneUpdateManyMutationInput = {
    ambito?: NullableStringFieldUpdateOperationsInput | string | null
    lds?: NullableStringFieldUpdateOperationsInput | string | null
    parametroValutazione?: NullableStringFieldUpdateOperationsInput | string | null
    ldsOT?: NullableStringFieldUpdateOperationsInput | string | null
    ldsCPT?: NullableStringFieldUpdateOperationsInput | string | null
    indiceScostamento?: NullableStringFieldUpdateOperationsInput | string | null
    penaleUnitaria?: NullableIntFieldUpdateOperationsInput | number | null
    controllo?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    funzione?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEstrazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliserviziodescrizioneUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ambito?: NullableStringFieldUpdateOperationsInput | string | null
    lds?: NullableStringFieldUpdateOperationsInput | string | null
    parametroValutazione?: NullableStringFieldUpdateOperationsInput | string | null
    ldsOT?: NullableStringFieldUpdateOperationsInput | string | null
    ldsCPT?: NullableStringFieldUpdateOperationsInput | string | null
    indiceScostamento?: NullableStringFieldUpdateOperationsInput | string | null
    penaleUnitaria?: NullableIntFieldUpdateOperationsInput | number | null
    controllo?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    funzione?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEstrazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliservizioschedulatoreCreateInput = {
    idAppalto?: number | null
    tipologia?: string | null
    anno?: number | null
    semestre?: number | null
    stato?: string | null
    idUtente?: number | null
    dataCreazione?: string | null
  }

  export type livelliservizioschedulatoreUncheckedCreateInput = {
    id?: number
    idAppalto?: number | null
    tipologia?: string | null
    anno?: number | null
    semestre?: number | null
    stato?: string | null
    idUtente?: number | null
    dataCreazione?: string | null
  }

  export type livelliservizioschedulatoreUpdateInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    anno?: NullableIntFieldUpdateOperationsInput | number | null
    semestre?: NullableIntFieldUpdateOperationsInput | number | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliservizioschedulatoreUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    anno?: NullableIntFieldUpdateOperationsInput | number | null
    semestre?: NullableIntFieldUpdateOperationsInput | number | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliservizioschedulatoreCreateManyInput = {
    id?: number
    idAppalto?: number | null
    tipologia?: string | null
    anno?: number | null
    semestre?: number | null
    stato?: string | null
    idUtente?: number | null
    dataCreazione?: string | null
  }

  export type livelliservizioschedulatoreUpdateManyMutationInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    anno?: NullableIntFieldUpdateOperationsInput | number | null
    semestre?: NullableIntFieldUpdateOperationsInput | number | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliservizioschedulatoreUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    anno?: NullableIntFieldUpdateOperationsInput | number | null
    semestre?: NullableIntFieldUpdateOperationsInput | number | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mezzoCreateInput = {
    tipologiaMezzo?: number | null
    descrizione?: string | null
    dataModifica?: string | null
  }

  export type mezzoUncheckedCreateInput = {
    id?: number
    tipologiaMezzo?: number | null
    descrizione?: string | null
    dataModifica?: string | null
  }

  export type mezzoUpdateInput = {
    tipologiaMezzo?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mezzoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipologiaMezzo?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mezzoCreateManyInput = {
    id?: number
    tipologiaMezzo?: number | null
    descrizione?: string | null
    dataModifica?: string | null
  }

  export type mezzoUpdateManyMutationInput = {
    tipologiaMezzo?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mezzoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipologiaMezzo?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type oggettoCreateInput = {
    catastoId?: number | null
  }

  export type oggettoUncheckedCreateInput = {
    id?: number
    catastoId?: number | null
  }

  export type oggettoUpdateInput = {
    catastoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type oggettoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    catastoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type oggettoCreateManyInput = {
    id?: number
    catastoId?: number | null
  }

  export type oggettoUpdateManyMutationInput = {
    catastoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type oggettoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    catastoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type oggettocivettaCreateInput = {
    idSegnalazione?: number | null
    idOggettoCatasto?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    idRifCivetta?: number | null
    utenti?: utentiCreateNestedOneWithoutOggettocivettaInput
  }

  export type oggettocivettaUncheckedCreateInput = {
    id?: number
    idSegnalazione?: number | null
    idOggettoCatasto?: number | null
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    idRifCivetta?: number | null
  }

  export type oggettocivettaUpdateInput = {
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idOggettoCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idRifCivetta?: NullableIntFieldUpdateOperationsInput | number | null
    utenti?: utentiUpdateOneWithoutOggettocivettaNestedInput
  }

  export type oggettocivettaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idOggettoCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idRifCivetta?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type oggettocivettaCreateManyInput = {
    id?: number
    idSegnalazione?: number | null
    idOggettoCatasto?: number | null
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    idRifCivetta?: number | null
  }

  export type oggettocivettaUpdateManyMutationInput = {
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idOggettoCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idRifCivetta?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type oggettocivettaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idOggettoCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idRifCivetta?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type personaleCreateInput = {
    idUtente?: number | null
    tipologiaPersonale?: number | null
    descrizione?: string | null
    dataModifica?: string | null
  }

  export type personaleUncheckedCreateInput = {
    id?: number
    idUtente?: number | null
    tipologiaPersonale?: number | null
    descrizione?: string | null
    dataModifica?: string | null
  }

  export type personaleUpdateInput = {
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    tipologiaPersonale?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type personaleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    tipologiaPersonale?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type personaleCreateManyInput = {
    id?: number
    idUtente?: number | null
    tipologiaPersonale?: number | null
    descrizione?: string | null
    dataModifica?: string | null
  }

  export type personaleUpdateManyMutationInput = {
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    tipologiaPersonale?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type personaleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    tipologiaPersonale?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type poiCreateInput = {
    descrizione?: string | null
    dataInizio?: string | null
    dataFine?: string | null
    idAppalto?: number | null
    notePOI?: string | null
  }

  export type poiUncheckedCreateInput = {
    id?: number
    descrizione?: string | null
    dataInizio?: string | null
    dataFine?: string | null
    idAppalto?: number | null
    notePOI?: string | null
  }

  export type poiUpdateInput = {
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizio?: NullableStringFieldUpdateOperationsInput | string | null
    dataFine?: NullableStringFieldUpdateOperationsInput | string | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    notePOI?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type poiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizio?: NullableStringFieldUpdateOperationsInput | string | null
    dataFine?: NullableStringFieldUpdateOperationsInput | string | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    notePOI?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type poiCreateManyInput = {
    id?: number
    descrizione?: string | null
    dataInizio?: string | null
    dataFine?: string | null
    idAppalto?: number | null
    notePOI?: string | null
  }

  export type poiUpdateManyMutationInput = {
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizio?: NullableStringFieldUpdateOperationsInput | string | null
    dataFine?: NullableStringFieldUpdateOperationsInput | string | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    notePOI?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type poiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizio?: NullableStringFieldUpdateOperationsInput | string | null
    dataFine?: NullableStringFieldUpdateOperationsInput | string | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    notePOI?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type praticaCreateInput = {
    idAppalto?: number | null
    dataModifica?: string | null
    dataChiusura?: string | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
    catastolinker?: catastolinkerCreateNestedManyWithoutPraticaInput
    utenti?: utentiCreateNestedOneWithoutPraticaInput
  }

  export type praticaUncheckedCreateInput = {
    id?: number
    idUtente?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    dataChiusura?: string | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutPraticaInput
  }

  export type praticaUpdateInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUpdateManyWithoutPraticaNestedInput
    utenti?: utentiUpdateOneWithoutPraticaNestedInput
  }

  export type praticaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutPraticaNestedInput
  }

  export type praticaCreateManyInput = {
    id?: number
    idUtente?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    dataChiusura?: string | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
  }

  export type praticaUpdateManyMutationInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type praticaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type praticastoricoCreateInput = {
    idPratica?: number | null
    idAppalto?: number | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
    utenti?: utentiCreateNestedOneWithoutPraticastoricoInput
  }

  export type praticastoricoUncheckedCreateInput = {
    id?: number
    idPratica?: number | null
    idAppalto?: number | null
    idUtente?: number | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
  }

  export type praticastoricoUpdateInput = {
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
    utenti?: utentiUpdateOneWithoutPraticastoricoNestedInput
  }

  export type praticastoricoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type praticastoricoCreateManyInput = {
    id?: number
    idPratica?: number | null
    idAppalto?: number | null
    idUtente?: number | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
  }

  export type praticastoricoUpdateManyMutationInput = {
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type praticastoricoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type prezzarioCreateInput = {
    descrizione?: string | null
    unitaDiMisura?: string | null
    prezzo?: string | null
  }

  export type prezzarioUncheckedCreateInput = {
    id?: number
    descrizione?: string | null
    unitaDiMisura?: string | null
    prezzo?: string | null
  }

  export type prezzarioUpdateInput = {
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    unitaDiMisura?: NullableStringFieldUpdateOperationsInput | string | null
    prezzo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type prezzarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    unitaDiMisura?: NullableStringFieldUpdateOperationsInput | string | null
    prezzo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type prezzarioCreateManyInput = {
    id?: number
    descrizione?: string | null
    unitaDiMisura?: string | null
    prezzo?: string | null
  }

  export type prezzarioUpdateManyMutationInput = {
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    unitaDiMisura?: NullableStringFieldUpdateOperationsInput | string | null
    prezzo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type prezzarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    unitaDiMisura?: NullableStringFieldUpdateOperationsInput | string | null
    prezzo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type registrorichiedenteCreateInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idSegnalazione?: number | null
    del?: string | null
    fonti?: fontiCreateNestedOneWithoutRegistrorichiedenteInput
    segnalatore?: segnalatoreCreateNestedOneWithoutRegistrorichiedenteInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutRegistrorichiedenteInput
    utenti?: utentiCreateNestedOneWithoutRegistrorichiedenteInput
  }

  export type registrorichiedenteUncheckedCreateInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idUtente?: number | null
    idSegnalazione?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    idSegnalazioneGetico?: number | null
    del?: string | null
  }

  export type registrorichiedenteUpdateInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    fonti?: fontiUpdateOneWithoutRegistrorichiedenteNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutRegistrorichiedenteNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutRegistrorichiedenteNestedInput
    utenti?: utentiUpdateOneWithoutRegistrorichiedenteNestedInput
  }

  export type registrorichiedenteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type registrorichiedenteCreateManyInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idUtente?: number | null
    idSegnalazione?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    idSegnalazioneGetico?: number | null
    del?: string | null
  }

  export type registrorichiedenteUpdateManyMutationInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type registrorichiedenteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalatoreCreateInput = {
    idAppalto?: number | null
    tipoSegnalatore?: number | null
    nomeSegnalatore?: string | null
    cognomeSegnalatore?: string | null
    telefonoSegnalatore?: string | null
    emailSegnalatore?: string | null
    cellulareSegnalatore?: string | null
    pecSegnalatore?: string | null
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutSegnalatoreInput
    segnalazione?: segnalazioneCreateNestedManyWithoutSegnalatoreInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutSegnalatoreInput
  }

  export type segnalatoreUncheckedCreateInput = {
    id?: number
    idAppalto?: number | null
    tipoSegnalatore?: number | null
    nomeSegnalatore?: string | null
    cognomeSegnalatore?: string | null
    telefonoSegnalatore?: string | null
    emailSegnalatore?: string | null
    cellulareSegnalatore?: string | null
    pecSegnalatore?: string | null
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutSegnalatoreInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutSegnalatoreInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutSegnalatoreInput
  }

  export type segnalatoreUpdateInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    nomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cognomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    emailSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cellulareSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    pecSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUpdateManyWithoutSegnalatoreNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutSegnalatoreNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutSegnalatoreNestedInput
  }

  export type segnalatoreUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    nomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cognomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    emailSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cellulareSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    pecSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutSegnalatoreNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutSegnalatoreNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutSegnalatoreNestedInput
  }

  export type segnalatoreCreateManyInput = {
    id?: number
    idAppalto?: number | null
    tipoSegnalatore?: number | null
    nomeSegnalatore?: string | null
    cognomeSegnalatore?: string | null
    telefonoSegnalatore?: string | null
    emailSegnalatore?: string | null
    cellulareSegnalatore?: string | null
    pecSegnalatore?: string | null
  }

  export type segnalatoreUpdateManyMutationInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    nomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cognomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    emailSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cellulareSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    pecSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalatoreUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    nomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cognomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    emailSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cellulareSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    pecSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazioneCreateInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    fonti?: fontiCreateNestedOneWithoutSegnalazioneInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazioneInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazioneInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    utenti_segnalazione_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazioneInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazioneInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUpdateInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazioneNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazioneNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazioneNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput
    utenti_segnalazione_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazioneNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazioneNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneCreateManyInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazioneUpdateManyMutationInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazioneUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazione_geticoCreateInput = {
    id_ticket?: string | null
    segnalante_nome?: string | null
    segnalante_cognome?: string | null
    segnalante_email?: string | null
    segnalante_telefono?: string | null
    luogo_indirizzo?: string | null
    luogo_civico?: string | null
    luogo_ubicazione?: string | null
    descrizione?: string | null
    tipologia?: string | null
    flg_stato?: string | null
    luogo_quartiere?: string | null
    dataRichiesta?: string | null
    dataInoltro?: string | null
    ufficioProvenienza?: string | null
    luogo_civico2?: string | null
    luogo_indirizzo2?: string | null
    ufficio_inoltro?: string | null
    json_uffici?: string | null
    note_esito?: string | null
    sopralluogo?: string | null
    sopralluogo_note?: string | null
    sopralluogo_effettuato?: string | null
    sopralluogo_importato?: string | null
    sopralluogo_catasto_json?: string | null
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutSegnalazione_geticoInput
    segnalazione?: segnalazioneCreateNestedManyWithoutSegnalazione_geticoInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutSegnalazione_geticoInput
  }

  export type segnalazione_geticoUncheckedCreateInput = {
    id?: number
    id_ticket?: string | null
    segnalante_nome?: string | null
    segnalante_cognome?: string | null
    segnalante_email?: string | null
    segnalante_telefono?: string | null
    luogo_indirizzo?: string | null
    luogo_civico?: string | null
    luogo_ubicazione?: string | null
    descrizione?: string | null
    tipologia?: string | null
    flg_stato?: string | null
    luogo_quartiere?: string | null
    dataRichiesta?: string | null
    dataInoltro?: string | null
    ufficioProvenienza?: string | null
    luogo_civico2?: string | null
    luogo_indirizzo2?: string | null
    ufficio_inoltro?: string | null
    json_uffici?: string | null
    note_esito?: string | null
    sopralluogo?: string | null
    sopralluogo_note?: string | null
    sopralluogo_effettuato?: string | null
    sopralluogo_importato?: string | null
    sopralluogo_catasto_json?: string | null
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutSegnalazione_geticoInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutSegnalazione_geticoInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutSegnalazione_geticoInput
  }

  export type segnalazione_geticoUpdateInput = {
    id_ticket?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_nome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_cognome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_email?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_telefono?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_ubicazione?: NullableStringFieldUpdateOperationsInput | string | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    flg_stato?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_quartiere?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInoltro?: NullableStringFieldUpdateOperationsInput | string | null
    ufficioProvenienza?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico2?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo2?: NullableStringFieldUpdateOperationsInput | string | null
    ufficio_inoltro?: NullableStringFieldUpdateOperationsInput | string | null
    json_uffici?: NullableStringFieldUpdateOperationsInput | string | null
    note_esito?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_note?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_effettuato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_importato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_catasto_json?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUpdateManyWithoutSegnalazione_geticoNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutSegnalazione_geticoNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutSegnalazione_geticoNestedInput
  }

  export type segnalazione_geticoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ticket?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_nome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_cognome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_email?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_telefono?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_ubicazione?: NullableStringFieldUpdateOperationsInput | string | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    flg_stato?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_quartiere?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInoltro?: NullableStringFieldUpdateOperationsInput | string | null
    ufficioProvenienza?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico2?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo2?: NullableStringFieldUpdateOperationsInput | string | null
    ufficio_inoltro?: NullableStringFieldUpdateOperationsInput | string | null
    json_uffici?: NullableStringFieldUpdateOperationsInput | string | null
    note_esito?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_note?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_effettuato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_importato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_catasto_json?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutSegnalazione_geticoNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutSegnalazione_geticoNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutSegnalazione_geticoNestedInput
  }

  export type segnalazione_geticoCreateManyInput = {
    id?: number
    id_ticket?: string | null
    segnalante_nome?: string | null
    segnalante_cognome?: string | null
    segnalante_email?: string | null
    segnalante_telefono?: string | null
    luogo_indirizzo?: string | null
    luogo_civico?: string | null
    luogo_ubicazione?: string | null
    descrizione?: string | null
    tipologia?: string | null
    flg_stato?: string | null
    luogo_quartiere?: string | null
    dataRichiesta?: string | null
    dataInoltro?: string | null
    ufficioProvenienza?: string | null
    luogo_civico2?: string | null
    luogo_indirizzo2?: string | null
    ufficio_inoltro?: string | null
    json_uffici?: string | null
    note_esito?: string | null
    sopralluogo?: string | null
    sopralluogo_note?: string | null
    sopralluogo_effettuato?: string | null
    sopralluogo_importato?: string | null
    sopralluogo_catasto_json?: string | null
  }

  export type segnalazione_geticoUpdateManyMutationInput = {
    id_ticket?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_nome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_cognome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_email?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_telefono?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_ubicazione?: NullableStringFieldUpdateOperationsInput | string | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    flg_stato?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_quartiere?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInoltro?: NullableStringFieldUpdateOperationsInput | string | null
    ufficioProvenienza?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico2?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo2?: NullableStringFieldUpdateOperationsInput | string | null
    ufficio_inoltro?: NullableStringFieldUpdateOperationsInput | string | null
    json_uffici?: NullableStringFieldUpdateOperationsInput | string | null
    note_esito?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_note?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_effettuato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_importato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_catasto_json?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazione_geticoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ticket?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_nome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_cognome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_email?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_telefono?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_ubicazione?: NullableStringFieldUpdateOperationsInput | string | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    flg_stato?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_quartiere?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInoltro?: NullableStringFieldUpdateOperationsInput | string | null
    ufficioProvenienza?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico2?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo2?: NullableStringFieldUpdateOperationsInput | string | null
    ufficio_inoltro?: NullableStringFieldUpdateOperationsInput | string | null
    json_uffici?: NullableStringFieldUpdateOperationsInput | string | null
    note_esito?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_note?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_effettuato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_importato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_catasto_json?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazionestatostoricoCreateInput = {
    idAppalto?: number | null
    dataModifica?: string | null
    stato?: string | null
    notaStato?: string | null
    segnalazione?: segnalazioneCreateNestedOneWithoutSegnalazionestatostoricoInput
    utenti?: utentiCreateNestedOneWithoutSegnalazionestatostoricoInput
  }

  export type segnalazionestatostoricoUncheckedCreateInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    stato?: string | null
    notaStato?: string | null
  }

  export type segnalazionestatostoricoUpdateInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateOneWithoutSegnalazionestatostoricoNestedInput
    utenti?: utentiUpdateOneWithoutSegnalazionestatostoricoNestedInput
  }

  export type segnalazionestatostoricoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazionestatostoricoCreateManyInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    stato?: string | null
    notaStato?: string | null
  }

  export type segnalazionestatostoricoUpdateManyMutationInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazionestatostoricoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazionestoricoCreateInput = {
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    fonti?: fontiCreateNestedOneWithoutSegnalazionestoricoInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazionestoricoInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazionestoricoInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazionestoricoInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazionestoricoInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazionestoricoInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazionestoricoInput
  }

  export type segnalazionestoricoUncheckedCreateInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoUpdateInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazionestoricoNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazionestoricoNestedInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiNestedInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazionestoricoNestedInput
  }

  export type segnalazionestoricoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazionestoricoCreateManyInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoUpdateManyMutationInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazionestoricoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sottocategoriaanomaliaCreateInput = {
    value?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazione?: segnalazioneCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutSottocategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategoriaanomaliaInput
  }

  export type sottocategoriaanomaliaUncheckedCreateInput = {
    id?: number
    value?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
  }

  export type sottocategoriaanomaliaUpdateInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutSottocategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategoriaanomaliaNestedInput
  }

  export type sottocategoriaanomaliaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
  }

  export type sottocategoriaanomaliaCreateManyInput = {
    id?: number
    value?: string | null
  }

  export type sottocategoriaanomaliaUpdateManyMutationInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sottocategoriaanomaliaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateInput = {
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSottocategoriaanomalia_sottocategorialavoroInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSottocategoriaanomalia_sottocategorialavoroInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutSottocategoriaanomalia_sottocategorialavoroInput
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedCreateInput = {
    id?: number
    id_categoria_anomalia?: number | null
    id_sottocategoria_anomalia?: number | null
    id_sottocategoria_lavoro?: number | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateInput = {
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSottocategoriaanomalia_sottocategorialavoroNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSottocategoriaanomalia_sottocategorialavoroNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutSottocategoriaanomalia_sottocategorialavoroNestedInput
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_categoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
    id_sottocategoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
    id_sottocategoria_lavoro?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateManyInput = {
    id?: number
    id_categoria_anomalia?: number | null
    id_sottocategoria_anomalia?: number | null
    id_sottocategoria_lavoro?: number | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateManyMutationInput = {

  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_categoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
    id_sottocategoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
    id_sottocategoria_lavoro?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sottocategorialavoroCreateInput = {
    value?: string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategorialavoroInput
    lavoro?: lavoroCreateNestedManyWithoutSottocategorialavoroInput
    lavorostorico?: lavorostoricoCreateNestedManyWithoutSottocategorialavoroInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategorialavoroInput
  }

  export type sottocategorialavoroUncheckedCreateInput = {
    id?: number
    value?: string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput
    lavoro?: lavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutSottocategorialavoroInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput
  }

  export type sottocategorialavoroUpdateInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategorialavoroNestedInput
    lavoro?: lavoroUpdateManyWithoutSottocategorialavoroNestedInput
    lavorostorico?: lavorostoricoUpdateManyWithoutSottocategorialavoroNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategorialavoroNestedInput
  }

  export type sottocategorialavoroUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
    lavoro?: lavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
  }

  export type sottocategorialavoroCreateManyInput = {
    id?: number
    value?: string | null
  }

  export type sottocategorialavoroUpdateManyMutationInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sottocategorialavoroUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type statoCreateInput = {
    idEvento?: number | null
    classeCorrente?: number | null
    statoCorrente?: number | null
    idUtente?: number | null
    storiaStato?: number | null
  }

  export type statoUncheckedCreateInput = {
    id?: number
    idEvento?: number | null
    classeCorrente?: number | null
    statoCorrente?: number | null
    idUtente?: number | null
    storiaStato?: number | null
  }

  export type statoUpdateInput = {
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    classeCorrente?: NullableIntFieldUpdateOperationsInput | number | null
    statoCorrente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    storiaStato?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type statoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    classeCorrente?: NullableIntFieldUpdateOperationsInput | number | null
    statoCorrente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    storiaStato?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type statoCreateManyInput = {
    id?: number
    idEvento?: number | null
    classeCorrente?: number | null
    statoCorrente?: number | null
    idUtente?: number | null
    storiaStato?: number | null
  }

  export type statoUpdateManyMutationInput = {
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    classeCorrente?: NullableIntFieldUpdateOperationsInput | number | null
    statoCorrente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    storiaStato?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type statoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    classeCorrente?: NullableIntFieldUpdateOperationsInput | number | null
    statoCorrente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    storiaStato?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type storiastatoCreateInput = {
    statoStorico?: number | null
    stato?: number | null
    dataStato?: string | null
  }

  export type storiastatoUncheckedCreateInput = {
    id?: number
    statoStorico?: number | null
    stato?: number | null
    dataStato?: string | null
  }

  export type storiastatoUpdateInput = {
    statoStorico?: NullableIntFieldUpdateOperationsInput | number | null
    stato?: NullableIntFieldUpdateOperationsInput | number | null
    dataStato?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type storiastatoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    statoStorico?: NullableIntFieldUpdateOperationsInput | number | null
    stato?: NullableIntFieldUpdateOperationsInput | number | null
    dataStato?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type storiastatoCreateManyInput = {
    id?: number
    statoStorico?: number | null
    stato?: number | null
    dataStato?: string | null
  }

  export type storiastatoUpdateManyMutationInput = {
    statoStorico?: NullableIntFieldUpdateOperationsInput | number | null
    stato?: NullableIntFieldUpdateOperationsInput | number | null
    dataStato?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type storiastatoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    statoStorico?: NullableIntFieldUpdateOperationsInput | number | null
    stato?: NullableIntFieldUpdateOperationsInput | number | null
    dataStato?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tecniciCreateInput = {
    value?: string | null
    segnalazione?: segnalazioneCreateNestedManyWithoutTecniciInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutTecniciInput
  }

  export type tecniciUncheckedCreateInput = {
    id?: number
    value?: string | null
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutTecniciInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutTecniciInput
  }

  export type tecniciUpdateInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateManyWithoutTecniciNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutTecniciNestedInput
  }

  export type tecniciUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutTecniciNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutTecniciNestedInput
  }

  export type tecniciCreateManyInput = {
    id?: number
    value?: string | null
  }

  export type tecniciUpdateManyMutationInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tecniciUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipoeventoCreateInput = {
    value?: string | null
    segnalazione?: segnalazioneCreateNestedManyWithoutTipoeventoInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutTipoeventoInput
  }

  export type tipoeventoUncheckedCreateInput = {
    id?: number
    value?: string | null
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutTipoeventoInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutTipoeventoInput
  }

  export type tipoeventoUpdateInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateManyWithoutTipoeventoNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutTipoeventoNestedInput
  }

  export type tipoeventoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutTipoeventoNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutTipoeventoNestedInput
  }

  export type tipoeventoCreateManyInput = {
    id?: number
    value?: string | null
  }

  export type tipoeventoUpdateManyMutationInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipoeventoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipologiaCreateInput = {
    proprieta?: string | null
  }

  export type tipologiaUncheckedCreateInput = {
    id?: number
    proprieta?: string | null
  }

  export type tipologiaUpdateInput = {
    proprieta?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipologiaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    proprieta?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipologiaCreateManyInput = {
    id?: number
    proprieta?: string | null
  }

  export type tipologiaUpdateManyMutationInput = {
    proprieta?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipologiaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    proprieta?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipooggettoCreateInput = {
    value?: string | null
    tabellaNome?: string | null
  }

  export type tipooggettoUncheckedCreateInput = {
    id?: number
    value?: string | null
    tabellaNome?: string | null
  }

  export type tipooggettoUpdateInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipooggettoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipooggettoCreateManyInput = {
    id?: number
    value?: string | null
    tabellaNome?: string | null
  }

  export type tipooggettoUpdateManyMutationInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipooggettoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipoprovvedimentoCreateInput = {
    value?: string | null
    segnalazione?: segnalazioneCreateNestedManyWithoutTipoprovvedimentoInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutTipoprovvedimentoInput
  }

  export type tipoprovvedimentoUncheckedCreateInput = {
    id?: number
    value?: string | null
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutTipoprovvedimentoInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutTipoprovvedimentoInput
  }

  export type tipoprovvedimentoUpdateInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateManyWithoutTipoprovvedimentoNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutTipoprovvedimentoNestedInput
  }

  export type tipoprovvedimentoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutTipoprovvedimentoNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutTipoprovvedimentoNestedInput
  }

  export type tipoprovvedimentoCreateManyInput = {
    id?: number
    value?: string | null
  }

  export type tipoprovvedimentoUpdateManyMutationInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipoprovvedimentoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tiposegnalatoreCreateInput = {
    value?: string | null
  }

  export type tiposegnalatoreUncheckedCreateInput = {
    id?: number
    value?: string | null
  }

  export type tiposegnalatoreUpdateInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tiposegnalatoreUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tiposegnalatoreCreateManyInput = {
    id?: number
    value?: string | null
  }

  export type tiposegnalatoreUpdateManyMutationInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tiposegnalatoreUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tiposeveritaCreateInput = {
    value?: string | null
    segnalazione?: segnalazioneCreateNestedManyWithoutTiposeveritaInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutTiposeveritaInput
  }

  export type tiposeveritaUncheckedCreateInput = {
    id?: number
    value?: string | null
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutTiposeveritaInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutTiposeveritaInput
  }

  export type tiposeveritaUpdateInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateManyWithoutTiposeveritaNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutTiposeveritaNestedInput
  }

  export type tiposeveritaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutTiposeveritaNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutTiposeveritaNestedInput
  }

  export type tiposeveritaCreateManyInput = {
    id?: number
    value?: string | null
  }

  export type tiposeveritaUpdateManyMutationInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tiposeveritaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type utentiCreateInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiUpdateInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type utentiCreateManyInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
  }

  export type utentiUpdateManyMutationInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type utentiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter | string | null
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type allegatoCountOrderByAggregateInput = {
    id?: SortOrder
    tabella_appartenenza?: SortOrder
    id_tabella_appartenenza?: SortOrder
    descrizione?: SortOrder
    path?: SortOrder
    filename_disk?: SortOrder
    filename_originale?: SortOrder
    id_operatore_salvataggio?: SortOrder
    dt_salvataggio?: SortOrder
    del?: SortOrder
  }

  export type allegatoAvgOrderByAggregateInput = {
    id?: SortOrder
    id_tabella_appartenenza?: SortOrder
    id_operatore_salvataggio?: SortOrder
    del?: SortOrder
  }

  export type allegatoMaxOrderByAggregateInput = {
    id?: SortOrder
    tabella_appartenenza?: SortOrder
    id_tabella_appartenenza?: SortOrder
    descrizione?: SortOrder
    path?: SortOrder
    filename_disk?: SortOrder
    filename_originale?: SortOrder
    id_operatore_salvataggio?: SortOrder
    dt_salvataggio?: SortOrder
    del?: SortOrder
  }

  export type allegatoMinOrderByAggregateInput = {
    id?: SortOrder
    tabella_appartenenza?: SortOrder
    id_tabella_appartenenza?: SortOrder
    descrizione?: SortOrder
    path?: SortOrder
    filename_disk?: SortOrder
    filename_originale?: SortOrder
    id_operatore_salvataggio?: SortOrder
    dt_salvataggio?: SortOrder
    del?: SortOrder
  }

  export type allegatoSumOrderByAggregateInput = {
    id?: SortOrder
    id_tabella_appartenenza?: SortOrder
    id_operatore_salvataggio?: SortOrder
    del?: SortOrder
  }

  export type IntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type StringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type IntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type DateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type appaltoCountOrderByAggregateInput = {
    id?: SortOrder
    tipologia?: SortOrder
    dataModifica?: SortOrder
  }

  export type appaltoAvgOrderByAggregateInput = {
    id?: SortOrder
    tipologia?: SortOrder
  }

  export type appaltoMaxOrderByAggregateInput = {
    id?: SortOrder
    tipologia?: SortOrder
    dataModifica?: SortOrder
  }

  export type appaltoMinOrderByAggregateInput = {
    id?: SortOrder
    tipologia?: SortOrder
    dataModifica?: SortOrder
  }

  export type appaltoSumOrderByAggregateInput = {
    id?: SortOrder
    tipologia?: SortOrder
  }

  export type attrezzaturaCountOrderByAggregateInput = {
    id?: SortOrder
    tipologiaAttrezzatura?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type attrezzaturaAvgOrderByAggregateInput = {
    id?: SortOrder
    tipologiaAttrezzatura?: SortOrder
  }

  export type attrezzaturaMaxOrderByAggregateInput = {
    id?: SortOrder
    tipologiaAttrezzatura?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type attrezzaturaMinOrderByAggregateInput = {
    id?: SortOrder
    tipologiaAttrezzatura?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type attrezzaturaSumOrderByAggregateInput = {
    id?: SortOrder
    tipologiaAttrezzatura?: SortOrder
  }

  export type catasto_monitoraggioCountOrderByAggregateInput = {
    id?: SortOrder
    tabellaCatasto?: SortOrder
    tabellaMonitoraggio?: SortOrder
    idElemento?: SortOrder
  }

  export type catasto_monitoraggioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type catasto_monitoraggioMaxOrderByAggregateInput = {
    id?: SortOrder
    tabellaCatasto?: SortOrder
    tabellaMonitoraggio?: SortOrder
    idElemento?: SortOrder
  }

  export type catasto_monitoraggioMinOrderByAggregateInput = {
    id?: SortOrder
    tabellaCatasto?: SortOrder
    tabellaMonitoraggio?: SortOrder
    idElemento?: SortOrder
  }

  export type catasto_monitoraggioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UtentiRelationFilter = {
    is?: utentiWhereInput | null
    isNot?: utentiWhereInput | null
  }

  export type catastoanomaliaCountOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    dataModifica?: SortOrder
    adjacentLayer?: SortOrder
    adjacentLayerGeom?: SortOrder
  }

  export type catastoanomaliaAvgOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
  }

  export type catastoanomaliaMaxOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    dataModifica?: SortOrder
    adjacentLayer?: SortOrder
    adjacentLayerGeom?: SortOrder
  }

  export type catastoanomaliaMinOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    dataModifica?: SortOrder
    adjacentLayer?: SortOrder
    adjacentLayerGeom?: SortOrder
  }

  export type catastoanomaliaSumOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
  }

  export type LavoroRelationFilter = {
    is?: lavoroWhereInput | null
    isNot?: lavoroWhereInput | null
  }

  export type PraticaRelationFilter = {
    is?: praticaWhereInput | null
    isNot?: praticaWhereInput | null
  }

  export type catastolinkerCountOrderByAggregateInput = {
    id?: SortOrder
    idCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    statoSegnalazione?: SortOrder
    statoLavoro?: SortOrder
    flg_catasto?: SortOrder
    idPratica?: SortOrder
    geojson?: SortOrder
  }

  export type catastolinkerAvgOrderByAggregateInput = {
    id?: SortOrder
    idCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    flg_catasto?: SortOrder
    idPratica?: SortOrder
  }

  export type catastolinkerMaxOrderByAggregateInput = {
    id?: SortOrder
    idCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    statoSegnalazione?: SortOrder
    statoLavoro?: SortOrder
    flg_catasto?: SortOrder
    idPratica?: SortOrder
    geojson?: SortOrder
  }

  export type catastolinkerMinOrderByAggregateInput = {
    id?: SortOrder
    idCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    statoSegnalazione?: SortOrder
    statoLavoro?: SortOrder
    flg_catasto?: SortOrder
    idPratica?: SortOrder
    geojson?: SortOrder
  }

  export type catastolinkerSumOrderByAggregateInput = {
    id?: SortOrder
    idCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    flg_catasto?: SortOrder
    idPratica?: SortOrder
  }

  export type Categoriaanomalia_sottocategoriaanomaliaListRelationFilter = {
    every?: categoriaanomalia_sottocategoriaanomaliaWhereInput
    some?: categoriaanomalia_sottocategoriaanomaliaWhereInput
    none?: categoriaanomalia_sottocategoriaanomaliaWhereInput
  }

  export type Categoriaanomalia_sottocategorialavoroListRelationFilter = {
    every?: categoriaanomalia_sottocategorialavoroWhereInput
    some?: categoriaanomalia_sottocategorialavoroWhereInput
    none?: categoriaanomalia_sottocategorialavoroWhereInput
  }

  export type LavoroListRelationFilter = {
    every?: lavoroWhereInput
    some?: lavoroWhereInput
    none?: lavoroWhereInput
  }

  export type LavorostoricoListRelationFilter = {
    every?: lavorostoricoWhereInput
    some?: lavorostoricoWhereInput
    none?: lavorostoricoWhereInput
  }

  export type SegnalazioneListRelationFilter = {
    every?: segnalazioneWhereInput
    some?: segnalazioneWhereInput
    none?: segnalazioneWhereInput
  }

  export type SegnalazionestoricoListRelationFilter = {
    every?: segnalazionestoricoWhereInput
    some?: segnalazionestoricoWhereInput
    none?: segnalazionestoricoWhereInput
  }

  export type Sottocategoriaanomalia_sottocategorialavoroListRelationFilter = {
    every?: sottocategoriaanomalia_sottocategorialavoroWhereInput
    some?: sottocategoriaanomalia_sottocategorialavoroWhereInput
    none?: sottocategoriaanomalia_sottocategorialavoroWhereInput
  }

  export type categoriaanomalia_sottocategoriaanomaliaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type categoriaanomalia_sottocategorialavoroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type lavoroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type lavorostoricoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type segnalazioneOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type segnalazionestoricoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sottocategoriaanomalia_sottocategorialavoroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type categoriaanomaliaCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    tabellaNome?: SortOrder
    modalitaInserimento?: SortOrder
  }

  export type categoriaanomaliaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type categoriaanomaliaMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    tabellaNome?: SortOrder
    modalitaInserimento?: SortOrder
  }

  export type categoriaanomaliaMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    tabellaNome?: SortOrder
    modalitaInserimento?: SortOrder
  }

  export type categoriaanomaliaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CategoriaanomaliaRelationFilter = {
    is?: categoriaanomaliaWhereInput | null
    isNot?: categoriaanomaliaWhereInput | null
  }

  export type SottocategoriaanomaliaRelationFilter = {
    is?: sottocategoriaanomaliaWhereInput | null
    isNot?: sottocategoriaanomaliaWhereInput | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaCountOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
  }

  export type categoriaanomalia_sottocategoriaanomaliaAvgOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
  }

  export type categoriaanomalia_sottocategoriaanomaliaMaxOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
  }

  export type categoriaanomalia_sottocategoriaanomaliaMinOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
  }

  export type categoriaanomalia_sottocategoriaanomaliaSumOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
  }

  export type SottocategorialavoroRelationFilter = {
    is?: sottocategorialavoroWhereInput | null
    isNot?: sottocategorialavoroWhereInput | null
  }

  export type categoriaanomalia_sottocategorialavoroCountOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_lavoro?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
  }

  export type categoriaanomalia_sottocategorialavoroAvgOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_lavoro?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
  }

  export type categoriaanomalia_sottocategorialavoroMaxOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_lavoro?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
  }

  export type categoriaanomalia_sottocategorialavoroMinOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_lavoro?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
  }

  export type categoriaanomalia_sottocategorialavoroSumOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_lavoro?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
  }

  export type contabilitaCountOrderByAggregateInput = {
    id?: SortOrder
    prezzario?: SortOrder
    descrizioneContabilita?: SortOrder
    proprieta?: SortOrder
  }

  export type contabilitaAvgOrderByAggregateInput = {
    id?: SortOrder
    prezzario?: SortOrder
    descrizioneContabilita?: SortOrder
  }

  export type contabilitaMaxOrderByAggregateInput = {
    id?: SortOrder
    prezzario?: SortOrder
    descrizioneContabilita?: SortOrder
    proprieta?: SortOrder
  }

  export type contabilitaMinOrderByAggregateInput = {
    id?: SortOrder
    prezzario?: SortOrder
    descrizioneContabilita?: SortOrder
    proprieta?: SortOrder
  }

  export type contabilitaSumOrderByAggregateInput = {
    id?: SortOrder
    prezzario?: SortOrder
    descrizioneContabilita?: SortOrder
  }

  export type eventoCountOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    tipoEvento?: SortOrder
    generatoDa?: SortOrder
    idPratica?: SortOrder
    noteEvento?: SortOrder
    lavoriEvento?: SortOrder
    statoEvento?: SortOrder
    documentiCorrelati?: SortOrder
    propietaEvento?: SortOrder
    severitaEvento?: SortOrder
  }

  export type eventoAvgOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    tipoEvento?: SortOrder
    idPratica?: SortOrder
    lavoriEvento?: SortOrder
    statoEvento?: SortOrder
    documentiCorrelati?: SortOrder
    severitaEvento?: SortOrder
  }

  export type eventoMaxOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    tipoEvento?: SortOrder
    generatoDa?: SortOrder
    idPratica?: SortOrder
    noteEvento?: SortOrder
    lavoriEvento?: SortOrder
    statoEvento?: SortOrder
    documentiCorrelati?: SortOrder
    propietaEvento?: SortOrder
    severitaEvento?: SortOrder
  }

  export type eventoMinOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    tipoEvento?: SortOrder
    generatoDa?: SortOrder
    idPratica?: SortOrder
    noteEvento?: SortOrder
    lavoriEvento?: SortOrder
    statoEvento?: SortOrder
    documentiCorrelati?: SortOrder
    propietaEvento?: SortOrder
    severitaEvento?: SortOrder
  }

  export type eventoSumOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    tipoEvento?: SortOrder
    idPratica?: SortOrder
    lavoriEvento?: SortOrder
    statoEvento?: SortOrder
    documentiCorrelati?: SortOrder
    severitaEvento?: SortOrder
  }

  export type filelinkerCountOrderByAggregateInput = {
    id?: SortOrder
    metadata?: SortOrder
  }

  export type filelinkerAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type filelinkerMaxOrderByAggregateInput = {
    id?: SortOrder
    metadata?: SortOrder
  }

  export type filelinkerMinOrderByAggregateInput = {
    id?: SortOrder
    metadata?: SortOrder
  }

  export type filelinkerSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type filtroCountOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    json?: SortOrder
    tipo?: SortOrder
    nome?: SortOrder
  }

  export type filtroAvgOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
  }

  export type filtroMaxOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    json?: SortOrder
    tipo?: SortOrder
    nome?: SortOrder
  }

  export type filtroMinOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    json?: SortOrder
    tipo?: SortOrder
    nome?: SortOrder
  }

  export type filtroSumOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
  }

  export type filtro_colonneCountOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    json?: SortOrder
    tabella?: SortOrder
  }

  export type filtro_colonneAvgOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
  }

  export type filtro_colonneMaxOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    json?: SortOrder
    tabella?: SortOrder
  }

  export type filtro_colonneMinOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    json?: SortOrder
    tabella?: SortOrder
  }

  export type filtro_colonneSumOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
  }

  export type RegistrorichiedenteListRelationFilter = {
    every?: registrorichiedenteWhereInput
    some?: registrorichiedenteWhereInput
    none?: registrorichiedenteWhereInput
  }

  export type registrorichiedenteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type fontiCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type fontiAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type fontiMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type fontiMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type fontiSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UtentiListRelationFilter = {
    every?: utentiWhereInput
    some?: utentiWhereInput
    none?: utentiWhereInput
  }

  export type utentiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type gruppoCountOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type gruppoAvgOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
  }

  export type gruppoMaxOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type gruppoMinOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type gruppoSumOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
  }

  export type impresaCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type impresaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type impresaMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type impresaMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type impresaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CatastolinkerListRelationFilter = {
    every?: catastolinkerWhereInput
    some?: catastolinkerWhereInput
    none?: catastolinkerWhereInput
  }

  export type ImpresaRelationFilter = {
    is?: impresaWhereInput | null
    isNot?: impresaWhereInput | null
  }

  export type catastolinkerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type lavoroCountOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarata?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    noteLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtenteStato?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    statoCorrenteLavoro?: SortOrder
    del?: SortOrder
    dataInizioProgrammata?: SortOrder
    dataInizioEffettiva?: SortOrder
    dataInizioMassima?: SortOrder
    dataFineProgrammata?: SortOrder
    dataFineEffettiva?: SortOrder
    dataFineMassima?: SortOrder
    delOggettiCatasto?: SortOrder
    quantita?: SortOrder
    operatore?: SortOrder
    sospeso?: SortOrder
    dataora_ini_sospensione?: SortOrder
    dataora_fine_sospensione?: SortOrder
    tempo_sospensione?: SortOrder
    note_sospensione?: SortOrder
    impresaEsecutrice?: SortOrder
    segnaleticatemporanea?: SortOrder
    tipolavoro?: SortOrder
    statoMessaInSicurezza?: SortOrder
    dataMessaInSicurezza?: SortOrder
    notePubbliche?: SortOrder
  }

  export type lavoroAvgOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    idUtenteStato?: SortOrder
    sospeso?: SortOrder
    tempo_sospensione?: SortOrder
    impresaEsecutrice?: SortOrder
  }

  export type lavoroMaxOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarata?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    noteLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtenteStato?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    statoCorrenteLavoro?: SortOrder
    del?: SortOrder
    dataInizioProgrammata?: SortOrder
    dataInizioEffettiva?: SortOrder
    dataInizioMassima?: SortOrder
    dataFineProgrammata?: SortOrder
    dataFineEffettiva?: SortOrder
    dataFineMassima?: SortOrder
    delOggettiCatasto?: SortOrder
    quantita?: SortOrder
    operatore?: SortOrder
    sospeso?: SortOrder
    dataora_ini_sospensione?: SortOrder
    dataora_fine_sospensione?: SortOrder
    tempo_sospensione?: SortOrder
    note_sospensione?: SortOrder
    impresaEsecutrice?: SortOrder
    segnaleticatemporanea?: SortOrder
    tipolavoro?: SortOrder
    statoMessaInSicurezza?: SortOrder
    dataMessaInSicurezza?: SortOrder
    notePubbliche?: SortOrder
  }

  export type lavoroMinOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarata?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    noteLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtenteStato?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    statoCorrenteLavoro?: SortOrder
    del?: SortOrder
    dataInizioProgrammata?: SortOrder
    dataInizioEffettiva?: SortOrder
    dataInizioMassima?: SortOrder
    dataFineProgrammata?: SortOrder
    dataFineEffettiva?: SortOrder
    dataFineMassima?: SortOrder
    delOggettiCatasto?: SortOrder
    quantita?: SortOrder
    operatore?: SortOrder
    sospeso?: SortOrder
    dataora_ini_sospensione?: SortOrder
    dataora_fine_sospensione?: SortOrder
    tempo_sospensione?: SortOrder
    note_sospensione?: SortOrder
    impresaEsecutrice?: SortOrder
    segnaleticatemporanea?: SortOrder
    tipolavoro?: SortOrder
    statoMessaInSicurezza?: SortOrder
    dataMessaInSicurezza?: SortOrder
    notePubbliche?: SortOrder
  }

  export type lavoroSumOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    idUtenteStato?: SortOrder
    sospeso?: SortOrder
    tempo_sospensione?: SortOrder
    impresaEsecutrice?: SortOrder
  }

  export type lavorostoricoCountOrderByAggregateInput = {
    id?: SortOrder
    idLavoro?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarata?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    noteLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtenteStato?: SortOrder
    sospeso?: SortOrder
    dataora_ini_sospensione?: SortOrder
    dataora_fine_sospensione?: SortOrder
    tempo_sospensione?: SortOrder
    note_sospensione?: SortOrder
    dataInizioProgrammata?: SortOrder
    dataInizioEffettiva?: SortOrder
    dataInizioMassima?: SortOrder
    dataFineProgrammata?: SortOrder
    dataFineEffettiva?: SortOrder
    dataFineMassima?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    statoCorrenteLavoro?: SortOrder
    delOggettiCatasto?: SortOrder
    del?: SortOrder
    quantita?: SortOrder
    operatore?: SortOrder
    impresaEsecutrice?: SortOrder
    segnaleticatemporanea?: SortOrder
    tipolavoro?: SortOrder
    statoMessaInSicurezza?: SortOrder
    dataMessaInSicurezza?: SortOrder
    flgCambioStato?: SortOrder
    notePubbliche?: SortOrder
  }

  export type lavorostoricoAvgOrderByAggregateInput = {
    id?: SortOrder
    idLavoro?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    idUtenteStato?: SortOrder
    sospeso?: SortOrder
    tempo_sospensione?: SortOrder
    impresaEsecutrice?: SortOrder
  }

  export type lavorostoricoMaxOrderByAggregateInput = {
    id?: SortOrder
    idLavoro?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarata?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    noteLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtenteStato?: SortOrder
    sospeso?: SortOrder
    dataora_ini_sospensione?: SortOrder
    dataora_fine_sospensione?: SortOrder
    tempo_sospensione?: SortOrder
    note_sospensione?: SortOrder
    dataInizioProgrammata?: SortOrder
    dataInizioEffettiva?: SortOrder
    dataInizioMassima?: SortOrder
    dataFineProgrammata?: SortOrder
    dataFineEffettiva?: SortOrder
    dataFineMassima?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    statoCorrenteLavoro?: SortOrder
    delOggettiCatasto?: SortOrder
    del?: SortOrder
    quantita?: SortOrder
    operatore?: SortOrder
    impresaEsecutrice?: SortOrder
    segnaleticatemporanea?: SortOrder
    tipolavoro?: SortOrder
    statoMessaInSicurezza?: SortOrder
    dataMessaInSicurezza?: SortOrder
    flgCambioStato?: SortOrder
    notePubbliche?: SortOrder
  }

  export type lavorostoricoMinOrderByAggregateInput = {
    id?: SortOrder
    idLavoro?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarata?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    noteLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtenteStato?: SortOrder
    sospeso?: SortOrder
    dataora_ini_sospensione?: SortOrder
    dataora_fine_sospensione?: SortOrder
    tempo_sospensione?: SortOrder
    note_sospensione?: SortOrder
    dataInizioProgrammata?: SortOrder
    dataInizioEffettiva?: SortOrder
    dataInizioMassima?: SortOrder
    dataFineProgrammata?: SortOrder
    dataFineEffettiva?: SortOrder
    dataFineMassima?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    statoCorrenteLavoro?: SortOrder
    delOggettiCatasto?: SortOrder
    del?: SortOrder
    quantita?: SortOrder
    operatore?: SortOrder
    impresaEsecutrice?: SortOrder
    segnaleticatemporanea?: SortOrder
    tipolavoro?: SortOrder
    statoMessaInSicurezza?: SortOrder
    dataMessaInSicurezza?: SortOrder
    flgCambioStato?: SortOrder
    notePubbliche?: SortOrder
  }

  export type lavorostoricoSumOrderByAggregateInput = {
    id?: SortOrder
    idLavoro?: SortOrder
    idAppalto?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idPOI?: SortOrder
    idUtente?: SortOrder
    categoriaLavoro?: SortOrder
    dettaglioLavoro?: SortOrder
    contabilitaLavoro?: SortOrder
    attrezzaturaLavoro?: SortOrder
    mezzoLavoro?: SortOrder
    personaleLavoro?: SortOrder
    idUtenteStato?: SortOrder
    sospeso?: SortOrder
    tempo_sospensione?: SortOrder
    impresaEsecutrice?: SortOrder
  }

  export type LivelliserviziodescrizioneRelationFilter = {
    is?: livelliserviziodescrizioneWhereInput | null
    isNot?: livelliserviziodescrizioneWhereInput | null
  }

  export type livelliservizioCountOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idLds?: SortOrder
    risultato?: SortOrder
    detrazioneEffettivo?: SortOrder
    premioEffettivo?: SortOrder
    chiave?: SortOrder
    unita?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    dataIntervalloDa?: SortOrder
    dataIntervalloA?: SortOrder
    dataRichiesta?: SortOrder
    dataInizioEffettivaLavoro?: SortOrder
    dataChiusuraSegnalazione?: SortOrder
    dataFineMassima?: SortOrder
    elaborato?: SortOrder
    idSchedulatore?: SortOrder
    tipolavoro?: SortOrder
    note?: SortOrder
    dataCreazioneSegnalazione?: SortOrder
  }

  export type livelliservizioAvgOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    idLds?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    elaborato?: SortOrder
    idSchedulatore?: SortOrder
  }

  export type livelliservizioMaxOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idLds?: SortOrder
    risultato?: SortOrder
    detrazioneEffettivo?: SortOrder
    premioEffettivo?: SortOrder
    chiave?: SortOrder
    unita?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    dataIntervalloDa?: SortOrder
    dataIntervalloA?: SortOrder
    dataRichiesta?: SortOrder
    dataInizioEffettivaLavoro?: SortOrder
    dataChiusuraSegnalazione?: SortOrder
    dataFineMassima?: SortOrder
    elaborato?: SortOrder
    idSchedulatore?: SortOrder
    tipolavoro?: SortOrder
    note?: SortOrder
    dataCreazioneSegnalazione?: SortOrder
  }

  export type livelliservizioMinOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idLds?: SortOrder
    risultato?: SortOrder
    detrazioneEffettivo?: SortOrder
    premioEffettivo?: SortOrder
    chiave?: SortOrder
    unita?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    dataIntervalloDa?: SortOrder
    dataIntervalloA?: SortOrder
    dataRichiesta?: SortOrder
    dataInizioEffettivaLavoro?: SortOrder
    dataChiusuraSegnalazione?: SortOrder
    dataFineMassima?: SortOrder
    elaborato?: SortOrder
    idSchedulatore?: SortOrder
    tipolavoro?: SortOrder
    note?: SortOrder
    dataCreazioneSegnalazione?: SortOrder
  }

  export type livelliservizioSumOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    idLds?: SortOrder
    idSegnalazione?: SortOrder
    idLavoro?: SortOrder
    elaborato?: SortOrder
    idSchedulatore?: SortOrder
  }

  export type FloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type livelliserviziocanoneCountOrderByAggregateInput = {
    id?: SortOrder
    idLds?: SortOrder
    anno?: SortOrder
    semestre?: SortOrder
    trimestre?: SortOrder
    canoneCalcoloLdS?: SortOrder
  }

  export type livelliserviziocanoneAvgOrderByAggregateInput = {
    id?: SortOrder
    idLds?: SortOrder
    semestre?: SortOrder
    trimestre?: SortOrder
    canoneCalcoloLdS?: SortOrder
  }

  export type livelliserviziocanoneMaxOrderByAggregateInput = {
    id?: SortOrder
    idLds?: SortOrder
    anno?: SortOrder
    semestre?: SortOrder
    trimestre?: SortOrder
    canoneCalcoloLdS?: SortOrder
  }

  export type livelliserviziocanoneMinOrderByAggregateInput = {
    id?: SortOrder
    idLds?: SortOrder
    anno?: SortOrder
    semestre?: SortOrder
    trimestre?: SortOrder
    canoneCalcoloLdS?: SortOrder
  }

  export type livelliserviziocanoneSumOrderByAggregateInput = {
    id?: SortOrder
    idLds?: SortOrder
    semestre?: SortOrder
    trimestre?: SortOrder
    canoneCalcoloLdS?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
  }

  export type LivelliservizioListRelationFilter = {
    every?: livelliservizioWhereInput
    some?: livelliservizioWhereInput
    none?: livelliservizioWhereInput
  }

  export type livelliservizioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type livelliserviziodescrizioneCountOrderByAggregateInput = {
    id?: SortOrder
    ambito?: SortOrder
    lds?: SortOrder
    parametroValutazione?: SortOrder
    ldsOT?: SortOrder
    ldsCPT?: SortOrder
    indiceScostamento?: SortOrder
    penaleUnitaria?: SortOrder
    controllo?: SortOrder
    note?: SortOrder
    tipo?: SortOrder
    funzione?: SortOrder
    tipoEstrazione?: SortOrder
  }

  export type livelliserviziodescrizioneAvgOrderByAggregateInput = {
    id?: SortOrder
    penaleUnitaria?: SortOrder
  }

  export type livelliserviziodescrizioneMaxOrderByAggregateInput = {
    id?: SortOrder
    ambito?: SortOrder
    lds?: SortOrder
    parametroValutazione?: SortOrder
    ldsOT?: SortOrder
    ldsCPT?: SortOrder
    indiceScostamento?: SortOrder
    penaleUnitaria?: SortOrder
    controllo?: SortOrder
    note?: SortOrder
    tipo?: SortOrder
    funzione?: SortOrder
    tipoEstrazione?: SortOrder
  }

  export type livelliserviziodescrizioneMinOrderByAggregateInput = {
    id?: SortOrder
    ambito?: SortOrder
    lds?: SortOrder
    parametroValutazione?: SortOrder
    ldsOT?: SortOrder
    ldsCPT?: SortOrder
    indiceScostamento?: SortOrder
    penaleUnitaria?: SortOrder
    controllo?: SortOrder
    note?: SortOrder
    tipo?: SortOrder
    funzione?: SortOrder
    tipoEstrazione?: SortOrder
  }

  export type livelliserviziodescrizioneSumOrderByAggregateInput = {
    id?: SortOrder
    penaleUnitaria?: SortOrder
  }

  export type livelliservizioschedulatoreCountOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    tipologia?: SortOrder
    anno?: SortOrder
    semestre?: SortOrder
    stato?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
  }

  export type livelliservizioschedulatoreAvgOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    anno?: SortOrder
    semestre?: SortOrder
    idUtente?: SortOrder
  }

  export type livelliservizioschedulatoreMaxOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    tipologia?: SortOrder
    anno?: SortOrder
    semestre?: SortOrder
    stato?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
  }

  export type livelliservizioschedulatoreMinOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    tipologia?: SortOrder
    anno?: SortOrder
    semestre?: SortOrder
    stato?: SortOrder
    idUtente?: SortOrder
    dataCreazione?: SortOrder
  }

  export type livelliservizioschedulatoreSumOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    anno?: SortOrder
    semestre?: SortOrder
    idUtente?: SortOrder
  }

  export type mezzoCountOrderByAggregateInput = {
    id?: SortOrder
    tipologiaMezzo?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type mezzoAvgOrderByAggregateInput = {
    id?: SortOrder
    tipologiaMezzo?: SortOrder
  }

  export type mezzoMaxOrderByAggregateInput = {
    id?: SortOrder
    tipologiaMezzo?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type mezzoMinOrderByAggregateInput = {
    id?: SortOrder
    tipologiaMezzo?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type mezzoSumOrderByAggregateInput = {
    id?: SortOrder
    tipologiaMezzo?: SortOrder
  }

  export type oggettoCountOrderByAggregateInput = {
    id?: SortOrder
    catastoId?: SortOrder
  }

  export type oggettoAvgOrderByAggregateInput = {
    id?: SortOrder
    catastoId?: SortOrder
  }

  export type oggettoMaxOrderByAggregateInput = {
    id?: SortOrder
    catastoId?: SortOrder
  }

  export type oggettoMinOrderByAggregateInput = {
    id?: SortOrder
    catastoId?: SortOrder
  }

  export type oggettoSumOrderByAggregateInput = {
    id?: SortOrder
    catastoId?: SortOrder
  }

  export type oggettocivettaCountOrderByAggregateInput = {
    id?: SortOrder
    idSegnalazione?: SortOrder
    idOggettoCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idRifCivetta?: SortOrder
  }

  export type oggettocivettaAvgOrderByAggregateInput = {
    id?: SortOrder
    idSegnalazione?: SortOrder
    idOggettoCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    idRifCivetta?: SortOrder
  }

  export type oggettocivettaMaxOrderByAggregateInput = {
    id?: SortOrder
    idSegnalazione?: SortOrder
    idOggettoCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idRifCivetta?: SortOrder
  }

  export type oggettocivettaMinOrderByAggregateInput = {
    id?: SortOrder
    idSegnalazione?: SortOrder
    idOggettoCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    idRifCivetta?: SortOrder
  }

  export type oggettocivettaSumOrderByAggregateInput = {
    id?: SortOrder
    idSegnalazione?: SortOrder
    idOggettoCatasto?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    idRifCivetta?: SortOrder
  }

  export type personaleCountOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    tipologiaPersonale?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type personaleAvgOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    tipologiaPersonale?: SortOrder
  }

  export type personaleMaxOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    tipologiaPersonale?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type personaleMinOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    tipologiaPersonale?: SortOrder
    descrizione?: SortOrder
    dataModifica?: SortOrder
  }

  export type personaleSumOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    tipologiaPersonale?: SortOrder
  }

  export type poiCountOrderByAggregateInput = {
    id?: SortOrder
    descrizione?: SortOrder
    dataInizio?: SortOrder
    dataFine?: SortOrder
    idAppalto?: SortOrder
    notePOI?: SortOrder
  }

  export type poiAvgOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
  }

  export type poiMaxOrderByAggregateInput = {
    id?: SortOrder
    descrizione?: SortOrder
    dataInizio?: SortOrder
    dataFine?: SortOrder
    idAppalto?: SortOrder
    notePOI?: SortOrder
  }

  export type poiMinOrderByAggregateInput = {
    id?: SortOrder
    descrizione?: SortOrder
    dataInizio?: SortOrder
    dataFine?: SortOrder
    idAppalto?: SortOrder
    notePOI?: SortOrder
  }

  export type poiSumOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
  }

  export type praticaCountOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    nomePratica?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarata?: SortOrder
    notePratica?: SortOrder
    importoPratica?: SortOrder
    del?: SortOrder
    dataCreazione?: SortOrder
    statoCorrentePratica?: SortOrder
    delLavori?: SortOrder
  }

  export type praticaAvgOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
  }

  export type praticaMaxOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    nomePratica?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarata?: SortOrder
    notePratica?: SortOrder
    importoPratica?: SortOrder
    del?: SortOrder
    dataCreazione?: SortOrder
    statoCorrentePratica?: SortOrder
    delLavori?: SortOrder
  }

  export type praticaMinOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    nomePratica?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarata?: SortOrder
    notePratica?: SortOrder
    importoPratica?: SortOrder
    del?: SortOrder
    dataCreazione?: SortOrder
    statoCorrentePratica?: SortOrder
    delLavori?: SortOrder
  }

  export type praticaSumOrderByAggregateInput = {
    id?: SortOrder
    idUtente?: SortOrder
    idAppalto?: SortOrder
  }

  export type praticastoricoCountOrderByAggregateInput = {
    id?: SortOrder
    idPratica?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    nomePratica?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarata?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    notePratica?: SortOrder
    importoPratica?: SortOrder
    del?: SortOrder
    dataCreazione?: SortOrder
    statoCorrentePratica?: SortOrder
    delLavori?: SortOrder
  }

  export type praticastoricoAvgOrderByAggregateInput = {
    id?: SortOrder
    idPratica?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
  }

  export type praticastoricoMaxOrderByAggregateInput = {
    id?: SortOrder
    idPratica?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    nomePratica?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarata?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    notePratica?: SortOrder
    importoPratica?: SortOrder
    del?: SortOrder
    dataCreazione?: SortOrder
    statoCorrentePratica?: SortOrder
    delLavori?: SortOrder
  }

  export type praticastoricoMinOrderByAggregateInput = {
    id?: SortOrder
    idPratica?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    nomePratica?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarata?: SortOrder
    dataModifica?: SortOrder
    dataChiusura?: SortOrder
    notePratica?: SortOrder
    importoPratica?: SortOrder
    del?: SortOrder
    dataCreazione?: SortOrder
    statoCorrentePratica?: SortOrder
    delLavori?: SortOrder
  }

  export type praticastoricoSumOrderByAggregateInput = {
    id?: SortOrder
    idPratica?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
  }

  export type prezzarioCountOrderByAggregateInput = {
    id?: SortOrder
    descrizione?: SortOrder
    unitaDiMisura?: SortOrder
    prezzo?: SortOrder
  }

  export type prezzarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type prezzarioMaxOrderByAggregateInput = {
    id?: SortOrder
    descrizione?: SortOrder
    unitaDiMisura?: SortOrder
    prezzo?: SortOrder
  }

  export type prezzarioMinOrderByAggregateInput = {
    id?: SortOrder
    descrizione?: SortOrder
    unitaDiMisura?: SortOrder
    prezzo?: SortOrder
  }

  export type prezzarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FontiRelationFilter = {
    is?: fontiWhereInput | null
    isNot?: fontiWhereInput | null
  }

  export type SegnalatoreRelationFilter = {
    is?: segnalatoreWhereInput | null
    isNot?: segnalatoreWhereInput | null
  }

  export type Segnalazione_geticoRelationFilter = {
    is?: segnalazione_geticoWhereInput | null
    isNot?: segnalazione_geticoWhereInput | null
  }

  export type registrorichiedenteCountOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    noteSegnalatore?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    idUtente?: SortOrder
    idSegnalazione?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    idSegnalazioneGetico?: SortOrder
    del?: SortOrder
  }

  export type registrorichiedenteAvgOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    idSegnalazione?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    idSegnalazioneGetico?: SortOrder
  }

  export type registrorichiedenteMaxOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    noteSegnalatore?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    idUtente?: SortOrder
    idSegnalazione?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    idSegnalazioneGetico?: SortOrder
    del?: SortOrder
  }

  export type registrorichiedenteMinOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    noteSegnalatore?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    idUtente?: SortOrder
    idSegnalazione?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    idSegnalazioneGetico?: SortOrder
    del?: SortOrder
  }

  export type registrorichiedenteSumOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idUtente?: SortOrder
    idSegnalazione?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    idSegnalazioneGetico?: SortOrder
  }

  export type segnalatoreCountOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    tipoSegnalatore?: SortOrder
    nomeSegnalatore?: SortOrder
    cognomeSegnalatore?: SortOrder
    telefonoSegnalatore?: SortOrder
    emailSegnalatore?: SortOrder
    cellulareSegnalatore?: SortOrder
    pecSegnalatore?: SortOrder
  }

  export type segnalatoreAvgOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    tipoSegnalatore?: SortOrder
  }

  export type segnalatoreMaxOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    tipoSegnalatore?: SortOrder
    nomeSegnalatore?: SortOrder
    cognomeSegnalatore?: SortOrder
    telefonoSegnalatore?: SortOrder
    emailSegnalatore?: SortOrder
    cellulareSegnalatore?: SortOrder
    pecSegnalatore?: SortOrder
  }

  export type segnalatoreMinOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    tipoSegnalatore?: SortOrder
    nomeSegnalatore?: SortOrder
    cognomeSegnalatore?: SortOrder
    telefonoSegnalatore?: SortOrder
    emailSegnalatore?: SortOrder
    cellulareSegnalatore?: SortOrder
    pecSegnalatore?: SortOrder
  }

  export type segnalatoreSumOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    tipoSegnalatore?: SortOrder
  }

  export type IntNullableListFilter = {
    equals?: Enumerable<number> | null
    has?: number | null
    hasEvery?: Enumerable<number>
    hasSome?: Enumerable<number>
    isEmpty?: boolean
  }

  export type TecniciRelationFilter = {
    is?: tecniciWhereInput | null
    isNot?: tecniciWhereInput | null
  }

  export type TipoprovvedimentoRelationFilter = {
    is?: tipoprovvedimentoWhereInput | null
    isNot?: tipoprovvedimentoWhereInput | null
  }

  export type TiposeveritaRelationFilter = {
    is?: tiposeveritaWhereInput | null
    isNot?: tiposeveritaWhereInput | null
  }

  export type TipoeventoRelationFilter = {
    is?: tipoeventoWhereInput | null
    isNot?: tipoeventoWhereInput | null
  }

  export type SegnalazionestatostoricoListRelationFilter = {
    every?: segnalazionestatostoricoWhereInput
    some?: segnalazionestatostoricoWhereInput
    none?: segnalazionestatostoricoWhereInput
  }

  export type segnalazionestatostoricoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type segnalazioneCountOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    noteSegnalatore?: SortOrder
    segnalatori?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneDichiarata?: SortOrder
    localizzazioneDichiarataCivico?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    commentoAnomalia?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idTecnico?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    idLavoroAssociato?: SortOrder
    dataChiusura?: SortOrder
    statoCorrenteSegnalazione?: SortOrder
    del?: SortOrder
    idSegnalazioneGetico?: SortOrder
    delOggettiCatasto?: SortOrder
    sottoservizi?: SortOrder
    sinistri?: SortOrder
    richiestaSopralluogo?: SortOrder
    numeroProvvedimento?: SortOrder
    idTipoProvvedimento?: SortOrder
  }

  export type segnalazioneAvgOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    segnalatori?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idTecnico?: SortOrder
    idSegnalazioneGetico?: SortOrder
    idTipoProvvedimento?: SortOrder
  }

  export type segnalazioneMaxOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    noteSegnalatore?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneDichiarata?: SortOrder
    localizzazioneDichiarataCivico?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    commentoAnomalia?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idTecnico?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    idLavoroAssociato?: SortOrder
    dataChiusura?: SortOrder
    statoCorrenteSegnalazione?: SortOrder
    del?: SortOrder
    idSegnalazioneGetico?: SortOrder
    delOggettiCatasto?: SortOrder
    sottoservizi?: SortOrder
    sinistri?: SortOrder
    richiestaSopralluogo?: SortOrder
    numeroProvvedimento?: SortOrder
    idTipoProvvedimento?: SortOrder
  }

  export type segnalazioneMinOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    noteSegnalatore?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneDichiarata?: SortOrder
    localizzazioneDichiarataCivico?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    commentoAnomalia?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idTecnico?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    idLavoroAssociato?: SortOrder
    dataChiusura?: SortOrder
    statoCorrenteSegnalazione?: SortOrder
    del?: SortOrder
    idSegnalazioneGetico?: SortOrder
    delOggettiCatasto?: SortOrder
    sottoservizi?: SortOrder
    sinistri?: SortOrder
    richiestaSopralluogo?: SortOrder
    numeroProvvedimento?: SortOrder
    idTipoProvvedimento?: SortOrder
  }

  export type segnalazioneSumOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    segnalatori?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idTecnico?: SortOrder
    idSegnalazioneGetico?: SortOrder
    idTipoProvvedimento?: SortOrder
  }

  export type segnalazione_geticoCountOrderByAggregateInput = {
    id?: SortOrder
    id_ticket?: SortOrder
    segnalante_nome?: SortOrder
    segnalante_cognome?: SortOrder
    segnalante_email?: SortOrder
    segnalante_telefono?: SortOrder
    luogo_indirizzo?: SortOrder
    luogo_civico?: SortOrder
    luogo_ubicazione?: SortOrder
    descrizione?: SortOrder
    tipologia?: SortOrder
    flg_stato?: SortOrder
    luogo_quartiere?: SortOrder
    dataRichiesta?: SortOrder
    dataInoltro?: SortOrder
    ufficioProvenienza?: SortOrder
    luogo_civico2?: SortOrder
    luogo_indirizzo2?: SortOrder
    ufficio_inoltro?: SortOrder
    json_uffici?: SortOrder
    note_esito?: SortOrder
    sopralluogo?: SortOrder
    sopralluogo_note?: SortOrder
    sopralluogo_effettuato?: SortOrder
    sopralluogo_importato?: SortOrder
    sopralluogo_catasto_json?: SortOrder
  }

  export type segnalazione_geticoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type segnalazione_geticoMaxOrderByAggregateInput = {
    id?: SortOrder
    id_ticket?: SortOrder
    segnalante_nome?: SortOrder
    segnalante_cognome?: SortOrder
    segnalante_email?: SortOrder
    segnalante_telefono?: SortOrder
    luogo_indirizzo?: SortOrder
    luogo_civico?: SortOrder
    luogo_ubicazione?: SortOrder
    descrizione?: SortOrder
    tipologia?: SortOrder
    flg_stato?: SortOrder
    luogo_quartiere?: SortOrder
    dataRichiesta?: SortOrder
    dataInoltro?: SortOrder
    ufficioProvenienza?: SortOrder
    luogo_civico2?: SortOrder
    luogo_indirizzo2?: SortOrder
    ufficio_inoltro?: SortOrder
    json_uffici?: SortOrder
    note_esito?: SortOrder
    sopralluogo?: SortOrder
    sopralluogo_note?: SortOrder
    sopralluogo_effettuato?: SortOrder
    sopralluogo_importato?: SortOrder
    sopralluogo_catasto_json?: SortOrder
  }

  export type segnalazione_geticoMinOrderByAggregateInput = {
    id?: SortOrder
    id_ticket?: SortOrder
    segnalante_nome?: SortOrder
    segnalante_cognome?: SortOrder
    segnalante_email?: SortOrder
    segnalante_telefono?: SortOrder
    luogo_indirizzo?: SortOrder
    luogo_civico?: SortOrder
    luogo_ubicazione?: SortOrder
    descrizione?: SortOrder
    tipologia?: SortOrder
    flg_stato?: SortOrder
    luogo_quartiere?: SortOrder
    dataRichiesta?: SortOrder
    dataInoltro?: SortOrder
    ufficioProvenienza?: SortOrder
    luogo_civico2?: SortOrder
    luogo_indirizzo2?: SortOrder
    ufficio_inoltro?: SortOrder
    json_uffici?: SortOrder
    note_esito?: SortOrder
    sopralluogo?: SortOrder
    sopralluogo_note?: SortOrder
    sopralluogo_effettuato?: SortOrder
    sopralluogo_importato?: SortOrder
    sopralluogo_catasto_json?: SortOrder
  }

  export type segnalazione_geticoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SegnalazioneRelationFilter = {
    is?: segnalazioneWhereInput | null
    isNot?: segnalazioneWhereInput | null
  }

  export type segnalazionestatostoricoCountOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
  }

  export type segnalazionestatostoricoAvgOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    idUtente?: SortOrder
  }

  export type segnalazionestatostoricoMaxOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
  }

  export type segnalazionestatostoricoMinOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    idUtente?: SortOrder
    dataModifica?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
  }

  export type segnalazionestatostoricoSumOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    idUtente?: SortOrder
  }

  export type segnalazionestoricoCountOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    noteSegnalatore?: SortOrder
    segnalatori?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneDichiarata?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    commentoAnomalia?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    flgCambioStato?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idLavoroAssociato?: SortOrder
    statoCorrenteSegnalazione?: SortOrder
    idSegnalazioneGetico?: SortOrder
    sottoservizi?: SortOrder
    sinistri?: SortOrder
    richiestaSopralluogo?: SortOrder
    delOggettiCatasto?: SortOrder
    idTecnico?: SortOrder
    numeroProvvedimento?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarataCivico?: SortOrder
    del?: SortOrder
    idTipoProvvedimento?: SortOrder
  }

  export type segnalazionestoricoAvgOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    segnalatori?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idSegnalazioneGetico?: SortOrder
    idTecnico?: SortOrder
    idTipoProvvedimento?: SortOrder
  }

  export type segnalazionestoricoMaxOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    noteSegnalatore?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneDichiarata?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    commentoAnomalia?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    flgCambioStato?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idLavoroAssociato?: SortOrder
    statoCorrenteSegnalazione?: SortOrder
    idSegnalazioneGetico?: SortOrder
    sottoservizi?: SortOrder
    sinistri?: SortOrder
    richiestaSopralluogo?: SortOrder
    delOggettiCatasto?: SortOrder
    idTecnico?: SortOrder
    numeroProvvedimento?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarataCivico?: SortOrder
    del?: SortOrder
    idTipoProvvedimento?: SortOrder
  }

  export type segnalazionestoricoMinOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    noteSegnalatore?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataRichiesta?: SortOrder
    localizzazioneDichiarata?: SortOrder
    localizzazioneNote?: SortOrder
    descrizioneAnomalia?: SortOrder
    commentoAnomalia?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    dataModificaStato?: SortOrder
    stato?: SortOrder
    notaStato?: SortOrder
    flgCambioStato?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idLavoroAssociato?: SortOrder
    statoCorrenteSegnalazione?: SortOrder
    idSegnalazioneGetico?: SortOrder
    sottoservizi?: SortOrder
    sinistri?: SortOrder
    richiestaSopralluogo?: SortOrder
    delOggettiCatasto?: SortOrder
    idTecnico?: SortOrder
    numeroProvvedimento?: SortOrder
    dataChiusura?: SortOrder
    localizzazioneDichiarataQuartiere?: SortOrder
    localizzazioneDichiarataCivico?: SortOrder
    del?: SortOrder
    idTipoProvvedimento?: SortOrder
  }

  export type segnalazionestoricoSumOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idSegnalazione?: SortOrder
    segnalatori?: SortOrder
    idEvento?: SortOrder
    idPratica?: SortOrder
    idUtente?: SortOrder
    idUtenteStato?: SortOrder
    idSegnalatore?: SortOrder
    fonteSegnalazione?: SortOrder
    categoriaAnomalia?: SortOrder
    dettaglioAnomalia?: SortOrder
    severitaEvento?: SortOrder
    tipoEvento?: SortOrder
    idSegnalazioneGetico?: SortOrder
    idTecnico?: SortOrder
    idTipoProvvedimento?: SortOrder
  }

  export type sottocategoriaanomaliaCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type sottocategoriaanomaliaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type sottocategoriaanomaliaMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type sottocategoriaanomaliaMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type sottocategoriaanomaliaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type sottocategoriaanomalia_sottocategorialavoroCountOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
  }

  export type sottocategoriaanomalia_sottocategorialavoroAvgOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
  }

  export type sottocategoriaanomalia_sottocategorialavoroMaxOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
  }

  export type sottocategoriaanomalia_sottocategorialavoroMinOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
  }

  export type sottocategoriaanomalia_sottocategorialavoroSumOrderByAggregateInput = {
    id?: SortOrder
    id_categoria_anomalia?: SortOrder
    id_sottocategoria_anomalia?: SortOrder
    id_sottocategoria_lavoro?: SortOrder
  }

  export type sottocategorialavoroCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type sottocategorialavoroAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type sottocategorialavoroMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type sottocategorialavoroMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type sottocategorialavoroSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type statoCountOrderByAggregateInput = {
    id?: SortOrder
    idEvento?: SortOrder
    classeCorrente?: SortOrder
    statoCorrente?: SortOrder
    idUtente?: SortOrder
    storiaStato?: SortOrder
  }

  export type statoAvgOrderByAggregateInput = {
    id?: SortOrder
    idEvento?: SortOrder
    classeCorrente?: SortOrder
    statoCorrente?: SortOrder
    idUtente?: SortOrder
    storiaStato?: SortOrder
  }

  export type statoMaxOrderByAggregateInput = {
    id?: SortOrder
    idEvento?: SortOrder
    classeCorrente?: SortOrder
    statoCorrente?: SortOrder
    idUtente?: SortOrder
    storiaStato?: SortOrder
  }

  export type statoMinOrderByAggregateInput = {
    id?: SortOrder
    idEvento?: SortOrder
    classeCorrente?: SortOrder
    statoCorrente?: SortOrder
    idUtente?: SortOrder
    storiaStato?: SortOrder
  }

  export type statoSumOrderByAggregateInput = {
    id?: SortOrder
    idEvento?: SortOrder
    classeCorrente?: SortOrder
    statoCorrente?: SortOrder
    idUtente?: SortOrder
    storiaStato?: SortOrder
  }

  export type storiastatoCountOrderByAggregateInput = {
    id?: SortOrder
    statoStorico?: SortOrder
    stato?: SortOrder
    dataStato?: SortOrder
  }

  export type storiastatoAvgOrderByAggregateInput = {
    id?: SortOrder
    statoStorico?: SortOrder
    stato?: SortOrder
  }

  export type storiastatoMaxOrderByAggregateInput = {
    id?: SortOrder
    statoStorico?: SortOrder
    stato?: SortOrder
    dataStato?: SortOrder
  }

  export type storiastatoMinOrderByAggregateInput = {
    id?: SortOrder
    statoStorico?: SortOrder
    stato?: SortOrder
    dataStato?: SortOrder
  }

  export type storiastatoSumOrderByAggregateInput = {
    id?: SortOrder
    statoStorico?: SortOrder
    stato?: SortOrder
  }

  export type tecniciCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tecniciAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tecniciMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tecniciMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tecniciSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipoeventoCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tipoeventoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipoeventoMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tipoeventoMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tipoeventoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipologiaCountOrderByAggregateInput = {
    id?: SortOrder
    proprieta?: SortOrder
  }

  export type tipologiaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipologiaMaxOrderByAggregateInput = {
    id?: SortOrder
    proprieta?: SortOrder
  }

  export type tipologiaMinOrderByAggregateInput = {
    id?: SortOrder
    proprieta?: SortOrder
  }

  export type tipologiaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipooggettoCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    tabellaNome?: SortOrder
  }

  export type tipooggettoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipooggettoMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    tabellaNome?: SortOrder
  }

  export type tipooggettoMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    tabellaNome?: SortOrder
  }

  export type tipooggettoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipoprovvedimentoCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tipoprovvedimentoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipoprovvedimentoMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tipoprovvedimentoMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tipoprovvedimentoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tiposegnalatoreCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tiposegnalatoreAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tiposegnalatoreMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tiposegnalatoreMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tiposegnalatoreSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tiposeveritaCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tiposeveritaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tiposeveritaMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tiposeveritaMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type tiposeveritaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringFilter | string
  }

  export type CatastoanomaliaListRelationFilter = {
    every?: catastoanomaliaWhereInput
    some?: catastoanomaliaWhereInput
    none?: catastoanomaliaWhereInput
  }

  export type OggettocivettaListRelationFilter = {
    every?: oggettocivettaWhereInput
    some?: oggettocivettaWhereInput
    none?: oggettocivettaWhereInput
  }

  export type PraticaListRelationFilter = {
    every?: praticaWhereInput
    some?: praticaWhereInput
    none?: praticaWhereInput
  }

  export type PraticastoricoListRelationFilter = {
    every?: praticastoricoWhereInput
    some?: praticastoricoWhereInput
    none?: praticastoricoWhereInput
  }

  export type GruppoRelationFilter = {
    is?: gruppoWhereInput | null
    isNot?: gruppoWhereInput | null
  }

  export type catastoanomaliaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type oggettocivettaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type praticaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type praticastoricoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type utentiCountOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    nome?: SortOrder
    cognome?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    status?: SortOrder
    permessi?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataSospensione?: SortOrder
    idGruppo?: SortOrder
    del?: SortOrder
    scadenzaPassword?: SortOrder
    roles?: SortOrder
  }

  export type utentiAvgOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idGruppo?: SortOrder
  }

  export type utentiMaxOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    nome?: SortOrder
    cognome?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    status?: SortOrder
    permessi?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataSospensione?: SortOrder
    idGruppo?: SortOrder
    del?: SortOrder
    scadenzaPassword?: SortOrder
    roles?: SortOrder
  }

  export type utentiMinOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    nome?: SortOrder
    cognome?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    status?: SortOrder
    permessi?: SortOrder
    dataCreazione?: SortOrder
    dataModifica?: SortOrder
    dataSospensione?: SortOrder
    idGruppo?: SortOrder
    del?: SortOrder
    scadenzaPassword?: SortOrder
    roles?: SortOrder
  }

  export type utentiSumOrderByAggregateInput = {
    id?: SortOrder
    idAppalto?: SortOrder
    idGruppo?: SortOrder
  }

  export type StringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type utentiCreateNestedOneWithoutCatastoanomaliaInput = {
    create?: XOR<utentiCreateWithoutCatastoanomaliaInput, utentiUncheckedCreateWithoutCatastoanomaliaInput>
    connectOrCreate?: utentiCreateOrConnectWithoutCatastoanomaliaInput
    connect?: utentiWhereUniqueInput
  }

  export type utentiUpdateOneWithoutCatastoanomaliaNestedInput = {
    create?: XOR<utentiCreateWithoutCatastoanomaliaInput, utentiUncheckedCreateWithoutCatastoanomaliaInput>
    connectOrCreate?: utentiCreateOrConnectWithoutCatastoanomaliaInput
    upsert?: utentiUpsertWithoutCatastoanomaliaInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutCatastoanomaliaInput, utentiUncheckedUpdateWithoutCatastoanomaliaInput>
  }

  export type lavoroCreateNestedOneWithoutCatastolinkerInput = {
    create?: XOR<lavoroCreateWithoutCatastolinkerInput, lavoroUncheckedCreateWithoutCatastolinkerInput>
    connectOrCreate?: lavoroCreateOrConnectWithoutCatastolinkerInput
    connect?: lavoroWhereUniqueInput
  }

  export type praticaCreateNestedOneWithoutCatastolinkerInput = {
    create?: XOR<praticaCreateWithoutCatastolinkerInput, praticaUncheckedCreateWithoutCatastolinkerInput>
    connectOrCreate?: praticaCreateOrConnectWithoutCatastolinkerInput
    connect?: praticaWhereUniqueInput
  }

  export type utentiCreateNestedOneWithoutCatastolinkerInput = {
    create?: XOR<utentiCreateWithoutCatastolinkerInput, utentiUncheckedCreateWithoutCatastolinkerInput>
    connectOrCreate?: utentiCreateOrConnectWithoutCatastolinkerInput
    connect?: utentiWhereUniqueInput
  }

  export type lavoroUpdateOneWithoutCatastolinkerNestedInput = {
    create?: XOR<lavoroCreateWithoutCatastolinkerInput, lavoroUncheckedCreateWithoutCatastolinkerInput>
    connectOrCreate?: lavoroCreateOrConnectWithoutCatastolinkerInput
    upsert?: lavoroUpsertWithoutCatastolinkerInput
    disconnect?: boolean
    delete?: boolean
    connect?: lavoroWhereUniqueInput
    update?: XOR<lavoroUpdateWithoutCatastolinkerInput, lavoroUncheckedUpdateWithoutCatastolinkerInput>
  }

  export type praticaUpdateOneWithoutCatastolinkerNestedInput = {
    create?: XOR<praticaCreateWithoutCatastolinkerInput, praticaUncheckedCreateWithoutCatastolinkerInput>
    connectOrCreate?: praticaCreateOrConnectWithoutCatastolinkerInput
    upsert?: praticaUpsertWithoutCatastolinkerInput
    disconnect?: boolean
    delete?: boolean
    connect?: praticaWhereUniqueInput
    update?: XOR<praticaUpdateWithoutCatastolinkerInput, praticaUncheckedUpdateWithoutCatastolinkerInput>
  }

  export type utentiUpdateOneWithoutCatastolinkerNestedInput = {
    create?: XOR<utentiCreateWithoutCatastolinkerInput, utentiUncheckedCreateWithoutCatastolinkerInput>
    connectOrCreate?: utentiCreateOrConnectWithoutCatastolinkerInput
    upsert?: utentiUpsertWithoutCatastolinkerInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutCatastolinkerInput, utentiUncheckedUpdateWithoutCatastolinkerInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateWithoutCategoriaanomaliaInput>, Enumerable<categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: categoriaanomalia_sottocategoriaanomaliaCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
  }

  export type categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput>, Enumerable<categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategorialavoroCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: categoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
  }

  export type lavoroCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutCategoriaanomaliaInput>, Enumerable<lavoroUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: lavoroCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<lavoroWhereUniqueInput>
  }

  export type lavorostoricoCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutCategoriaanomaliaInput>, Enumerable<lavorostoricoUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: lavorostoricoCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
  }

  export type segnalazioneCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutCategoriaanomaliaInput>, Enumerable<segnalazioneUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: segnalazioneCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutCategoriaanomaliaInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: segnalazionestoricoCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput>, Enumerable<sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: sottocategoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateWithoutCategoriaanomaliaInput>, Enumerable<categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: categoriaanomalia_sottocategoriaanomaliaCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
  }

  export type categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput>, Enumerable<categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategorialavoroCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: categoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
  }

  export type lavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutCategoriaanomaliaInput>, Enumerable<lavoroUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: lavoroCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<lavoroWhereUniqueInput>
  }

  export type lavorostoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutCategoriaanomaliaInput>, Enumerable<lavorostoricoUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: lavorostoricoCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
  }

  export type segnalazioneUncheckedCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutCategoriaanomaliaInput>, Enumerable<segnalazioneUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: segnalazioneCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutCategoriaanomaliaInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: segnalazionestoricoCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput = {
    create?: XOR<Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput>, Enumerable<sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutCategoriaanomaliaInput>
    createMany?: sottocategoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInputEnvelope
    connect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateWithoutCategoriaanomaliaInput>, Enumerable<categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<categoriaanomalia_sottocategoriaanomaliaUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: categoriaanomalia_sottocategoriaanomaliaCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    disconnect?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    delete?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    connect?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    update?: Enumerable<categoriaanomalia_sottocategoriaanomaliaUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<categoriaanomalia_sottocategoriaanomaliaUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<categoriaanomalia_sottocategoriaanomaliaScalarWhereInput>
  }

  export type categoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput>, Enumerable<categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategorialavoroCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<categoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: categoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    disconnect?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    delete?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    connect?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    update?: Enumerable<categoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<categoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<categoriaanomalia_sottocategorialavoroScalarWhereInput>
  }

  export type lavoroUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutCategoriaanomaliaInput>, Enumerable<lavoroUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<lavoroUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: lavoroCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<lavoroWhereUniqueInput>
    disconnect?: Enumerable<lavoroWhereUniqueInput>
    delete?: Enumerable<lavoroWhereUniqueInput>
    connect?: Enumerable<lavoroWhereUniqueInput>
    update?: Enumerable<lavoroUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<lavoroUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<lavoroScalarWhereInput>
  }

  export type lavorostoricoUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutCategoriaanomaliaInput>, Enumerable<lavorostoricoUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<lavorostoricoUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: lavorostoricoCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<lavorostoricoWhereUniqueInput>
    disconnect?: Enumerable<lavorostoricoWhereUniqueInput>
    delete?: Enumerable<lavorostoricoWhereUniqueInput>
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
    update?: Enumerable<lavorostoricoUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<lavorostoricoUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<lavorostoricoScalarWhereInput>
  }

  export type segnalazioneUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutCategoriaanomaliaInput>, Enumerable<segnalazioneUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: segnalazioneCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutCategoriaanomaliaInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: segnalazionestoricoCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput>, Enumerable<sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: sottocategoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    disconnect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    delete?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    connect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    update?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<sottocategoriaanomalia_sottocategorialavoroScalarWhereInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateWithoutCategoriaanomaliaInput>, Enumerable<categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<categoriaanomalia_sottocategoriaanomaliaUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: categoriaanomalia_sottocategoriaanomaliaCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    disconnect?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    delete?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    connect?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    update?: Enumerable<categoriaanomalia_sottocategoriaanomaliaUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<categoriaanomalia_sottocategoriaanomaliaUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<categoriaanomalia_sottocategoriaanomaliaScalarWhereInput>
  }

  export type categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput>, Enumerable<categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategorialavoroCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<categoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: categoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    disconnect?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    delete?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    connect?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    update?: Enumerable<categoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<categoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<categoriaanomalia_sottocategorialavoroScalarWhereInput>
  }

  export type lavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutCategoriaanomaliaInput>, Enumerable<lavoroUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<lavoroUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: lavoroCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<lavoroWhereUniqueInput>
    disconnect?: Enumerable<lavoroWhereUniqueInput>
    delete?: Enumerable<lavoroWhereUniqueInput>
    connect?: Enumerable<lavoroWhereUniqueInput>
    update?: Enumerable<lavoroUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<lavoroUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<lavoroScalarWhereInput>
  }

  export type lavorostoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutCategoriaanomaliaInput>, Enumerable<lavorostoricoUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<lavorostoricoUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: lavorostoricoCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<lavorostoricoWhereUniqueInput>
    disconnect?: Enumerable<lavorostoricoWhereUniqueInput>
    delete?: Enumerable<lavorostoricoWhereUniqueInput>
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
    update?: Enumerable<lavorostoricoUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<lavorostoricoUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<lavorostoricoScalarWhereInput>
  }

  export type segnalazioneUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutCategoriaanomaliaInput>, Enumerable<segnalazioneUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: segnalazioneCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutCategoriaanomaliaInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: segnalazionestoricoCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput>, Enumerable<sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutCategoriaanomaliaInput>
    upsert?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutCategoriaanomaliaInput>
    createMany?: sottocategoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInputEnvelope
    set?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    disconnect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    delete?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    connect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    update?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutCategoriaanomaliaInput>
    updateMany?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutCategoriaanomaliaInput>
    deleteMany?: Enumerable<sottocategoriaanomalia_sottocategorialavoroScalarWhereInput>
  }

  export type categoriaanomaliaCreateNestedOneWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    create?: XOR<categoriaanomaliaCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput, categoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutCategoriaanomalia_sottocategoriaanomaliaInput
    connect?: categoriaanomaliaWhereUniqueInput
  }

  export type sottocategoriaanomaliaCreateNestedOneWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    create?: XOR<sottocategoriaanomaliaCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput, sottocategoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
    connectOrCreate?: sottocategoriaanomaliaCreateOrConnectWithoutCategoriaanomalia_sottocategoriaanomaliaInput
    connect?: sottocategoriaanomaliaWhereUniqueInput
  }

  export type categoriaanomaliaUpdateOneWithoutCategoriaanomalia_sottocategoriaanomaliaNestedInput = {
    create?: XOR<categoriaanomaliaCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput, categoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutCategoriaanomalia_sottocategoriaanomaliaInput
    upsert?: categoriaanomaliaUpsertWithoutCategoriaanomalia_sottocategoriaanomaliaInput
    disconnect?: boolean
    delete?: boolean
    connect?: categoriaanomaliaWhereUniqueInput
    update?: XOR<categoriaanomaliaUpdateWithoutCategoriaanomalia_sottocategoriaanomaliaInput, categoriaanomaliaUncheckedUpdateWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
  }

  export type sottocategoriaanomaliaUpdateOneWithoutCategoriaanomalia_sottocategoriaanomaliaNestedInput = {
    create?: XOR<sottocategoriaanomaliaCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput, sottocategoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
    connectOrCreate?: sottocategoriaanomaliaCreateOrConnectWithoutCategoriaanomalia_sottocategoriaanomaliaInput
    upsert?: sottocategoriaanomaliaUpsertWithoutCategoriaanomalia_sottocategoriaanomaliaInput
    disconnect?: boolean
    delete?: boolean
    connect?: sottocategoriaanomaliaWhereUniqueInput
    update?: XOR<sottocategoriaanomaliaUpdateWithoutCategoriaanomalia_sottocategoriaanomaliaInput, sottocategoriaanomaliaUncheckedUpdateWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
  }

  export type categoriaanomaliaCreateNestedOneWithoutCategoriaanomalia_sottocategorialavoroInput = {
    create?: XOR<categoriaanomaliaCreateWithoutCategoriaanomalia_sottocategorialavoroInput, categoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategorialavoroInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutCategoriaanomalia_sottocategorialavoroInput
    connect?: categoriaanomaliaWhereUniqueInput
  }

  export type sottocategorialavoroCreateNestedOneWithoutCategoriaanomalia_sottocategorialavoroInput = {
    create?: XOR<sottocategorialavoroCreateWithoutCategoriaanomalia_sottocategorialavoroInput, sottocategorialavoroUncheckedCreateWithoutCategoriaanomalia_sottocategorialavoroInput>
    connectOrCreate?: sottocategorialavoroCreateOrConnectWithoutCategoriaanomalia_sottocategorialavoroInput
    connect?: sottocategorialavoroWhereUniqueInput
  }

  export type categoriaanomaliaUpdateOneWithoutCategoriaanomalia_sottocategorialavoroNestedInput = {
    create?: XOR<categoriaanomaliaCreateWithoutCategoriaanomalia_sottocategorialavoroInput, categoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategorialavoroInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutCategoriaanomalia_sottocategorialavoroInput
    upsert?: categoriaanomaliaUpsertWithoutCategoriaanomalia_sottocategorialavoroInput
    disconnect?: boolean
    delete?: boolean
    connect?: categoriaanomaliaWhereUniqueInput
    update?: XOR<categoriaanomaliaUpdateWithoutCategoriaanomalia_sottocategorialavoroInput, categoriaanomaliaUncheckedUpdateWithoutCategoriaanomalia_sottocategorialavoroInput>
  }

  export type sottocategorialavoroUpdateOneWithoutCategoriaanomalia_sottocategorialavoroNestedInput = {
    create?: XOR<sottocategorialavoroCreateWithoutCategoriaanomalia_sottocategorialavoroInput, sottocategorialavoroUncheckedCreateWithoutCategoriaanomalia_sottocategorialavoroInput>
    connectOrCreate?: sottocategorialavoroCreateOrConnectWithoutCategoriaanomalia_sottocategorialavoroInput
    upsert?: sottocategorialavoroUpsertWithoutCategoriaanomalia_sottocategorialavoroInput
    disconnect?: boolean
    delete?: boolean
    connect?: sottocategorialavoroWhereUniqueInput
    update?: XOR<sottocategorialavoroUpdateWithoutCategoriaanomalia_sottocategorialavoroInput, sottocategorialavoroUncheckedUpdateWithoutCategoriaanomalia_sottocategorialavoroInput>
  }

  export type registrorichiedenteCreateNestedManyWithoutFontiInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutFontiInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutFontiInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutFontiInput>
    createMany?: registrorichiedenteCreateManyFontiInputEnvelope
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
  }

  export type segnalazioneCreateNestedManyWithoutFontiInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutFontiInput>, Enumerable<segnalazioneUncheckedCreateWithoutFontiInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutFontiInput>
    createMany?: segnalazioneCreateManyFontiInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoCreateNestedManyWithoutFontiInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutFontiInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutFontiInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutFontiInput>
    createMany?: segnalazionestoricoCreateManyFontiInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type registrorichiedenteUncheckedCreateNestedManyWithoutFontiInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutFontiInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutFontiInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutFontiInput>
    createMany?: registrorichiedenteCreateManyFontiInputEnvelope
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
  }

  export type segnalazioneUncheckedCreateNestedManyWithoutFontiInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutFontiInput>, Enumerable<segnalazioneUncheckedCreateWithoutFontiInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutFontiInput>
    createMany?: segnalazioneCreateManyFontiInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoUncheckedCreateNestedManyWithoutFontiInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutFontiInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutFontiInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutFontiInput>
    createMany?: segnalazionestoricoCreateManyFontiInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type registrorichiedenteUpdateManyWithoutFontiNestedInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutFontiInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutFontiInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutFontiInput>
    upsert?: Enumerable<registrorichiedenteUpsertWithWhereUniqueWithoutFontiInput>
    createMany?: registrorichiedenteCreateManyFontiInputEnvelope
    set?: Enumerable<registrorichiedenteWhereUniqueInput>
    disconnect?: Enumerable<registrorichiedenteWhereUniqueInput>
    delete?: Enumerable<registrorichiedenteWhereUniqueInput>
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
    update?: Enumerable<registrorichiedenteUpdateWithWhereUniqueWithoutFontiInput>
    updateMany?: Enumerable<registrorichiedenteUpdateManyWithWhereWithoutFontiInput>
    deleteMany?: Enumerable<registrorichiedenteScalarWhereInput>
  }

  export type segnalazioneUpdateManyWithoutFontiNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutFontiInput>, Enumerable<segnalazioneUncheckedCreateWithoutFontiInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutFontiInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutFontiInput>
    createMany?: segnalazioneCreateManyFontiInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutFontiInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutFontiInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUpdateManyWithoutFontiNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutFontiInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutFontiInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutFontiInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutFontiInput>
    createMany?: segnalazionestoricoCreateManyFontiInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutFontiInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutFontiInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type registrorichiedenteUncheckedUpdateManyWithoutFontiNestedInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutFontiInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutFontiInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutFontiInput>
    upsert?: Enumerable<registrorichiedenteUpsertWithWhereUniqueWithoutFontiInput>
    createMany?: registrorichiedenteCreateManyFontiInputEnvelope
    set?: Enumerable<registrorichiedenteWhereUniqueInput>
    disconnect?: Enumerable<registrorichiedenteWhereUniqueInput>
    delete?: Enumerable<registrorichiedenteWhereUniqueInput>
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
    update?: Enumerable<registrorichiedenteUpdateWithWhereUniqueWithoutFontiInput>
    updateMany?: Enumerable<registrorichiedenteUpdateManyWithWhereWithoutFontiInput>
    deleteMany?: Enumerable<registrorichiedenteScalarWhereInput>
  }

  export type segnalazioneUncheckedUpdateManyWithoutFontiNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutFontiInput>, Enumerable<segnalazioneUncheckedCreateWithoutFontiInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutFontiInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutFontiInput>
    createMany?: segnalazioneCreateManyFontiInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutFontiInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutFontiInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutFontiNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutFontiInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutFontiInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutFontiInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutFontiInput>
    createMany?: segnalazionestoricoCreateManyFontiInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutFontiInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutFontiInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type utentiCreateNestedManyWithoutGruppoInput = {
    create?: XOR<Enumerable<utentiCreateWithoutGruppoInput>, Enumerable<utentiUncheckedCreateWithoutGruppoInput>>
    connectOrCreate?: Enumerable<utentiCreateOrConnectWithoutGruppoInput>
    createMany?: utentiCreateManyGruppoInputEnvelope
    connect?: Enumerable<utentiWhereUniqueInput>
  }

  export type utentiUncheckedCreateNestedManyWithoutGruppoInput = {
    create?: XOR<Enumerable<utentiCreateWithoutGruppoInput>, Enumerable<utentiUncheckedCreateWithoutGruppoInput>>
    connectOrCreate?: Enumerable<utentiCreateOrConnectWithoutGruppoInput>
    createMany?: utentiCreateManyGruppoInputEnvelope
    connect?: Enumerable<utentiWhereUniqueInput>
  }

  export type utentiUpdateManyWithoutGruppoNestedInput = {
    create?: XOR<Enumerable<utentiCreateWithoutGruppoInput>, Enumerable<utentiUncheckedCreateWithoutGruppoInput>>
    connectOrCreate?: Enumerable<utentiCreateOrConnectWithoutGruppoInput>
    upsert?: Enumerable<utentiUpsertWithWhereUniqueWithoutGruppoInput>
    createMany?: utentiCreateManyGruppoInputEnvelope
    set?: Enumerable<utentiWhereUniqueInput>
    disconnect?: Enumerable<utentiWhereUniqueInput>
    delete?: Enumerable<utentiWhereUniqueInput>
    connect?: Enumerable<utentiWhereUniqueInput>
    update?: Enumerable<utentiUpdateWithWhereUniqueWithoutGruppoInput>
    updateMany?: Enumerable<utentiUpdateManyWithWhereWithoutGruppoInput>
    deleteMany?: Enumerable<utentiScalarWhereInput>
  }

  export type utentiUncheckedUpdateManyWithoutGruppoNestedInput = {
    create?: XOR<Enumerable<utentiCreateWithoutGruppoInput>, Enumerable<utentiUncheckedCreateWithoutGruppoInput>>
    connectOrCreate?: Enumerable<utentiCreateOrConnectWithoutGruppoInput>
    upsert?: Enumerable<utentiUpsertWithWhereUniqueWithoutGruppoInput>
    createMany?: utentiCreateManyGruppoInputEnvelope
    set?: Enumerable<utentiWhereUniqueInput>
    disconnect?: Enumerable<utentiWhereUniqueInput>
    delete?: Enumerable<utentiWhereUniqueInput>
    connect?: Enumerable<utentiWhereUniqueInput>
    update?: Enumerable<utentiUpdateWithWhereUniqueWithoutGruppoInput>
    updateMany?: Enumerable<utentiUpdateManyWithWhereWithoutGruppoInput>
    deleteMany?: Enumerable<utentiScalarWhereInput>
  }

  export type lavoroCreateNestedManyWithoutImpresaInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutImpresaInput>, Enumerable<lavoroUncheckedCreateWithoutImpresaInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutImpresaInput>
    createMany?: lavoroCreateManyImpresaInputEnvelope
    connect?: Enumerable<lavoroWhereUniqueInput>
  }

  export type lavorostoricoCreateNestedManyWithoutImpresaInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutImpresaInput>, Enumerable<lavorostoricoUncheckedCreateWithoutImpresaInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutImpresaInput>
    createMany?: lavorostoricoCreateManyImpresaInputEnvelope
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
  }

  export type lavoroUncheckedCreateNestedManyWithoutImpresaInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutImpresaInput>, Enumerable<lavoroUncheckedCreateWithoutImpresaInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutImpresaInput>
    createMany?: lavoroCreateManyImpresaInputEnvelope
    connect?: Enumerable<lavoroWhereUniqueInput>
  }

  export type lavorostoricoUncheckedCreateNestedManyWithoutImpresaInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutImpresaInput>, Enumerable<lavorostoricoUncheckedCreateWithoutImpresaInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutImpresaInput>
    createMany?: lavorostoricoCreateManyImpresaInputEnvelope
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
  }

  export type lavoroUpdateManyWithoutImpresaNestedInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutImpresaInput>, Enumerable<lavoroUncheckedCreateWithoutImpresaInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutImpresaInput>
    upsert?: Enumerable<lavoroUpsertWithWhereUniqueWithoutImpresaInput>
    createMany?: lavoroCreateManyImpresaInputEnvelope
    set?: Enumerable<lavoroWhereUniqueInput>
    disconnect?: Enumerable<lavoroWhereUniqueInput>
    delete?: Enumerable<lavoroWhereUniqueInput>
    connect?: Enumerable<lavoroWhereUniqueInput>
    update?: Enumerable<lavoroUpdateWithWhereUniqueWithoutImpresaInput>
    updateMany?: Enumerable<lavoroUpdateManyWithWhereWithoutImpresaInput>
    deleteMany?: Enumerable<lavoroScalarWhereInput>
  }

  export type lavorostoricoUpdateManyWithoutImpresaNestedInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutImpresaInput>, Enumerable<lavorostoricoUncheckedCreateWithoutImpresaInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutImpresaInput>
    upsert?: Enumerable<lavorostoricoUpsertWithWhereUniqueWithoutImpresaInput>
    createMany?: lavorostoricoCreateManyImpresaInputEnvelope
    set?: Enumerable<lavorostoricoWhereUniqueInput>
    disconnect?: Enumerable<lavorostoricoWhereUniqueInput>
    delete?: Enumerable<lavorostoricoWhereUniqueInput>
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
    update?: Enumerable<lavorostoricoUpdateWithWhereUniqueWithoutImpresaInput>
    updateMany?: Enumerable<lavorostoricoUpdateManyWithWhereWithoutImpresaInput>
    deleteMany?: Enumerable<lavorostoricoScalarWhereInput>
  }

  export type lavoroUncheckedUpdateManyWithoutImpresaNestedInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutImpresaInput>, Enumerable<lavoroUncheckedCreateWithoutImpresaInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutImpresaInput>
    upsert?: Enumerable<lavoroUpsertWithWhereUniqueWithoutImpresaInput>
    createMany?: lavoroCreateManyImpresaInputEnvelope
    set?: Enumerable<lavoroWhereUniqueInput>
    disconnect?: Enumerable<lavoroWhereUniqueInput>
    delete?: Enumerable<lavoroWhereUniqueInput>
    connect?: Enumerable<lavoroWhereUniqueInput>
    update?: Enumerable<lavoroUpdateWithWhereUniqueWithoutImpresaInput>
    updateMany?: Enumerable<lavoroUpdateManyWithWhereWithoutImpresaInput>
    deleteMany?: Enumerable<lavoroScalarWhereInput>
  }

  export type lavorostoricoUncheckedUpdateManyWithoutImpresaNestedInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutImpresaInput>, Enumerable<lavorostoricoUncheckedCreateWithoutImpresaInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutImpresaInput>
    upsert?: Enumerable<lavorostoricoUpsertWithWhereUniqueWithoutImpresaInput>
    createMany?: lavorostoricoCreateManyImpresaInputEnvelope
    set?: Enumerable<lavorostoricoWhereUniqueInput>
    disconnect?: Enumerable<lavorostoricoWhereUniqueInput>
    delete?: Enumerable<lavorostoricoWhereUniqueInput>
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
    update?: Enumerable<lavorostoricoUpdateWithWhereUniqueWithoutImpresaInput>
    updateMany?: Enumerable<lavorostoricoUpdateManyWithWhereWithoutImpresaInput>
    deleteMany?: Enumerable<lavorostoricoScalarWhereInput>
  }

  export type catastolinkerCreateNestedManyWithoutLavoroInput = {
    create?: XOR<Enumerable<catastolinkerCreateWithoutLavoroInput>, Enumerable<catastolinkerUncheckedCreateWithoutLavoroInput>>
    connectOrCreate?: Enumerable<catastolinkerCreateOrConnectWithoutLavoroInput>
    createMany?: catastolinkerCreateManyLavoroInputEnvelope
    connect?: Enumerable<catastolinkerWhereUniqueInput>
  }

  export type categoriaanomaliaCreateNestedOneWithoutLavoroInput = {
    create?: XOR<categoriaanomaliaCreateWithoutLavoroInput, categoriaanomaliaUncheckedCreateWithoutLavoroInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutLavoroInput
    connect?: categoriaanomaliaWhereUniqueInput
  }

  export type sottocategorialavoroCreateNestedOneWithoutLavoroInput = {
    create?: XOR<sottocategorialavoroCreateWithoutLavoroInput, sottocategorialavoroUncheckedCreateWithoutLavoroInput>
    connectOrCreate?: sottocategorialavoroCreateOrConnectWithoutLavoroInput
    connect?: sottocategorialavoroWhereUniqueInput
  }

  export type utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteStatoToutentiInput = {
    create?: XOR<utentiCreateWithoutLavoro_lavoro_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutLavoro_lavoro_idUtenteStatoToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutLavoro_lavoro_idUtenteStatoToutentiInput
    connect?: utentiWhereUniqueInput
  }

  export type utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteToutentiInput = {
    create?: XOR<utentiCreateWithoutLavoro_lavoro_idUtenteToutentiInput, utentiUncheckedCreateWithoutLavoro_lavoro_idUtenteToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutLavoro_lavoro_idUtenteToutentiInput
    connect?: utentiWhereUniqueInput
  }

  export type impresaCreateNestedOneWithoutLavoroInput = {
    create?: XOR<impresaCreateWithoutLavoroInput, impresaUncheckedCreateWithoutLavoroInput>
    connectOrCreate?: impresaCreateOrConnectWithoutLavoroInput
    connect?: impresaWhereUniqueInput
  }

  export type catastolinkerUncheckedCreateNestedManyWithoutLavoroInput = {
    create?: XOR<Enumerable<catastolinkerCreateWithoutLavoroInput>, Enumerable<catastolinkerUncheckedCreateWithoutLavoroInput>>
    connectOrCreate?: Enumerable<catastolinkerCreateOrConnectWithoutLavoroInput>
    createMany?: catastolinkerCreateManyLavoroInputEnvelope
    connect?: Enumerable<catastolinkerWhereUniqueInput>
  }

  export type catastolinkerUpdateManyWithoutLavoroNestedInput = {
    create?: XOR<Enumerable<catastolinkerCreateWithoutLavoroInput>, Enumerable<catastolinkerUncheckedCreateWithoutLavoroInput>>
    connectOrCreate?: Enumerable<catastolinkerCreateOrConnectWithoutLavoroInput>
    upsert?: Enumerable<catastolinkerUpsertWithWhereUniqueWithoutLavoroInput>
    createMany?: catastolinkerCreateManyLavoroInputEnvelope
    set?: Enumerable<catastolinkerWhereUniqueInput>
    disconnect?: Enumerable<catastolinkerWhereUniqueInput>
    delete?: Enumerable<catastolinkerWhereUniqueInput>
    connect?: Enumerable<catastolinkerWhereUniqueInput>
    update?: Enumerable<catastolinkerUpdateWithWhereUniqueWithoutLavoroInput>
    updateMany?: Enumerable<catastolinkerUpdateManyWithWhereWithoutLavoroInput>
    deleteMany?: Enumerable<catastolinkerScalarWhereInput>
  }

  export type categoriaanomaliaUpdateOneWithoutLavoroNestedInput = {
    create?: XOR<categoriaanomaliaCreateWithoutLavoroInput, categoriaanomaliaUncheckedCreateWithoutLavoroInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutLavoroInput
    upsert?: categoriaanomaliaUpsertWithoutLavoroInput
    disconnect?: boolean
    delete?: boolean
    connect?: categoriaanomaliaWhereUniqueInput
    update?: XOR<categoriaanomaliaUpdateWithoutLavoroInput, categoriaanomaliaUncheckedUpdateWithoutLavoroInput>
  }

  export type sottocategorialavoroUpdateOneWithoutLavoroNestedInput = {
    create?: XOR<sottocategorialavoroCreateWithoutLavoroInput, sottocategorialavoroUncheckedCreateWithoutLavoroInput>
    connectOrCreate?: sottocategorialavoroCreateOrConnectWithoutLavoroInput
    upsert?: sottocategorialavoroUpsertWithoutLavoroInput
    disconnect?: boolean
    delete?: boolean
    connect?: sottocategorialavoroWhereUniqueInput
    update?: XOR<sottocategorialavoroUpdateWithoutLavoroInput, sottocategorialavoroUncheckedUpdateWithoutLavoroInput>
  }

  export type utentiUpdateOneWithoutLavoro_lavoro_idUtenteStatoToutentiNestedInput = {
    create?: XOR<utentiCreateWithoutLavoro_lavoro_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutLavoro_lavoro_idUtenteStatoToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutLavoro_lavoro_idUtenteStatoToutentiInput
    upsert?: utentiUpsertWithoutLavoro_lavoro_idUtenteStatoToutentiInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutLavoro_lavoro_idUtenteStatoToutentiInput, utentiUncheckedUpdateWithoutLavoro_lavoro_idUtenteStatoToutentiInput>
  }

  export type utentiUpdateOneWithoutLavoro_lavoro_idUtenteToutentiNestedInput = {
    create?: XOR<utentiCreateWithoutLavoro_lavoro_idUtenteToutentiInput, utentiUncheckedCreateWithoutLavoro_lavoro_idUtenteToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutLavoro_lavoro_idUtenteToutentiInput
    upsert?: utentiUpsertWithoutLavoro_lavoro_idUtenteToutentiInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutLavoro_lavoro_idUtenteToutentiInput, utentiUncheckedUpdateWithoutLavoro_lavoro_idUtenteToutentiInput>
  }

  export type impresaUpdateOneWithoutLavoroNestedInput = {
    create?: XOR<impresaCreateWithoutLavoroInput, impresaUncheckedCreateWithoutLavoroInput>
    connectOrCreate?: impresaCreateOrConnectWithoutLavoroInput
    upsert?: impresaUpsertWithoutLavoroInput
    disconnect?: boolean
    delete?: boolean
    connect?: impresaWhereUniqueInput
    update?: XOR<impresaUpdateWithoutLavoroInput, impresaUncheckedUpdateWithoutLavoroInput>
  }

  export type catastolinkerUncheckedUpdateManyWithoutLavoroNestedInput = {
    create?: XOR<Enumerable<catastolinkerCreateWithoutLavoroInput>, Enumerable<catastolinkerUncheckedCreateWithoutLavoroInput>>
    connectOrCreate?: Enumerable<catastolinkerCreateOrConnectWithoutLavoroInput>
    upsert?: Enumerable<catastolinkerUpsertWithWhereUniqueWithoutLavoroInput>
    createMany?: catastolinkerCreateManyLavoroInputEnvelope
    set?: Enumerable<catastolinkerWhereUniqueInput>
    disconnect?: Enumerable<catastolinkerWhereUniqueInput>
    delete?: Enumerable<catastolinkerWhereUniqueInput>
    connect?: Enumerable<catastolinkerWhereUniqueInput>
    update?: Enumerable<catastolinkerUpdateWithWhereUniqueWithoutLavoroInput>
    updateMany?: Enumerable<catastolinkerUpdateManyWithWhereWithoutLavoroInput>
    deleteMany?: Enumerable<catastolinkerScalarWhereInput>
  }

  export type categoriaanomaliaCreateNestedOneWithoutLavorostoricoInput = {
    create?: XOR<categoriaanomaliaCreateWithoutLavorostoricoInput, categoriaanomaliaUncheckedCreateWithoutLavorostoricoInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutLavorostoricoInput
    connect?: categoriaanomaliaWhereUniqueInput
  }

  export type sottocategorialavoroCreateNestedOneWithoutLavorostoricoInput = {
    create?: XOR<sottocategorialavoroCreateWithoutLavorostoricoInput, sottocategorialavoroUncheckedCreateWithoutLavorostoricoInput>
    connectOrCreate?: sottocategorialavoroCreateOrConnectWithoutLavorostoricoInput
    connect?: sottocategorialavoroWhereUniqueInput
  }

  export type utentiCreateNestedOneWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput = {
    create?: XOR<utentiCreateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput
    connect?: utentiWhereUniqueInput
  }

  export type utentiCreateNestedOneWithoutLavorostorico_lavorostorico_idUtenteToutentiInput = {
    create?: XOR<utentiCreateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput, utentiUncheckedCreateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutLavorostorico_lavorostorico_idUtenteToutentiInput
    connect?: utentiWhereUniqueInput
  }

  export type impresaCreateNestedOneWithoutLavorostoricoInput = {
    create?: XOR<impresaCreateWithoutLavorostoricoInput, impresaUncheckedCreateWithoutLavorostoricoInput>
    connectOrCreate?: impresaCreateOrConnectWithoutLavorostoricoInput
    connect?: impresaWhereUniqueInput
  }

  export type categoriaanomaliaUpdateOneWithoutLavorostoricoNestedInput = {
    create?: XOR<categoriaanomaliaCreateWithoutLavorostoricoInput, categoriaanomaliaUncheckedCreateWithoutLavorostoricoInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutLavorostoricoInput
    upsert?: categoriaanomaliaUpsertWithoutLavorostoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: categoriaanomaliaWhereUniqueInput
    update?: XOR<categoriaanomaliaUpdateWithoutLavorostoricoInput, categoriaanomaliaUncheckedUpdateWithoutLavorostoricoInput>
  }

  export type sottocategorialavoroUpdateOneWithoutLavorostoricoNestedInput = {
    create?: XOR<sottocategorialavoroCreateWithoutLavorostoricoInput, sottocategorialavoroUncheckedCreateWithoutLavorostoricoInput>
    connectOrCreate?: sottocategorialavoroCreateOrConnectWithoutLavorostoricoInput
    upsert?: sottocategorialavoroUpsertWithoutLavorostoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: sottocategorialavoroWhereUniqueInput
    update?: XOR<sottocategorialavoroUpdateWithoutLavorostoricoInput, sottocategorialavoroUncheckedUpdateWithoutLavorostoricoInput>
  }

  export type utentiUpdateOneWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiNestedInput = {
    create?: XOR<utentiCreateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput
    upsert?: utentiUpsertWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput, utentiUncheckedUpdateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput>
  }

  export type utentiUpdateOneWithoutLavorostorico_lavorostorico_idUtenteToutentiNestedInput = {
    create?: XOR<utentiCreateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput, utentiUncheckedCreateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutLavorostorico_lavorostorico_idUtenteToutentiInput
    upsert?: utentiUpsertWithoutLavorostorico_lavorostorico_idUtenteToutentiInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput, utentiUncheckedUpdateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput>
  }

  export type impresaUpdateOneWithoutLavorostoricoNestedInput = {
    create?: XOR<impresaCreateWithoutLavorostoricoInput, impresaUncheckedCreateWithoutLavorostoricoInput>
    connectOrCreate?: impresaCreateOrConnectWithoutLavorostoricoInput
    upsert?: impresaUpsertWithoutLavorostoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: impresaWhereUniqueInput
    update?: XOR<impresaUpdateWithoutLavorostoricoInput, impresaUncheckedUpdateWithoutLavorostoricoInput>
  }

  export type livelliserviziodescrizioneCreateNestedOneWithoutLivelliservizioInput = {
    create?: XOR<livelliserviziodescrizioneCreateWithoutLivelliservizioInput, livelliserviziodescrizioneUncheckedCreateWithoutLivelliservizioInput>
    connectOrCreate?: livelliserviziodescrizioneCreateOrConnectWithoutLivelliservizioInput
    connect?: livelliserviziodescrizioneWhereUniqueInput
  }

  export type utentiCreateNestedOneWithoutLivelliservizioInput = {
    create?: XOR<utentiCreateWithoutLivelliservizioInput, utentiUncheckedCreateWithoutLivelliservizioInput>
    connectOrCreate?: utentiCreateOrConnectWithoutLivelliservizioInput
    connect?: utentiWhereUniqueInput
  }

  export type livelliserviziodescrizioneUpdateOneWithoutLivelliservizioNestedInput = {
    create?: XOR<livelliserviziodescrizioneCreateWithoutLivelliservizioInput, livelliserviziodescrizioneUncheckedCreateWithoutLivelliservizioInput>
    connectOrCreate?: livelliserviziodescrizioneCreateOrConnectWithoutLivelliservizioInput
    upsert?: livelliserviziodescrizioneUpsertWithoutLivelliservizioInput
    disconnect?: boolean
    delete?: boolean
    connect?: livelliserviziodescrizioneWhereUniqueInput
    update?: XOR<livelliserviziodescrizioneUpdateWithoutLivelliservizioInput, livelliserviziodescrizioneUncheckedUpdateWithoutLivelliservizioInput>
  }

  export type utentiUpdateOneWithoutLivelliservizioNestedInput = {
    create?: XOR<utentiCreateWithoutLivelliservizioInput, utentiUncheckedCreateWithoutLivelliservizioInput>
    connectOrCreate?: utentiCreateOrConnectWithoutLivelliservizioInput
    upsert?: utentiUpsertWithoutLivelliservizioInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutLivelliservizioInput, utentiUncheckedUpdateWithoutLivelliservizioInput>
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type livelliservizioCreateNestedManyWithoutLivelliserviziodescrizioneInput = {
    create?: XOR<Enumerable<livelliservizioCreateWithoutLivelliserviziodescrizioneInput>, Enumerable<livelliservizioUncheckedCreateWithoutLivelliserviziodescrizioneInput>>
    connectOrCreate?: Enumerable<livelliservizioCreateOrConnectWithoutLivelliserviziodescrizioneInput>
    createMany?: livelliservizioCreateManyLivelliserviziodescrizioneInputEnvelope
    connect?: Enumerable<livelliservizioWhereUniqueInput>
  }

  export type livelliservizioUncheckedCreateNestedManyWithoutLivelliserviziodescrizioneInput = {
    create?: XOR<Enumerable<livelliservizioCreateWithoutLivelliserviziodescrizioneInput>, Enumerable<livelliservizioUncheckedCreateWithoutLivelliserviziodescrizioneInput>>
    connectOrCreate?: Enumerable<livelliservizioCreateOrConnectWithoutLivelliserviziodescrizioneInput>
    createMany?: livelliservizioCreateManyLivelliserviziodescrizioneInputEnvelope
    connect?: Enumerable<livelliservizioWhereUniqueInput>
  }

  export type livelliservizioUpdateManyWithoutLivelliserviziodescrizioneNestedInput = {
    create?: XOR<Enumerable<livelliservizioCreateWithoutLivelliserviziodescrizioneInput>, Enumerable<livelliservizioUncheckedCreateWithoutLivelliserviziodescrizioneInput>>
    connectOrCreate?: Enumerable<livelliservizioCreateOrConnectWithoutLivelliserviziodescrizioneInput>
    upsert?: Enumerable<livelliservizioUpsertWithWhereUniqueWithoutLivelliserviziodescrizioneInput>
    createMany?: livelliservizioCreateManyLivelliserviziodescrizioneInputEnvelope
    set?: Enumerable<livelliservizioWhereUniqueInput>
    disconnect?: Enumerable<livelliservizioWhereUniqueInput>
    delete?: Enumerable<livelliservizioWhereUniqueInput>
    connect?: Enumerable<livelliservizioWhereUniqueInput>
    update?: Enumerable<livelliservizioUpdateWithWhereUniqueWithoutLivelliserviziodescrizioneInput>
    updateMany?: Enumerable<livelliservizioUpdateManyWithWhereWithoutLivelliserviziodescrizioneInput>
    deleteMany?: Enumerable<livelliservizioScalarWhereInput>
  }

  export type livelliservizioUncheckedUpdateManyWithoutLivelliserviziodescrizioneNestedInput = {
    create?: XOR<Enumerable<livelliservizioCreateWithoutLivelliserviziodescrizioneInput>, Enumerable<livelliservizioUncheckedCreateWithoutLivelliserviziodescrizioneInput>>
    connectOrCreate?: Enumerable<livelliservizioCreateOrConnectWithoutLivelliserviziodescrizioneInput>
    upsert?: Enumerable<livelliservizioUpsertWithWhereUniqueWithoutLivelliserviziodescrizioneInput>
    createMany?: livelliservizioCreateManyLivelliserviziodescrizioneInputEnvelope
    set?: Enumerable<livelliservizioWhereUniqueInput>
    disconnect?: Enumerable<livelliservizioWhereUniqueInput>
    delete?: Enumerable<livelliservizioWhereUniqueInput>
    connect?: Enumerable<livelliservizioWhereUniqueInput>
    update?: Enumerable<livelliservizioUpdateWithWhereUniqueWithoutLivelliserviziodescrizioneInput>
    updateMany?: Enumerable<livelliservizioUpdateManyWithWhereWithoutLivelliserviziodescrizioneInput>
    deleteMany?: Enumerable<livelliservizioScalarWhereInput>
  }

  export type utentiCreateNestedOneWithoutOggettocivettaInput = {
    create?: XOR<utentiCreateWithoutOggettocivettaInput, utentiUncheckedCreateWithoutOggettocivettaInput>
    connectOrCreate?: utentiCreateOrConnectWithoutOggettocivettaInput
    connect?: utentiWhereUniqueInput
  }

  export type utentiUpdateOneWithoutOggettocivettaNestedInput = {
    create?: XOR<utentiCreateWithoutOggettocivettaInput, utentiUncheckedCreateWithoutOggettocivettaInput>
    connectOrCreate?: utentiCreateOrConnectWithoutOggettocivettaInput
    upsert?: utentiUpsertWithoutOggettocivettaInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutOggettocivettaInput, utentiUncheckedUpdateWithoutOggettocivettaInput>
  }

  export type catastolinkerCreateNestedManyWithoutPraticaInput = {
    create?: XOR<Enumerable<catastolinkerCreateWithoutPraticaInput>, Enumerable<catastolinkerUncheckedCreateWithoutPraticaInput>>
    connectOrCreate?: Enumerable<catastolinkerCreateOrConnectWithoutPraticaInput>
    createMany?: catastolinkerCreateManyPraticaInputEnvelope
    connect?: Enumerable<catastolinkerWhereUniqueInput>
  }

  export type utentiCreateNestedOneWithoutPraticaInput = {
    create?: XOR<utentiCreateWithoutPraticaInput, utentiUncheckedCreateWithoutPraticaInput>
    connectOrCreate?: utentiCreateOrConnectWithoutPraticaInput
    connect?: utentiWhereUniqueInput
  }

  export type catastolinkerUncheckedCreateNestedManyWithoutPraticaInput = {
    create?: XOR<Enumerable<catastolinkerCreateWithoutPraticaInput>, Enumerable<catastolinkerUncheckedCreateWithoutPraticaInput>>
    connectOrCreate?: Enumerable<catastolinkerCreateOrConnectWithoutPraticaInput>
    createMany?: catastolinkerCreateManyPraticaInputEnvelope
    connect?: Enumerable<catastolinkerWhereUniqueInput>
  }

  export type catastolinkerUpdateManyWithoutPraticaNestedInput = {
    create?: XOR<Enumerable<catastolinkerCreateWithoutPraticaInput>, Enumerable<catastolinkerUncheckedCreateWithoutPraticaInput>>
    connectOrCreate?: Enumerable<catastolinkerCreateOrConnectWithoutPraticaInput>
    upsert?: Enumerable<catastolinkerUpsertWithWhereUniqueWithoutPraticaInput>
    createMany?: catastolinkerCreateManyPraticaInputEnvelope
    set?: Enumerable<catastolinkerWhereUniqueInput>
    disconnect?: Enumerable<catastolinkerWhereUniqueInput>
    delete?: Enumerable<catastolinkerWhereUniqueInput>
    connect?: Enumerable<catastolinkerWhereUniqueInput>
    update?: Enumerable<catastolinkerUpdateWithWhereUniqueWithoutPraticaInput>
    updateMany?: Enumerable<catastolinkerUpdateManyWithWhereWithoutPraticaInput>
    deleteMany?: Enumerable<catastolinkerScalarWhereInput>
  }

  export type utentiUpdateOneWithoutPraticaNestedInput = {
    create?: XOR<utentiCreateWithoutPraticaInput, utentiUncheckedCreateWithoutPraticaInput>
    connectOrCreate?: utentiCreateOrConnectWithoutPraticaInput
    upsert?: utentiUpsertWithoutPraticaInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutPraticaInput, utentiUncheckedUpdateWithoutPraticaInput>
  }

  export type catastolinkerUncheckedUpdateManyWithoutPraticaNestedInput = {
    create?: XOR<Enumerable<catastolinkerCreateWithoutPraticaInput>, Enumerable<catastolinkerUncheckedCreateWithoutPraticaInput>>
    connectOrCreate?: Enumerable<catastolinkerCreateOrConnectWithoutPraticaInput>
    upsert?: Enumerable<catastolinkerUpsertWithWhereUniqueWithoutPraticaInput>
    createMany?: catastolinkerCreateManyPraticaInputEnvelope
    set?: Enumerable<catastolinkerWhereUniqueInput>
    disconnect?: Enumerable<catastolinkerWhereUniqueInput>
    delete?: Enumerable<catastolinkerWhereUniqueInput>
    connect?: Enumerable<catastolinkerWhereUniqueInput>
    update?: Enumerable<catastolinkerUpdateWithWhereUniqueWithoutPraticaInput>
    updateMany?: Enumerable<catastolinkerUpdateManyWithWhereWithoutPraticaInput>
    deleteMany?: Enumerable<catastolinkerScalarWhereInput>
  }

  export type utentiCreateNestedOneWithoutPraticastoricoInput = {
    create?: XOR<utentiCreateWithoutPraticastoricoInput, utentiUncheckedCreateWithoutPraticastoricoInput>
    connectOrCreate?: utentiCreateOrConnectWithoutPraticastoricoInput
    connect?: utentiWhereUniqueInput
  }

  export type utentiUpdateOneWithoutPraticastoricoNestedInput = {
    create?: XOR<utentiCreateWithoutPraticastoricoInput, utentiUncheckedCreateWithoutPraticastoricoInput>
    connectOrCreate?: utentiCreateOrConnectWithoutPraticastoricoInput
    upsert?: utentiUpsertWithoutPraticastoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutPraticastoricoInput, utentiUncheckedUpdateWithoutPraticastoricoInput>
  }

  export type fontiCreateNestedOneWithoutRegistrorichiedenteInput = {
    create?: XOR<fontiCreateWithoutRegistrorichiedenteInput, fontiUncheckedCreateWithoutRegistrorichiedenteInput>
    connectOrCreate?: fontiCreateOrConnectWithoutRegistrorichiedenteInput
    connect?: fontiWhereUniqueInput
  }

  export type segnalatoreCreateNestedOneWithoutRegistrorichiedenteInput = {
    create?: XOR<segnalatoreCreateWithoutRegistrorichiedenteInput, segnalatoreUncheckedCreateWithoutRegistrorichiedenteInput>
    connectOrCreate?: segnalatoreCreateOrConnectWithoutRegistrorichiedenteInput
    connect?: segnalatoreWhereUniqueInput
  }

  export type segnalazione_geticoCreateNestedOneWithoutRegistrorichiedenteInput = {
    create?: XOR<segnalazione_geticoCreateWithoutRegistrorichiedenteInput, segnalazione_geticoUncheckedCreateWithoutRegistrorichiedenteInput>
    connectOrCreate?: segnalazione_geticoCreateOrConnectWithoutRegistrorichiedenteInput
    connect?: segnalazione_geticoWhereUniqueInput
  }

  export type utentiCreateNestedOneWithoutRegistrorichiedenteInput = {
    create?: XOR<utentiCreateWithoutRegistrorichiedenteInput, utentiUncheckedCreateWithoutRegistrorichiedenteInput>
    connectOrCreate?: utentiCreateOrConnectWithoutRegistrorichiedenteInput
    connect?: utentiWhereUniqueInput
  }

  export type fontiUpdateOneWithoutRegistrorichiedenteNestedInput = {
    create?: XOR<fontiCreateWithoutRegistrorichiedenteInput, fontiUncheckedCreateWithoutRegistrorichiedenteInput>
    connectOrCreate?: fontiCreateOrConnectWithoutRegistrorichiedenteInput
    upsert?: fontiUpsertWithoutRegistrorichiedenteInput
    disconnect?: boolean
    delete?: boolean
    connect?: fontiWhereUniqueInput
    update?: XOR<fontiUpdateWithoutRegistrorichiedenteInput, fontiUncheckedUpdateWithoutRegistrorichiedenteInput>
  }

  export type segnalatoreUpdateOneWithoutRegistrorichiedenteNestedInput = {
    create?: XOR<segnalatoreCreateWithoutRegistrorichiedenteInput, segnalatoreUncheckedCreateWithoutRegistrorichiedenteInput>
    connectOrCreate?: segnalatoreCreateOrConnectWithoutRegistrorichiedenteInput
    upsert?: segnalatoreUpsertWithoutRegistrorichiedenteInput
    disconnect?: boolean
    delete?: boolean
    connect?: segnalatoreWhereUniqueInput
    update?: XOR<segnalatoreUpdateWithoutRegistrorichiedenteInput, segnalatoreUncheckedUpdateWithoutRegistrorichiedenteInput>
  }

  export type segnalazione_geticoUpdateOneWithoutRegistrorichiedenteNestedInput = {
    create?: XOR<segnalazione_geticoCreateWithoutRegistrorichiedenteInput, segnalazione_geticoUncheckedCreateWithoutRegistrorichiedenteInput>
    connectOrCreate?: segnalazione_geticoCreateOrConnectWithoutRegistrorichiedenteInput
    upsert?: segnalazione_geticoUpsertWithoutRegistrorichiedenteInput
    disconnect?: boolean
    delete?: boolean
    connect?: segnalazione_geticoWhereUniqueInput
    update?: XOR<segnalazione_geticoUpdateWithoutRegistrorichiedenteInput, segnalazione_geticoUncheckedUpdateWithoutRegistrorichiedenteInput>
  }

  export type utentiUpdateOneWithoutRegistrorichiedenteNestedInput = {
    create?: XOR<utentiCreateWithoutRegistrorichiedenteInput, utentiUncheckedCreateWithoutRegistrorichiedenteInput>
    connectOrCreate?: utentiCreateOrConnectWithoutRegistrorichiedenteInput
    upsert?: utentiUpsertWithoutRegistrorichiedenteInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutRegistrorichiedenteInput, utentiUncheckedUpdateWithoutRegistrorichiedenteInput>
  }

  export type registrorichiedenteCreateNestedManyWithoutSegnalatoreInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutSegnalatoreInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutSegnalatoreInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutSegnalatoreInput>
    createMany?: registrorichiedenteCreateManySegnalatoreInputEnvelope
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
  }

  export type segnalazioneCreateNestedManyWithoutSegnalatoreInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutSegnalatoreInput>, Enumerable<segnalazioneUncheckedCreateWithoutSegnalatoreInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutSegnalatoreInput>
    createMany?: segnalazioneCreateManySegnalatoreInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoCreateNestedManyWithoutSegnalatoreInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutSegnalatoreInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutSegnalatoreInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutSegnalatoreInput>
    createMany?: segnalazionestoricoCreateManySegnalatoreInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type registrorichiedenteUncheckedCreateNestedManyWithoutSegnalatoreInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutSegnalatoreInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutSegnalatoreInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutSegnalatoreInput>
    createMany?: registrorichiedenteCreateManySegnalatoreInputEnvelope
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
  }

  export type segnalazioneUncheckedCreateNestedManyWithoutSegnalatoreInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutSegnalatoreInput>, Enumerable<segnalazioneUncheckedCreateWithoutSegnalatoreInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutSegnalatoreInput>
    createMany?: segnalazioneCreateManySegnalatoreInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoUncheckedCreateNestedManyWithoutSegnalatoreInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutSegnalatoreInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutSegnalatoreInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutSegnalatoreInput>
    createMany?: segnalazionestoricoCreateManySegnalatoreInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type registrorichiedenteUpdateManyWithoutSegnalatoreNestedInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutSegnalatoreInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutSegnalatoreInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutSegnalatoreInput>
    upsert?: Enumerable<registrorichiedenteUpsertWithWhereUniqueWithoutSegnalatoreInput>
    createMany?: registrorichiedenteCreateManySegnalatoreInputEnvelope
    set?: Enumerable<registrorichiedenteWhereUniqueInput>
    disconnect?: Enumerable<registrorichiedenteWhereUniqueInput>
    delete?: Enumerable<registrorichiedenteWhereUniqueInput>
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
    update?: Enumerable<registrorichiedenteUpdateWithWhereUniqueWithoutSegnalatoreInput>
    updateMany?: Enumerable<registrorichiedenteUpdateManyWithWhereWithoutSegnalatoreInput>
    deleteMany?: Enumerable<registrorichiedenteScalarWhereInput>
  }

  export type segnalazioneUpdateManyWithoutSegnalatoreNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutSegnalatoreInput>, Enumerable<segnalazioneUncheckedCreateWithoutSegnalatoreInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutSegnalatoreInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutSegnalatoreInput>
    createMany?: segnalazioneCreateManySegnalatoreInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutSegnalatoreInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutSegnalatoreInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUpdateManyWithoutSegnalatoreNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutSegnalatoreInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutSegnalatoreInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutSegnalatoreInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutSegnalatoreInput>
    createMany?: segnalazionestoricoCreateManySegnalatoreInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutSegnalatoreInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutSegnalatoreInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type registrorichiedenteUncheckedUpdateManyWithoutSegnalatoreNestedInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutSegnalatoreInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutSegnalatoreInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutSegnalatoreInput>
    upsert?: Enumerable<registrorichiedenteUpsertWithWhereUniqueWithoutSegnalatoreInput>
    createMany?: registrorichiedenteCreateManySegnalatoreInputEnvelope
    set?: Enumerable<registrorichiedenteWhereUniqueInput>
    disconnect?: Enumerable<registrorichiedenteWhereUniqueInput>
    delete?: Enumerable<registrorichiedenteWhereUniqueInput>
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
    update?: Enumerable<registrorichiedenteUpdateWithWhereUniqueWithoutSegnalatoreInput>
    updateMany?: Enumerable<registrorichiedenteUpdateManyWithWhereWithoutSegnalatoreInput>
    deleteMany?: Enumerable<registrorichiedenteScalarWhereInput>
  }

  export type segnalazioneUncheckedUpdateManyWithoutSegnalatoreNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutSegnalatoreInput>, Enumerable<segnalazioneUncheckedCreateWithoutSegnalatoreInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutSegnalatoreInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutSegnalatoreInput>
    createMany?: segnalazioneCreateManySegnalatoreInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutSegnalatoreInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutSegnalatoreInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutSegnalatoreNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutSegnalatoreInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutSegnalatoreInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutSegnalatoreInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutSegnalatoreInput>
    createMany?: segnalazionestoricoCreateManySegnalatoreInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutSegnalatoreInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutSegnalatoreInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type segnalazioneCreatesegnalatoriInput = {
    set: Enumerable<number>
  }

  export type categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput = {
    create?: XOR<categoriaanomaliaCreateWithoutSegnalazioneInput, categoriaanomaliaUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutSegnalazioneInput
    connect?: categoriaanomaliaWhereUniqueInput
  }

  export type sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput = {
    create?: XOR<sottocategoriaanomaliaCreateWithoutSegnalazioneInput, sottocategoriaanomaliaUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: sottocategoriaanomaliaCreateOrConnectWithoutSegnalazioneInput
    connect?: sottocategoriaanomaliaWhereUniqueInput
  }

  export type fontiCreateNestedOneWithoutSegnalazioneInput = {
    create?: XOR<fontiCreateWithoutSegnalazioneInput, fontiUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: fontiCreateOrConnectWithoutSegnalazioneInput
    connect?: fontiWhereUniqueInput
  }

  export type segnalatoreCreateNestedOneWithoutSegnalazioneInput = {
    create?: XOR<segnalatoreCreateWithoutSegnalazioneInput, segnalatoreUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: segnalatoreCreateOrConnectWithoutSegnalazioneInput
    connect?: segnalatoreWhereUniqueInput
  }

  export type segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput = {
    create?: XOR<segnalazione_geticoCreateWithoutSegnalazioneInput, segnalazione_geticoUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: segnalazione_geticoCreateOrConnectWithoutSegnalazioneInput
    connect?: segnalazione_geticoWhereUniqueInput
  }

  export type tecniciCreateNestedOneWithoutSegnalazioneInput = {
    create?: XOR<tecniciCreateWithoutSegnalazioneInput, tecniciUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: tecniciCreateOrConnectWithoutSegnalazioneInput
    connect?: tecniciWhereUniqueInput
  }

  export type tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput = {
    create?: XOR<tipoprovvedimentoCreateWithoutSegnalazioneInput, tipoprovvedimentoUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: tipoprovvedimentoCreateOrConnectWithoutSegnalazioneInput
    connect?: tipoprovvedimentoWhereUniqueInput
  }

  export type utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput = {
    create?: XOR<utentiCreateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    connect?: utentiWhereUniqueInput
  }

  export type utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput = {
    create?: XOR<utentiCreateWithoutSegnalazione_segnalazione_idUtenteToutentiInput, utentiUncheckedCreateWithoutSegnalazione_segnalazione_idUtenteToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    connect?: utentiWhereUniqueInput
  }

  export type tiposeveritaCreateNestedOneWithoutSegnalazioneInput = {
    create?: XOR<tiposeveritaCreateWithoutSegnalazioneInput, tiposeveritaUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: tiposeveritaCreateOrConnectWithoutSegnalazioneInput
    connect?: tiposeveritaWhereUniqueInput
  }

  export type tipoeventoCreateNestedOneWithoutSegnalazioneInput = {
    create?: XOR<tipoeventoCreateWithoutSegnalazioneInput, tipoeventoUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: tipoeventoCreateOrConnectWithoutSegnalazioneInput
    connect?: tipoeventoWhereUniqueInput
  }

  export type segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput = {
    create?: XOR<Enumerable<segnalazionestatostoricoCreateWithoutSegnalazioneInput>, Enumerable<segnalazionestatostoricoUncheckedCreateWithoutSegnalazioneInput>>
    connectOrCreate?: Enumerable<segnalazionestatostoricoCreateOrConnectWithoutSegnalazioneInput>
    createMany?: segnalazionestatostoricoCreateManySegnalazioneInputEnvelope
    connect?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
  }

  export type segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput = {
    create?: XOR<Enumerable<segnalazionestatostoricoCreateWithoutSegnalazioneInput>, Enumerable<segnalazionestatostoricoUncheckedCreateWithoutSegnalazioneInput>>
    connectOrCreate?: Enumerable<segnalazionestatostoricoCreateOrConnectWithoutSegnalazioneInput>
    createMany?: segnalazionestatostoricoCreateManySegnalazioneInputEnvelope
    connect?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
  }

  export type segnalazioneUpdatesegnalatoriInput = {
    set?: Enumerable<number>
    push?: number | Enumerable<number>
  }

  export type categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput = {
    create?: XOR<categoriaanomaliaCreateWithoutSegnalazioneInput, categoriaanomaliaUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutSegnalazioneInput
    upsert?: categoriaanomaliaUpsertWithoutSegnalazioneInput
    disconnect?: boolean
    delete?: boolean
    connect?: categoriaanomaliaWhereUniqueInput
    update?: XOR<categoriaanomaliaUpdateWithoutSegnalazioneInput, categoriaanomaliaUncheckedUpdateWithoutSegnalazioneInput>
  }

  export type sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput = {
    create?: XOR<sottocategoriaanomaliaCreateWithoutSegnalazioneInput, sottocategoriaanomaliaUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: sottocategoriaanomaliaCreateOrConnectWithoutSegnalazioneInput
    upsert?: sottocategoriaanomaliaUpsertWithoutSegnalazioneInput
    disconnect?: boolean
    delete?: boolean
    connect?: sottocategoriaanomaliaWhereUniqueInput
    update?: XOR<sottocategoriaanomaliaUpdateWithoutSegnalazioneInput, sottocategoriaanomaliaUncheckedUpdateWithoutSegnalazioneInput>
  }

  export type fontiUpdateOneWithoutSegnalazioneNestedInput = {
    create?: XOR<fontiCreateWithoutSegnalazioneInput, fontiUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: fontiCreateOrConnectWithoutSegnalazioneInput
    upsert?: fontiUpsertWithoutSegnalazioneInput
    disconnect?: boolean
    delete?: boolean
    connect?: fontiWhereUniqueInput
    update?: XOR<fontiUpdateWithoutSegnalazioneInput, fontiUncheckedUpdateWithoutSegnalazioneInput>
  }

  export type segnalatoreUpdateOneWithoutSegnalazioneNestedInput = {
    create?: XOR<segnalatoreCreateWithoutSegnalazioneInput, segnalatoreUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: segnalatoreCreateOrConnectWithoutSegnalazioneInput
    upsert?: segnalatoreUpsertWithoutSegnalazioneInput
    disconnect?: boolean
    delete?: boolean
    connect?: segnalatoreWhereUniqueInput
    update?: XOR<segnalatoreUpdateWithoutSegnalazioneInput, segnalatoreUncheckedUpdateWithoutSegnalazioneInput>
  }

  export type segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput = {
    create?: XOR<segnalazione_geticoCreateWithoutSegnalazioneInput, segnalazione_geticoUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: segnalazione_geticoCreateOrConnectWithoutSegnalazioneInput
    upsert?: segnalazione_geticoUpsertWithoutSegnalazioneInput
    disconnect?: boolean
    delete?: boolean
    connect?: segnalazione_geticoWhereUniqueInput
    update?: XOR<segnalazione_geticoUpdateWithoutSegnalazioneInput, segnalazione_geticoUncheckedUpdateWithoutSegnalazioneInput>
  }

  export type tecniciUpdateOneWithoutSegnalazioneNestedInput = {
    create?: XOR<tecniciCreateWithoutSegnalazioneInput, tecniciUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: tecniciCreateOrConnectWithoutSegnalazioneInput
    upsert?: tecniciUpsertWithoutSegnalazioneInput
    disconnect?: boolean
    delete?: boolean
    connect?: tecniciWhereUniqueInput
    update?: XOR<tecniciUpdateWithoutSegnalazioneInput, tecniciUncheckedUpdateWithoutSegnalazioneInput>
  }

  export type tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput = {
    create?: XOR<tipoprovvedimentoCreateWithoutSegnalazioneInput, tipoprovvedimentoUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: tipoprovvedimentoCreateOrConnectWithoutSegnalazioneInput
    upsert?: tipoprovvedimentoUpsertWithoutSegnalazioneInput
    disconnect?: boolean
    delete?: boolean
    connect?: tipoprovvedimentoWhereUniqueInput
    update?: XOR<tipoprovvedimentoUpdateWithoutSegnalazioneInput, tipoprovvedimentoUncheckedUpdateWithoutSegnalazioneInput>
  }

  export type utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput = {
    create?: XOR<utentiCreateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    upsert?: utentiUpsertWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput, utentiUncheckedUpdateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput>
  }

  export type utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput = {
    create?: XOR<utentiCreateWithoutSegnalazione_segnalazione_idUtenteToutentiInput, utentiUncheckedCreateWithoutSegnalazione_segnalazione_idUtenteToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    upsert?: utentiUpsertWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutSegnalazione_segnalazione_idUtenteToutentiInput, utentiUncheckedUpdateWithoutSegnalazione_segnalazione_idUtenteToutentiInput>
  }

  export type tiposeveritaUpdateOneWithoutSegnalazioneNestedInput = {
    create?: XOR<tiposeveritaCreateWithoutSegnalazioneInput, tiposeveritaUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: tiposeveritaCreateOrConnectWithoutSegnalazioneInput
    upsert?: tiposeveritaUpsertWithoutSegnalazioneInput
    disconnect?: boolean
    delete?: boolean
    connect?: tiposeveritaWhereUniqueInput
    update?: XOR<tiposeveritaUpdateWithoutSegnalazioneInput, tiposeveritaUncheckedUpdateWithoutSegnalazioneInput>
  }

  export type tipoeventoUpdateOneWithoutSegnalazioneNestedInput = {
    create?: XOR<tipoeventoCreateWithoutSegnalazioneInput, tipoeventoUncheckedCreateWithoutSegnalazioneInput>
    connectOrCreate?: tipoeventoCreateOrConnectWithoutSegnalazioneInput
    upsert?: tipoeventoUpsertWithoutSegnalazioneInput
    disconnect?: boolean
    delete?: boolean
    connect?: tipoeventoWhereUniqueInput
    update?: XOR<tipoeventoUpdateWithoutSegnalazioneInput, tipoeventoUncheckedUpdateWithoutSegnalazioneInput>
  }

  export type segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput = {
    create?: XOR<Enumerable<segnalazionestatostoricoCreateWithoutSegnalazioneInput>, Enumerable<segnalazionestatostoricoUncheckedCreateWithoutSegnalazioneInput>>
    connectOrCreate?: Enumerable<segnalazionestatostoricoCreateOrConnectWithoutSegnalazioneInput>
    upsert?: Enumerable<segnalazionestatostoricoUpsertWithWhereUniqueWithoutSegnalazioneInput>
    createMany?: segnalazionestatostoricoCreateManySegnalazioneInputEnvelope
    set?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestatostoricoUpdateWithWhereUniqueWithoutSegnalazioneInput>
    updateMany?: Enumerable<segnalazionestatostoricoUpdateManyWithWhereWithoutSegnalazioneInput>
    deleteMany?: Enumerable<segnalazionestatostoricoScalarWhereInput>
  }

  export type segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput = {
    create?: XOR<Enumerable<segnalazionestatostoricoCreateWithoutSegnalazioneInput>, Enumerable<segnalazionestatostoricoUncheckedCreateWithoutSegnalazioneInput>>
    connectOrCreate?: Enumerable<segnalazionestatostoricoCreateOrConnectWithoutSegnalazioneInput>
    upsert?: Enumerable<segnalazionestatostoricoUpsertWithWhereUniqueWithoutSegnalazioneInput>
    createMany?: segnalazionestatostoricoCreateManySegnalazioneInputEnvelope
    set?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestatostoricoUpdateWithWhereUniqueWithoutSegnalazioneInput>
    updateMany?: Enumerable<segnalazionestatostoricoUpdateManyWithWhereWithoutSegnalazioneInput>
    deleteMany?: Enumerable<segnalazionestatostoricoScalarWhereInput>
  }

  export type registrorichiedenteCreateNestedManyWithoutSegnalazione_geticoInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutSegnalazione_geticoInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutSegnalazione_geticoInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutSegnalazione_geticoInput>
    createMany?: registrorichiedenteCreateManySegnalazione_geticoInputEnvelope
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
  }

  export type segnalazioneCreateNestedManyWithoutSegnalazione_geticoInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutSegnalazione_geticoInput>, Enumerable<segnalazioneUncheckedCreateWithoutSegnalazione_geticoInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutSegnalazione_geticoInput>
    createMany?: segnalazioneCreateManySegnalazione_geticoInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoCreateNestedManyWithoutSegnalazione_geticoInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutSegnalazione_geticoInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutSegnalazione_geticoInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutSegnalazione_geticoInput>
    createMany?: segnalazionestoricoCreateManySegnalazione_geticoInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type registrorichiedenteUncheckedCreateNestedManyWithoutSegnalazione_geticoInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutSegnalazione_geticoInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutSegnalazione_geticoInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutSegnalazione_geticoInput>
    createMany?: registrorichiedenteCreateManySegnalazione_geticoInputEnvelope
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
  }

  export type segnalazioneUncheckedCreateNestedManyWithoutSegnalazione_geticoInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutSegnalazione_geticoInput>, Enumerable<segnalazioneUncheckedCreateWithoutSegnalazione_geticoInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutSegnalazione_geticoInput>
    createMany?: segnalazioneCreateManySegnalazione_geticoInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoUncheckedCreateNestedManyWithoutSegnalazione_geticoInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutSegnalazione_geticoInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutSegnalazione_geticoInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutSegnalazione_geticoInput>
    createMany?: segnalazionestoricoCreateManySegnalazione_geticoInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type registrorichiedenteUpdateManyWithoutSegnalazione_geticoNestedInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutSegnalazione_geticoInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutSegnalazione_geticoInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutSegnalazione_geticoInput>
    upsert?: Enumerable<registrorichiedenteUpsertWithWhereUniqueWithoutSegnalazione_geticoInput>
    createMany?: registrorichiedenteCreateManySegnalazione_geticoInputEnvelope
    set?: Enumerable<registrorichiedenteWhereUniqueInput>
    disconnect?: Enumerable<registrorichiedenteWhereUniqueInput>
    delete?: Enumerable<registrorichiedenteWhereUniqueInput>
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
    update?: Enumerable<registrorichiedenteUpdateWithWhereUniqueWithoutSegnalazione_geticoInput>
    updateMany?: Enumerable<registrorichiedenteUpdateManyWithWhereWithoutSegnalazione_geticoInput>
    deleteMany?: Enumerable<registrorichiedenteScalarWhereInput>
  }

  export type segnalazioneUpdateManyWithoutSegnalazione_geticoNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutSegnalazione_geticoInput>, Enumerable<segnalazioneUncheckedCreateWithoutSegnalazione_geticoInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutSegnalazione_geticoInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutSegnalazione_geticoInput>
    createMany?: segnalazioneCreateManySegnalazione_geticoInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutSegnalazione_geticoInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutSegnalazione_geticoInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUpdateManyWithoutSegnalazione_geticoNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutSegnalazione_geticoInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutSegnalazione_geticoInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutSegnalazione_geticoInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutSegnalazione_geticoInput>
    createMany?: segnalazionestoricoCreateManySegnalazione_geticoInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutSegnalazione_geticoInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutSegnalazione_geticoInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type registrorichiedenteUncheckedUpdateManyWithoutSegnalazione_geticoNestedInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutSegnalazione_geticoInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutSegnalazione_geticoInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutSegnalazione_geticoInput>
    upsert?: Enumerable<registrorichiedenteUpsertWithWhereUniqueWithoutSegnalazione_geticoInput>
    createMany?: registrorichiedenteCreateManySegnalazione_geticoInputEnvelope
    set?: Enumerable<registrorichiedenteWhereUniqueInput>
    disconnect?: Enumerable<registrorichiedenteWhereUniqueInput>
    delete?: Enumerable<registrorichiedenteWhereUniqueInput>
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
    update?: Enumerable<registrorichiedenteUpdateWithWhereUniqueWithoutSegnalazione_geticoInput>
    updateMany?: Enumerable<registrorichiedenteUpdateManyWithWhereWithoutSegnalazione_geticoInput>
    deleteMany?: Enumerable<registrorichiedenteScalarWhereInput>
  }

  export type segnalazioneUncheckedUpdateManyWithoutSegnalazione_geticoNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutSegnalazione_geticoInput>, Enumerable<segnalazioneUncheckedCreateWithoutSegnalazione_geticoInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutSegnalazione_geticoInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutSegnalazione_geticoInput>
    createMany?: segnalazioneCreateManySegnalazione_geticoInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutSegnalazione_geticoInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutSegnalazione_geticoInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutSegnalazione_geticoNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutSegnalazione_geticoInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutSegnalazione_geticoInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutSegnalazione_geticoInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutSegnalazione_geticoInput>
    createMany?: segnalazionestoricoCreateManySegnalazione_geticoInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutSegnalazione_geticoInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutSegnalazione_geticoInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type segnalazioneCreateNestedOneWithoutSegnalazionestatostoricoInput = {
    create?: XOR<segnalazioneCreateWithoutSegnalazionestatostoricoInput, segnalazioneUncheckedCreateWithoutSegnalazionestatostoricoInput>
    connectOrCreate?: segnalazioneCreateOrConnectWithoutSegnalazionestatostoricoInput
    connect?: segnalazioneWhereUniqueInput
  }

  export type utentiCreateNestedOneWithoutSegnalazionestatostoricoInput = {
    create?: XOR<utentiCreateWithoutSegnalazionestatostoricoInput, utentiUncheckedCreateWithoutSegnalazionestatostoricoInput>
    connectOrCreate?: utentiCreateOrConnectWithoutSegnalazionestatostoricoInput
    connect?: utentiWhereUniqueInput
  }

  export type segnalazioneUpdateOneWithoutSegnalazionestatostoricoNestedInput = {
    create?: XOR<segnalazioneCreateWithoutSegnalazionestatostoricoInput, segnalazioneUncheckedCreateWithoutSegnalazionestatostoricoInput>
    connectOrCreate?: segnalazioneCreateOrConnectWithoutSegnalazionestatostoricoInput
    upsert?: segnalazioneUpsertWithoutSegnalazionestatostoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: segnalazioneWhereUniqueInput
    update?: XOR<segnalazioneUpdateWithoutSegnalazionestatostoricoInput, segnalazioneUncheckedUpdateWithoutSegnalazionestatostoricoInput>
  }

  export type utentiUpdateOneWithoutSegnalazionestatostoricoNestedInput = {
    create?: XOR<utentiCreateWithoutSegnalazionestatostoricoInput, utentiUncheckedCreateWithoutSegnalazionestatostoricoInput>
    connectOrCreate?: utentiCreateOrConnectWithoutSegnalazionestatostoricoInput
    upsert?: utentiUpsertWithoutSegnalazionestatostoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutSegnalazionestatostoricoInput, utentiUncheckedUpdateWithoutSegnalazionestatostoricoInput>
  }

  export type segnalazionestoricoCreatesegnalatoriInput = {
    set: Enumerable<number>
  }

  export type categoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput = {
    create?: XOR<categoriaanomaliaCreateWithoutSegnalazionestoricoInput, categoriaanomaliaUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutSegnalazionestoricoInput
    connect?: categoriaanomaliaWhereUniqueInput
  }

  export type sottocategoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput = {
    create?: XOR<sottocategoriaanomaliaCreateWithoutSegnalazionestoricoInput, sottocategoriaanomaliaUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: sottocategoriaanomaliaCreateOrConnectWithoutSegnalazionestoricoInput
    connect?: sottocategoriaanomaliaWhereUniqueInput
  }

  export type fontiCreateNestedOneWithoutSegnalazionestoricoInput = {
    create?: XOR<fontiCreateWithoutSegnalazionestoricoInput, fontiUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: fontiCreateOrConnectWithoutSegnalazionestoricoInput
    connect?: fontiWhereUniqueInput
  }

  export type segnalatoreCreateNestedOneWithoutSegnalazionestoricoInput = {
    create?: XOR<segnalatoreCreateWithoutSegnalazionestoricoInput, segnalatoreUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: segnalatoreCreateOrConnectWithoutSegnalazionestoricoInput
    connect?: segnalatoreWhereUniqueInput
  }

  export type segnalazione_geticoCreateNestedOneWithoutSegnalazionestoricoInput = {
    create?: XOR<segnalazione_geticoCreateWithoutSegnalazionestoricoInput, segnalazione_geticoUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: segnalazione_geticoCreateOrConnectWithoutSegnalazionestoricoInput
    connect?: segnalazione_geticoWhereUniqueInput
  }

  export type tecniciCreateNestedOneWithoutSegnalazionestoricoInput = {
    create?: XOR<tecniciCreateWithoutSegnalazionestoricoInput, tecniciUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: tecniciCreateOrConnectWithoutSegnalazionestoricoInput
    connect?: tecniciWhereUniqueInput
  }

  export type tipoprovvedimentoCreateNestedOneWithoutSegnalazionestoricoInput = {
    create?: XOR<tipoprovvedimentoCreateWithoutSegnalazionestoricoInput, tipoprovvedimentoUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: tipoprovvedimentoCreateOrConnectWithoutSegnalazionestoricoInput
    connect?: tipoprovvedimentoWhereUniqueInput
  }

  export type utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput = {
    create?: XOR<utentiCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    connect?: utentiWhereUniqueInput
  }

  export type utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput = {
    create?: XOR<utentiCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput, utentiUncheckedCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    connect?: utentiWhereUniqueInput
  }

  export type tiposeveritaCreateNestedOneWithoutSegnalazionestoricoInput = {
    create?: XOR<tiposeveritaCreateWithoutSegnalazionestoricoInput, tiposeveritaUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: tiposeveritaCreateOrConnectWithoutSegnalazionestoricoInput
    connect?: tiposeveritaWhereUniqueInput
  }

  export type tipoeventoCreateNestedOneWithoutSegnalazionestoricoInput = {
    create?: XOR<tipoeventoCreateWithoutSegnalazionestoricoInput, tipoeventoUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: tipoeventoCreateOrConnectWithoutSegnalazionestoricoInput
    connect?: tipoeventoWhereUniqueInput
  }

  export type segnalazionestoricoUpdatesegnalatoriInput = {
    set?: Enumerable<number>
    push?: number | Enumerable<number>
  }

  export type categoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput = {
    create?: XOR<categoriaanomaliaCreateWithoutSegnalazionestoricoInput, categoriaanomaliaUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutSegnalazionestoricoInput
    upsert?: categoriaanomaliaUpsertWithoutSegnalazionestoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: categoriaanomaliaWhereUniqueInput
    update?: XOR<categoriaanomaliaUpdateWithoutSegnalazionestoricoInput, categoriaanomaliaUncheckedUpdateWithoutSegnalazionestoricoInput>
  }

  export type sottocategoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput = {
    create?: XOR<sottocategoriaanomaliaCreateWithoutSegnalazionestoricoInput, sottocategoriaanomaliaUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: sottocategoriaanomaliaCreateOrConnectWithoutSegnalazionestoricoInput
    upsert?: sottocategoriaanomaliaUpsertWithoutSegnalazionestoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: sottocategoriaanomaliaWhereUniqueInput
    update?: XOR<sottocategoriaanomaliaUpdateWithoutSegnalazionestoricoInput, sottocategoriaanomaliaUncheckedUpdateWithoutSegnalazionestoricoInput>
  }

  export type fontiUpdateOneWithoutSegnalazionestoricoNestedInput = {
    create?: XOR<fontiCreateWithoutSegnalazionestoricoInput, fontiUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: fontiCreateOrConnectWithoutSegnalazionestoricoInput
    upsert?: fontiUpsertWithoutSegnalazionestoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: fontiWhereUniqueInput
    update?: XOR<fontiUpdateWithoutSegnalazionestoricoInput, fontiUncheckedUpdateWithoutSegnalazionestoricoInput>
  }

  export type segnalatoreUpdateOneWithoutSegnalazionestoricoNestedInput = {
    create?: XOR<segnalatoreCreateWithoutSegnalazionestoricoInput, segnalatoreUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: segnalatoreCreateOrConnectWithoutSegnalazionestoricoInput
    upsert?: segnalatoreUpsertWithoutSegnalazionestoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: segnalatoreWhereUniqueInput
    update?: XOR<segnalatoreUpdateWithoutSegnalazionestoricoInput, segnalatoreUncheckedUpdateWithoutSegnalazionestoricoInput>
  }

  export type segnalazione_geticoUpdateOneWithoutSegnalazionestoricoNestedInput = {
    create?: XOR<segnalazione_geticoCreateWithoutSegnalazionestoricoInput, segnalazione_geticoUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: segnalazione_geticoCreateOrConnectWithoutSegnalazionestoricoInput
    upsert?: segnalazione_geticoUpsertWithoutSegnalazionestoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: segnalazione_geticoWhereUniqueInput
    update?: XOR<segnalazione_geticoUpdateWithoutSegnalazionestoricoInput, segnalazione_geticoUncheckedUpdateWithoutSegnalazionestoricoInput>
  }

  export type tecniciUpdateOneWithoutSegnalazionestoricoNestedInput = {
    create?: XOR<tecniciCreateWithoutSegnalazionestoricoInput, tecniciUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: tecniciCreateOrConnectWithoutSegnalazionestoricoInput
    upsert?: tecniciUpsertWithoutSegnalazionestoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: tecniciWhereUniqueInput
    update?: XOR<tecniciUpdateWithoutSegnalazionestoricoInput, tecniciUncheckedUpdateWithoutSegnalazionestoricoInput>
  }

  export type tipoprovvedimentoUpdateOneWithoutSegnalazionestoricoNestedInput = {
    create?: XOR<tipoprovvedimentoCreateWithoutSegnalazionestoricoInput, tipoprovvedimentoUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: tipoprovvedimentoCreateOrConnectWithoutSegnalazionestoricoInput
    upsert?: tipoprovvedimentoUpsertWithoutSegnalazionestoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: tipoprovvedimentoWhereUniqueInput
    update?: XOR<tipoprovvedimentoUpdateWithoutSegnalazionestoricoInput, tipoprovvedimentoUncheckedUpdateWithoutSegnalazionestoricoInput>
  }

  export type utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiNestedInput = {
    create?: XOR<utentiCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    upsert?: utentiUpsertWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput, utentiUncheckedUpdateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput>
  }

  export type utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiNestedInput = {
    create?: XOR<utentiCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput, utentiUncheckedCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput>
    connectOrCreate?: utentiCreateOrConnectWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    upsert?: utentiUpsertWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    disconnect?: boolean
    delete?: boolean
    connect?: utentiWhereUniqueInput
    update?: XOR<utentiUpdateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput, utentiUncheckedUpdateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput>
  }

  export type tiposeveritaUpdateOneWithoutSegnalazionestoricoNestedInput = {
    create?: XOR<tiposeveritaCreateWithoutSegnalazionestoricoInput, tiposeveritaUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: tiposeveritaCreateOrConnectWithoutSegnalazionestoricoInput
    upsert?: tiposeveritaUpsertWithoutSegnalazionestoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: tiposeveritaWhereUniqueInput
    update?: XOR<tiposeveritaUpdateWithoutSegnalazionestoricoInput, tiposeveritaUncheckedUpdateWithoutSegnalazionestoricoInput>
  }

  export type tipoeventoUpdateOneWithoutSegnalazionestoricoNestedInput = {
    create?: XOR<tipoeventoCreateWithoutSegnalazionestoricoInput, tipoeventoUncheckedCreateWithoutSegnalazionestoricoInput>
    connectOrCreate?: tipoeventoCreateOrConnectWithoutSegnalazionestoricoInput
    upsert?: tipoeventoUpsertWithoutSegnalazionestoricoInput
    disconnect?: boolean
    delete?: boolean
    connect?: tipoeventoWhereUniqueInput
    update?: XOR<tipoeventoUpdateWithoutSegnalazionestoricoInput, tipoeventoUncheckedUpdateWithoutSegnalazionestoricoInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutSottocategoriaanomaliaInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateWithoutSottocategoriaanomaliaInput>, Enumerable<categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateOrConnectWithoutSottocategoriaanomaliaInput>
    createMany?: categoriaanomalia_sottocategoriaanomaliaCreateManySottocategoriaanomaliaInputEnvelope
    connect?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
  }

  export type segnalazioneCreateNestedManyWithoutSottocategoriaanomaliaInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutSottocategoriaanomaliaInput>, Enumerable<segnalazioneUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutSottocategoriaanomaliaInput>
    createMany?: segnalazioneCreateManySottocategoriaanomaliaInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoCreateNestedManyWithoutSottocategoriaanomaliaInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutSottocategoriaanomaliaInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutSottocategoriaanomaliaInput>
    createMany?: segnalazionestoricoCreateManySottocategoriaanomaliaInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategoriaanomaliaInput = {
    create?: XOR<Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategoriaanomaliaInput>, Enumerable<sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategoriaanomaliaInput>
    createMany?: sottocategoriaanomalia_sottocategorialavoroCreateManySottocategoriaanomaliaInputEnvelope
    connect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateWithoutSottocategoriaanomaliaInput>, Enumerable<categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateOrConnectWithoutSottocategoriaanomaliaInput>
    createMany?: categoriaanomalia_sottocategoriaanomaliaCreateManySottocategoriaanomaliaInputEnvelope
    connect?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
  }

  export type segnalazioneUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutSottocategoriaanomaliaInput>, Enumerable<segnalazioneUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutSottocategoriaanomaliaInput>
    createMany?: segnalazioneCreateManySottocategoriaanomaliaInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutSottocategoriaanomaliaInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutSottocategoriaanomaliaInput>
    createMany?: segnalazionestoricoCreateManySottocategoriaanomaliaInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput = {
    create?: XOR<Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategoriaanomaliaInput>, Enumerable<sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategoriaanomaliaInput>
    createMany?: sottocategoriaanomalia_sottocategorialavoroCreateManySottocategoriaanomaliaInputEnvelope
    connect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutSottocategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateWithoutSottocategoriaanomaliaInput>, Enumerable<categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateOrConnectWithoutSottocategoriaanomaliaInput>
    upsert?: Enumerable<categoriaanomalia_sottocategoriaanomaliaUpsertWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    createMany?: categoriaanomalia_sottocategoriaanomaliaCreateManySottocategoriaanomaliaInputEnvelope
    set?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    disconnect?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    delete?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    connect?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    update?: Enumerable<categoriaanomalia_sottocategoriaanomaliaUpdateWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    updateMany?: Enumerable<categoriaanomalia_sottocategoriaanomaliaUpdateManyWithWhereWithoutSottocategoriaanomaliaInput>
    deleteMany?: Enumerable<categoriaanomalia_sottocategoriaanomaliaScalarWhereInput>
  }

  export type segnalazioneUpdateManyWithoutSottocategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutSottocategoriaanomaliaInput>, Enumerable<segnalazioneUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutSottocategoriaanomaliaInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    createMany?: segnalazioneCreateManySottocategoriaanomaliaInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutSottocategoriaanomaliaInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUpdateManyWithoutSottocategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutSottocategoriaanomaliaInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutSottocategoriaanomaliaInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    createMany?: segnalazionestoricoCreateManySottocategoriaanomaliaInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutSottocategoriaanomaliaInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategoriaanomaliaInput>, Enumerable<sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategoriaanomaliaInput>
    upsert?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    createMany?: sottocategoriaanomalia_sottocategorialavoroCreateManySottocategoriaanomaliaInputEnvelope
    set?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    disconnect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    delete?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    connect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    update?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    updateMany?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutSottocategoriaanomaliaInput>
    deleteMany?: Enumerable<sottocategoriaanomalia_sottocategorialavoroScalarWhereInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateWithoutSottocategoriaanomaliaInput>, Enumerable<categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateOrConnectWithoutSottocategoriaanomaliaInput>
    upsert?: Enumerable<categoriaanomalia_sottocategoriaanomaliaUpsertWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    createMany?: categoriaanomalia_sottocategoriaanomaliaCreateManySottocategoriaanomaliaInputEnvelope
    set?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    disconnect?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    delete?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    connect?: Enumerable<categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput>
    update?: Enumerable<categoriaanomalia_sottocategoriaanomaliaUpdateWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    updateMany?: Enumerable<categoriaanomalia_sottocategoriaanomaliaUpdateManyWithWhereWithoutSottocategoriaanomaliaInput>
    deleteMany?: Enumerable<categoriaanomalia_sottocategoriaanomaliaScalarWhereInput>
  }

  export type segnalazioneUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutSottocategoriaanomaliaInput>, Enumerable<segnalazioneUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutSottocategoriaanomaliaInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    createMany?: segnalazioneCreateManySottocategoriaanomaliaInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutSottocategoriaanomaliaInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutSottocategoriaanomaliaInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutSottocategoriaanomaliaInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    createMany?: segnalazionestoricoCreateManySottocategoriaanomaliaInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutSottocategoriaanomaliaInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput = {
    create?: XOR<Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategoriaanomaliaInput>, Enumerable<sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategoriaanomaliaInput>>
    connectOrCreate?: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategoriaanomaliaInput>
    upsert?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    createMany?: sottocategoriaanomalia_sottocategorialavoroCreateManySottocategoriaanomaliaInputEnvelope
    set?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    disconnect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    delete?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    connect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    update?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutSottocategoriaanomaliaInput>
    updateMany?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutSottocategoriaanomaliaInput>
    deleteMany?: Enumerable<sottocategoriaanomalia_sottocategorialavoroScalarWhereInput>
  }

  export type categoriaanomaliaCreateNestedOneWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    create?: XOR<categoriaanomaliaCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput, categoriaanomaliaUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutSottocategoriaanomalia_sottocategorialavoroInput
    connect?: categoriaanomaliaWhereUniqueInput
  }

  export type sottocategoriaanomaliaCreateNestedOneWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    create?: XOR<sottocategoriaanomaliaCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput, sottocategoriaanomaliaUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
    connectOrCreate?: sottocategoriaanomaliaCreateOrConnectWithoutSottocategoriaanomalia_sottocategorialavoroInput
    connect?: sottocategoriaanomaliaWhereUniqueInput
  }

  export type sottocategorialavoroCreateNestedOneWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    create?: XOR<sottocategorialavoroCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput, sottocategorialavoroUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
    connectOrCreate?: sottocategorialavoroCreateOrConnectWithoutSottocategoriaanomalia_sottocategorialavoroInput
    connect?: sottocategorialavoroWhereUniqueInput
  }

  export type categoriaanomaliaUpdateOneWithoutSottocategoriaanomalia_sottocategorialavoroNestedInput = {
    create?: XOR<categoriaanomaliaCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput, categoriaanomaliaUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
    connectOrCreate?: categoriaanomaliaCreateOrConnectWithoutSottocategoriaanomalia_sottocategorialavoroInput
    upsert?: categoriaanomaliaUpsertWithoutSottocategoriaanomalia_sottocategorialavoroInput
    disconnect?: boolean
    delete?: boolean
    connect?: categoriaanomaliaWhereUniqueInput
    update?: XOR<categoriaanomaliaUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput, categoriaanomaliaUncheckedUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
  }

  export type sottocategoriaanomaliaUpdateOneWithoutSottocategoriaanomalia_sottocategorialavoroNestedInput = {
    create?: XOR<sottocategoriaanomaliaCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput, sottocategoriaanomaliaUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
    connectOrCreate?: sottocategoriaanomaliaCreateOrConnectWithoutSottocategoriaanomalia_sottocategorialavoroInput
    upsert?: sottocategoriaanomaliaUpsertWithoutSottocategoriaanomalia_sottocategorialavoroInput
    disconnect?: boolean
    delete?: boolean
    connect?: sottocategoriaanomaliaWhereUniqueInput
    update?: XOR<sottocategoriaanomaliaUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput, sottocategoriaanomaliaUncheckedUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
  }

  export type sottocategorialavoroUpdateOneWithoutSottocategoriaanomalia_sottocategorialavoroNestedInput = {
    create?: XOR<sottocategorialavoroCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput, sottocategorialavoroUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
    connectOrCreate?: sottocategorialavoroCreateOrConnectWithoutSottocategoriaanomalia_sottocategorialavoroInput
    upsert?: sottocategorialavoroUpsertWithoutSottocategoriaanomalia_sottocategorialavoroInput
    disconnect?: boolean
    delete?: boolean
    connect?: sottocategorialavoroWhereUniqueInput
    update?: XOR<sottocategorialavoroUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput, sottocategorialavoroUncheckedUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
  }

  export type categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategorialavoroInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput>, Enumerable<categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategorialavoroInput>
    createMany?: categoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInputEnvelope
    connect?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
  }

  export type lavoroCreateNestedManyWithoutSottocategorialavoroInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutSottocategorialavoroInput>, Enumerable<lavoroUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutSottocategorialavoroInput>
    createMany?: lavoroCreateManySottocategorialavoroInputEnvelope
    connect?: Enumerable<lavoroWhereUniqueInput>
  }

  export type lavorostoricoCreateNestedManyWithoutSottocategorialavoroInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutSottocategorialavoroInput>, Enumerable<lavorostoricoUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutSottocategorialavoroInput>
    createMany?: lavorostoricoCreateManySottocategorialavoroInputEnvelope
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategorialavoroInput = {
    create?: XOR<Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput>, Enumerable<sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategorialavoroInput>
    createMany?: sottocategoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInputEnvelope
    connect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
  }

  export type categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput>, Enumerable<categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategorialavoroInput>
    createMany?: categoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInputEnvelope
    connect?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
  }

  export type lavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutSottocategorialavoroInput>, Enumerable<lavoroUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutSottocategorialavoroInput>
    createMany?: lavoroCreateManySottocategorialavoroInputEnvelope
    connect?: Enumerable<lavoroWhereUniqueInput>
  }

  export type lavorostoricoUncheckedCreateNestedManyWithoutSottocategorialavoroInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutSottocategorialavoroInput>, Enumerable<lavorostoricoUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutSottocategorialavoroInput>
    createMany?: lavorostoricoCreateManySottocategorialavoroInputEnvelope
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput = {
    create?: XOR<Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput>, Enumerable<sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategorialavoroInput>
    createMany?: sottocategoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInputEnvelope
    connect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
  }

  export type categoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategorialavoroNestedInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput>, Enumerable<categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategorialavoroInput>
    upsert?: Enumerable<categoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutSottocategorialavoroInput>
    createMany?: categoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInputEnvelope
    set?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    disconnect?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    delete?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    connect?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    update?: Enumerable<categoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutSottocategorialavoroInput>
    updateMany?: Enumerable<categoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutSottocategorialavoroInput>
    deleteMany?: Enumerable<categoriaanomalia_sottocategorialavoroScalarWhereInput>
  }

  export type lavoroUpdateManyWithoutSottocategorialavoroNestedInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutSottocategorialavoroInput>, Enumerable<lavoroUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutSottocategorialavoroInput>
    upsert?: Enumerable<lavoroUpsertWithWhereUniqueWithoutSottocategorialavoroInput>
    createMany?: lavoroCreateManySottocategorialavoroInputEnvelope
    set?: Enumerable<lavoroWhereUniqueInput>
    disconnect?: Enumerable<lavoroWhereUniqueInput>
    delete?: Enumerable<lavoroWhereUniqueInput>
    connect?: Enumerable<lavoroWhereUniqueInput>
    update?: Enumerable<lavoroUpdateWithWhereUniqueWithoutSottocategorialavoroInput>
    updateMany?: Enumerable<lavoroUpdateManyWithWhereWithoutSottocategorialavoroInput>
    deleteMany?: Enumerable<lavoroScalarWhereInput>
  }

  export type lavorostoricoUpdateManyWithoutSottocategorialavoroNestedInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutSottocategorialavoroInput>, Enumerable<lavorostoricoUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutSottocategorialavoroInput>
    upsert?: Enumerable<lavorostoricoUpsertWithWhereUniqueWithoutSottocategorialavoroInput>
    createMany?: lavorostoricoCreateManySottocategorialavoroInputEnvelope
    set?: Enumerable<lavorostoricoWhereUniqueInput>
    disconnect?: Enumerable<lavorostoricoWhereUniqueInput>
    delete?: Enumerable<lavorostoricoWhereUniqueInput>
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
    update?: Enumerable<lavorostoricoUpdateWithWhereUniqueWithoutSottocategorialavoroInput>
    updateMany?: Enumerable<lavorostoricoUpdateManyWithWhereWithoutSottocategorialavoroInput>
    deleteMany?: Enumerable<lavorostoricoScalarWhereInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategorialavoroNestedInput = {
    create?: XOR<Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput>, Enumerable<sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategorialavoroInput>
    upsert?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutSottocategorialavoroInput>
    createMany?: sottocategoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInputEnvelope
    set?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    disconnect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    delete?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    connect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    update?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutSottocategorialavoroInput>
    updateMany?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutSottocategorialavoroInput>
    deleteMany?: Enumerable<sottocategoriaanomalia_sottocategorialavoroScalarWhereInput>
  }

  export type categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput = {
    create?: XOR<Enumerable<categoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput>, Enumerable<categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<categoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategorialavoroInput>
    upsert?: Enumerable<categoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutSottocategorialavoroInput>
    createMany?: categoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInputEnvelope
    set?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    disconnect?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    delete?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    connect?: Enumerable<categoriaanomalia_sottocategorialavoroWhereUniqueInput>
    update?: Enumerable<categoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutSottocategorialavoroInput>
    updateMany?: Enumerable<categoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutSottocategorialavoroInput>
    deleteMany?: Enumerable<categoriaanomalia_sottocategorialavoroScalarWhereInput>
  }

  export type lavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutSottocategorialavoroInput>, Enumerable<lavoroUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutSottocategorialavoroInput>
    upsert?: Enumerable<lavoroUpsertWithWhereUniqueWithoutSottocategorialavoroInput>
    createMany?: lavoroCreateManySottocategorialavoroInputEnvelope
    set?: Enumerable<lavoroWhereUniqueInput>
    disconnect?: Enumerable<lavoroWhereUniqueInput>
    delete?: Enumerable<lavoroWhereUniqueInput>
    connect?: Enumerable<lavoroWhereUniqueInput>
    update?: Enumerable<lavoroUpdateWithWhereUniqueWithoutSottocategorialavoroInput>
    updateMany?: Enumerable<lavoroUpdateManyWithWhereWithoutSottocategorialavoroInput>
    deleteMany?: Enumerable<lavoroScalarWhereInput>
  }

  export type lavorostoricoUncheckedUpdateManyWithoutSottocategorialavoroNestedInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutSottocategorialavoroInput>, Enumerable<lavorostoricoUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutSottocategorialavoroInput>
    upsert?: Enumerable<lavorostoricoUpsertWithWhereUniqueWithoutSottocategorialavoroInput>
    createMany?: lavorostoricoCreateManySottocategorialavoroInputEnvelope
    set?: Enumerable<lavorostoricoWhereUniqueInput>
    disconnect?: Enumerable<lavorostoricoWhereUniqueInput>
    delete?: Enumerable<lavorostoricoWhereUniqueInput>
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
    update?: Enumerable<lavorostoricoUpdateWithWhereUniqueWithoutSottocategorialavoroInput>
    updateMany?: Enumerable<lavorostoricoUpdateManyWithWhereWithoutSottocategorialavoroInput>
    deleteMany?: Enumerable<lavorostoricoScalarWhereInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput = {
    create?: XOR<Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput>, Enumerable<sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput>>
    connectOrCreate?: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategorialavoroInput>
    upsert?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutSottocategorialavoroInput>
    createMany?: sottocategoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInputEnvelope
    set?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    disconnect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    delete?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    connect?: Enumerable<sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput>
    update?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutSottocategorialavoroInput>
    updateMany?: Enumerable<sottocategoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutSottocategorialavoroInput>
    deleteMany?: Enumerable<sottocategoriaanomalia_sottocategorialavoroScalarWhereInput>
  }

  export type segnalazioneCreateNestedManyWithoutTecniciInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTecniciInput>, Enumerable<segnalazioneUncheckedCreateWithoutTecniciInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTecniciInput>
    createMany?: segnalazioneCreateManyTecniciInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoCreateNestedManyWithoutTecniciInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTecniciInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTecniciInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTecniciInput>
    createMany?: segnalazionestoricoCreateManyTecniciInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type segnalazioneUncheckedCreateNestedManyWithoutTecniciInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTecniciInput>, Enumerable<segnalazioneUncheckedCreateWithoutTecniciInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTecniciInput>
    createMany?: segnalazioneCreateManyTecniciInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoUncheckedCreateNestedManyWithoutTecniciInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTecniciInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTecniciInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTecniciInput>
    createMany?: segnalazionestoricoCreateManyTecniciInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type segnalazioneUpdateManyWithoutTecniciNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTecniciInput>, Enumerable<segnalazioneUncheckedCreateWithoutTecniciInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTecniciInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutTecniciInput>
    createMany?: segnalazioneCreateManyTecniciInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutTecniciInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutTecniciInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUpdateManyWithoutTecniciNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTecniciInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTecniciInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTecniciInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutTecniciInput>
    createMany?: segnalazionestoricoCreateManyTecniciInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutTecniciInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutTecniciInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type segnalazioneUncheckedUpdateManyWithoutTecniciNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTecniciInput>, Enumerable<segnalazioneUncheckedCreateWithoutTecniciInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTecniciInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutTecniciInput>
    createMany?: segnalazioneCreateManyTecniciInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutTecniciInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutTecniciInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutTecniciNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTecniciInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTecniciInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTecniciInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutTecniciInput>
    createMany?: segnalazionestoricoCreateManyTecniciInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutTecniciInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutTecniciInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type segnalazioneCreateNestedManyWithoutTipoeventoInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTipoeventoInput>, Enumerable<segnalazioneUncheckedCreateWithoutTipoeventoInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTipoeventoInput>
    createMany?: segnalazioneCreateManyTipoeventoInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoCreateNestedManyWithoutTipoeventoInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTipoeventoInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTipoeventoInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTipoeventoInput>
    createMany?: segnalazionestoricoCreateManyTipoeventoInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type segnalazioneUncheckedCreateNestedManyWithoutTipoeventoInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTipoeventoInput>, Enumerable<segnalazioneUncheckedCreateWithoutTipoeventoInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTipoeventoInput>
    createMany?: segnalazioneCreateManyTipoeventoInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoUncheckedCreateNestedManyWithoutTipoeventoInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTipoeventoInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTipoeventoInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTipoeventoInput>
    createMany?: segnalazionestoricoCreateManyTipoeventoInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type segnalazioneUpdateManyWithoutTipoeventoNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTipoeventoInput>, Enumerable<segnalazioneUncheckedCreateWithoutTipoeventoInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTipoeventoInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutTipoeventoInput>
    createMany?: segnalazioneCreateManyTipoeventoInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutTipoeventoInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutTipoeventoInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUpdateManyWithoutTipoeventoNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTipoeventoInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTipoeventoInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTipoeventoInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutTipoeventoInput>
    createMany?: segnalazionestoricoCreateManyTipoeventoInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutTipoeventoInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutTipoeventoInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type segnalazioneUncheckedUpdateManyWithoutTipoeventoNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTipoeventoInput>, Enumerable<segnalazioneUncheckedCreateWithoutTipoeventoInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTipoeventoInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutTipoeventoInput>
    createMany?: segnalazioneCreateManyTipoeventoInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutTipoeventoInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutTipoeventoInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutTipoeventoNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTipoeventoInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTipoeventoInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTipoeventoInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutTipoeventoInput>
    createMany?: segnalazionestoricoCreateManyTipoeventoInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutTipoeventoInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutTipoeventoInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type segnalazioneCreateNestedManyWithoutTipoprovvedimentoInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTipoprovvedimentoInput>, Enumerable<segnalazioneUncheckedCreateWithoutTipoprovvedimentoInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTipoprovvedimentoInput>
    createMany?: segnalazioneCreateManyTipoprovvedimentoInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoCreateNestedManyWithoutTipoprovvedimentoInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTipoprovvedimentoInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTipoprovvedimentoInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTipoprovvedimentoInput>
    createMany?: segnalazionestoricoCreateManyTipoprovvedimentoInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type segnalazioneUncheckedCreateNestedManyWithoutTipoprovvedimentoInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTipoprovvedimentoInput>, Enumerable<segnalazioneUncheckedCreateWithoutTipoprovvedimentoInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTipoprovvedimentoInput>
    createMany?: segnalazioneCreateManyTipoprovvedimentoInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoUncheckedCreateNestedManyWithoutTipoprovvedimentoInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTipoprovvedimentoInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTipoprovvedimentoInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTipoprovvedimentoInput>
    createMany?: segnalazionestoricoCreateManyTipoprovvedimentoInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type segnalazioneUpdateManyWithoutTipoprovvedimentoNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTipoprovvedimentoInput>, Enumerable<segnalazioneUncheckedCreateWithoutTipoprovvedimentoInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTipoprovvedimentoInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutTipoprovvedimentoInput>
    createMany?: segnalazioneCreateManyTipoprovvedimentoInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutTipoprovvedimentoInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutTipoprovvedimentoInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUpdateManyWithoutTipoprovvedimentoNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTipoprovvedimentoInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTipoprovvedimentoInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTipoprovvedimentoInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutTipoprovvedimentoInput>
    createMany?: segnalazionestoricoCreateManyTipoprovvedimentoInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutTipoprovvedimentoInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutTipoprovvedimentoInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type segnalazioneUncheckedUpdateManyWithoutTipoprovvedimentoNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTipoprovvedimentoInput>, Enumerable<segnalazioneUncheckedCreateWithoutTipoprovvedimentoInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTipoprovvedimentoInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutTipoprovvedimentoInput>
    createMany?: segnalazioneCreateManyTipoprovvedimentoInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutTipoprovvedimentoInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutTipoprovvedimentoInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutTipoprovvedimentoNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTipoprovvedimentoInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTipoprovvedimentoInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTipoprovvedimentoInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutTipoprovvedimentoInput>
    createMany?: segnalazionestoricoCreateManyTipoprovvedimentoInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutTipoprovvedimentoInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutTipoprovvedimentoInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type segnalazioneCreateNestedManyWithoutTiposeveritaInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTiposeveritaInput>, Enumerable<segnalazioneUncheckedCreateWithoutTiposeveritaInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTiposeveritaInput>
    createMany?: segnalazioneCreateManyTiposeveritaInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoCreateNestedManyWithoutTiposeveritaInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTiposeveritaInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTiposeveritaInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTiposeveritaInput>
    createMany?: segnalazionestoricoCreateManyTiposeveritaInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type segnalazioneUncheckedCreateNestedManyWithoutTiposeveritaInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTiposeveritaInput>, Enumerable<segnalazioneUncheckedCreateWithoutTiposeveritaInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTiposeveritaInput>
    createMany?: segnalazioneCreateManyTiposeveritaInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestoricoUncheckedCreateNestedManyWithoutTiposeveritaInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTiposeveritaInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTiposeveritaInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTiposeveritaInput>
    createMany?: segnalazionestoricoCreateManyTiposeveritaInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type segnalazioneUpdateManyWithoutTiposeveritaNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTiposeveritaInput>, Enumerable<segnalazioneUncheckedCreateWithoutTiposeveritaInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTiposeveritaInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutTiposeveritaInput>
    createMany?: segnalazioneCreateManyTiposeveritaInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutTiposeveritaInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutTiposeveritaInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUpdateManyWithoutTiposeveritaNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTiposeveritaInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTiposeveritaInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTiposeveritaInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutTiposeveritaInput>
    createMany?: segnalazionestoricoCreateManyTiposeveritaInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutTiposeveritaInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutTiposeveritaInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type segnalazioneUncheckedUpdateManyWithoutTiposeveritaNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutTiposeveritaInput>, Enumerable<segnalazioneUncheckedCreateWithoutTiposeveritaInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutTiposeveritaInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutTiposeveritaInput>
    createMany?: segnalazioneCreateManyTiposeveritaInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutTiposeveritaInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutTiposeveritaInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutTiposeveritaNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutTiposeveritaInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutTiposeveritaInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutTiposeveritaInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutTiposeveritaInput>
    createMany?: segnalazionestoricoCreateManyTiposeveritaInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutTiposeveritaInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutTiposeveritaInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type catastoanomaliaCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<catastoanomaliaCreateWithoutUtentiInput>, Enumerable<catastoanomaliaUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<catastoanomaliaCreateOrConnectWithoutUtentiInput>
    createMany?: catastoanomaliaCreateManyUtentiInputEnvelope
    connect?: Enumerable<catastoanomaliaWhereUniqueInput>
  }

  export type catastolinkerCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<catastolinkerCreateWithoutUtentiInput>, Enumerable<catastolinkerUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<catastolinkerCreateOrConnectWithoutUtentiInput>
    createMany?: catastolinkerCreateManyUtentiInputEnvelope
    connect?: Enumerable<catastolinkerWhereUniqueInput>
  }

  export type lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput>, Enumerable<lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
    createMany?: lavoroCreateManyUtenti_lavoro_idUtenteStatoToutentiInputEnvelope
    connect?: Enumerable<lavoroWhereUniqueInput>
  }

  export type lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutUtenti_lavoro_idUtenteToutentiInput>, Enumerable<lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutUtenti_lavoro_idUtenteToutentiInput>
    createMany?: lavoroCreateManyUtenti_lavoro_idUtenteToutentiInputEnvelope
    connect?: Enumerable<lavoroWhereUniqueInput>
  }

  export type lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>, Enumerable<lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
    createMany?: lavorostoricoCreateManyUtenti_lavorostorico_idUtenteStatoToutentiInputEnvelope
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
  }

  export type lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput>, Enumerable<lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutUtenti_lavorostorico_idUtenteToutentiInput>
    createMany?: lavorostoricoCreateManyUtenti_lavorostorico_idUtenteToutentiInputEnvelope
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
  }

  export type livelliservizioCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<livelliservizioCreateWithoutUtentiInput>, Enumerable<livelliservizioUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<livelliservizioCreateOrConnectWithoutUtentiInput>
    createMany?: livelliservizioCreateManyUtentiInputEnvelope
    connect?: Enumerable<livelliservizioWhereUniqueInput>
  }

  export type oggettocivettaCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<oggettocivettaCreateWithoutUtentiInput>, Enumerable<oggettocivettaUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<oggettocivettaCreateOrConnectWithoutUtentiInput>
    createMany?: oggettocivettaCreateManyUtentiInputEnvelope
    connect?: Enumerable<oggettocivettaWhereUniqueInput>
  }

  export type praticaCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<praticaCreateWithoutUtentiInput>, Enumerable<praticaUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<praticaCreateOrConnectWithoutUtentiInput>
    createMany?: praticaCreateManyUtentiInputEnvelope
    connect?: Enumerable<praticaWhereUniqueInput>
  }

  export type praticastoricoCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<praticastoricoCreateWithoutUtentiInput>, Enumerable<praticastoricoUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<praticastoricoCreateOrConnectWithoutUtentiInput>
    createMany?: praticastoricoCreateManyUtentiInputEnvelope
    connect?: Enumerable<praticastoricoWhereUniqueInput>
  }

  export type registrorichiedenteCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutUtentiInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutUtentiInput>
    createMany?: registrorichiedenteCreateManyUtentiInputEnvelope
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
  }

  export type segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>, Enumerable<segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
    createMany?: segnalazioneCreateManyUtenti_segnalazione_idUtenteStatoToutentiInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutUtenti_segnalazione_idUtenteToutentiInput>, Enumerable<segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutUtenti_segnalazione_idUtenteToutentiInput>
    createMany?: segnalazioneCreateManyUtenti_segnalazione_idUtenteToutentiInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestatostoricoCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<segnalazionestatostoricoCreateWithoutUtentiInput>, Enumerable<segnalazionestatostoricoUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<segnalazionestatostoricoCreateOrConnectWithoutUtentiInput>
    createMany?: segnalazionestatostoricoCreateManyUtentiInputEnvelope
    connect?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
  }

  export type segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
    createMany?: segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteStatoToutentiInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
    createMany?: segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteToutentiInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type gruppoCreateNestedOneWithoutUtentiInput = {
    create?: XOR<gruppoCreateWithoutUtentiInput, gruppoUncheckedCreateWithoutUtentiInput>
    connectOrCreate?: gruppoCreateOrConnectWithoutUtentiInput
    connect?: gruppoWhereUniqueInput
  }

  export type catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<catastoanomaliaCreateWithoutUtentiInput>, Enumerable<catastoanomaliaUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<catastoanomaliaCreateOrConnectWithoutUtentiInput>
    createMany?: catastoanomaliaCreateManyUtentiInputEnvelope
    connect?: Enumerable<catastoanomaliaWhereUniqueInput>
  }

  export type catastolinkerUncheckedCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<catastolinkerCreateWithoutUtentiInput>, Enumerable<catastolinkerUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<catastolinkerCreateOrConnectWithoutUtentiInput>
    createMany?: catastolinkerCreateManyUtentiInputEnvelope
    connect?: Enumerable<catastolinkerWhereUniqueInput>
  }

  export type lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput>, Enumerable<lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
    createMany?: lavoroCreateManyUtenti_lavoro_idUtenteStatoToutentiInputEnvelope
    connect?: Enumerable<lavoroWhereUniqueInput>
  }

  export type lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutUtenti_lavoro_idUtenteToutentiInput>, Enumerable<lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutUtenti_lavoro_idUtenteToutentiInput>
    createMany?: lavoroCreateManyUtenti_lavoro_idUtenteToutentiInputEnvelope
    connect?: Enumerable<lavoroWhereUniqueInput>
  }

  export type lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>, Enumerable<lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
    createMany?: lavorostoricoCreateManyUtenti_lavorostorico_idUtenteStatoToutentiInputEnvelope
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
  }

  export type lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput>, Enumerable<lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutUtenti_lavorostorico_idUtenteToutentiInput>
    createMany?: lavorostoricoCreateManyUtenti_lavorostorico_idUtenteToutentiInputEnvelope
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
  }

  export type livelliservizioUncheckedCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<livelliservizioCreateWithoutUtentiInput>, Enumerable<livelliservizioUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<livelliservizioCreateOrConnectWithoutUtentiInput>
    createMany?: livelliservizioCreateManyUtentiInputEnvelope
    connect?: Enumerable<livelliservizioWhereUniqueInput>
  }

  export type oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<oggettocivettaCreateWithoutUtentiInput>, Enumerable<oggettocivettaUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<oggettocivettaCreateOrConnectWithoutUtentiInput>
    createMany?: oggettocivettaCreateManyUtentiInputEnvelope
    connect?: Enumerable<oggettocivettaWhereUniqueInput>
  }

  export type praticaUncheckedCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<praticaCreateWithoutUtentiInput>, Enumerable<praticaUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<praticaCreateOrConnectWithoutUtentiInput>
    createMany?: praticaCreateManyUtentiInputEnvelope
    connect?: Enumerable<praticaWhereUniqueInput>
  }

  export type praticastoricoUncheckedCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<praticastoricoCreateWithoutUtentiInput>, Enumerable<praticastoricoUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<praticastoricoCreateOrConnectWithoutUtentiInput>
    createMany?: praticastoricoCreateManyUtentiInputEnvelope
    connect?: Enumerable<praticastoricoWhereUniqueInput>
  }

  export type registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutUtentiInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutUtentiInput>
    createMany?: registrorichiedenteCreateManyUtentiInputEnvelope
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
  }

  export type segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>, Enumerable<segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
    createMany?: segnalazioneCreateManyUtenti_segnalazione_idUtenteStatoToutentiInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutUtenti_segnalazione_idUtenteToutentiInput>, Enumerable<segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutUtenti_segnalazione_idUtenteToutentiInput>
    createMany?: segnalazioneCreateManyUtenti_segnalazione_idUtenteToutentiInputEnvelope
    connect?: Enumerable<segnalazioneWhereUniqueInput>
  }

  export type segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput = {
    create?: XOR<Enumerable<segnalazionestatostoricoCreateWithoutUtentiInput>, Enumerable<segnalazionestatostoricoUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<segnalazionestatostoricoCreateOrConnectWithoutUtentiInput>
    createMany?: segnalazionestatostoricoCreateManyUtentiInputEnvelope
    connect?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
  }

  export type segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
    createMany?: segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteStatoToutentiInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
    createMany?: segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteToutentiInputEnvelope
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type catastoanomaliaUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<catastoanomaliaCreateWithoutUtentiInput>, Enumerable<catastoanomaliaUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<catastoanomaliaCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<catastoanomaliaUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: catastoanomaliaCreateManyUtentiInputEnvelope
    set?: Enumerable<catastoanomaliaWhereUniqueInput>
    disconnect?: Enumerable<catastoanomaliaWhereUniqueInput>
    delete?: Enumerable<catastoanomaliaWhereUniqueInput>
    connect?: Enumerable<catastoanomaliaWhereUniqueInput>
    update?: Enumerable<catastoanomaliaUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<catastoanomaliaUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<catastoanomaliaScalarWhereInput>
  }

  export type catastolinkerUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<catastolinkerCreateWithoutUtentiInput>, Enumerable<catastolinkerUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<catastolinkerCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<catastolinkerUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: catastolinkerCreateManyUtentiInputEnvelope
    set?: Enumerable<catastolinkerWhereUniqueInput>
    disconnect?: Enumerable<catastolinkerWhereUniqueInput>
    delete?: Enumerable<catastolinkerWhereUniqueInput>
    connect?: Enumerable<catastolinkerWhereUniqueInput>
    update?: Enumerable<catastolinkerUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<catastolinkerUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<catastolinkerScalarWhereInput>
  }

  export type lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput>, Enumerable<lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
    upsert?: Enumerable<lavoroUpsertWithWhereUniqueWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
    createMany?: lavoroCreateManyUtenti_lavoro_idUtenteStatoToutentiInputEnvelope
    set?: Enumerable<lavoroWhereUniqueInput>
    disconnect?: Enumerable<lavoroWhereUniqueInput>
    delete?: Enumerable<lavoroWhereUniqueInput>
    connect?: Enumerable<lavoroWhereUniqueInput>
    update?: Enumerable<lavoroUpdateWithWhereUniqueWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
    updateMany?: Enumerable<lavoroUpdateManyWithWhereWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
    deleteMany?: Enumerable<lavoroScalarWhereInput>
  }

  export type lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutUtenti_lavoro_idUtenteToutentiInput>, Enumerable<lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutUtenti_lavoro_idUtenteToutentiInput>
    upsert?: Enumerable<lavoroUpsertWithWhereUniqueWithoutUtenti_lavoro_idUtenteToutentiInput>
    createMany?: lavoroCreateManyUtenti_lavoro_idUtenteToutentiInputEnvelope
    set?: Enumerable<lavoroWhereUniqueInput>
    disconnect?: Enumerable<lavoroWhereUniqueInput>
    delete?: Enumerable<lavoroWhereUniqueInput>
    connect?: Enumerable<lavoroWhereUniqueInput>
    update?: Enumerable<lavoroUpdateWithWhereUniqueWithoutUtenti_lavoro_idUtenteToutentiInput>
    updateMany?: Enumerable<lavoroUpdateManyWithWhereWithoutUtenti_lavoro_idUtenteToutentiInput>
    deleteMany?: Enumerable<lavoroScalarWhereInput>
  }

  export type lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>, Enumerable<lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
    upsert?: Enumerable<lavorostoricoUpsertWithWhereUniqueWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
    createMany?: lavorostoricoCreateManyUtenti_lavorostorico_idUtenteStatoToutentiInputEnvelope
    set?: Enumerable<lavorostoricoWhereUniqueInput>
    disconnect?: Enumerable<lavorostoricoWhereUniqueInput>
    delete?: Enumerable<lavorostoricoWhereUniqueInput>
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
    update?: Enumerable<lavorostoricoUpdateWithWhereUniqueWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
    updateMany?: Enumerable<lavorostoricoUpdateManyWithWhereWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
    deleteMany?: Enumerable<lavorostoricoScalarWhereInput>
  }

  export type lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput>, Enumerable<lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutUtenti_lavorostorico_idUtenteToutentiInput>
    upsert?: Enumerable<lavorostoricoUpsertWithWhereUniqueWithoutUtenti_lavorostorico_idUtenteToutentiInput>
    createMany?: lavorostoricoCreateManyUtenti_lavorostorico_idUtenteToutentiInputEnvelope
    set?: Enumerable<lavorostoricoWhereUniqueInput>
    disconnect?: Enumerable<lavorostoricoWhereUniqueInput>
    delete?: Enumerable<lavorostoricoWhereUniqueInput>
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
    update?: Enumerable<lavorostoricoUpdateWithWhereUniqueWithoutUtenti_lavorostorico_idUtenteToutentiInput>
    updateMany?: Enumerable<lavorostoricoUpdateManyWithWhereWithoutUtenti_lavorostorico_idUtenteToutentiInput>
    deleteMany?: Enumerable<lavorostoricoScalarWhereInput>
  }

  export type livelliservizioUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<livelliservizioCreateWithoutUtentiInput>, Enumerable<livelliservizioUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<livelliservizioCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<livelliservizioUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: livelliservizioCreateManyUtentiInputEnvelope
    set?: Enumerable<livelliservizioWhereUniqueInput>
    disconnect?: Enumerable<livelliservizioWhereUniqueInput>
    delete?: Enumerable<livelliservizioWhereUniqueInput>
    connect?: Enumerable<livelliservizioWhereUniqueInput>
    update?: Enumerable<livelliservizioUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<livelliservizioUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<livelliservizioScalarWhereInput>
  }

  export type oggettocivettaUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<oggettocivettaCreateWithoutUtentiInput>, Enumerable<oggettocivettaUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<oggettocivettaCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<oggettocivettaUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: oggettocivettaCreateManyUtentiInputEnvelope
    set?: Enumerable<oggettocivettaWhereUniqueInput>
    disconnect?: Enumerable<oggettocivettaWhereUniqueInput>
    delete?: Enumerable<oggettocivettaWhereUniqueInput>
    connect?: Enumerable<oggettocivettaWhereUniqueInput>
    update?: Enumerable<oggettocivettaUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<oggettocivettaUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<oggettocivettaScalarWhereInput>
  }

  export type praticaUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<praticaCreateWithoutUtentiInput>, Enumerable<praticaUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<praticaCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<praticaUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: praticaCreateManyUtentiInputEnvelope
    set?: Enumerable<praticaWhereUniqueInput>
    disconnect?: Enumerable<praticaWhereUniqueInput>
    delete?: Enumerable<praticaWhereUniqueInput>
    connect?: Enumerable<praticaWhereUniqueInput>
    update?: Enumerable<praticaUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<praticaUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<praticaScalarWhereInput>
  }

  export type praticastoricoUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<praticastoricoCreateWithoutUtentiInput>, Enumerable<praticastoricoUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<praticastoricoCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<praticastoricoUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: praticastoricoCreateManyUtentiInputEnvelope
    set?: Enumerable<praticastoricoWhereUniqueInput>
    disconnect?: Enumerable<praticastoricoWhereUniqueInput>
    delete?: Enumerable<praticastoricoWhereUniqueInput>
    connect?: Enumerable<praticastoricoWhereUniqueInput>
    update?: Enumerable<praticastoricoUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<praticastoricoUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<praticastoricoScalarWhereInput>
  }

  export type registrorichiedenteUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutUtentiInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<registrorichiedenteUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: registrorichiedenteCreateManyUtentiInputEnvelope
    set?: Enumerable<registrorichiedenteWhereUniqueInput>
    disconnect?: Enumerable<registrorichiedenteWhereUniqueInput>
    delete?: Enumerable<registrorichiedenteWhereUniqueInput>
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
    update?: Enumerable<registrorichiedenteUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<registrorichiedenteUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<registrorichiedenteScalarWhereInput>
  }

  export type segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>, Enumerable<segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
    createMany?: segnalazioneCreateManyUtenti_segnalazione_idUtenteStatoToutentiInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutUtenti_segnalazione_idUtenteToutentiInput>, Enumerable<segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutUtenti_segnalazione_idUtenteToutentiInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutUtenti_segnalazione_idUtenteToutentiInput>
    createMany?: segnalazioneCreateManyUtenti_segnalazione_idUtenteToutentiInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutUtenti_segnalazione_idUtenteToutentiInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutUtenti_segnalazione_idUtenteToutentiInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<segnalazionestatostoricoCreateWithoutUtentiInput>, Enumerable<segnalazionestatostoricoUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<segnalazionestatostoricoCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<segnalazionestatostoricoUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: segnalazionestatostoricoCreateManyUtentiInputEnvelope
    set?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestatostoricoUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<segnalazionestatostoricoUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<segnalazionestatostoricoScalarWhereInput>
  }

  export type segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
    createMany?: segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteStatoToutentiInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
    createMany?: segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteToutentiInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type gruppoUpdateOneWithoutUtentiNestedInput = {
    create?: XOR<gruppoCreateWithoutUtentiInput, gruppoUncheckedCreateWithoutUtentiInput>
    connectOrCreate?: gruppoCreateOrConnectWithoutUtentiInput
    upsert?: gruppoUpsertWithoutUtentiInput
    disconnect?: boolean
    delete?: boolean
    connect?: gruppoWhereUniqueInput
    update?: XOR<gruppoUpdateWithoutUtentiInput, gruppoUncheckedUpdateWithoutUtentiInput>
  }

  export type catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<catastoanomaliaCreateWithoutUtentiInput>, Enumerable<catastoanomaliaUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<catastoanomaliaCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<catastoanomaliaUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: catastoanomaliaCreateManyUtentiInputEnvelope
    set?: Enumerable<catastoanomaliaWhereUniqueInput>
    disconnect?: Enumerable<catastoanomaliaWhereUniqueInput>
    delete?: Enumerable<catastoanomaliaWhereUniqueInput>
    connect?: Enumerable<catastoanomaliaWhereUniqueInput>
    update?: Enumerable<catastoanomaliaUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<catastoanomaliaUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<catastoanomaliaScalarWhereInput>
  }

  export type catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<catastolinkerCreateWithoutUtentiInput>, Enumerable<catastolinkerUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<catastolinkerCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<catastolinkerUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: catastolinkerCreateManyUtentiInputEnvelope
    set?: Enumerable<catastolinkerWhereUniqueInput>
    disconnect?: Enumerable<catastolinkerWhereUniqueInput>
    delete?: Enumerable<catastolinkerWhereUniqueInput>
    connect?: Enumerable<catastolinkerWhereUniqueInput>
    update?: Enumerable<catastolinkerUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<catastolinkerUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<catastolinkerScalarWhereInput>
  }

  export type lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput>, Enumerable<lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
    upsert?: Enumerable<lavoroUpsertWithWhereUniqueWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
    createMany?: lavoroCreateManyUtenti_lavoro_idUtenteStatoToutentiInputEnvelope
    set?: Enumerable<lavoroWhereUniqueInput>
    disconnect?: Enumerable<lavoroWhereUniqueInput>
    delete?: Enumerable<lavoroWhereUniqueInput>
    connect?: Enumerable<lavoroWhereUniqueInput>
    update?: Enumerable<lavoroUpdateWithWhereUniqueWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
    updateMany?: Enumerable<lavoroUpdateManyWithWhereWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
    deleteMany?: Enumerable<lavoroScalarWhereInput>
  }

  export type lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput = {
    create?: XOR<Enumerable<lavoroCreateWithoutUtenti_lavoro_idUtenteToutentiInput>, Enumerable<lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<lavoroCreateOrConnectWithoutUtenti_lavoro_idUtenteToutentiInput>
    upsert?: Enumerable<lavoroUpsertWithWhereUniqueWithoutUtenti_lavoro_idUtenteToutentiInput>
    createMany?: lavoroCreateManyUtenti_lavoro_idUtenteToutentiInputEnvelope
    set?: Enumerable<lavoroWhereUniqueInput>
    disconnect?: Enumerable<lavoroWhereUniqueInput>
    delete?: Enumerable<lavoroWhereUniqueInput>
    connect?: Enumerable<lavoroWhereUniqueInput>
    update?: Enumerable<lavoroUpdateWithWhereUniqueWithoutUtenti_lavoro_idUtenteToutentiInput>
    updateMany?: Enumerable<lavoroUpdateManyWithWhereWithoutUtenti_lavoro_idUtenteToutentiInput>
    deleteMany?: Enumerable<lavoroScalarWhereInput>
  }

  export type lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>, Enumerable<lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
    upsert?: Enumerable<lavorostoricoUpsertWithWhereUniqueWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
    createMany?: lavorostoricoCreateManyUtenti_lavorostorico_idUtenteStatoToutentiInputEnvelope
    set?: Enumerable<lavorostoricoWhereUniqueInput>
    disconnect?: Enumerable<lavorostoricoWhereUniqueInput>
    delete?: Enumerable<lavorostoricoWhereUniqueInput>
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
    update?: Enumerable<lavorostoricoUpdateWithWhereUniqueWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
    updateMany?: Enumerable<lavorostoricoUpdateManyWithWhereWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
    deleteMany?: Enumerable<lavorostoricoScalarWhereInput>
  }

  export type lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput = {
    create?: XOR<Enumerable<lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput>, Enumerable<lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<lavorostoricoCreateOrConnectWithoutUtenti_lavorostorico_idUtenteToutentiInput>
    upsert?: Enumerable<lavorostoricoUpsertWithWhereUniqueWithoutUtenti_lavorostorico_idUtenteToutentiInput>
    createMany?: lavorostoricoCreateManyUtenti_lavorostorico_idUtenteToutentiInputEnvelope
    set?: Enumerable<lavorostoricoWhereUniqueInput>
    disconnect?: Enumerable<lavorostoricoWhereUniqueInput>
    delete?: Enumerable<lavorostoricoWhereUniqueInput>
    connect?: Enumerable<lavorostoricoWhereUniqueInput>
    update?: Enumerable<lavorostoricoUpdateWithWhereUniqueWithoutUtenti_lavorostorico_idUtenteToutentiInput>
    updateMany?: Enumerable<lavorostoricoUpdateManyWithWhereWithoutUtenti_lavorostorico_idUtenteToutentiInput>
    deleteMany?: Enumerable<lavorostoricoScalarWhereInput>
  }

  export type livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<livelliservizioCreateWithoutUtentiInput>, Enumerable<livelliservizioUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<livelliservizioCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<livelliservizioUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: livelliservizioCreateManyUtentiInputEnvelope
    set?: Enumerable<livelliservizioWhereUniqueInput>
    disconnect?: Enumerable<livelliservizioWhereUniqueInput>
    delete?: Enumerable<livelliservizioWhereUniqueInput>
    connect?: Enumerable<livelliservizioWhereUniqueInput>
    update?: Enumerable<livelliservizioUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<livelliservizioUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<livelliservizioScalarWhereInput>
  }

  export type oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<oggettocivettaCreateWithoutUtentiInput>, Enumerable<oggettocivettaUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<oggettocivettaCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<oggettocivettaUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: oggettocivettaCreateManyUtentiInputEnvelope
    set?: Enumerable<oggettocivettaWhereUniqueInput>
    disconnect?: Enumerable<oggettocivettaWhereUniqueInput>
    delete?: Enumerable<oggettocivettaWhereUniqueInput>
    connect?: Enumerable<oggettocivettaWhereUniqueInput>
    update?: Enumerable<oggettocivettaUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<oggettocivettaUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<oggettocivettaScalarWhereInput>
  }

  export type praticaUncheckedUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<praticaCreateWithoutUtentiInput>, Enumerable<praticaUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<praticaCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<praticaUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: praticaCreateManyUtentiInputEnvelope
    set?: Enumerable<praticaWhereUniqueInput>
    disconnect?: Enumerable<praticaWhereUniqueInput>
    delete?: Enumerable<praticaWhereUniqueInput>
    connect?: Enumerable<praticaWhereUniqueInput>
    update?: Enumerable<praticaUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<praticaUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<praticaScalarWhereInput>
  }

  export type praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<praticastoricoCreateWithoutUtentiInput>, Enumerable<praticastoricoUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<praticastoricoCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<praticastoricoUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: praticastoricoCreateManyUtentiInputEnvelope
    set?: Enumerable<praticastoricoWhereUniqueInput>
    disconnect?: Enumerable<praticastoricoWhereUniqueInput>
    delete?: Enumerable<praticastoricoWhereUniqueInput>
    connect?: Enumerable<praticastoricoWhereUniqueInput>
    update?: Enumerable<praticastoricoUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<praticastoricoUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<praticastoricoScalarWhereInput>
  }

  export type registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<registrorichiedenteCreateWithoutUtentiInput>, Enumerable<registrorichiedenteUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<registrorichiedenteCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<registrorichiedenteUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: registrorichiedenteCreateManyUtentiInputEnvelope
    set?: Enumerable<registrorichiedenteWhereUniqueInput>
    disconnect?: Enumerable<registrorichiedenteWhereUniqueInput>
    delete?: Enumerable<registrorichiedenteWhereUniqueInput>
    connect?: Enumerable<registrorichiedenteWhereUniqueInput>
    update?: Enumerable<registrorichiedenteUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<registrorichiedenteUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<registrorichiedenteScalarWhereInput>
  }

  export type segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>, Enumerable<segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
    createMany?: segnalazioneCreateManyUtenti_segnalazione_idUtenteStatoToutentiInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput = {
    create?: XOR<Enumerable<segnalazioneCreateWithoutUtenti_segnalazione_idUtenteToutentiInput>, Enumerable<segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<segnalazioneCreateOrConnectWithoutUtenti_segnalazione_idUtenteToutentiInput>
    upsert?: Enumerable<segnalazioneUpsertWithWhereUniqueWithoutUtenti_segnalazione_idUtenteToutentiInput>
    createMany?: segnalazioneCreateManyUtenti_segnalazione_idUtenteToutentiInputEnvelope
    set?: Enumerable<segnalazioneWhereUniqueInput>
    disconnect?: Enumerable<segnalazioneWhereUniqueInput>
    delete?: Enumerable<segnalazioneWhereUniqueInput>
    connect?: Enumerable<segnalazioneWhereUniqueInput>
    update?: Enumerable<segnalazioneUpdateWithWhereUniqueWithoutUtenti_segnalazione_idUtenteToutentiInput>
    updateMany?: Enumerable<segnalazioneUpdateManyWithWhereWithoutUtenti_segnalazione_idUtenteToutentiInput>
    deleteMany?: Enumerable<segnalazioneScalarWhereInput>
  }

  export type segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput = {
    create?: XOR<Enumerable<segnalazionestatostoricoCreateWithoutUtentiInput>, Enumerable<segnalazionestatostoricoUncheckedCreateWithoutUtentiInput>>
    connectOrCreate?: Enumerable<segnalazionestatostoricoCreateOrConnectWithoutUtentiInput>
    upsert?: Enumerable<segnalazionestatostoricoUpsertWithWhereUniqueWithoutUtentiInput>
    createMany?: segnalazionestatostoricoCreateManyUtentiInputEnvelope
    set?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestatostoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestatostoricoUpdateWithWhereUniqueWithoutUtentiInput>
    updateMany?: Enumerable<segnalazionestatostoricoUpdateManyWithWhereWithoutUtentiInput>
    deleteMany?: Enumerable<segnalazionestatostoricoScalarWhereInput>
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
    createMany?: segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteStatoToutentiInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput = {
    create?: XOR<Enumerable<segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>, Enumerable<segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>>
    connectOrCreate?: Enumerable<segnalazionestoricoCreateOrConnectWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
    upsert?: Enumerable<segnalazionestoricoUpsertWithWhereUniqueWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
    createMany?: segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteToutentiInputEnvelope
    set?: Enumerable<segnalazionestoricoWhereUniqueInput>
    disconnect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    delete?: Enumerable<segnalazionestoricoWhereUniqueInput>
    connect?: Enumerable<segnalazionestoricoWhereUniqueInput>
    update?: Enumerable<segnalazionestoricoUpdateWithWhereUniqueWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
    updateMany?: Enumerable<segnalazionestoricoUpdateManyWithWhereWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
    deleteMany?: Enumerable<segnalazionestoricoScalarWhereInput>
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedIntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type NestedFloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type NestedStringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type NestedIntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type NestedFloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type NestedFloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedStringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type utentiCreateWithoutCatastoanomaliaInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutCatastoanomaliaInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutCatastoanomaliaInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutCatastoanomaliaInput, utentiUncheckedCreateWithoutCatastoanomaliaInput>
  }

  export type utentiUpsertWithoutCatastoanomaliaInput = {
    update: XOR<utentiUpdateWithoutCatastoanomaliaInput, utentiUncheckedUpdateWithoutCatastoanomaliaInput>
    create: XOR<utentiCreateWithoutCatastoanomaliaInput, utentiUncheckedCreateWithoutCatastoanomaliaInput>
  }

  export type utentiUpdateWithoutCatastoanomaliaInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutCatastoanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type lavoroCreateWithoutCatastolinkerInput = {
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutLavoroInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutLavoroInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteStatoToutentiInput
    utenti_lavoro_idUtenteToutenti?: utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteToutentiInput
    impresa?: impresaCreateNestedOneWithoutLavoroInput
  }

  export type lavoroUncheckedCreateWithoutCatastolinkerInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
  }

  export type lavoroCreateOrConnectWithoutCatastolinkerInput = {
    where: lavoroWhereUniqueInput
    create: XOR<lavoroCreateWithoutCatastolinkerInput, lavoroUncheckedCreateWithoutCatastolinkerInput>
  }

  export type praticaCreateWithoutCatastolinkerInput = {
    idAppalto?: number | null
    dataModifica?: string | null
    dataChiusura?: string | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
    utenti?: utentiCreateNestedOneWithoutPraticaInput
  }

  export type praticaUncheckedCreateWithoutCatastolinkerInput = {
    id?: number
    idUtente?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    dataChiusura?: string | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
  }

  export type praticaCreateOrConnectWithoutCatastolinkerInput = {
    where: praticaWhereUniqueInput
    create: XOR<praticaCreateWithoutCatastolinkerInput, praticaUncheckedCreateWithoutCatastolinkerInput>
  }

  export type utentiCreateWithoutCatastolinkerInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutCatastolinkerInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutCatastolinkerInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutCatastolinkerInput, utentiUncheckedCreateWithoutCatastolinkerInput>
  }

  export type lavoroUpsertWithoutCatastolinkerInput = {
    update: XOR<lavoroUpdateWithoutCatastolinkerInput, lavoroUncheckedUpdateWithoutCatastolinkerInput>
    create: XOR<lavoroCreateWithoutCatastolinkerInput, lavoroUncheckedCreateWithoutCatastolinkerInput>
  }

  export type lavoroUpdateWithoutCatastolinkerInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutLavoroNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutLavoroNestedInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiUpdateOneWithoutLavoro_lavoro_idUtenteStatoToutentiNestedInput
    utenti_lavoro_idUtenteToutenti?: utentiUpdateOneWithoutLavoro_lavoro_idUtenteToutentiNestedInput
    impresa?: impresaUpdateOneWithoutLavoroNestedInput
  }

  export type lavoroUncheckedUpdateWithoutCatastolinkerInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type praticaUpsertWithoutCatastolinkerInput = {
    update: XOR<praticaUpdateWithoutCatastolinkerInput, praticaUncheckedUpdateWithoutCatastolinkerInput>
    create: XOR<praticaCreateWithoutCatastolinkerInput, praticaUncheckedCreateWithoutCatastolinkerInput>
  }

  export type praticaUpdateWithoutCatastolinkerInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
    utenti?: utentiUpdateOneWithoutPraticaNestedInput
  }

  export type praticaUncheckedUpdateWithoutCatastolinkerInput = {
    id?: IntFieldUpdateOperationsInput | number
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type utentiUpsertWithoutCatastolinkerInput = {
    update: XOR<utentiUpdateWithoutCatastolinkerInput, utentiUncheckedUpdateWithoutCatastolinkerInput>
    create: XOR<utentiCreateWithoutCatastolinkerInput, utentiUncheckedCreateWithoutCatastolinkerInput>
  }

  export type utentiUpdateWithoutCatastolinkerInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutCatastolinkerInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type categoriaanomalia_sottocategoriaanomaliaCreateWithoutCategoriaanomaliaInput = {
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutCategoriaanomalia_sottocategoriaanomaliaInput
  }

  export type categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutCategoriaanomaliaInput = {
    id?: number
    id_sottocategoria_anomalia?: number | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaCreateOrConnectWithoutCategoriaanomaliaInput = {
    where: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    create: XOR<categoriaanomalia_sottocategoriaanomaliaCreateWithoutCategoriaanomaliaInput, categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaCreateManyCategoriaanomaliaInputEnvelope = {
    data: Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateManyCategoriaanomaliaInput>
    skipDuplicates?: boolean
  }

  export type categoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput = {
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutCategoriaanomalia_sottocategorialavoroInput
  }

  export type categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput = {
    id?: number
    id_sottocategoria_lavoro?: number | null
  }

  export type categoriaanomalia_sottocategorialavoroCreateOrConnectWithoutCategoriaanomaliaInput = {
    where: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    create: XOR<categoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput, categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type categoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInputEnvelope = {
    data: Enumerable<categoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInput>
    skipDuplicates?: boolean
  }

  export type lavoroCreateWithoutCategoriaanomaliaInput = {
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    catastolinker?: catastolinkerCreateNestedManyWithoutLavoroInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutLavoroInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteStatoToutentiInput
    utenti_lavoro_idUtenteToutenti?: utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteToutentiInput
    impresa?: impresaCreateNestedOneWithoutLavoroInput
  }

  export type lavoroUncheckedCreateWithoutCategoriaanomaliaInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutLavoroInput
  }

  export type lavoroCreateOrConnectWithoutCategoriaanomaliaInput = {
    where: lavoroWhereUniqueInput
    create: XOR<lavoroCreateWithoutCategoriaanomaliaInput, lavoroUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type lavoroCreateManyCategoriaanomaliaInputEnvelope = {
    data: Enumerable<lavoroCreateManyCategoriaanomaliaInput>
    skipDuplicates?: boolean
  }

  export type lavorostoricoCreateWithoutCategoriaanomaliaInput = {
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutLavorostoricoInput
    utenti_lavorostorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput
    utenti_lavorostorico_idUtenteToutenti?: utentiCreateNestedOneWithoutLavorostorico_lavorostorico_idUtenteToutentiInput
    impresa?: impresaCreateNestedOneWithoutLavorostoricoInput
  }

  export type lavorostoricoUncheckedCreateWithoutCategoriaanomaliaInput = {
    id?: number
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
  }

  export type lavorostoricoCreateOrConnectWithoutCategoriaanomaliaInput = {
    where: lavorostoricoWhereUniqueInput
    create: XOR<lavorostoricoCreateWithoutCategoriaanomaliaInput, lavorostoricoUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type lavorostoricoCreateManyCategoriaanomaliaInputEnvelope = {
    data: Enumerable<lavorostoricoCreateManyCategoriaanomaliaInput>
    skipDuplicates?: boolean
  }

  export type segnalazioneCreateWithoutCategoriaanomaliaInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    fonti?: fontiCreateNestedOneWithoutSegnalazioneInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazioneInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazioneInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    utenti_segnalazione_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazioneInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazioneInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateWithoutCategoriaanomaliaInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneCreateOrConnectWithoutCategoriaanomaliaInput = {
    where: segnalazioneWhereUniqueInput
    create: XOR<segnalazioneCreateWithoutCategoriaanomaliaInput, segnalazioneUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type segnalazioneCreateManyCategoriaanomaliaInputEnvelope = {
    data: Enumerable<segnalazioneCreateManyCategoriaanomaliaInput>
    skipDuplicates?: boolean
  }

  export type segnalazionestoricoCreateWithoutCategoriaanomaliaInput = {
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    fonti?: fontiCreateNestedOneWithoutSegnalazionestoricoInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazionestoricoInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazionestoricoInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazionestoricoInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazionestoricoInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazionestoricoInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazionestoricoInput
  }

  export type segnalazionestoricoUncheckedCreateWithoutCategoriaanomaliaInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateOrConnectWithoutCategoriaanomaliaInput = {
    where: segnalazionestoricoWhereUniqueInput
    create: XOR<segnalazionestoricoCreateWithoutCategoriaanomaliaInput, segnalazionestoricoUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type segnalazionestoricoCreateManyCategoriaanomaliaInputEnvelope = {
    data: Enumerable<segnalazionestoricoCreateManyCategoriaanomaliaInput>
    skipDuplicates?: boolean
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput = {
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSottocategoriaanomalia_sottocategorialavoroInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutSottocategoriaanomalia_sottocategorialavoroInput
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput = {
    id?: number
    id_sottocategoria_anomalia?: number | null
    id_sottocategoria_lavoro?: number | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutCategoriaanomaliaInput = {
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    create: XOR<sottocategoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput, sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInputEnvelope = {
    data: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInput>
    skipDuplicates?: boolean
  }

  export type categoriaanomalia_sottocategoriaanomaliaUpsertWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    update: XOR<categoriaanomalia_sottocategoriaanomaliaUpdateWithoutCategoriaanomaliaInput, categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateWithoutCategoriaanomaliaInput>
    create: XOR<categoriaanomalia_sottocategoriaanomaliaCreateWithoutCategoriaanomaliaInput, categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaUpdateWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    data: XOR<categoriaanomalia_sottocategoriaanomaliaUpdateWithoutCategoriaanomaliaInput, categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateWithoutCategoriaanomaliaInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaUpdateManyWithWhereWithoutCategoriaanomaliaInput = {
    where: categoriaanomalia_sottocategoriaanomaliaScalarWhereInput
    data: XOR<categoriaanomalia_sottocategoriaanomaliaUpdateManyMutationInput, categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaScalarWhereInput = {
    AND?: Enumerable<categoriaanomalia_sottocategoriaanomaliaScalarWhereInput>
    OR?: Enumerable<categoriaanomalia_sottocategoriaanomaliaScalarWhereInput>
    NOT?: Enumerable<categoriaanomalia_sottocategoriaanomaliaScalarWhereInput>
    id?: IntFilter | number
    id_categoria_anomalia?: IntNullableFilter | number | null
    id_sottocategoria_anomalia?: IntNullableFilter | number | null
  }

  export type categoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    update: XOR<categoriaanomalia_sottocategorialavoroUpdateWithoutCategoriaanomaliaInput, categoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutCategoriaanomaliaInput>
    create: XOR<categoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput, categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type categoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    data: XOR<categoriaanomalia_sottocategorialavoroUpdateWithoutCategoriaanomaliaInput, categoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutCategoriaanomaliaInput>
  }

  export type categoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutCategoriaanomaliaInput = {
    where: categoriaanomalia_sottocategorialavoroScalarWhereInput
    data: XOR<categoriaanomalia_sottocategorialavoroUpdateManyMutationInput, categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomalia_sottocategorialavoroInput>
  }

  export type categoriaanomalia_sottocategorialavoroScalarWhereInput = {
    AND?: Enumerable<categoriaanomalia_sottocategorialavoroScalarWhereInput>
    OR?: Enumerable<categoriaanomalia_sottocategorialavoroScalarWhereInput>
    NOT?: Enumerable<categoriaanomalia_sottocategorialavoroScalarWhereInput>
    id?: IntFilter | number
    id_categoria_lavoro?: IntNullableFilter | number | null
    id_sottocategoria_lavoro?: IntNullableFilter | number | null
  }

  export type lavoroUpsertWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: lavoroWhereUniqueInput
    update: XOR<lavoroUpdateWithoutCategoriaanomaliaInput, lavoroUncheckedUpdateWithoutCategoriaanomaliaInput>
    create: XOR<lavoroCreateWithoutCategoriaanomaliaInput, lavoroUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type lavoroUpdateWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: lavoroWhereUniqueInput
    data: XOR<lavoroUpdateWithoutCategoriaanomaliaInput, lavoroUncheckedUpdateWithoutCategoriaanomaliaInput>
  }

  export type lavoroUpdateManyWithWhereWithoutCategoriaanomaliaInput = {
    where: lavoroScalarWhereInput
    data: XOR<lavoroUpdateManyMutationInput, lavoroUncheckedUpdateManyWithoutLavoroInput>
  }

  export type lavoroScalarWhereInput = {
    AND?: Enumerable<lavoroScalarWhereInput>
    OR?: Enumerable<lavoroScalarWhereInput>
    NOT?: Enumerable<lavoroScalarWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    idEvento?: IntNullableFilter | number | null
    idPratica?: IntNullableFilter | number | null
    idPOI?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    dataCreazione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataChiusura?: StringNullableFilter | string | null
    localizzazioneDichiarata?: StringNullableFilter | string | null
    categoriaLavoro?: IntNullableFilter | number | null
    dettaglioLavoro?: IntNullableFilter | number | null
    noteLavoro?: StringNullableFilter | string | null
    contabilitaLavoro?: IntNullableFilter | number | null
    attrezzaturaLavoro?: IntNullableFilter | number | null
    mezzoLavoro?: IntNullableFilter | number | null
    personaleLavoro?: IntNullableFilter | number | null
    dataModificaStato?: StringNullableFilter | string | null
    stato?: StringNullableFilter | string | null
    notaStato?: StringNullableFilter | string | null
    idUtenteStato?: IntNullableFilter | number | null
    localizzazioneDichiarataQuartiere?: StringNullableFilter | string | null
    statoCorrenteLavoro?: StringNullableFilter | string | null
    del?: StringNullableFilter | string | null
    dataInizioProgrammata?: StringNullableFilter | string | null
    dataInizioEffettiva?: StringNullableFilter | string | null
    dataInizioMassima?: StringNullableFilter | string | null
    dataFineProgrammata?: StringNullableFilter | string | null
    dataFineEffettiva?: StringNullableFilter | string | null
    dataFineMassima?: StringNullableFilter | string | null
    delOggettiCatasto?: StringNullableFilter | string | null
    quantita?: StringNullableFilter | string | null
    operatore?: StringNullableFilter | string | null
    sospeso?: IntNullableFilter | number | null
    dataora_ini_sospensione?: StringNullableFilter | string | null
    dataora_fine_sospensione?: StringNullableFilter | string | null
    tempo_sospensione?: IntNullableFilter | number | null
    note_sospensione?: StringNullableFilter | string | null
    impresaEsecutrice?: IntNullableFilter | number | null
    segnaleticatemporanea?: StringNullableFilter | string | null
    tipolavoro?: StringNullableFilter | string | null
    statoMessaInSicurezza?: StringNullableFilter | string | null
    dataMessaInSicurezza?: StringNullableFilter | string | null
    notePubbliche?: StringNullableFilter | string | null
  }

  export type lavorostoricoUpsertWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: lavorostoricoWhereUniqueInput
    update: XOR<lavorostoricoUpdateWithoutCategoriaanomaliaInput, lavorostoricoUncheckedUpdateWithoutCategoriaanomaliaInput>
    create: XOR<lavorostoricoCreateWithoutCategoriaanomaliaInput, lavorostoricoUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type lavorostoricoUpdateWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: lavorostoricoWhereUniqueInput
    data: XOR<lavorostoricoUpdateWithoutCategoriaanomaliaInput, lavorostoricoUncheckedUpdateWithoutCategoriaanomaliaInput>
  }

  export type lavorostoricoUpdateManyWithWhereWithoutCategoriaanomaliaInput = {
    where: lavorostoricoScalarWhereInput
    data: XOR<lavorostoricoUpdateManyMutationInput, lavorostoricoUncheckedUpdateManyWithoutLavorostoricoInput>
  }

  export type lavorostoricoScalarWhereInput = {
    AND?: Enumerable<lavorostoricoScalarWhereInput>
    OR?: Enumerable<lavorostoricoScalarWhereInput>
    NOT?: Enumerable<lavorostoricoScalarWhereInput>
    id?: IntFilter | number
    idLavoro?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    idEvento?: IntNullableFilter | number | null
    idPratica?: IntNullableFilter | number | null
    idPOI?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    dataCreazione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataChiusura?: StringNullableFilter | string | null
    localizzazioneDichiarata?: StringNullableFilter | string | null
    categoriaLavoro?: IntNullableFilter | number | null
    dettaglioLavoro?: IntNullableFilter | number | null
    noteLavoro?: StringNullableFilter | string | null
    contabilitaLavoro?: IntNullableFilter | number | null
    attrezzaturaLavoro?: IntNullableFilter | number | null
    mezzoLavoro?: IntNullableFilter | number | null
    personaleLavoro?: IntNullableFilter | number | null
    dataModificaStato?: StringNullableFilter | string | null
    stato?: StringNullableFilter | string | null
    notaStato?: StringNullableFilter | string | null
    idUtenteStato?: IntNullableFilter | number | null
    sospeso?: IntNullableFilter | number | null
    dataora_ini_sospensione?: StringNullableFilter | string | null
    dataora_fine_sospensione?: StringNullableFilter | string | null
    tempo_sospensione?: IntNullableFilter | number | null
    note_sospensione?: StringNullableFilter | string | null
    dataInizioProgrammata?: StringNullableFilter | string | null
    dataInizioEffettiva?: StringNullableFilter | string | null
    dataInizioMassima?: StringNullableFilter | string | null
    dataFineProgrammata?: StringNullableFilter | string | null
    dataFineEffettiva?: StringNullableFilter | string | null
    dataFineMassima?: StringNullableFilter | string | null
    localizzazioneDichiarataQuartiere?: StringNullableFilter | string | null
    statoCorrenteLavoro?: StringNullableFilter | string | null
    delOggettiCatasto?: StringNullableFilter | string | null
    del?: StringNullableFilter | string | null
    quantita?: StringNullableFilter | string | null
    operatore?: StringNullableFilter | string | null
    impresaEsecutrice?: IntNullableFilter | number | null
    segnaleticatemporanea?: StringNullableFilter | string | null
    tipolavoro?: StringNullableFilter | string | null
    statoMessaInSicurezza?: StringNullableFilter | string | null
    dataMessaInSicurezza?: StringNullableFilter | string | null
    flgCambioStato?: StringNullableFilter | string | null
    notePubbliche?: StringNullableFilter | string | null
  }

  export type segnalazioneUpsertWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: segnalazioneWhereUniqueInput
    update: XOR<segnalazioneUpdateWithoutCategoriaanomaliaInput, segnalazioneUncheckedUpdateWithoutCategoriaanomaliaInput>
    create: XOR<segnalazioneCreateWithoutCategoriaanomaliaInput, segnalazioneUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type segnalazioneUpdateWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: segnalazioneWhereUniqueInput
    data: XOR<segnalazioneUpdateWithoutCategoriaanomaliaInput, segnalazioneUncheckedUpdateWithoutCategoriaanomaliaInput>
  }

  export type segnalazioneUpdateManyWithWhereWithoutCategoriaanomaliaInput = {
    where: segnalazioneScalarWhereInput
    data: XOR<segnalazioneUpdateManyMutationInput, segnalazioneUncheckedUpdateManyWithoutSegnalazioneInput>
  }

  export type segnalazioneScalarWhereInput = {
    AND?: Enumerable<segnalazioneScalarWhereInput>
    OR?: Enumerable<segnalazioneScalarWhereInput>
    NOT?: Enumerable<segnalazioneScalarWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    noteSegnalatore?: StringNullableFilter | string | null
    segnalatori?: IntNullableListFilter
    dataCreazione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataRichiesta?: StringNullableFilter | string | null
    localizzazioneDichiarata?: StringNullableFilter | string | null
    localizzazioneDichiarataCivico?: StringNullableFilter | string | null
    localizzazioneNote?: StringNullableFilter | string | null
    descrizioneAnomalia?: StringNullableFilter | string | null
    commentoAnomalia?: StringNullableFilter | string | null
    idEvento?: IntNullableFilter | number | null
    idPratica?: IntNullableFilter | number | null
    dataModificaStato?: StringNullableFilter | string | null
    stato?: StringNullableFilter | string | null
    notaStato?: StringNullableFilter | string | null
    idUtente?: IntNullableFilter | number | null
    idUtenteStato?: IntNullableFilter | number | null
    idSegnalatore?: IntNullableFilter | number | null
    fonteSegnalazione?: IntNullableFilter | number | null
    categoriaAnomalia?: IntNullableFilter | number | null
    dettaglioAnomalia?: IntNullableFilter | number | null
    severitaEvento?: IntNullableFilter | number | null
    tipoEvento?: IntNullableFilter | number | null
    idTecnico?: IntNullableFilter | number | null
    localizzazioneDichiarataQuartiere?: StringNullableFilter | string | null
    idLavoroAssociato?: StringNullableFilter | string | null
    dataChiusura?: StringNullableFilter | string | null
    statoCorrenteSegnalazione?: StringNullableFilter | string | null
    del?: StringNullableFilter | string | null
    idSegnalazioneGetico?: IntNullableFilter | number | null
    delOggettiCatasto?: StringNullableFilter | string | null
    sottoservizi?: StringNullableFilter | string | null
    sinistri?: StringNullableFilter | string | null
    richiestaSopralluogo?: StringNullableFilter | string | null
    numeroProvvedimento?: StringNullableFilter | string | null
    idTipoProvvedimento?: IntNullableFilter | number | null
  }

  export type segnalazionestoricoUpsertWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: segnalazionestoricoWhereUniqueInput
    update: XOR<segnalazionestoricoUpdateWithoutCategoriaanomaliaInput, segnalazionestoricoUncheckedUpdateWithoutCategoriaanomaliaInput>
    create: XOR<segnalazionestoricoCreateWithoutCategoriaanomaliaInput, segnalazionestoricoUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type segnalazionestoricoUpdateWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: segnalazionestoricoWhereUniqueInput
    data: XOR<segnalazionestoricoUpdateWithoutCategoriaanomaliaInput, segnalazionestoricoUncheckedUpdateWithoutCategoriaanomaliaInput>
  }

  export type segnalazionestoricoUpdateManyWithWhereWithoutCategoriaanomaliaInput = {
    where: segnalazionestoricoScalarWhereInput
    data: XOR<segnalazionestoricoUpdateManyMutationInput, segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestoricoInput>
  }

  export type segnalazionestoricoScalarWhereInput = {
    AND?: Enumerable<segnalazionestoricoScalarWhereInput>
    OR?: Enumerable<segnalazionestoricoScalarWhereInput>
    NOT?: Enumerable<segnalazionestoricoScalarWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    idSegnalazione?: IntNullableFilter | number | null
    noteSegnalatore?: StringNullableFilter | string | null
    segnalatori?: IntNullableListFilter
    dataCreazione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataRichiesta?: StringNullableFilter | string | null
    localizzazioneDichiarata?: StringNullableFilter | string | null
    localizzazioneNote?: StringNullableFilter | string | null
    descrizioneAnomalia?: StringNullableFilter | string | null
    commentoAnomalia?: StringNullableFilter | string | null
    idEvento?: IntNullableFilter | number | null
    idPratica?: IntNullableFilter | number | null
    dataModificaStato?: StringNullableFilter | string | null
    stato?: StringNullableFilter | string | null
    notaStato?: StringNullableFilter | string | null
    flgCambioStato?: StringNullableFilter | string | null
    idUtente?: IntNullableFilter | number | null
    idUtenteStato?: IntNullableFilter | number | null
    idSegnalatore?: IntNullableFilter | number | null
    fonteSegnalazione?: IntNullableFilter | number | null
    categoriaAnomalia?: IntNullableFilter | number | null
    dettaglioAnomalia?: IntNullableFilter | number | null
    severitaEvento?: IntNullableFilter | number | null
    tipoEvento?: IntNullableFilter | number | null
    idLavoroAssociato?: StringNullableFilter | string | null
    statoCorrenteSegnalazione?: StringNullableFilter | string | null
    idSegnalazioneGetico?: IntNullableFilter | number | null
    sottoservizi?: StringNullableFilter | string | null
    sinistri?: StringNullableFilter | string | null
    richiestaSopralluogo?: StringNullableFilter | string | null
    delOggettiCatasto?: StringNullableFilter | string | null
    idTecnico?: IntNullableFilter | number | null
    numeroProvvedimento?: StringNullableFilter | string | null
    dataChiusura?: StringNullableFilter | string | null
    localizzazioneDichiarataQuartiere?: StringNullableFilter | string | null
    localizzazioneDichiarataCivico?: StringNullableFilter | string | null
    del?: StringNullableFilter | string | null
    idTipoProvvedimento?: IntNullableFilter | number | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    update: XOR<sottocategoriaanomalia_sottocategorialavoroUpdateWithoutCategoriaanomaliaInput, sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutCategoriaanomaliaInput>
    create: XOR<sottocategoriaanomalia_sottocategorialavoroCreateWithoutCategoriaanomaliaInput, sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutCategoriaanomaliaInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutCategoriaanomaliaInput = {
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    data: XOR<sottocategoriaanomalia_sottocategorialavoroUpdateWithoutCategoriaanomaliaInput, sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutCategoriaanomaliaInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutCategoriaanomaliaInput = {
    where: sottocategoriaanomalia_sottocategorialavoroScalarWhereInput
    data: XOR<sottocategoriaanomalia_sottocategorialavoroUpdateManyMutationInput, sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategoriaanomalia_sottocategorialavoroInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroScalarWhereInput = {
    AND?: Enumerable<sottocategoriaanomalia_sottocategorialavoroScalarWhereInput>
    OR?: Enumerable<sottocategoriaanomalia_sottocategorialavoroScalarWhereInput>
    NOT?: Enumerable<sottocategoriaanomalia_sottocategorialavoroScalarWhereInput>
    id?: IntFilter | number
    id_categoria_anomalia?: IntNullableFilter | number | null
    id_sottocategoria_anomalia?: IntNullableFilter | number | null
    id_sottocategoria_lavoro?: IntNullableFilter | number | null
  }

  export type categoriaanomaliaCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    id?: number
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaCreateOrConnectWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    where: categoriaanomaliaWhereUniqueInput
    create: XOR<categoriaanomaliaCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput, categoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
  }

  export type sottocategoriaanomaliaCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    value?: string | null
    segnalazione?: segnalazioneCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutSottocategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategoriaanomaliaInput
  }

  export type sottocategoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    id?: number
    value?: string | null
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
  }

  export type sottocategoriaanomaliaCreateOrConnectWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    where: sottocategoriaanomaliaWhereUniqueInput
    create: XOR<sottocategoriaanomaliaCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput, sottocategoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
  }

  export type categoriaanomaliaUpsertWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    update: XOR<categoriaanomaliaUpdateWithoutCategoriaanomalia_sottocategoriaanomaliaInput, categoriaanomaliaUncheckedUpdateWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
    create: XOR<categoriaanomaliaCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput, categoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
  }

  export type categoriaanomaliaUpdateWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type categoriaanomaliaUncheckedUpdateWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type sottocategoriaanomaliaUpsertWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    update: XOR<sottocategoriaanomaliaUpdateWithoutCategoriaanomalia_sottocategoriaanomaliaInput, sottocategoriaanomaliaUncheckedUpdateWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
    create: XOR<sottocategoriaanomaliaCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput, sottocategoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
  }

  export type sottocategoriaanomaliaUpdateWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutSottocategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategoriaanomaliaNestedInput
  }

  export type sottocategoriaanomaliaUncheckedUpdateWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
  }

  export type categoriaanomaliaCreateWithoutCategoriaanomalia_sottocategorialavoroInput = {
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategorialavoroInput = {
    id?: number
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaCreateOrConnectWithoutCategoriaanomalia_sottocategorialavoroInput = {
    where: categoriaanomaliaWhereUniqueInput
    create: XOR<categoriaanomaliaCreateWithoutCategoriaanomalia_sottocategorialavoroInput, categoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategorialavoroInput>
  }

  export type sottocategorialavoroCreateWithoutCategoriaanomalia_sottocategorialavoroInput = {
    value?: string | null
    lavoro?: lavoroCreateNestedManyWithoutSottocategorialavoroInput
    lavorostorico?: lavorostoricoCreateNestedManyWithoutSottocategorialavoroInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategorialavoroInput
  }

  export type sottocategorialavoroUncheckedCreateWithoutCategoriaanomalia_sottocategorialavoroInput = {
    id?: number
    value?: string | null
    lavoro?: lavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutSottocategorialavoroInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput
  }

  export type sottocategorialavoroCreateOrConnectWithoutCategoriaanomalia_sottocategorialavoroInput = {
    where: sottocategorialavoroWhereUniqueInput
    create: XOR<sottocategorialavoroCreateWithoutCategoriaanomalia_sottocategorialavoroInput, sottocategorialavoroUncheckedCreateWithoutCategoriaanomalia_sottocategorialavoroInput>
  }

  export type categoriaanomaliaUpsertWithoutCategoriaanomalia_sottocategorialavoroInput = {
    update: XOR<categoriaanomaliaUpdateWithoutCategoriaanomalia_sottocategorialavoroInput, categoriaanomaliaUncheckedUpdateWithoutCategoriaanomalia_sottocategorialavoroInput>
    create: XOR<categoriaanomaliaCreateWithoutCategoriaanomalia_sottocategorialavoroInput, categoriaanomaliaUncheckedCreateWithoutCategoriaanomalia_sottocategorialavoroInput>
  }

  export type categoriaanomaliaUpdateWithoutCategoriaanomalia_sottocategorialavoroInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type categoriaanomaliaUncheckedUpdateWithoutCategoriaanomalia_sottocategorialavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type sottocategorialavoroUpsertWithoutCategoriaanomalia_sottocategorialavoroInput = {
    update: XOR<sottocategorialavoroUpdateWithoutCategoriaanomalia_sottocategorialavoroInput, sottocategorialavoroUncheckedUpdateWithoutCategoriaanomalia_sottocategorialavoroInput>
    create: XOR<sottocategorialavoroCreateWithoutCategoriaanomalia_sottocategorialavoroInput, sottocategorialavoroUncheckedCreateWithoutCategoriaanomalia_sottocategorialavoroInput>
  }

  export type sottocategorialavoroUpdateWithoutCategoriaanomalia_sottocategorialavoroInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    lavoro?: lavoroUpdateManyWithoutSottocategorialavoroNestedInput
    lavorostorico?: lavorostoricoUpdateManyWithoutSottocategorialavoroNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategorialavoroNestedInput
  }

  export type sottocategorialavoroUncheckedUpdateWithoutCategoriaanomalia_sottocategorialavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    lavoro?: lavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
  }

  export type registrorichiedenteCreateWithoutFontiInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idSegnalazione?: number | null
    del?: string | null
    segnalatore?: segnalatoreCreateNestedOneWithoutRegistrorichiedenteInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutRegistrorichiedenteInput
    utenti?: utentiCreateNestedOneWithoutRegistrorichiedenteInput
  }

  export type registrorichiedenteUncheckedCreateWithoutFontiInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idUtente?: number | null
    idSegnalazione?: number | null
    idSegnalatore?: number | null
    idSegnalazioneGetico?: number | null
    del?: string | null
  }

  export type registrorichiedenteCreateOrConnectWithoutFontiInput = {
    where: registrorichiedenteWhereUniqueInput
    create: XOR<registrorichiedenteCreateWithoutFontiInput, registrorichiedenteUncheckedCreateWithoutFontiInput>
  }

  export type registrorichiedenteCreateManyFontiInputEnvelope = {
    data: Enumerable<registrorichiedenteCreateManyFontiInput>
    skipDuplicates?: boolean
  }

  export type segnalazioneCreateWithoutFontiInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazioneInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazioneInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    utenti_segnalazione_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazioneInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazioneInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateWithoutFontiInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneCreateOrConnectWithoutFontiInput = {
    where: segnalazioneWhereUniqueInput
    create: XOR<segnalazioneCreateWithoutFontiInput, segnalazioneUncheckedCreateWithoutFontiInput>
  }

  export type segnalazioneCreateManyFontiInputEnvelope = {
    data: Enumerable<segnalazioneCreateManyFontiInput>
    skipDuplicates?: boolean
  }

  export type segnalazionestoricoCreateWithoutFontiInput = {
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazionestoricoInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazionestoricoInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazionestoricoInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazionestoricoInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazionestoricoInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazionestoricoInput
  }

  export type segnalazionestoricoUncheckedCreateWithoutFontiInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateOrConnectWithoutFontiInput = {
    where: segnalazionestoricoWhereUniqueInput
    create: XOR<segnalazionestoricoCreateWithoutFontiInput, segnalazionestoricoUncheckedCreateWithoutFontiInput>
  }

  export type segnalazionestoricoCreateManyFontiInputEnvelope = {
    data: Enumerable<segnalazionestoricoCreateManyFontiInput>
    skipDuplicates?: boolean
  }

  export type registrorichiedenteUpsertWithWhereUniqueWithoutFontiInput = {
    where: registrorichiedenteWhereUniqueInput
    update: XOR<registrorichiedenteUpdateWithoutFontiInput, registrorichiedenteUncheckedUpdateWithoutFontiInput>
    create: XOR<registrorichiedenteCreateWithoutFontiInput, registrorichiedenteUncheckedCreateWithoutFontiInput>
  }

  export type registrorichiedenteUpdateWithWhereUniqueWithoutFontiInput = {
    where: registrorichiedenteWhereUniqueInput
    data: XOR<registrorichiedenteUpdateWithoutFontiInput, registrorichiedenteUncheckedUpdateWithoutFontiInput>
  }

  export type registrorichiedenteUpdateManyWithWhereWithoutFontiInput = {
    where: registrorichiedenteScalarWhereInput
    data: XOR<registrorichiedenteUpdateManyMutationInput, registrorichiedenteUncheckedUpdateManyWithoutRegistrorichiedenteInput>
  }

  export type registrorichiedenteScalarWhereInput = {
    AND?: Enumerable<registrorichiedenteScalarWhereInput>
    OR?: Enumerable<registrorichiedenteScalarWhereInput>
    NOT?: Enumerable<registrorichiedenteScalarWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    noteSegnalatore?: StringNullableFilter | string | null
    dataCreazione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataRichiesta?: StringNullableFilter | string | null
    localizzazioneNote?: StringNullableFilter | string | null
    descrizioneAnomalia?: StringNullableFilter | string | null
    idUtente?: IntNullableFilter | number | null
    idSegnalazione?: IntNullableFilter | number | null
    idSegnalatore?: IntNullableFilter | number | null
    fonteSegnalazione?: IntNullableFilter | number | null
    idSegnalazioneGetico?: IntNullableFilter | number | null
    del?: StringNullableFilter | string | null
  }

  export type segnalazioneUpsertWithWhereUniqueWithoutFontiInput = {
    where: segnalazioneWhereUniqueInput
    update: XOR<segnalazioneUpdateWithoutFontiInput, segnalazioneUncheckedUpdateWithoutFontiInput>
    create: XOR<segnalazioneCreateWithoutFontiInput, segnalazioneUncheckedCreateWithoutFontiInput>
  }

  export type segnalazioneUpdateWithWhereUniqueWithoutFontiInput = {
    where: segnalazioneWhereUniqueInput
    data: XOR<segnalazioneUpdateWithoutFontiInput, segnalazioneUncheckedUpdateWithoutFontiInput>
  }

  export type segnalazioneUpdateManyWithWhereWithoutFontiInput = {
    where: segnalazioneScalarWhereInput
    data: XOR<segnalazioneUpdateManyMutationInput, segnalazioneUncheckedUpdateManyWithoutSegnalazioneInput>
  }

  export type segnalazionestoricoUpsertWithWhereUniqueWithoutFontiInput = {
    where: segnalazionestoricoWhereUniqueInput
    update: XOR<segnalazionestoricoUpdateWithoutFontiInput, segnalazionestoricoUncheckedUpdateWithoutFontiInput>
    create: XOR<segnalazionestoricoCreateWithoutFontiInput, segnalazionestoricoUncheckedCreateWithoutFontiInput>
  }

  export type segnalazionestoricoUpdateWithWhereUniqueWithoutFontiInput = {
    where: segnalazionestoricoWhereUniqueInput
    data: XOR<segnalazionestoricoUpdateWithoutFontiInput, segnalazionestoricoUncheckedUpdateWithoutFontiInput>
  }

  export type segnalazionestoricoUpdateManyWithWhereWithoutFontiInput = {
    where: segnalazionestoricoScalarWhereInput
    data: XOR<segnalazionestoricoUpdateManyMutationInput, segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestoricoInput>
  }

  export type utentiCreateWithoutGruppoInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiUncheckedCreateWithoutGruppoInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutGruppoInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutGruppoInput, utentiUncheckedCreateWithoutGruppoInput>
  }

  export type utentiCreateManyGruppoInputEnvelope = {
    data: Enumerable<utentiCreateManyGruppoInput>
    skipDuplicates?: boolean
  }

  export type utentiUpsertWithWhereUniqueWithoutGruppoInput = {
    where: utentiWhereUniqueInput
    update: XOR<utentiUpdateWithoutGruppoInput, utentiUncheckedUpdateWithoutGruppoInput>
    create: XOR<utentiCreateWithoutGruppoInput, utentiUncheckedCreateWithoutGruppoInput>
  }

  export type utentiUpdateWithWhereUniqueWithoutGruppoInput = {
    where: utentiWhereUniqueInput
    data: XOR<utentiUpdateWithoutGruppoInput, utentiUncheckedUpdateWithoutGruppoInput>
  }

  export type utentiUpdateManyWithWhereWithoutGruppoInput = {
    where: utentiScalarWhereInput
    data: XOR<utentiUpdateManyMutationInput, utentiUncheckedUpdateManyWithoutUtentiInput>
  }

  export type utentiScalarWhereInput = {
    AND?: Enumerable<utentiScalarWhereInput>
    OR?: Enumerable<utentiScalarWhereInput>
    NOT?: Enumerable<utentiScalarWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    nome?: StringNullableFilter | string | null
    cognome?: StringNullableFilter | string | null
    username?: StringNullableFilter | string | null
    password?: StringNullableFilter | string | null
    email?: StringFilter | string
    status?: StringNullableFilter | string | null
    permessi?: StringNullableFilter | string | null
    dataCreazione?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataSospensione?: StringNullableFilter | string | null
    idGruppo?: IntNullableFilter | number | null
    del?: StringNullableFilter | string | null
    scadenzaPassword?: StringNullableFilter | string | null
    roles?: StringNullableFilter | string | null
  }

  export type lavoroCreateWithoutImpresaInput = {
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    catastolinker?: catastolinkerCreateNestedManyWithoutLavoroInput
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutLavoroInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutLavoroInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteStatoToutentiInput
    utenti_lavoro_idUtenteToutenti?: utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteToutentiInput
  }

  export type lavoroUncheckedCreateWithoutImpresaInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutLavoroInput
  }

  export type lavoroCreateOrConnectWithoutImpresaInput = {
    where: lavoroWhereUniqueInput
    create: XOR<lavoroCreateWithoutImpresaInput, lavoroUncheckedCreateWithoutImpresaInput>
  }

  export type lavoroCreateManyImpresaInputEnvelope = {
    data: Enumerable<lavoroCreateManyImpresaInput>
    skipDuplicates?: boolean
  }

  export type lavorostoricoCreateWithoutImpresaInput = {
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutLavorostoricoInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutLavorostoricoInput
    utenti_lavorostorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput
    utenti_lavorostorico_idUtenteToutenti?: utentiCreateNestedOneWithoutLavorostorico_lavorostorico_idUtenteToutentiInput
  }

  export type lavorostoricoUncheckedCreateWithoutImpresaInput = {
    id?: number
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
  }

  export type lavorostoricoCreateOrConnectWithoutImpresaInput = {
    where: lavorostoricoWhereUniqueInput
    create: XOR<lavorostoricoCreateWithoutImpresaInput, lavorostoricoUncheckedCreateWithoutImpresaInput>
  }

  export type lavorostoricoCreateManyImpresaInputEnvelope = {
    data: Enumerable<lavorostoricoCreateManyImpresaInput>
    skipDuplicates?: boolean
  }

  export type lavoroUpsertWithWhereUniqueWithoutImpresaInput = {
    where: lavoroWhereUniqueInput
    update: XOR<lavoroUpdateWithoutImpresaInput, lavoroUncheckedUpdateWithoutImpresaInput>
    create: XOR<lavoroCreateWithoutImpresaInput, lavoroUncheckedCreateWithoutImpresaInput>
  }

  export type lavoroUpdateWithWhereUniqueWithoutImpresaInput = {
    where: lavoroWhereUniqueInput
    data: XOR<lavoroUpdateWithoutImpresaInput, lavoroUncheckedUpdateWithoutImpresaInput>
  }

  export type lavoroUpdateManyWithWhereWithoutImpresaInput = {
    where: lavoroScalarWhereInput
    data: XOR<lavoroUpdateManyMutationInput, lavoroUncheckedUpdateManyWithoutLavoroInput>
  }

  export type lavorostoricoUpsertWithWhereUniqueWithoutImpresaInput = {
    where: lavorostoricoWhereUniqueInput
    update: XOR<lavorostoricoUpdateWithoutImpresaInput, lavorostoricoUncheckedUpdateWithoutImpresaInput>
    create: XOR<lavorostoricoCreateWithoutImpresaInput, lavorostoricoUncheckedCreateWithoutImpresaInput>
  }

  export type lavorostoricoUpdateWithWhereUniqueWithoutImpresaInput = {
    where: lavorostoricoWhereUniqueInput
    data: XOR<lavorostoricoUpdateWithoutImpresaInput, lavorostoricoUncheckedUpdateWithoutImpresaInput>
  }

  export type lavorostoricoUpdateManyWithWhereWithoutImpresaInput = {
    where: lavorostoricoScalarWhereInput
    data: XOR<lavorostoricoUpdateManyMutationInput, lavorostoricoUncheckedUpdateManyWithoutLavorostoricoInput>
  }

  export type catastolinkerCreateWithoutLavoroInput = {
    idCatasto?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    idSegnalazione?: number | null
    statoSegnalazione?: string | null
    statoLavoro?: string | null
    flg_catasto?: number | null
    geojson?: string | null
    pratica?: praticaCreateNestedOneWithoutCatastolinkerInput
    utenti?: utentiCreateNestedOneWithoutCatastolinkerInput
  }

  export type catastolinkerUncheckedCreateWithoutLavoroInput = {
    id?: number
    idCatasto?: number | null
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    idSegnalazione?: number | null
    statoSegnalazione?: string | null
    statoLavoro?: string | null
    flg_catasto?: number | null
    idPratica?: number | null
    geojson?: string | null
  }

  export type catastolinkerCreateOrConnectWithoutLavoroInput = {
    where: catastolinkerWhereUniqueInput
    create: XOR<catastolinkerCreateWithoutLavoroInput, catastolinkerUncheckedCreateWithoutLavoroInput>
  }

  export type catastolinkerCreateManyLavoroInputEnvelope = {
    data: Enumerable<catastolinkerCreateManyLavoroInput>
    skipDuplicates?: boolean
  }

  export type categoriaanomaliaCreateWithoutLavoroInput = {
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutCategoriaanomaliaInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaUncheckedCreateWithoutLavoroInput = {
    id?: number
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaCreateOrConnectWithoutLavoroInput = {
    where: categoriaanomaliaWhereUniqueInput
    create: XOR<categoriaanomaliaCreateWithoutLavoroInput, categoriaanomaliaUncheckedCreateWithoutLavoroInput>
  }

  export type sottocategorialavoroCreateWithoutLavoroInput = {
    value?: string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategorialavoroInput
    lavorostorico?: lavorostoricoCreateNestedManyWithoutSottocategorialavoroInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategorialavoroInput
  }

  export type sottocategorialavoroUncheckedCreateWithoutLavoroInput = {
    id?: number
    value?: string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutSottocategorialavoroInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput
  }

  export type sottocategorialavoroCreateOrConnectWithoutLavoroInput = {
    where: sottocategorialavoroWhereUniqueInput
    create: XOR<sottocategorialavoroCreateWithoutLavoroInput, sottocategorialavoroUncheckedCreateWithoutLavoroInput>
  }

  export type utentiCreateWithoutLavoro_lavoro_idUtenteStatoToutentiInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutLavoro_lavoro_idUtenteStatoToutentiInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutLavoro_lavoro_idUtenteStatoToutentiInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutLavoro_lavoro_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutLavoro_lavoro_idUtenteStatoToutentiInput>
  }

  export type utentiCreateWithoutLavoro_lavoro_idUtenteToutentiInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutLavoro_lavoro_idUtenteToutentiInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutLavoro_lavoro_idUtenteToutentiInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutLavoro_lavoro_idUtenteToutentiInput, utentiUncheckedCreateWithoutLavoro_lavoro_idUtenteToutentiInput>
  }

  export type impresaCreateWithoutLavoroInput = {
    value?: string | null
    lavorostorico?: lavorostoricoCreateNestedManyWithoutImpresaInput
  }

  export type impresaUncheckedCreateWithoutLavoroInput = {
    id?: number
    value?: string | null
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutImpresaInput
  }

  export type impresaCreateOrConnectWithoutLavoroInput = {
    where: impresaWhereUniqueInput
    create: XOR<impresaCreateWithoutLavoroInput, impresaUncheckedCreateWithoutLavoroInput>
  }

  export type catastolinkerUpsertWithWhereUniqueWithoutLavoroInput = {
    where: catastolinkerWhereUniqueInput
    update: XOR<catastolinkerUpdateWithoutLavoroInput, catastolinkerUncheckedUpdateWithoutLavoroInput>
    create: XOR<catastolinkerCreateWithoutLavoroInput, catastolinkerUncheckedCreateWithoutLavoroInput>
  }

  export type catastolinkerUpdateWithWhereUniqueWithoutLavoroInput = {
    where: catastolinkerWhereUniqueInput
    data: XOR<catastolinkerUpdateWithoutLavoroInput, catastolinkerUncheckedUpdateWithoutLavoroInput>
  }

  export type catastolinkerUpdateManyWithWhereWithoutLavoroInput = {
    where: catastolinkerScalarWhereInput
    data: XOR<catastolinkerUpdateManyMutationInput, catastolinkerUncheckedUpdateManyWithoutCatastolinkerInput>
  }

  export type catastolinkerScalarWhereInput = {
    AND?: Enumerable<catastolinkerScalarWhereInput>
    OR?: Enumerable<catastolinkerScalarWhereInput>
    NOT?: Enumerable<catastolinkerScalarWhereInput>
    id?: IntFilter | number
    idCatasto?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
    idSegnalazione?: IntNullableFilter | number | null
    idLavoro?: IntNullableFilter | number | null
    statoSegnalazione?: StringNullableFilter | string | null
    statoLavoro?: StringNullableFilter | string | null
    flg_catasto?: IntNullableFilter | number | null
    idPratica?: IntNullableFilter | number | null
    geojson?: StringNullableFilter | string | null
  }

  export type categoriaanomaliaUpsertWithoutLavoroInput = {
    update: XOR<categoriaanomaliaUpdateWithoutLavoroInput, categoriaanomaliaUncheckedUpdateWithoutLavoroInput>
    create: XOR<categoriaanomaliaCreateWithoutLavoroInput, categoriaanomaliaUncheckedCreateWithoutLavoroInput>
  }

  export type categoriaanomaliaUpdateWithoutLavoroInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutCategoriaanomaliaNestedInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type categoriaanomaliaUncheckedUpdateWithoutLavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type sottocategorialavoroUpsertWithoutLavoroInput = {
    update: XOR<sottocategorialavoroUpdateWithoutLavoroInput, sottocategorialavoroUncheckedUpdateWithoutLavoroInput>
    create: XOR<sottocategorialavoroCreateWithoutLavoroInput, sottocategorialavoroUncheckedCreateWithoutLavoroInput>
  }

  export type sottocategorialavoroUpdateWithoutLavoroInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategorialavoroNestedInput
    lavorostorico?: lavorostoricoUpdateManyWithoutSottocategorialavoroNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategorialavoroNestedInput
  }

  export type sottocategorialavoroUncheckedUpdateWithoutLavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
  }

  export type utentiUpsertWithoutLavoro_lavoro_idUtenteStatoToutentiInput = {
    update: XOR<utentiUpdateWithoutLavoro_lavoro_idUtenteStatoToutentiInput, utentiUncheckedUpdateWithoutLavoro_lavoro_idUtenteStatoToutentiInput>
    create: XOR<utentiCreateWithoutLavoro_lavoro_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutLavoro_lavoro_idUtenteStatoToutentiInput>
  }

  export type utentiUpdateWithoutLavoro_lavoro_idUtenteStatoToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutLavoro_lavoro_idUtenteStatoToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type utentiUpsertWithoutLavoro_lavoro_idUtenteToutentiInput = {
    update: XOR<utentiUpdateWithoutLavoro_lavoro_idUtenteToutentiInput, utentiUncheckedUpdateWithoutLavoro_lavoro_idUtenteToutentiInput>
    create: XOR<utentiCreateWithoutLavoro_lavoro_idUtenteToutentiInput, utentiUncheckedCreateWithoutLavoro_lavoro_idUtenteToutentiInput>
  }

  export type utentiUpdateWithoutLavoro_lavoro_idUtenteToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutLavoro_lavoro_idUtenteToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type impresaUpsertWithoutLavoroInput = {
    update: XOR<impresaUpdateWithoutLavoroInput, impresaUncheckedUpdateWithoutLavoroInput>
    create: XOR<impresaCreateWithoutLavoroInput, impresaUncheckedCreateWithoutLavoroInput>
  }

  export type impresaUpdateWithoutLavoroInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    lavorostorico?: lavorostoricoUpdateManyWithoutImpresaNestedInput
  }

  export type impresaUncheckedUpdateWithoutLavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutImpresaNestedInput
  }

  export type categoriaanomaliaCreateWithoutLavorostoricoInput = {
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutCategoriaanomaliaInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaUncheckedCreateWithoutLavorostoricoInput = {
    id?: number
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaCreateOrConnectWithoutLavorostoricoInput = {
    where: categoriaanomaliaWhereUniqueInput
    create: XOR<categoriaanomaliaCreateWithoutLavorostoricoInput, categoriaanomaliaUncheckedCreateWithoutLavorostoricoInput>
  }

  export type sottocategorialavoroCreateWithoutLavorostoricoInput = {
    value?: string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategorialavoroInput
    lavoro?: lavoroCreateNestedManyWithoutSottocategorialavoroInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategorialavoroInput
  }

  export type sottocategorialavoroUncheckedCreateWithoutLavorostoricoInput = {
    id?: number
    value?: string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput
    lavoro?: lavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput
  }

  export type sottocategorialavoroCreateOrConnectWithoutLavorostoricoInput = {
    where: sottocategorialavoroWhereUniqueInput
    create: XOR<sottocategorialavoroCreateWithoutLavorostoricoInput, sottocategorialavoroUncheckedCreateWithoutLavorostoricoInput>
  }

  export type utentiCreateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput>
  }

  export type utentiCreateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutLavorostorico_lavorostorico_idUtenteToutentiInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput, utentiUncheckedCreateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput>
  }

  export type impresaCreateWithoutLavorostoricoInput = {
    value?: string | null
    lavoro?: lavoroCreateNestedManyWithoutImpresaInput
  }

  export type impresaUncheckedCreateWithoutLavorostoricoInput = {
    id?: number
    value?: string | null
    lavoro?: lavoroUncheckedCreateNestedManyWithoutImpresaInput
  }

  export type impresaCreateOrConnectWithoutLavorostoricoInput = {
    where: impresaWhereUniqueInput
    create: XOR<impresaCreateWithoutLavorostoricoInput, impresaUncheckedCreateWithoutLavorostoricoInput>
  }

  export type categoriaanomaliaUpsertWithoutLavorostoricoInput = {
    update: XOR<categoriaanomaliaUpdateWithoutLavorostoricoInput, categoriaanomaliaUncheckedUpdateWithoutLavorostoricoInput>
    create: XOR<categoriaanomaliaCreateWithoutLavorostoricoInput, categoriaanomaliaUncheckedCreateWithoutLavorostoricoInput>
  }

  export type categoriaanomaliaUpdateWithoutLavorostoricoInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutCategoriaanomaliaNestedInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type categoriaanomaliaUncheckedUpdateWithoutLavorostoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type sottocategorialavoroUpsertWithoutLavorostoricoInput = {
    update: XOR<sottocategorialavoroUpdateWithoutLavorostoricoInput, sottocategorialavoroUncheckedUpdateWithoutLavorostoricoInput>
    create: XOR<sottocategorialavoroCreateWithoutLavorostoricoInput, sottocategorialavoroUncheckedCreateWithoutLavorostoricoInput>
  }

  export type sottocategorialavoroUpdateWithoutLavorostoricoInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategorialavoroNestedInput
    lavoro?: lavoroUpdateManyWithoutSottocategorialavoroNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategorialavoroNestedInput
  }

  export type sottocategorialavoroUncheckedUpdateWithoutLavorostoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
    lavoro?: lavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
  }

  export type utentiUpsertWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput = {
    update: XOR<utentiUpdateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput, utentiUncheckedUpdateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput>
    create: XOR<utentiCreateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput>
  }

  export type utentiUpdateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type utentiUpsertWithoutLavorostorico_lavorostorico_idUtenteToutentiInput = {
    update: XOR<utentiUpdateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput, utentiUncheckedUpdateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput>
    create: XOR<utentiCreateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput, utentiUncheckedCreateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput>
  }

  export type utentiUpdateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutLavorostorico_lavorostorico_idUtenteToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type impresaUpsertWithoutLavorostoricoInput = {
    update: XOR<impresaUpdateWithoutLavorostoricoInput, impresaUncheckedUpdateWithoutLavorostoricoInput>
    create: XOR<impresaCreateWithoutLavorostoricoInput, impresaUncheckedCreateWithoutLavorostoricoInput>
  }

  export type impresaUpdateWithoutLavorostoricoInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    lavoro?: lavoroUpdateManyWithoutImpresaNestedInput
  }

  export type impresaUncheckedUpdateWithoutLavorostoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    lavoro?: lavoroUncheckedUpdateManyWithoutImpresaNestedInput
  }

  export type livelliserviziodescrizioneCreateWithoutLivelliservizioInput = {
    ambito?: string | null
    lds?: string | null
    parametroValutazione?: string | null
    ldsOT?: string | null
    ldsCPT?: string | null
    indiceScostamento?: string | null
    penaleUnitaria?: number | null
    controllo?: string | null
    note?: string | null
    tipo?: string | null
    funzione?: string | null
    tipoEstrazione?: string | null
  }

  export type livelliserviziodescrizioneUncheckedCreateWithoutLivelliservizioInput = {
    id?: number
    ambito?: string | null
    lds?: string | null
    parametroValutazione?: string | null
    ldsOT?: string | null
    ldsCPT?: string | null
    indiceScostamento?: string | null
    penaleUnitaria?: number | null
    controllo?: string | null
    note?: string | null
    tipo?: string | null
    funzione?: string | null
    tipoEstrazione?: string | null
  }

  export type livelliserviziodescrizioneCreateOrConnectWithoutLivelliservizioInput = {
    where: livelliserviziodescrizioneWhereUniqueInput
    create: XOR<livelliserviziodescrizioneCreateWithoutLivelliservizioInput, livelliserviziodescrizioneUncheckedCreateWithoutLivelliservizioInput>
  }

  export type utentiCreateWithoutLivelliservizioInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutLivelliservizioInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutLivelliservizioInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutLivelliservizioInput, utentiUncheckedCreateWithoutLivelliservizioInput>
  }

  export type livelliserviziodescrizioneUpsertWithoutLivelliservizioInput = {
    update: XOR<livelliserviziodescrizioneUpdateWithoutLivelliservizioInput, livelliserviziodescrizioneUncheckedUpdateWithoutLivelliservizioInput>
    create: XOR<livelliserviziodescrizioneCreateWithoutLivelliservizioInput, livelliserviziodescrizioneUncheckedCreateWithoutLivelliservizioInput>
  }

  export type livelliserviziodescrizioneUpdateWithoutLivelliservizioInput = {
    ambito?: NullableStringFieldUpdateOperationsInput | string | null
    lds?: NullableStringFieldUpdateOperationsInput | string | null
    parametroValutazione?: NullableStringFieldUpdateOperationsInput | string | null
    ldsOT?: NullableStringFieldUpdateOperationsInput | string | null
    ldsCPT?: NullableStringFieldUpdateOperationsInput | string | null
    indiceScostamento?: NullableStringFieldUpdateOperationsInput | string | null
    penaleUnitaria?: NullableIntFieldUpdateOperationsInput | number | null
    controllo?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    funzione?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEstrazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliserviziodescrizioneUncheckedUpdateWithoutLivelliservizioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ambito?: NullableStringFieldUpdateOperationsInput | string | null
    lds?: NullableStringFieldUpdateOperationsInput | string | null
    parametroValutazione?: NullableStringFieldUpdateOperationsInput | string | null
    ldsOT?: NullableStringFieldUpdateOperationsInput | string | null
    ldsCPT?: NullableStringFieldUpdateOperationsInput | string | null
    indiceScostamento?: NullableStringFieldUpdateOperationsInput | string | null
    penaleUnitaria?: NullableIntFieldUpdateOperationsInput | number | null
    controllo?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    funzione?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEstrazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type utentiUpsertWithoutLivelliservizioInput = {
    update: XOR<utentiUpdateWithoutLivelliservizioInput, utentiUncheckedUpdateWithoutLivelliservizioInput>
    create: XOR<utentiCreateWithoutLivelliservizioInput, utentiUncheckedCreateWithoutLivelliservizioInput>
  }

  export type utentiUpdateWithoutLivelliservizioInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutLivelliservizioInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type livelliservizioCreateWithoutLivelliserviziodescrizioneInput = {
    idAppalto?: number | null
    dataModifica?: string | null
    risultato?: string | null
    detrazioneEffettivo?: string | null
    premioEffettivo?: string | null
    chiave?: string | null
    unita?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    dataIntervalloDa?: string | null
    dataIntervalloA?: string | null
    dataRichiesta?: string | null
    dataInizioEffettivaLavoro?: string | null
    dataChiusuraSegnalazione?: string | null
    dataFineMassima?: string | null
    elaborato?: number | null
    idSchedulatore?: number | null
    tipolavoro?: string | null
    note?: string | null
    dataCreazioneSegnalazione?: string | null
    utenti?: utentiCreateNestedOneWithoutLivelliservizioInput
  }

  export type livelliservizioUncheckedCreateWithoutLivelliserviziodescrizioneInput = {
    id?: number
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    risultato?: string | null
    detrazioneEffettivo?: string | null
    premioEffettivo?: string | null
    chiave?: string | null
    unita?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    dataIntervalloDa?: string | null
    dataIntervalloA?: string | null
    dataRichiesta?: string | null
    dataInizioEffettivaLavoro?: string | null
    dataChiusuraSegnalazione?: string | null
    dataFineMassima?: string | null
    elaborato?: number | null
    idSchedulatore?: number | null
    tipolavoro?: string | null
    note?: string | null
    dataCreazioneSegnalazione?: string | null
  }

  export type livelliservizioCreateOrConnectWithoutLivelliserviziodescrizioneInput = {
    where: livelliservizioWhereUniqueInput
    create: XOR<livelliservizioCreateWithoutLivelliserviziodescrizioneInput, livelliservizioUncheckedCreateWithoutLivelliserviziodescrizioneInput>
  }

  export type livelliservizioCreateManyLivelliserviziodescrizioneInputEnvelope = {
    data: Enumerable<livelliservizioCreateManyLivelliserviziodescrizioneInput>
    skipDuplicates?: boolean
  }

  export type livelliservizioUpsertWithWhereUniqueWithoutLivelliserviziodescrizioneInput = {
    where: livelliservizioWhereUniqueInput
    update: XOR<livelliservizioUpdateWithoutLivelliserviziodescrizioneInput, livelliservizioUncheckedUpdateWithoutLivelliserviziodescrizioneInput>
    create: XOR<livelliservizioCreateWithoutLivelliserviziodescrizioneInput, livelliservizioUncheckedCreateWithoutLivelliserviziodescrizioneInput>
  }

  export type livelliservizioUpdateWithWhereUniqueWithoutLivelliserviziodescrizioneInput = {
    where: livelliservizioWhereUniqueInput
    data: XOR<livelliservizioUpdateWithoutLivelliserviziodescrizioneInput, livelliservizioUncheckedUpdateWithoutLivelliserviziodescrizioneInput>
  }

  export type livelliservizioUpdateManyWithWhereWithoutLivelliserviziodescrizioneInput = {
    where: livelliservizioScalarWhereInput
    data: XOR<livelliservizioUpdateManyMutationInput, livelliservizioUncheckedUpdateManyWithoutLivelliservizioInput>
  }

  export type livelliservizioScalarWhereInput = {
    AND?: Enumerable<livelliservizioScalarWhereInput>
    OR?: Enumerable<livelliservizioScalarWhereInput>
    NOT?: Enumerable<livelliservizioScalarWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
    idLds?: IntNullableFilter | number | null
    risultato?: StringNullableFilter | string | null
    detrazioneEffettivo?: StringNullableFilter | string | null
    premioEffettivo?: StringNullableFilter | string | null
    chiave?: StringNullableFilter | string | null
    unita?: StringNullableFilter | string | null
    idSegnalazione?: IntNullableFilter | number | null
    idLavoro?: IntNullableFilter | number | null
    dataIntervalloDa?: StringNullableFilter | string | null
    dataIntervalloA?: StringNullableFilter | string | null
    dataRichiesta?: StringNullableFilter | string | null
    dataInizioEffettivaLavoro?: StringNullableFilter | string | null
    dataChiusuraSegnalazione?: StringNullableFilter | string | null
    dataFineMassima?: StringNullableFilter | string | null
    elaborato?: IntNullableFilter | number | null
    idSchedulatore?: IntNullableFilter | number | null
    tipolavoro?: StringNullableFilter | string | null
    note?: StringNullableFilter | string | null
    dataCreazioneSegnalazione?: StringNullableFilter | string | null
  }

  export type utentiCreateWithoutOggettocivettaInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutOggettocivettaInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutOggettocivettaInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutOggettocivettaInput, utentiUncheckedCreateWithoutOggettocivettaInput>
  }

  export type utentiUpsertWithoutOggettocivettaInput = {
    update: XOR<utentiUpdateWithoutOggettocivettaInput, utentiUncheckedUpdateWithoutOggettocivettaInput>
    create: XOR<utentiCreateWithoutOggettocivettaInput, utentiUncheckedCreateWithoutOggettocivettaInput>
  }

  export type utentiUpdateWithoutOggettocivettaInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutOggettocivettaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type catastolinkerCreateWithoutPraticaInput = {
    idCatasto?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    idSegnalazione?: number | null
    statoSegnalazione?: string | null
    statoLavoro?: string | null
    flg_catasto?: number | null
    geojson?: string | null
    lavoro?: lavoroCreateNestedOneWithoutCatastolinkerInput
    utenti?: utentiCreateNestedOneWithoutCatastolinkerInput
  }

  export type catastolinkerUncheckedCreateWithoutPraticaInput = {
    id?: number
    idCatasto?: number | null
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    statoSegnalazione?: string | null
    statoLavoro?: string | null
    flg_catasto?: number | null
    geojson?: string | null
  }

  export type catastolinkerCreateOrConnectWithoutPraticaInput = {
    where: catastolinkerWhereUniqueInput
    create: XOR<catastolinkerCreateWithoutPraticaInput, catastolinkerUncheckedCreateWithoutPraticaInput>
  }

  export type catastolinkerCreateManyPraticaInputEnvelope = {
    data: Enumerable<catastolinkerCreateManyPraticaInput>
    skipDuplicates?: boolean
  }

  export type utentiCreateWithoutPraticaInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutPraticaInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutPraticaInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutPraticaInput, utentiUncheckedCreateWithoutPraticaInput>
  }

  export type catastolinkerUpsertWithWhereUniqueWithoutPraticaInput = {
    where: catastolinkerWhereUniqueInput
    update: XOR<catastolinkerUpdateWithoutPraticaInput, catastolinkerUncheckedUpdateWithoutPraticaInput>
    create: XOR<catastolinkerCreateWithoutPraticaInput, catastolinkerUncheckedCreateWithoutPraticaInput>
  }

  export type catastolinkerUpdateWithWhereUniqueWithoutPraticaInput = {
    where: catastolinkerWhereUniqueInput
    data: XOR<catastolinkerUpdateWithoutPraticaInput, catastolinkerUncheckedUpdateWithoutPraticaInput>
  }

  export type catastolinkerUpdateManyWithWhereWithoutPraticaInput = {
    where: catastolinkerScalarWhereInput
    data: XOR<catastolinkerUpdateManyMutationInput, catastolinkerUncheckedUpdateManyWithoutCatastolinkerInput>
  }

  export type utentiUpsertWithoutPraticaInput = {
    update: XOR<utentiUpdateWithoutPraticaInput, utentiUncheckedUpdateWithoutPraticaInput>
    create: XOR<utentiCreateWithoutPraticaInput, utentiUncheckedCreateWithoutPraticaInput>
  }

  export type utentiUpdateWithoutPraticaInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutPraticaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type utentiCreateWithoutPraticastoricoInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutPraticastoricoInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutPraticastoricoInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutPraticastoricoInput, utentiUncheckedCreateWithoutPraticastoricoInput>
  }

  export type utentiUpsertWithoutPraticastoricoInput = {
    update: XOR<utentiUpdateWithoutPraticastoricoInput, utentiUncheckedUpdateWithoutPraticastoricoInput>
    create: XOR<utentiCreateWithoutPraticastoricoInput, utentiUncheckedCreateWithoutPraticastoricoInput>
  }

  export type utentiUpdateWithoutPraticastoricoInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutPraticastoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type fontiCreateWithoutRegistrorichiedenteInput = {
    value?: string | null
    segnalazione?: segnalazioneCreateNestedManyWithoutFontiInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutFontiInput
  }

  export type fontiUncheckedCreateWithoutRegistrorichiedenteInput = {
    id?: number
    value?: string | null
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutFontiInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutFontiInput
  }

  export type fontiCreateOrConnectWithoutRegistrorichiedenteInput = {
    where: fontiWhereUniqueInput
    create: XOR<fontiCreateWithoutRegistrorichiedenteInput, fontiUncheckedCreateWithoutRegistrorichiedenteInput>
  }

  export type segnalatoreCreateWithoutRegistrorichiedenteInput = {
    idAppalto?: number | null
    tipoSegnalatore?: number | null
    nomeSegnalatore?: string | null
    cognomeSegnalatore?: string | null
    telefonoSegnalatore?: string | null
    emailSegnalatore?: string | null
    cellulareSegnalatore?: string | null
    pecSegnalatore?: string | null
    segnalazione?: segnalazioneCreateNestedManyWithoutSegnalatoreInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutSegnalatoreInput
  }

  export type segnalatoreUncheckedCreateWithoutRegistrorichiedenteInput = {
    id?: number
    idAppalto?: number | null
    tipoSegnalatore?: number | null
    nomeSegnalatore?: string | null
    cognomeSegnalatore?: string | null
    telefonoSegnalatore?: string | null
    emailSegnalatore?: string | null
    cellulareSegnalatore?: string | null
    pecSegnalatore?: string | null
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutSegnalatoreInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutSegnalatoreInput
  }

  export type segnalatoreCreateOrConnectWithoutRegistrorichiedenteInput = {
    where: segnalatoreWhereUniqueInput
    create: XOR<segnalatoreCreateWithoutRegistrorichiedenteInput, segnalatoreUncheckedCreateWithoutRegistrorichiedenteInput>
  }

  export type segnalazione_geticoCreateWithoutRegistrorichiedenteInput = {
    id_ticket?: string | null
    segnalante_nome?: string | null
    segnalante_cognome?: string | null
    segnalante_email?: string | null
    segnalante_telefono?: string | null
    luogo_indirizzo?: string | null
    luogo_civico?: string | null
    luogo_ubicazione?: string | null
    descrizione?: string | null
    tipologia?: string | null
    flg_stato?: string | null
    luogo_quartiere?: string | null
    dataRichiesta?: string | null
    dataInoltro?: string | null
    ufficioProvenienza?: string | null
    luogo_civico2?: string | null
    luogo_indirizzo2?: string | null
    ufficio_inoltro?: string | null
    json_uffici?: string | null
    note_esito?: string | null
    sopralluogo?: string | null
    sopralluogo_note?: string | null
    sopralluogo_effettuato?: string | null
    sopralluogo_importato?: string | null
    sopralluogo_catasto_json?: string | null
    segnalazione?: segnalazioneCreateNestedManyWithoutSegnalazione_geticoInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutSegnalazione_geticoInput
  }

  export type segnalazione_geticoUncheckedCreateWithoutRegistrorichiedenteInput = {
    id?: number
    id_ticket?: string | null
    segnalante_nome?: string | null
    segnalante_cognome?: string | null
    segnalante_email?: string | null
    segnalante_telefono?: string | null
    luogo_indirizzo?: string | null
    luogo_civico?: string | null
    luogo_ubicazione?: string | null
    descrizione?: string | null
    tipologia?: string | null
    flg_stato?: string | null
    luogo_quartiere?: string | null
    dataRichiesta?: string | null
    dataInoltro?: string | null
    ufficioProvenienza?: string | null
    luogo_civico2?: string | null
    luogo_indirizzo2?: string | null
    ufficio_inoltro?: string | null
    json_uffici?: string | null
    note_esito?: string | null
    sopralluogo?: string | null
    sopralluogo_note?: string | null
    sopralluogo_effettuato?: string | null
    sopralluogo_importato?: string | null
    sopralluogo_catasto_json?: string | null
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutSegnalazione_geticoInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutSegnalazione_geticoInput
  }

  export type segnalazione_geticoCreateOrConnectWithoutRegistrorichiedenteInput = {
    where: segnalazione_geticoWhereUniqueInput
    create: XOR<segnalazione_geticoCreateWithoutRegistrorichiedenteInput, segnalazione_geticoUncheckedCreateWithoutRegistrorichiedenteInput>
  }

  export type utentiCreateWithoutRegistrorichiedenteInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutRegistrorichiedenteInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutRegistrorichiedenteInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutRegistrorichiedenteInput, utentiUncheckedCreateWithoutRegistrorichiedenteInput>
  }

  export type fontiUpsertWithoutRegistrorichiedenteInput = {
    update: XOR<fontiUpdateWithoutRegistrorichiedenteInput, fontiUncheckedUpdateWithoutRegistrorichiedenteInput>
    create: XOR<fontiCreateWithoutRegistrorichiedenteInput, fontiUncheckedCreateWithoutRegistrorichiedenteInput>
  }

  export type fontiUpdateWithoutRegistrorichiedenteInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateManyWithoutFontiNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutFontiNestedInput
  }

  export type fontiUncheckedUpdateWithoutRegistrorichiedenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutFontiNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutFontiNestedInput
  }

  export type segnalatoreUpsertWithoutRegistrorichiedenteInput = {
    update: XOR<segnalatoreUpdateWithoutRegistrorichiedenteInput, segnalatoreUncheckedUpdateWithoutRegistrorichiedenteInput>
    create: XOR<segnalatoreCreateWithoutRegistrorichiedenteInput, segnalatoreUncheckedCreateWithoutRegistrorichiedenteInput>
  }

  export type segnalatoreUpdateWithoutRegistrorichiedenteInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    nomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cognomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    emailSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cellulareSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    pecSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateManyWithoutSegnalatoreNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutSegnalatoreNestedInput
  }

  export type segnalatoreUncheckedUpdateWithoutRegistrorichiedenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    nomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cognomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    emailSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cellulareSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    pecSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutSegnalatoreNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutSegnalatoreNestedInput
  }

  export type segnalazione_geticoUpsertWithoutRegistrorichiedenteInput = {
    update: XOR<segnalazione_geticoUpdateWithoutRegistrorichiedenteInput, segnalazione_geticoUncheckedUpdateWithoutRegistrorichiedenteInput>
    create: XOR<segnalazione_geticoCreateWithoutRegistrorichiedenteInput, segnalazione_geticoUncheckedCreateWithoutRegistrorichiedenteInput>
  }

  export type segnalazione_geticoUpdateWithoutRegistrorichiedenteInput = {
    id_ticket?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_nome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_cognome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_email?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_telefono?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_ubicazione?: NullableStringFieldUpdateOperationsInput | string | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    flg_stato?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_quartiere?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInoltro?: NullableStringFieldUpdateOperationsInput | string | null
    ufficioProvenienza?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico2?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo2?: NullableStringFieldUpdateOperationsInput | string | null
    ufficio_inoltro?: NullableStringFieldUpdateOperationsInput | string | null
    json_uffici?: NullableStringFieldUpdateOperationsInput | string | null
    note_esito?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_note?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_effettuato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_importato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_catasto_json?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateManyWithoutSegnalazione_geticoNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutSegnalazione_geticoNestedInput
  }

  export type segnalazione_geticoUncheckedUpdateWithoutRegistrorichiedenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ticket?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_nome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_cognome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_email?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_telefono?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_ubicazione?: NullableStringFieldUpdateOperationsInput | string | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    flg_stato?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_quartiere?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInoltro?: NullableStringFieldUpdateOperationsInput | string | null
    ufficioProvenienza?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico2?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo2?: NullableStringFieldUpdateOperationsInput | string | null
    ufficio_inoltro?: NullableStringFieldUpdateOperationsInput | string | null
    json_uffici?: NullableStringFieldUpdateOperationsInput | string | null
    note_esito?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_note?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_effettuato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_importato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_catasto_json?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutSegnalazione_geticoNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutSegnalazione_geticoNestedInput
  }

  export type utentiUpsertWithoutRegistrorichiedenteInput = {
    update: XOR<utentiUpdateWithoutRegistrorichiedenteInput, utentiUncheckedUpdateWithoutRegistrorichiedenteInput>
    create: XOR<utentiCreateWithoutRegistrorichiedenteInput, utentiUncheckedCreateWithoutRegistrorichiedenteInput>
  }

  export type utentiUpdateWithoutRegistrorichiedenteInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutRegistrorichiedenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type registrorichiedenteCreateWithoutSegnalatoreInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idSegnalazione?: number | null
    del?: string | null
    fonti?: fontiCreateNestedOneWithoutRegistrorichiedenteInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutRegistrorichiedenteInput
    utenti?: utentiCreateNestedOneWithoutRegistrorichiedenteInput
  }

  export type registrorichiedenteUncheckedCreateWithoutSegnalatoreInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idUtente?: number | null
    idSegnalazione?: number | null
    fonteSegnalazione?: number | null
    idSegnalazioneGetico?: number | null
    del?: string | null
  }

  export type registrorichiedenteCreateOrConnectWithoutSegnalatoreInput = {
    where: registrorichiedenteWhereUniqueInput
    create: XOR<registrorichiedenteCreateWithoutSegnalatoreInput, registrorichiedenteUncheckedCreateWithoutSegnalatoreInput>
  }

  export type registrorichiedenteCreateManySegnalatoreInputEnvelope = {
    data: Enumerable<registrorichiedenteCreateManySegnalatoreInput>
    skipDuplicates?: boolean
  }

  export type segnalazioneCreateWithoutSegnalatoreInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    fonti?: fontiCreateNestedOneWithoutSegnalazioneInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazioneInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    utenti_segnalazione_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazioneInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazioneInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateWithoutSegnalatoreInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneCreateOrConnectWithoutSegnalatoreInput = {
    where: segnalazioneWhereUniqueInput
    create: XOR<segnalazioneCreateWithoutSegnalatoreInput, segnalazioneUncheckedCreateWithoutSegnalatoreInput>
  }

  export type segnalazioneCreateManySegnalatoreInputEnvelope = {
    data: Enumerable<segnalazioneCreateManySegnalatoreInput>
    skipDuplicates?: boolean
  }

  export type segnalazionestoricoCreateWithoutSegnalatoreInput = {
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    fonti?: fontiCreateNestedOneWithoutSegnalazionestoricoInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazionestoricoInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazionestoricoInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazionestoricoInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazionestoricoInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazionestoricoInput
  }

  export type segnalazionestoricoUncheckedCreateWithoutSegnalatoreInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateOrConnectWithoutSegnalatoreInput = {
    where: segnalazionestoricoWhereUniqueInput
    create: XOR<segnalazionestoricoCreateWithoutSegnalatoreInput, segnalazionestoricoUncheckedCreateWithoutSegnalatoreInput>
  }

  export type segnalazionestoricoCreateManySegnalatoreInputEnvelope = {
    data: Enumerable<segnalazionestoricoCreateManySegnalatoreInput>
    skipDuplicates?: boolean
  }

  export type registrorichiedenteUpsertWithWhereUniqueWithoutSegnalatoreInput = {
    where: registrorichiedenteWhereUniqueInput
    update: XOR<registrorichiedenteUpdateWithoutSegnalatoreInput, registrorichiedenteUncheckedUpdateWithoutSegnalatoreInput>
    create: XOR<registrorichiedenteCreateWithoutSegnalatoreInput, registrorichiedenteUncheckedCreateWithoutSegnalatoreInput>
  }

  export type registrorichiedenteUpdateWithWhereUniqueWithoutSegnalatoreInput = {
    where: registrorichiedenteWhereUniqueInput
    data: XOR<registrorichiedenteUpdateWithoutSegnalatoreInput, registrorichiedenteUncheckedUpdateWithoutSegnalatoreInput>
  }

  export type registrorichiedenteUpdateManyWithWhereWithoutSegnalatoreInput = {
    where: registrorichiedenteScalarWhereInput
    data: XOR<registrorichiedenteUpdateManyMutationInput, registrorichiedenteUncheckedUpdateManyWithoutRegistrorichiedenteInput>
  }

  export type segnalazioneUpsertWithWhereUniqueWithoutSegnalatoreInput = {
    where: segnalazioneWhereUniqueInput
    update: XOR<segnalazioneUpdateWithoutSegnalatoreInput, segnalazioneUncheckedUpdateWithoutSegnalatoreInput>
    create: XOR<segnalazioneCreateWithoutSegnalatoreInput, segnalazioneUncheckedCreateWithoutSegnalatoreInput>
  }

  export type segnalazioneUpdateWithWhereUniqueWithoutSegnalatoreInput = {
    where: segnalazioneWhereUniqueInput
    data: XOR<segnalazioneUpdateWithoutSegnalatoreInput, segnalazioneUncheckedUpdateWithoutSegnalatoreInput>
  }

  export type segnalazioneUpdateManyWithWhereWithoutSegnalatoreInput = {
    where: segnalazioneScalarWhereInput
    data: XOR<segnalazioneUpdateManyMutationInput, segnalazioneUncheckedUpdateManyWithoutSegnalazioneInput>
  }

  export type segnalazionestoricoUpsertWithWhereUniqueWithoutSegnalatoreInput = {
    where: segnalazionestoricoWhereUniqueInput
    update: XOR<segnalazionestoricoUpdateWithoutSegnalatoreInput, segnalazionestoricoUncheckedUpdateWithoutSegnalatoreInput>
    create: XOR<segnalazionestoricoCreateWithoutSegnalatoreInput, segnalazionestoricoUncheckedCreateWithoutSegnalatoreInput>
  }

  export type segnalazionestoricoUpdateWithWhereUniqueWithoutSegnalatoreInput = {
    where: segnalazionestoricoWhereUniqueInput
    data: XOR<segnalazionestoricoUpdateWithoutSegnalatoreInput, segnalazionestoricoUncheckedUpdateWithoutSegnalatoreInput>
  }

  export type segnalazionestoricoUpdateManyWithWhereWithoutSegnalatoreInput = {
    where: segnalazionestoricoScalarWhereInput
    data: XOR<segnalazionestoricoUpdateManyMutationInput, segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestoricoInput>
  }

  export type categoriaanomaliaCreateWithoutSegnalazioneInput = {
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutCategoriaanomaliaInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaUncheckedCreateWithoutSegnalazioneInput = {
    id?: number
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaCreateOrConnectWithoutSegnalazioneInput = {
    where: categoriaanomaliaWhereUniqueInput
    create: XOR<categoriaanomaliaCreateWithoutSegnalazioneInput, categoriaanomaliaUncheckedCreateWithoutSegnalazioneInput>
  }

  export type sottocategoriaanomaliaCreateWithoutSegnalazioneInput = {
    value?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutSottocategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategoriaanomaliaInput
  }

  export type sottocategoriaanomaliaUncheckedCreateWithoutSegnalazioneInput = {
    id?: number
    value?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
  }

  export type sottocategoriaanomaliaCreateOrConnectWithoutSegnalazioneInput = {
    where: sottocategoriaanomaliaWhereUniqueInput
    create: XOR<sottocategoriaanomaliaCreateWithoutSegnalazioneInput, sottocategoriaanomaliaUncheckedCreateWithoutSegnalazioneInput>
  }

  export type fontiCreateWithoutSegnalazioneInput = {
    value?: string | null
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutFontiInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutFontiInput
  }

  export type fontiUncheckedCreateWithoutSegnalazioneInput = {
    id?: number
    value?: string | null
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutFontiInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutFontiInput
  }

  export type fontiCreateOrConnectWithoutSegnalazioneInput = {
    where: fontiWhereUniqueInput
    create: XOR<fontiCreateWithoutSegnalazioneInput, fontiUncheckedCreateWithoutSegnalazioneInput>
  }

  export type segnalatoreCreateWithoutSegnalazioneInput = {
    idAppalto?: number | null
    tipoSegnalatore?: number | null
    nomeSegnalatore?: string | null
    cognomeSegnalatore?: string | null
    telefonoSegnalatore?: string | null
    emailSegnalatore?: string | null
    cellulareSegnalatore?: string | null
    pecSegnalatore?: string | null
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutSegnalatoreInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutSegnalatoreInput
  }

  export type segnalatoreUncheckedCreateWithoutSegnalazioneInput = {
    id?: number
    idAppalto?: number | null
    tipoSegnalatore?: number | null
    nomeSegnalatore?: string | null
    cognomeSegnalatore?: string | null
    telefonoSegnalatore?: string | null
    emailSegnalatore?: string | null
    cellulareSegnalatore?: string | null
    pecSegnalatore?: string | null
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutSegnalatoreInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutSegnalatoreInput
  }

  export type segnalatoreCreateOrConnectWithoutSegnalazioneInput = {
    where: segnalatoreWhereUniqueInput
    create: XOR<segnalatoreCreateWithoutSegnalazioneInput, segnalatoreUncheckedCreateWithoutSegnalazioneInput>
  }

  export type segnalazione_geticoCreateWithoutSegnalazioneInput = {
    id_ticket?: string | null
    segnalante_nome?: string | null
    segnalante_cognome?: string | null
    segnalante_email?: string | null
    segnalante_telefono?: string | null
    luogo_indirizzo?: string | null
    luogo_civico?: string | null
    luogo_ubicazione?: string | null
    descrizione?: string | null
    tipologia?: string | null
    flg_stato?: string | null
    luogo_quartiere?: string | null
    dataRichiesta?: string | null
    dataInoltro?: string | null
    ufficioProvenienza?: string | null
    luogo_civico2?: string | null
    luogo_indirizzo2?: string | null
    ufficio_inoltro?: string | null
    json_uffici?: string | null
    note_esito?: string | null
    sopralluogo?: string | null
    sopralluogo_note?: string | null
    sopralluogo_effettuato?: string | null
    sopralluogo_importato?: string | null
    sopralluogo_catasto_json?: string | null
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutSegnalazione_geticoInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutSegnalazione_geticoInput
  }

  export type segnalazione_geticoUncheckedCreateWithoutSegnalazioneInput = {
    id?: number
    id_ticket?: string | null
    segnalante_nome?: string | null
    segnalante_cognome?: string | null
    segnalante_email?: string | null
    segnalante_telefono?: string | null
    luogo_indirizzo?: string | null
    luogo_civico?: string | null
    luogo_ubicazione?: string | null
    descrizione?: string | null
    tipologia?: string | null
    flg_stato?: string | null
    luogo_quartiere?: string | null
    dataRichiesta?: string | null
    dataInoltro?: string | null
    ufficioProvenienza?: string | null
    luogo_civico2?: string | null
    luogo_indirizzo2?: string | null
    ufficio_inoltro?: string | null
    json_uffici?: string | null
    note_esito?: string | null
    sopralluogo?: string | null
    sopralluogo_note?: string | null
    sopralluogo_effettuato?: string | null
    sopralluogo_importato?: string | null
    sopralluogo_catasto_json?: string | null
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutSegnalazione_geticoInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutSegnalazione_geticoInput
  }

  export type segnalazione_geticoCreateOrConnectWithoutSegnalazioneInput = {
    where: segnalazione_geticoWhereUniqueInput
    create: XOR<segnalazione_geticoCreateWithoutSegnalazioneInput, segnalazione_geticoUncheckedCreateWithoutSegnalazioneInput>
  }

  export type tecniciCreateWithoutSegnalazioneInput = {
    value?: string | null
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutTecniciInput
  }

  export type tecniciUncheckedCreateWithoutSegnalazioneInput = {
    id?: number
    value?: string | null
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutTecniciInput
  }

  export type tecniciCreateOrConnectWithoutSegnalazioneInput = {
    where: tecniciWhereUniqueInput
    create: XOR<tecniciCreateWithoutSegnalazioneInput, tecniciUncheckedCreateWithoutSegnalazioneInput>
  }

  export type tipoprovvedimentoCreateWithoutSegnalazioneInput = {
    value?: string | null
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutTipoprovvedimentoInput
  }

  export type tipoprovvedimentoUncheckedCreateWithoutSegnalazioneInput = {
    id?: number
    value?: string | null
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutTipoprovvedimentoInput
  }

  export type tipoprovvedimentoCreateOrConnectWithoutSegnalazioneInput = {
    where: tipoprovvedimentoWhereUniqueInput
    create: XOR<tipoprovvedimentoCreateWithoutSegnalazioneInput, tipoprovvedimentoUncheckedCreateWithoutSegnalazioneInput>
  }

  export type utentiCreateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput>
  }

  export type utentiCreateWithoutSegnalazione_segnalazione_idUtenteToutentiInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutSegnalazione_segnalazione_idUtenteToutentiInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutSegnalazione_segnalazione_idUtenteToutentiInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutSegnalazione_segnalazione_idUtenteToutentiInput, utentiUncheckedCreateWithoutSegnalazione_segnalazione_idUtenteToutentiInput>
  }

  export type tiposeveritaCreateWithoutSegnalazioneInput = {
    value?: string | null
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutTiposeveritaInput
  }

  export type tiposeveritaUncheckedCreateWithoutSegnalazioneInput = {
    id?: number
    value?: string | null
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutTiposeveritaInput
  }

  export type tiposeveritaCreateOrConnectWithoutSegnalazioneInput = {
    where: tiposeveritaWhereUniqueInput
    create: XOR<tiposeveritaCreateWithoutSegnalazioneInput, tiposeveritaUncheckedCreateWithoutSegnalazioneInput>
  }

  export type tipoeventoCreateWithoutSegnalazioneInput = {
    value?: string | null
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutTipoeventoInput
  }

  export type tipoeventoUncheckedCreateWithoutSegnalazioneInput = {
    id?: number
    value?: string | null
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutTipoeventoInput
  }

  export type tipoeventoCreateOrConnectWithoutSegnalazioneInput = {
    where: tipoeventoWhereUniqueInput
    create: XOR<tipoeventoCreateWithoutSegnalazioneInput, tipoeventoUncheckedCreateWithoutSegnalazioneInput>
  }

  export type segnalazionestatostoricoCreateWithoutSegnalazioneInput = {
    idAppalto?: number | null
    dataModifica?: string | null
    stato?: string | null
    notaStato?: string | null
    utenti?: utentiCreateNestedOneWithoutSegnalazionestatostoricoInput
  }

  export type segnalazionestatostoricoUncheckedCreateWithoutSegnalazioneInput = {
    id?: number
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    stato?: string | null
    notaStato?: string | null
  }

  export type segnalazionestatostoricoCreateOrConnectWithoutSegnalazioneInput = {
    where: segnalazionestatostoricoWhereUniqueInput
    create: XOR<segnalazionestatostoricoCreateWithoutSegnalazioneInput, segnalazionestatostoricoUncheckedCreateWithoutSegnalazioneInput>
  }

  export type segnalazionestatostoricoCreateManySegnalazioneInputEnvelope = {
    data: Enumerable<segnalazionestatostoricoCreateManySegnalazioneInput>
    skipDuplicates?: boolean
  }

  export type categoriaanomaliaUpsertWithoutSegnalazioneInput = {
    update: XOR<categoriaanomaliaUpdateWithoutSegnalazioneInput, categoriaanomaliaUncheckedUpdateWithoutSegnalazioneInput>
    create: XOR<categoriaanomaliaCreateWithoutSegnalazioneInput, categoriaanomaliaUncheckedCreateWithoutSegnalazioneInput>
  }

  export type categoriaanomaliaUpdateWithoutSegnalazioneInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutCategoriaanomaliaNestedInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type categoriaanomaliaUncheckedUpdateWithoutSegnalazioneInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type sottocategoriaanomaliaUpsertWithoutSegnalazioneInput = {
    update: XOR<sottocategoriaanomaliaUpdateWithoutSegnalazioneInput, sottocategoriaanomaliaUncheckedUpdateWithoutSegnalazioneInput>
    create: XOR<sottocategoriaanomaliaCreateWithoutSegnalazioneInput, sottocategoriaanomaliaUncheckedCreateWithoutSegnalazioneInput>
  }

  export type sottocategoriaanomaliaUpdateWithoutSegnalazioneInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutSottocategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategoriaanomaliaNestedInput
  }

  export type sottocategoriaanomaliaUncheckedUpdateWithoutSegnalazioneInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
  }

  export type fontiUpsertWithoutSegnalazioneInput = {
    update: XOR<fontiUpdateWithoutSegnalazioneInput, fontiUncheckedUpdateWithoutSegnalazioneInput>
    create: XOR<fontiCreateWithoutSegnalazioneInput, fontiUncheckedCreateWithoutSegnalazioneInput>
  }

  export type fontiUpdateWithoutSegnalazioneInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUpdateManyWithoutFontiNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutFontiNestedInput
  }

  export type fontiUncheckedUpdateWithoutSegnalazioneInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutFontiNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutFontiNestedInput
  }

  export type segnalatoreUpsertWithoutSegnalazioneInput = {
    update: XOR<segnalatoreUpdateWithoutSegnalazioneInput, segnalatoreUncheckedUpdateWithoutSegnalazioneInput>
    create: XOR<segnalatoreCreateWithoutSegnalazioneInput, segnalatoreUncheckedCreateWithoutSegnalazioneInput>
  }

  export type segnalatoreUpdateWithoutSegnalazioneInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    nomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cognomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    emailSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cellulareSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    pecSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUpdateManyWithoutSegnalatoreNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutSegnalatoreNestedInput
  }

  export type segnalatoreUncheckedUpdateWithoutSegnalazioneInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    nomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cognomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    emailSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cellulareSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    pecSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutSegnalatoreNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutSegnalatoreNestedInput
  }

  export type segnalazione_geticoUpsertWithoutSegnalazioneInput = {
    update: XOR<segnalazione_geticoUpdateWithoutSegnalazioneInput, segnalazione_geticoUncheckedUpdateWithoutSegnalazioneInput>
    create: XOR<segnalazione_geticoCreateWithoutSegnalazioneInput, segnalazione_geticoUncheckedCreateWithoutSegnalazioneInput>
  }

  export type segnalazione_geticoUpdateWithoutSegnalazioneInput = {
    id_ticket?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_nome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_cognome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_email?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_telefono?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_ubicazione?: NullableStringFieldUpdateOperationsInput | string | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    flg_stato?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_quartiere?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInoltro?: NullableStringFieldUpdateOperationsInput | string | null
    ufficioProvenienza?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico2?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo2?: NullableStringFieldUpdateOperationsInput | string | null
    ufficio_inoltro?: NullableStringFieldUpdateOperationsInput | string | null
    json_uffici?: NullableStringFieldUpdateOperationsInput | string | null
    note_esito?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_note?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_effettuato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_importato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_catasto_json?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUpdateManyWithoutSegnalazione_geticoNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutSegnalazione_geticoNestedInput
  }

  export type segnalazione_geticoUncheckedUpdateWithoutSegnalazioneInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ticket?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_nome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_cognome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_email?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_telefono?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_ubicazione?: NullableStringFieldUpdateOperationsInput | string | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    flg_stato?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_quartiere?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInoltro?: NullableStringFieldUpdateOperationsInput | string | null
    ufficioProvenienza?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico2?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo2?: NullableStringFieldUpdateOperationsInput | string | null
    ufficio_inoltro?: NullableStringFieldUpdateOperationsInput | string | null
    json_uffici?: NullableStringFieldUpdateOperationsInput | string | null
    note_esito?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_note?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_effettuato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_importato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_catasto_json?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutSegnalazione_geticoNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutSegnalazione_geticoNestedInput
  }

  export type tecniciUpsertWithoutSegnalazioneInput = {
    update: XOR<tecniciUpdateWithoutSegnalazioneInput, tecniciUncheckedUpdateWithoutSegnalazioneInput>
    create: XOR<tecniciCreateWithoutSegnalazioneInput, tecniciUncheckedCreateWithoutSegnalazioneInput>
  }

  export type tecniciUpdateWithoutSegnalazioneInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutTecniciNestedInput
  }

  export type tecniciUncheckedUpdateWithoutSegnalazioneInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutTecniciNestedInput
  }

  export type tipoprovvedimentoUpsertWithoutSegnalazioneInput = {
    update: XOR<tipoprovvedimentoUpdateWithoutSegnalazioneInput, tipoprovvedimentoUncheckedUpdateWithoutSegnalazioneInput>
    create: XOR<tipoprovvedimentoCreateWithoutSegnalazioneInput, tipoprovvedimentoUncheckedCreateWithoutSegnalazioneInput>
  }

  export type tipoprovvedimentoUpdateWithoutSegnalazioneInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutTipoprovvedimentoNestedInput
  }

  export type tipoprovvedimentoUncheckedUpdateWithoutSegnalazioneInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutTipoprovvedimentoNestedInput
  }

  export type utentiUpsertWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput = {
    update: XOR<utentiUpdateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput, utentiUncheckedUpdateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput>
    create: XOR<utentiCreateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput>
  }

  export type utentiUpdateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type utentiUpsertWithoutSegnalazione_segnalazione_idUtenteToutentiInput = {
    update: XOR<utentiUpdateWithoutSegnalazione_segnalazione_idUtenteToutentiInput, utentiUncheckedUpdateWithoutSegnalazione_segnalazione_idUtenteToutentiInput>
    create: XOR<utentiCreateWithoutSegnalazione_segnalazione_idUtenteToutentiInput, utentiUncheckedCreateWithoutSegnalazione_segnalazione_idUtenteToutentiInput>
  }

  export type utentiUpdateWithoutSegnalazione_segnalazione_idUtenteToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutSegnalazione_segnalazione_idUtenteToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type tiposeveritaUpsertWithoutSegnalazioneInput = {
    update: XOR<tiposeveritaUpdateWithoutSegnalazioneInput, tiposeveritaUncheckedUpdateWithoutSegnalazioneInput>
    create: XOR<tiposeveritaCreateWithoutSegnalazioneInput, tiposeveritaUncheckedCreateWithoutSegnalazioneInput>
  }

  export type tiposeveritaUpdateWithoutSegnalazioneInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutTiposeveritaNestedInput
  }

  export type tiposeveritaUncheckedUpdateWithoutSegnalazioneInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutTiposeveritaNestedInput
  }

  export type tipoeventoUpsertWithoutSegnalazioneInput = {
    update: XOR<tipoeventoUpdateWithoutSegnalazioneInput, tipoeventoUncheckedUpdateWithoutSegnalazioneInput>
    create: XOR<tipoeventoCreateWithoutSegnalazioneInput, tipoeventoUncheckedCreateWithoutSegnalazioneInput>
  }

  export type tipoeventoUpdateWithoutSegnalazioneInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutTipoeventoNestedInput
  }

  export type tipoeventoUncheckedUpdateWithoutSegnalazioneInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutTipoeventoNestedInput
  }

  export type segnalazionestatostoricoUpsertWithWhereUniqueWithoutSegnalazioneInput = {
    where: segnalazionestatostoricoWhereUniqueInput
    update: XOR<segnalazionestatostoricoUpdateWithoutSegnalazioneInput, segnalazionestatostoricoUncheckedUpdateWithoutSegnalazioneInput>
    create: XOR<segnalazionestatostoricoCreateWithoutSegnalazioneInput, segnalazionestatostoricoUncheckedCreateWithoutSegnalazioneInput>
  }

  export type segnalazionestatostoricoUpdateWithWhereUniqueWithoutSegnalazioneInput = {
    where: segnalazionestatostoricoWhereUniqueInput
    data: XOR<segnalazionestatostoricoUpdateWithoutSegnalazioneInput, segnalazionestatostoricoUncheckedUpdateWithoutSegnalazioneInput>
  }

  export type segnalazionestatostoricoUpdateManyWithWhereWithoutSegnalazioneInput = {
    where: segnalazionestatostoricoScalarWhereInput
    data: XOR<segnalazionestatostoricoUpdateManyMutationInput, segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazionestatostoricoInput>
  }

  export type segnalazionestatostoricoScalarWhereInput = {
    AND?: Enumerable<segnalazionestatostoricoScalarWhereInput>
    OR?: Enumerable<segnalazionestatostoricoScalarWhereInput>
    NOT?: Enumerable<segnalazionestatostoricoScalarWhereInput>
    id?: IntFilter | number
    idAppalto?: IntNullableFilter | number | null
    idSegnalazione?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
    stato?: StringNullableFilter | string | null
    notaStato?: StringNullableFilter | string | null
  }

  export type registrorichiedenteCreateWithoutSegnalazione_geticoInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idSegnalazione?: number | null
    del?: string | null
    fonti?: fontiCreateNestedOneWithoutRegistrorichiedenteInput
    segnalatore?: segnalatoreCreateNestedOneWithoutRegistrorichiedenteInput
    utenti?: utentiCreateNestedOneWithoutRegistrorichiedenteInput
  }

  export type registrorichiedenteUncheckedCreateWithoutSegnalazione_geticoInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idUtente?: number | null
    idSegnalazione?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    del?: string | null
  }

  export type registrorichiedenteCreateOrConnectWithoutSegnalazione_geticoInput = {
    where: registrorichiedenteWhereUniqueInput
    create: XOR<registrorichiedenteCreateWithoutSegnalazione_geticoInput, registrorichiedenteUncheckedCreateWithoutSegnalazione_geticoInput>
  }

  export type registrorichiedenteCreateManySegnalazione_geticoInputEnvelope = {
    data: Enumerable<registrorichiedenteCreateManySegnalazione_geticoInput>
    skipDuplicates?: boolean
  }

  export type segnalazioneCreateWithoutSegnalazione_geticoInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    fonti?: fontiCreateNestedOneWithoutSegnalazioneInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazioneInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazioneInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    utenti_segnalazione_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazioneInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazioneInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateWithoutSegnalazione_geticoInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneCreateOrConnectWithoutSegnalazione_geticoInput = {
    where: segnalazioneWhereUniqueInput
    create: XOR<segnalazioneCreateWithoutSegnalazione_geticoInput, segnalazioneUncheckedCreateWithoutSegnalazione_geticoInput>
  }

  export type segnalazioneCreateManySegnalazione_geticoInputEnvelope = {
    data: Enumerable<segnalazioneCreateManySegnalazione_geticoInput>
    skipDuplicates?: boolean
  }

  export type segnalazionestoricoCreateWithoutSegnalazione_geticoInput = {
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    fonti?: fontiCreateNestedOneWithoutSegnalazionestoricoInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazionestoricoInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazionestoricoInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazionestoricoInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazionestoricoInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazionestoricoInput
  }

  export type segnalazionestoricoUncheckedCreateWithoutSegnalazione_geticoInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateOrConnectWithoutSegnalazione_geticoInput = {
    where: segnalazionestoricoWhereUniqueInput
    create: XOR<segnalazionestoricoCreateWithoutSegnalazione_geticoInput, segnalazionestoricoUncheckedCreateWithoutSegnalazione_geticoInput>
  }

  export type segnalazionestoricoCreateManySegnalazione_geticoInputEnvelope = {
    data: Enumerable<segnalazionestoricoCreateManySegnalazione_geticoInput>
    skipDuplicates?: boolean
  }

  export type registrorichiedenteUpsertWithWhereUniqueWithoutSegnalazione_geticoInput = {
    where: registrorichiedenteWhereUniqueInput
    update: XOR<registrorichiedenteUpdateWithoutSegnalazione_geticoInput, registrorichiedenteUncheckedUpdateWithoutSegnalazione_geticoInput>
    create: XOR<registrorichiedenteCreateWithoutSegnalazione_geticoInput, registrorichiedenteUncheckedCreateWithoutSegnalazione_geticoInput>
  }

  export type registrorichiedenteUpdateWithWhereUniqueWithoutSegnalazione_geticoInput = {
    where: registrorichiedenteWhereUniqueInput
    data: XOR<registrorichiedenteUpdateWithoutSegnalazione_geticoInput, registrorichiedenteUncheckedUpdateWithoutSegnalazione_geticoInput>
  }

  export type registrorichiedenteUpdateManyWithWhereWithoutSegnalazione_geticoInput = {
    where: registrorichiedenteScalarWhereInput
    data: XOR<registrorichiedenteUpdateManyMutationInput, registrorichiedenteUncheckedUpdateManyWithoutRegistrorichiedenteInput>
  }

  export type segnalazioneUpsertWithWhereUniqueWithoutSegnalazione_geticoInput = {
    where: segnalazioneWhereUniqueInput
    update: XOR<segnalazioneUpdateWithoutSegnalazione_geticoInput, segnalazioneUncheckedUpdateWithoutSegnalazione_geticoInput>
    create: XOR<segnalazioneCreateWithoutSegnalazione_geticoInput, segnalazioneUncheckedCreateWithoutSegnalazione_geticoInput>
  }

  export type segnalazioneUpdateWithWhereUniqueWithoutSegnalazione_geticoInput = {
    where: segnalazioneWhereUniqueInput
    data: XOR<segnalazioneUpdateWithoutSegnalazione_geticoInput, segnalazioneUncheckedUpdateWithoutSegnalazione_geticoInput>
  }

  export type segnalazioneUpdateManyWithWhereWithoutSegnalazione_geticoInput = {
    where: segnalazioneScalarWhereInput
    data: XOR<segnalazioneUpdateManyMutationInput, segnalazioneUncheckedUpdateManyWithoutSegnalazioneInput>
  }

  export type segnalazionestoricoUpsertWithWhereUniqueWithoutSegnalazione_geticoInput = {
    where: segnalazionestoricoWhereUniqueInput
    update: XOR<segnalazionestoricoUpdateWithoutSegnalazione_geticoInput, segnalazionestoricoUncheckedUpdateWithoutSegnalazione_geticoInput>
    create: XOR<segnalazionestoricoCreateWithoutSegnalazione_geticoInput, segnalazionestoricoUncheckedCreateWithoutSegnalazione_geticoInput>
  }

  export type segnalazionestoricoUpdateWithWhereUniqueWithoutSegnalazione_geticoInput = {
    where: segnalazionestoricoWhereUniqueInput
    data: XOR<segnalazionestoricoUpdateWithoutSegnalazione_geticoInput, segnalazionestoricoUncheckedUpdateWithoutSegnalazione_geticoInput>
  }

  export type segnalazionestoricoUpdateManyWithWhereWithoutSegnalazione_geticoInput = {
    where: segnalazionestoricoScalarWhereInput
    data: XOR<segnalazionestoricoUpdateManyMutationInput, segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestoricoInput>
  }

  export type segnalazioneCreateWithoutSegnalazionestatostoricoInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    fonti?: fontiCreateNestedOneWithoutSegnalazioneInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazioneInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazioneInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    utenti_segnalazione_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazioneInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateWithoutSegnalazionestatostoricoInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazioneCreateOrConnectWithoutSegnalazionestatostoricoInput = {
    where: segnalazioneWhereUniqueInput
    create: XOR<segnalazioneCreateWithoutSegnalazionestatostoricoInput, segnalazioneUncheckedCreateWithoutSegnalazionestatostoricoInput>
  }

  export type utentiCreateWithoutSegnalazionestatostoricoInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutSegnalazionestatostoricoInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutSegnalazionestatostoricoInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutSegnalazionestatostoricoInput, utentiUncheckedCreateWithoutSegnalazionestatostoricoInput>
  }

  export type segnalazioneUpsertWithoutSegnalazionestatostoricoInput = {
    update: XOR<segnalazioneUpdateWithoutSegnalazionestatostoricoInput, segnalazioneUncheckedUpdateWithoutSegnalazionestatostoricoInput>
    create: XOR<segnalazioneCreateWithoutSegnalazionestatostoricoInput, segnalazioneUncheckedCreateWithoutSegnalazionestatostoricoInput>
  }

  export type segnalazioneUpdateWithoutSegnalazionestatostoricoInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazioneNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazioneNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazioneNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput
    utenti_segnalazione_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazioneNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateWithoutSegnalazionestatostoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type utentiUpsertWithoutSegnalazionestatostoricoInput = {
    update: XOR<utentiUpdateWithoutSegnalazionestatostoricoInput, utentiUncheckedUpdateWithoutSegnalazionestatostoricoInput>
    create: XOR<utentiCreateWithoutSegnalazionestatostoricoInput, utentiUncheckedCreateWithoutSegnalazionestatostoricoInput>
  }

  export type utentiUpdateWithoutSegnalazionestatostoricoInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutSegnalazionestatostoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type categoriaanomaliaCreateWithoutSegnalazionestoricoInput = {
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutCategoriaanomaliaInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaUncheckedCreateWithoutSegnalazionestoricoInput = {
    id?: number
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaCreateOrConnectWithoutSegnalazionestoricoInput = {
    where: categoriaanomaliaWhereUniqueInput
    create: XOR<categoriaanomaliaCreateWithoutSegnalazionestoricoInput, categoriaanomaliaUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type sottocategoriaanomaliaCreateWithoutSegnalazionestoricoInput = {
    value?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazione?: segnalazioneCreateNestedManyWithoutSottocategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategoriaanomaliaInput
  }

  export type sottocategoriaanomaliaUncheckedCreateWithoutSegnalazionestoricoInput = {
    id?: number
    value?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
  }

  export type sottocategoriaanomaliaCreateOrConnectWithoutSegnalazionestoricoInput = {
    where: sottocategoriaanomaliaWhereUniqueInput
    create: XOR<sottocategoriaanomaliaCreateWithoutSegnalazionestoricoInput, sottocategoriaanomaliaUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type fontiCreateWithoutSegnalazionestoricoInput = {
    value?: string | null
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutFontiInput
    segnalazione?: segnalazioneCreateNestedManyWithoutFontiInput
  }

  export type fontiUncheckedCreateWithoutSegnalazionestoricoInput = {
    id?: number
    value?: string | null
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutFontiInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutFontiInput
  }

  export type fontiCreateOrConnectWithoutSegnalazionestoricoInput = {
    where: fontiWhereUniqueInput
    create: XOR<fontiCreateWithoutSegnalazionestoricoInput, fontiUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type segnalatoreCreateWithoutSegnalazionestoricoInput = {
    idAppalto?: number | null
    tipoSegnalatore?: number | null
    nomeSegnalatore?: string | null
    cognomeSegnalatore?: string | null
    telefonoSegnalatore?: string | null
    emailSegnalatore?: string | null
    cellulareSegnalatore?: string | null
    pecSegnalatore?: string | null
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutSegnalatoreInput
    segnalazione?: segnalazioneCreateNestedManyWithoutSegnalatoreInput
  }

  export type segnalatoreUncheckedCreateWithoutSegnalazionestoricoInput = {
    id?: number
    idAppalto?: number | null
    tipoSegnalatore?: number | null
    nomeSegnalatore?: string | null
    cognomeSegnalatore?: string | null
    telefonoSegnalatore?: string | null
    emailSegnalatore?: string | null
    cellulareSegnalatore?: string | null
    pecSegnalatore?: string | null
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutSegnalatoreInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutSegnalatoreInput
  }

  export type segnalatoreCreateOrConnectWithoutSegnalazionestoricoInput = {
    where: segnalatoreWhereUniqueInput
    create: XOR<segnalatoreCreateWithoutSegnalazionestoricoInput, segnalatoreUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type segnalazione_geticoCreateWithoutSegnalazionestoricoInput = {
    id_ticket?: string | null
    segnalante_nome?: string | null
    segnalante_cognome?: string | null
    segnalante_email?: string | null
    segnalante_telefono?: string | null
    luogo_indirizzo?: string | null
    luogo_civico?: string | null
    luogo_ubicazione?: string | null
    descrizione?: string | null
    tipologia?: string | null
    flg_stato?: string | null
    luogo_quartiere?: string | null
    dataRichiesta?: string | null
    dataInoltro?: string | null
    ufficioProvenienza?: string | null
    luogo_civico2?: string | null
    luogo_indirizzo2?: string | null
    ufficio_inoltro?: string | null
    json_uffici?: string | null
    note_esito?: string | null
    sopralluogo?: string | null
    sopralluogo_note?: string | null
    sopralluogo_effettuato?: string | null
    sopralluogo_importato?: string | null
    sopralluogo_catasto_json?: string | null
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutSegnalazione_geticoInput
    segnalazione?: segnalazioneCreateNestedManyWithoutSegnalazione_geticoInput
  }

  export type segnalazione_geticoUncheckedCreateWithoutSegnalazionestoricoInput = {
    id?: number
    id_ticket?: string | null
    segnalante_nome?: string | null
    segnalante_cognome?: string | null
    segnalante_email?: string | null
    segnalante_telefono?: string | null
    luogo_indirizzo?: string | null
    luogo_civico?: string | null
    luogo_ubicazione?: string | null
    descrizione?: string | null
    tipologia?: string | null
    flg_stato?: string | null
    luogo_quartiere?: string | null
    dataRichiesta?: string | null
    dataInoltro?: string | null
    ufficioProvenienza?: string | null
    luogo_civico2?: string | null
    luogo_indirizzo2?: string | null
    ufficio_inoltro?: string | null
    json_uffici?: string | null
    note_esito?: string | null
    sopralluogo?: string | null
    sopralluogo_note?: string | null
    sopralluogo_effettuato?: string | null
    sopralluogo_importato?: string | null
    sopralluogo_catasto_json?: string | null
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutSegnalazione_geticoInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutSegnalazione_geticoInput
  }

  export type segnalazione_geticoCreateOrConnectWithoutSegnalazionestoricoInput = {
    where: segnalazione_geticoWhereUniqueInput
    create: XOR<segnalazione_geticoCreateWithoutSegnalazionestoricoInput, segnalazione_geticoUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type tecniciCreateWithoutSegnalazionestoricoInput = {
    value?: string | null
    segnalazione?: segnalazioneCreateNestedManyWithoutTecniciInput
  }

  export type tecniciUncheckedCreateWithoutSegnalazionestoricoInput = {
    id?: number
    value?: string | null
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutTecniciInput
  }

  export type tecniciCreateOrConnectWithoutSegnalazionestoricoInput = {
    where: tecniciWhereUniqueInput
    create: XOR<tecniciCreateWithoutSegnalazionestoricoInput, tecniciUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type tipoprovvedimentoCreateWithoutSegnalazionestoricoInput = {
    value?: string | null
    segnalazione?: segnalazioneCreateNestedManyWithoutTipoprovvedimentoInput
  }

  export type tipoprovvedimentoUncheckedCreateWithoutSegnalazionestoricoInput = {
    id?: number
    value?: string | null
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutTipoprovvedimentoInput
  }

  export type tipoprovvedimentoCreateOrConnectWithoutSegnalazionestoricoInput = {
    where: tipoprovvedimentoWhereUniqueInput
    create: XOR<tipoprovvedimentoCreateWithoutSegnalazionestoricoInput, tipoprovvedimentoUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type utentiCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteToutentiInput
  }

  export type utentiCreateOrConnectWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput>
  }

  export type utentiCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput = {
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaCreateNestedManyWithoutUtentiInput
    pratica?: praticaCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
    gruppo?: gruppoCreateNestedOneWithoutUtentiInput
  }

  export type utentiUncheckedCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    idGruppo?: number | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
    catastoanomalia?: catastoanomaliaUncheckedCreateNestedManyWithoutUtentiInput
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutUtentiInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteStatoToutentiInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedCreateNestedManyWithoutUtenti_lavoro_idUtenteToutentiInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedCreateNestedManyWithoutUtenti_lavorostorico_idUtenteToutentiInput
    livelliservizio?: livelliservizioUncheckedCreateNestedManyWithoutUtentiInput
    oggettocivetta?: oggettocivettaUncheckedCreateNestedManyWithoutUtentiInput
    pratica?: praticaUncheckedCreateNestedManyWithoutUtentiInput
    praticastorico?: praticastoricoUncheckedCreateNestedManyWithoutUtentiInput
    registrorichiedente?: registrorichiedenteUncheckedCreateNestedManyWithoutUtentiInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteStatoToutentiInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedCreateNestedManyWithoutUtenti_segnalazione_idUtenteToutentiInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutUtentiInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedCreateNestedManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput
  }

  export type utentiCreateOrConnectWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput = {
    where: utentiWhereUniqueInput
    create: XOR<utentiCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput, utentiUncheckedCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput>
  }

  export type tiposeveritaCreateWithoutSegnalazionestoricoInput = {
    value?: string | null
    segnalazione?: segnalazioneCreateNestedManyWithoutTiposeveritaInput
  }

  export type tiposeveritaUncheckedCreateWithoutSegnalazionestoricoInput = {
    id?: number
    value?: string | null
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutTiposeveritaInput
  }

  export type tiposeveritaCreateOrConnectWithoutSegnalazionestoricoInput = {
    where: tiposeveritaWhereUniqueInput
    create: XOR<tiposeveritaCreateWithoutSegnalazionestoricoInput, tiposeveritaUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type tipoeventoCreateWithoutSegnalazionestoricoInput = {
    value?: string | null
    segnalazione?: segnalazioneCreateNestedManyWithoutTipoeventoInput
  }

  export type tipoeventoUncheckedCreateWithoutSegnalazionestoricoInput = {
    id?: number
    value?: string | null
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutTipoeventoInput
  }

  export type tipoeventoCreateOrConnectWithoutSegnalazionestoricoInput = {
    where: tipoeventoWhereUniqueInput
    create: XOR<tipoeventoCreateWithoutSegnalazionestoricoInput, tipoeventoUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type categoriaanomaliaUpsertWithoutSegnalazionestoricoInput = {
    update: XOR<categoriaanomaliaUpdateWithoutSegnalazionestoricoInput, categoriaanomaliaUncheckedUpdateWithoutSegnalazionestoricoInput>
    create: XOR<categoriaanomaliaCreateWithoutSegnalazionestoricoInput, categoriaanomaliaUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type categoriaanomaliaUpdateWithoutSegnalazionestoricoInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutCategoriaanomaliaNestedInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type categoriaanomaliaUncheckedUpdateWithoutSegnalazionestoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type sottocategoriaanomaliaUpsertWithoutSegnalazionestoricoInput = {
    update: XOR<sottocategoriaanomaliaUpdateWithoutSegnalazionestoricoInput, sottocategoriaanomaliaUncheckedUpdateWithoutSegnalazionestoricoInput>
    create: XOR<sottocategoriaanomaliaCreateWithoutSegnalazionestoricoInput, sottocategoriaanomaliaUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type sottocategoriaanomaliaUpdateWithoutSegnalazionestoricoInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutSottocategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategoriaanomaliaNestedInput
  }

  export type sottocategoriaanomaliaUncheckedUpdateWithoutSegnalazionestoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
    sottocategoriaanomalia_sottocategorialavoro?: sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
  }

  export type fontiUpsertWithoutSegnalazionestoricoInput = {
    update: XOR<fontiUpdateWithoutSegnalazionestoricoInput, fontiUncheckedUpdateWithoutSegnalazionestoricoInput>
    create: XOR<fontiCreateWithoutSegnalazionestoricoInput, fontiUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type fontiUpdateWithoutSegnalazionestoricoInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUpdateManyWithoutFontiNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutFontiNestedInput
  }

  export type fontiUncheckedUpdateWithoutSegnalazionestoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutFontiNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutFontiNestedInput
  }

  export type segnalatoreUpsertWithoutSegnalazionestoricoInput = {
    update: XOR<segnalatoreUpdateWithoutSegnalazionestoricoInput, segnalatoreUncheckedUpdateWithoutSegnalazionestoricoInput>
    create: XOR<segnalatoreCreateWithoutSegnalazionestoricoInput, segnalatoreUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type segnalatoreUpdateWithoutSegnalazionestoricoInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    nomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cognomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    emailSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cellulareSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    pecSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUpdateManyWithoutSegnalatoreNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutSegnalatoreNestedInput
  }

  export type segnalatoreUncheckedUpdateWithoutSegnalazionestoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    tipoSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    nomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cognomeSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    emailSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    cellulareSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    pecSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutSegnalatoreNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutSegnalatoreNestedInput
  }

  export type segnalazione_geticoUpsertWithoutSegnalazionestoricoInput = {
    update: XOR<segnalazione_geticoUpdateWithoutSegnalazionestoricoInput, segnalazione_geticoUncheckedUpdateWithoutSegnalazionestoricoInput>
    create: XOR<segnalazione_geticoCreateWithoutSegnalazionestoricoInput, segnalazione_geticoUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type segnalazione_geticoUpdateWithoutSegnalazionestoricoInput = {
    id_ticket?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_nome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_cognome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_email?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_telefono?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_ubicazione?: NullableStringFieldUpdateOperationsInput | string | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    flg_stato?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_quartiere?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInoltro?: NullableStringFieldUpdateOperationsInput | string | null
    ufficioProvenienza?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico2?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo2?: NullableStringFieldUpdateOperationsInput | string | null
    ufficio_inoltro?: NullableStringFieldUpdateOperationsInput | string | null
    json_uffici?: NullableStringFieldUpdateOperationsInput | string | null
    note_esito?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_note?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_effettuato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_importato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_catasto_json?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUpdateManyWithoutSegnalazione_geticoNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutSegnalazione_geticoNestedInput
  }

  export type segnalazione_geticoUncheckedUpdateWithoutSegnalazionestoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_ticket?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_nome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_cognome?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_email?: NullableStringFieldUpdateOperationsInput | string | null
    segnalante_telefono?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_ubicazione?: NullableStringFieldUpdateOperationsInput | string | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    tipologia?: NullableStringFieldUpdateOperationsInput | string | null
    flg_stato?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_quartiere?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInoltro?: NullableStringFieldUpdateOperationsInput | string | null
    ufficioProvenienza?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_civico2?: NullableStringFieldUpdateOperationsInput | string | null
    luogo_indirizzo2?: NullableStringFieldUpdateOperationsInput | string | null
    ufficio_inoltro?: NullableStringFieldUpdateOperationsInput | string | null
    json_uffici?: NullableStringFieldUpdateOperationsInput | string | null
    note_esito?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_note?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_effettuato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_importato?: NullableStringFieldUpdateOperationsInput | string | null
    sopralluogo_catasto_json?: NullableStringFieldUpdateOperationsInput | string | null
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutSegnalazione_geticoNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutSegnalazione_geticoNestedInput
  }

  export type tecniciUpsertWithoutSegnalazionestoricoInput = {
    update: XOR<tecniciUpdateWithoutSegnalazionestoricoInput, tecniciUncheckedUpdateWithoutSegnalazionestoricoInput>
    create: XOR<tecniciCreateWithoutSegnalazionestoricoInput, tecniciUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type tecniciUpdateWithoutSegnalazionestoricoInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateManyWithoutTecniciNestedInput
  }

  export type tecniciUncheckedUpdateWithoutSegnalazionestoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutTecniciNestedInput
  }

  export type tipoprovvedimentoUpsertWithoutSegnalazionestoricoInput = {
    update: XOR<tipoprovvedimentoUpdateWithoutSegnalazionestoricoInput, tipoprovvedimentoUncheckedUpdateWithoutSegnalazionestoricoInput>
    create: XOR<tipoprovvedimentoCreateWithoutSegnalazionestoricoInput, tipoprovvedimentoUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type tipoprovvedimentoUpdateWithoutSegnalazionestoricoInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateManyWithoutTipoprovvedimentoNestedInput
  }

  export type tipoprovvedimentoUncheckedUpdateWithoutSegnalazionestoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutTipoprovvedimentoNestedInput
  }

  export type utentiUpsertWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput = {
    update: XOR<utentiUpdateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput, utentiUncheckedUpdateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput>
    create: XOR<utentiCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput, utentiUncheckedCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput>
  }

  export type utentiUpdateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type utentiUpsertWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput = {
    update: XOR<utentiUpdateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput, utentiUncheckedUpdateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput>
    create: XOR<utentiCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput, utentiUncheckedCreateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput>
  }

  export type utentiUpdateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    gruppo?: gruppoUpdateOneWithoutUtentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    idGruppo?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
  }

  export type tiposeveritaUpsertWithoutSegnalazionestoricoInput = {
    update: XOR<tiposeveritaUpdateWithoutSegnalazionestoricoInput, tiposeveritaUncheckedUpdateWithoutSegnalazionestoricoInput>
    create: XOR<tiposeveritaCreateWithoutSegnalazionestoricoInput, tiposeveritaUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type tiposeveritaUpdateWithoutSegnalazionestoricoInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateManyWithoutTiposeveritaNestedInput
  }

  export type tiposeveritaUncheckedUpdateWithoutSegnalazionestoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutTiposeveritaNestedInput
  }

  export type tipoeventoUpsertWithoutSegnalazionestoricoInput = {
    update: XOR<tipoeventoUpdateWithoutSegnalazionestoricoInput, tipoeventoUncheckedUpdateWithoutSegnalazionestoricoInput>
    create: XOR<tipoeventoCreateWithoutSegnalazionestoricoInput, tipoeventoUncheckedCreateWithoutSegnalazionestoricoInput>
  }

  export type tipoeventoUpdateWithoutSegnalazionestoricoInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateManyWithoutTipoeventoNestedInput
  }

  export type tipoeventoUncheckedUpdateWithoutSegnalazionestoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutTipoeventoNestedInput
  }

  export type categoriaanomalia_sottocategoriaanomaliaCreateWithoutSottocategoriaanomaliaInput = {
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutCategoriaanomalia_sottocategoriaanomaliaInput
  }

  export type categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutSottocategoriaanomaliaInput = {
    id?: number
    id_categoria_anomalia?: number | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaCreateOrConnectWithoutSottocategoriaanomaliaInput = {
    where: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    create: XOR<categoriaanomalia_sottocategoriaanomaliaCreateWithoutSottocategoriaanomaliaInput, categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutSottocategoriaanomaliaInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaCreateManySottocategoriaanomaliaInputEnvelope = {
    data: Enumerable<categoriaanomalia_sottocategoriaanomaliaCreateManySottocategoriaanomaliaInput>
    skipDuplicates?: boolean
  }

  export type segnalazioneCreateWithoutSottocategoriaanomaliaInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    fonti?: fontiCreateNestedOneWithoutSegnalazioneInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazioneInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazioneInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    utenti_segnalazione_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazioneInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazioneInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateWithoutSottocategoriaanomaliaInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneCreateOrConnectWithoutSottocategoriaanomaliaInput = {
    where: segnalazioneWhereUniqueInput
    create: XOR<segnalazioneCreateWithoutSottocategoriaanomaliaInput, segnalazioneUncheckedCreateWithoutSottocategoriaanomaliaInput>
  }

  export type segnalazioneCreateManySottocategoriaanomaliaInputEnvelope = {
    data: Enumerable<segnalazioneCreateManySottocategoriaanomaliaInput>
    skipDuplicates?: boolean
  }

  export type segnalazionestoricoCreateWithoutSottocategoriaanomaliaInput = {
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    fonti?: fontiCreateNestedOneWithoutSegnalazionestoricoInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazionestoricoInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazionestoricoInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazionestoricoInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazionestoricoInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazionestoricoInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazionestoricoInput
  }

  export type segnalazionestoricoUncheckedCreateWithoutSottocategoriaanomaliaInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateOrConnectWithoutSottocategoriaanomaliaInput = {
    where: segnalazionestoricoWhereUniqueInput
    create: XOR<segnalazionestoricoCreateWithoutSottocategoriaanomaliaInput, segnalazionestoricoUncheckedCreateWithoutSottocategoriaanomaliaInput>
  }

  export type segnalazionestoricoCreateManySottocategoriaanomaliaInputEnvelope = {
    data: Enumerable<segnalazionestoricoCreateManySottocategoriaanomaliaInput>
    skipDuplicates?: boolean
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategoriaanomaliaInput = {
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSottocategoriaanomalia_sottocategorialavoroInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutSottocategoriaanomalia_sottocategorialavoroInput
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategoriaanomaliaInput = {
    id?: number
    id_categoria_anomalia?: number | null
    id_sottocategoria_lavoro?: number | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategoriaanomaliaInput = {
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    create: XOR<sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategoriaanomaliaInput, sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategoriaanomaliaInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateManySottocategoriaanomaliaInputEnvelope = {
    data: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateManySottocategoriaanomaliaInput>
    skipDuplicates?: boolean
  }

  export type categoriaanomalia_sottocategoriaanomaliaUpsertWithWhereUniqueWithoutSottocategoriaanomaliaInput = {
    where: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    update: XOR<categoriaanomalia_sottocategoriaanomaliaUpdateWithoutSottocategoriaanomaliaInput, categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateWithoutSottocategoriaanomaliaInput>
    create: XOR<categoriaanomalia_sottocategoriaanomaliaCreateWithoutSottocategoriaanomaliaInput, categoriaanomalia_sottocategoriaanomaliaUncheckedCreateWithoutSottocategoriaanomaliaInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaUpdateWithWhereUniqueWithoutSottocategoriaanomaliaInput = {
    where: categoriaanomalia_sottocategoriaanomaliaWhereUniqueInput
    data: XOR<categoriaanomalia_sottocategoriaanomaliaUpdateWithoutSottocategoriaanomaliaInput, categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateWithoutSottocategoriaanomaliaInput>
  }

  export type categoriaanomalia_sottocategoriaanomaliaUpdateManyWithWhereWithoutSottocategoriaanomaliaInput = {
    where: categoriaanomalia_sottocategoriaanomaliaScalarWhereInput
    data: XOR<categoriaanomalia_sottocategoriaanomaliaUpdateManyMutationInput, categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutCategoriaanomalia_sottocategoriaanomaliaInput>
  }

  export type segnalazioneUpsertWithWhereUniqueWithoutSottocategoriaanomaliaInput = {
    where: segnalazioneWhereUniqueInput
    update: XOR<segnalazioneUpdateWithoutSottocategoriaanomaliaInput, segnalazioneUncheckedUpdateWithoutSottocategoriaanomaliaInput>
    create: XOR<segnalazioneCreateWithoutSottocategoriaanomaliaInput, segnalazioneUncheckedCreateWithoutSottocategoriaanomaliaInput>
  }

  export type segnalazioneUpdateWithWhereUniqueWithoutSottocategoriaanomaliaInput = {
    where: segnalazioneWhereUniqueInput
    data: XOR<segnalazioneUpdateWithoutSottocategoriaanomaliaInput, segnalazioneUncheckedUpdateWithoutSottocategoriaanomaliaInput>
  }

  export type segnalazioneUpdateManyWithWhereWithoutSottocategoriaanomaliaInput = {
    where: segnalazioneScalarWhereInput
    data: XOR<segnalazioneUpdateManyMutationInput, segnalazioneUncheckedUpdateManyWithoutSegnalazioneInput>
  }

  export type segnalazionestoricoUpsertWithWhereUniqueWithoutSottocategoriaanomaliaInput = {
    where: segnalazionestoricoWhereUniqueInput
    update: XOR<segnalazionestoricoUpdateWithoutSottocategoriaanomaliaInput, segnalazionestoricoUncheckedUpdateWithoutSottocategoriaanomaliaInput>
    create: XOR<segnalazionestoricoCreateWithoutSottocategoriaanomaliaInput, segnalazionestoricoUncheckedCreateWithoutSottocategoriaanomaliaInput>
  }

  export type segnalazionestoricoUpdateWithWhereUniqueWithoutSottocategoriaanomaliaInput = {
    where: segnalazionestoricoWhereUniqueInput
    data: XOR<segnalazionestoricoUpdateWithoutSottocategoriaanomaliaInput, segnalazionestoricoUncheckedUpdateWithoutSottocategoriaanomaliaInput>
  }

  export type segnalazionestoricoUpdateManyWithWhereWithoutSottocategoriaanomaliaInput = {
    where: segnalazionestoricoScalarWhereInput
    data: XOR<segnalazionestoricoUpdateManyMutationInput, segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestoricoInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutSottocategoriaanomaliaInput = {
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    update: XOR<sottocategoriaanomalia_sottocategorialavoroUpdateWithoutSottocategoriaanomaliaInput, sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutSottocategoriaanomaliaInput>
    create: XOR<sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategoriaanomaliaInput, sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategoriaanomaliaInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutSottocategoriaanomaliaInput = {
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    data: XOR<sottocategoriaanomalia_sottocategorialavoroUpdateWithoutSottocategoriaanomaliaInput, sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutSottocategoriaanomaliaInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutSottocategoriaanomaliaInput = {
    where: sottocategoriaanomalia_sottocategorialavoroScalarWhereInput
    data: XOR<sottocategoriaanomalia_sottocategorialavoroUpdateManyMutationInput, sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategoriaanomalia_sottocategorialavoroInput>
  }

  export type categoriaanomaliaCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutCategoriaanomaliaInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    id?: number
    value?: string | null
    tabellaNome?: string | null
    modalitaInserimento?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavoro?: lavoroUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutCategoriaanomaliaInput
  }

  export type categoriaanomaliaCreateOrConnectWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    where: categoriaanomaliaWhereUniqueInput
    create: XOR<categoriaanomaliaCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput, categoriaanomaliaUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
  }

  export type sottocategoriaanomaliaCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    value?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazione?: segnalazioneCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoCreateNestedManyWithoutSottocategoriaanomaliaInput
  }

  export type sottocategoriaanomaliaUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    id?: number
    value?: string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazione?: segnalazioneUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
    segnalazionestorico?: segnalazionestoricoUncheckedCreateNestedManyWithoutSottocategoriaanomaliaInput
  }

  export type sottocategoriaanomaliaCreateOrConnectWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    where: sottocategoriaanomaliaWhereUniqueInput
    create: XOR<sottocategoriaanomaliaCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput, sottocategoriaanomaliaUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
  }

  export type sottocategorialavoroCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    value?: string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroCreateNestedManyWithoutSottocategorialavoroInput
    lavoro?: lavoroCreateNestedManyWithoutSottocategorialavoroInput
    lavorostorico?: lavorostoricoCreateNestedManyWithoutSottocategorialavoroInput
  }

  export type sottocategorialavoroUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    id?: number
    value?: string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput
    lavoro?: lavoroUncheckedCreateNestedManyWithoutSottocategorialavoroInput
    lavorostorico?: lavorostoricoUncheckedCreateNestedManyWithoutSottocategorialavoroInput
  }

  export type sottocategorialavoroCreateOrConnectWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    where: sottocategorialavoroWhereUniqueInput
    create: XOR<sottocategorialavoroCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput, sottocategorialavoroUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
  }

  export type categoriaanomaliaUpsertWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    update: XOR<categoriaanomaliaUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput, categoriaanomaliaUncheckedUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
    create: XOR<categoriaanomaliaCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput, categoriaanomaliaUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
  }

  export type categoriaanomaliaUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutCategoriaanomaliaNestedInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type categoriaanomaliaUncheckedUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    tabellaNome?: NullableStringFieldUpdateOperationsInput | string | null
    modalitaInserimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavoro?: lavoroUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutCategoriaanomaliaNestedInput
  }

  export type sottocategoriaanomaliaUpsertWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    update: XOR<sottocategoriaanomaliaUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput, sottocategoriaanomaliaUncheckedUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
    create: XOR<sottocategoriaanomaliaCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput, sottocategoriaanomaliaUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
  }

  export type sottocategoriaanomaliaUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUpdateManyWithoutSottocategoriaanomaliaNestedInput
  }

  export type sottocategoriaanomaliaUncheckedUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategoriaanomalia?: categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazione?: segnalazioneUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
    segnalazionestorico?: segnalazionestoricoUncheckedUpdateManyWithoutSottocategoriaanomaliaNestedInput
  }

  export type sottocategorialavoroUpsertWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    update: XOR<sottocategorialavoroUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput, sottocategorialavoroUncheckedUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
    create: XOR<sottocategorialavoroCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput, sottocategorialavoroUncheckedCreateWithoutSottocategoriaanomalia_sottocategorialavoroInput>
  }

  export type sottocategorialavoroUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUpdateManyWithoutSottocategorialavoroNestedInput
    lavoro?: lavoroUpdateManyWithoutSottocategorialavoroNestedInput
    lavorostorico?: lavorostoricoUpdateManyWithoutSottocategorialavoroNestedInput
  }

  export type sottocategorialavoroUncheckedUpdateWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia_sottocategorialavoro?: categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
    lavoro?: lavoroUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
    lavorostorico?: lavorostoricoUncheckedUpdateManyWithoutSottocategorialavoroNestedInput
  }

  export type categoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput = {
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutCategoriaanomalia_sottocategorialavoroInput
  }

  export type categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput = {
    id?: number
    id_categoria_lavoro?: number | null
  }

  export type categoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategorialavoroInput = {
    where: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    create: XOR<categoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput, categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput>
  }

  export type categoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInputEnvelope = {
    data: Enumerable<categoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInput>
    skipDuplicates?: boolean
  }

  export type lavoroCreateWithoutSottocategorialavoroInput = {
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    catastolinker?: catastolinkerCreateNestedManyWithoutLavoroInput
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutLavoroInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteStatoToutentiInput
    utenti_lavoro_idUtenteToutenti?: utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteToutentiInput
    impresa?: impresaCreateNestedOneWithoutLavoroInput
  }

  export type lavoroUncheckedCreateWithoutSottocategorialavoroInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutLavoroInput
  }

  export type lavoroCreateOrConnectWithoutSottocategorialavoroInput = {
    where: lavoroWhereUniqueInput
    create: XOR<lavoroCreateWithoutSottocategorialavoroInput, lavoroUncheckedCreateWithoutSottocategorialavoroInput>
  }

  export type lavoroCreateManySottocategorialavoroInputEnvelope = {
    data: Enumerable<lavoroCreateManySottocategorialavoroInput>
    skipDuplicates?: boolean
  }

  export type lavorostoricoCreateWithoutSottocategorialavoroInput = {
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutLavorostoricoInput
    utenti_lavorostorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput
    utenti_lavorostorico_idUtenteToutenti?: utentiCreateNestedOneWithoutLavorostorico_lavorostorico_idUtenteToutentiInput
    impresa?: impresaCreateNestedOneWithoutLavorostoricoInput
  }

  export type lavorostoricoUncheckedCreateWithoutSottocategorialavoroInput = {
    id?: number
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
  }

  export type lavorostoricoCreateOrConnectWithoutSottocategorialavoroInput = {
    where: lavorostoricoWhereUniqueInput
    create: XOR<lavorostoricoCreateWithoutSottocategorialavoroInput, lavorostoricoUncheckedCreateWithoutSottocategorialavoroInput>
  }

  export type lavorostoricoCreateManySottocategorialavoroInputEnvelope = {
    data: Enumerable<lavorostoricoCreateManySottocategorialavoroInput>
    skipDuplicates?: boolean
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput = {
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSottocategoriaanomalia_sottocategorialavoroInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSottocategoriaanomalia_sottocategorialavoroInput
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput = {
    id?: number
    id_categoria_anomalia?: number | null
    id_sottocategoria_anomalia?: number | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateOrConnectWithoutSottocategorialavoroInput = {
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    create: XOR<sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput, sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInputEnvelope = {
    data: Enumerable<sottocategoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInput>
    skipDuplicates?: boolean
  }

  export type categoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutSottocategorialavoroInput = {
    where: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    update: XOR<categoriaanomalia_sottocategorialavoroUpdateWithoutSottocategorialavoroInput, categoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutSottocategorialavoroInput>
    create: XOR<categoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput, categoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput>
  }

  export type categoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutSottocategorialavoroInput = {
    where: categoriaanomalia_sottocategorialavoroWhereUniqueInput
    data: XOR<categoriaanomalia_sottocategorialavoroUpdateWithoutSottocategorialavoroInput, categoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutSottocategorialavoroInput>
  }

  export type categoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutSottocategorialavoroInput = {
    where: categoriaanomalia_sottocategorialavoroScalarWhereInput
    data: XOR<categoriaanomalia_sottocategorialavoroUpdateManyMutationInput, categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomalia_sottocategorialavoroInput>
  }

  export type lavoroUpsertWithWhereUniqueWithoutSottocategorialavoroInput = {
    where: lavoroWhereUniqueInput
    update: XOR<lavoroUpdateWithoutSottocategorialavoroInput, lavoroUncheckedUpdateWithoutSottocategorialavoroInput>
    create: XOR<lavoroCreateWithoutSottocategorialavoroInput, lavoroUncheckedCreateWithoutSottocategorialavoroInput>
  }

  export type lavoroUpdateWithWhereUniqueWithoutSottocategorialavoroInput = {
    where: lavoroWhereUniqueInput
    data: XOR<lavoroUpdateWithoutSottocategorialavoroInput, lavoroUncheckedUpdateWithoutSottocategorialavoroInput>
  }

  export type lavoroUpdateManyWithWhereWithoutSottocategorialavoroInput = {
    where: lavoroScalarWhereInput
    data: XOR<lavoroUpdateManyMutationInput, lavoroUncheckedUpdateManyWithoutLavoroInput>
  }

  export type lavorostoricoUpsertWithWhereUniqueWithoutSottocategorialavoroInput = {
    where: lavorostoricoWhereUniqueInput
    update: XOR<lavorostoricoUpdateWithoutSottocategorialavoroInput, lavorostoricoUncheckedUpdateWithoutSottocategorialavoroInput>
    create: XOR<lavorostoricoCreateWithoutSottocategorialavoroInput, lavorostoricoUncheckedCreateWithoutSottocategorialavoroInput>
  }

  export type lavorostoricoUpdateWithWhereUniqueWithoutSottocategorialavoroInput = {
    where: lavorostoricoWhereUniqueInput
    data: XOR<lavorostoricoUpdateWithoutSottocategorialavoroInput, lavorostoricoUncheckedUpdateWithoutSottocategorialavoroInput>
  }

  export type lavorostoricoUpdateManyWithWhereWithoutSottocategorialavoroInput = {
    where: lavorostoricoScalarWhereInput
    data: XOR<lavorostoricoUpdateManyMutationInput, lavorostoricoUncheckedUpdateManyWithoutLavorostoricoInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpsertWithWhereUniqueWithoutSottocategorialavoroInput = {
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    update: XOR<sottocategoriaanomalia_sottocategorialavoroUpdateWithoutSottocategorialavoroInput, sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutSottocategorialavoroInput>
    create: XOR<sottocategoriaanomalia_sottocategorialavoroCreateWithoutSottocategorialavoroInput, sottocategoriaanomalia_sottocategorialavoroUncheckedCreateWithoutSottocategorialavoroInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateWithWhereUniqueWithoutSottocategorialavoroInput = {
    where: sottocategoriaanomalia_sottocategorialavoroWhereUniqueInput
    data: XOR<sottocategoriaanomalia_sottocategorialavoroUpdateWithoutSottocategorialavoroInput, sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutSottocategorialavoroInput>
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateManyWithWhereWithoutSottocategorialavoroInput = {
    where: sottocategoriaanomalia_sottocategorialavoroScalarWhereInput
    data: XOR<sottocategoriaanomalia_sottocategorialavoroUpdateManyMutationInput, sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategoriaanomalia_sottocategorialavoroInput>
  }

  export type segnalazioneCreateWithoutTecniciInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    fonti?: fontiCreateNestedOneWithoutSegnalazioneInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazioneInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    utenti_segnalazione_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazioneInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazioneInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateWithoutTecniciInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneCreateOrConnectWithoutTecniciInput = {
    where: segnalazioneWhereUniqueInput
    create: XOR<segnalazioneCreateWithoutTecniciInput, segnalazioneUncheckedCreateWithoutTecniciInput>
  }

  export type segnalazioneCreateManyTecniciInputEnvelope = {
    data: Enumerable<segnalazioneCreateManyTecniciInput>
    skipDuplicates?: boolean
  }

  export type segnalazionestoricoCreateWithoutTecniciInput = {
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    fonti?: fontiCreateNestedOneWithoutSegnalazionestoricoInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazionestoricoInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazionestoricoInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazionestoricoInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazionestoricoInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazionestoricoInput
  }

  export type segnalazionestoricoUncheckedCreateWithoutTecniciInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateOrConnectWithoutTecniciInput = {
    where: segnalazionestoricoWhereUniqueInput
    create: XOR<segnalazionestoricoCreateWithoutTecniciInput, segnalazionestoricoUncheckedCreateWithoutTecniciInput>
  }

  export type segnalazionestoricoCreateManyTecniciInputEnvelope = {
    data: Enumerable<segnalazionestoricoCreateManyTecniciInput>
    skipDuplicates?: boolean
  }

  export type segnalazioneUpsertWithWhereUniqueWithoutTecniciInput = {
    where: segnalazioneWhereUniqueInput
    update: XOR<segnalazioneUpdateWithoutTecniciInput, segnalazioneUncheckedUpdateWithoutTecniciInput>
    create: XOR<segnalazioneCreateWithoutTecniciInput, segnalazioneUncheckedCreateWithoutTecniciInput>
  }

  export type segnalazioneUpdateWithWhereUniqueWithoutTecniciInput = {
    where: segnalazioneWhereUniqueInput
    data: XOR<segnalazioneUpdateWithoutTecniciInput, segnalazioneUncheckedUpdateWithoutTecniciInput>
  }

  export type segnalazioneUpdateManyWithWhereWithoutTecniciInput = {
    where: segnalazioneScalarWhereInput
    data: XOR<segnalazioneUpdateManyMutationInput, segnalazioneUncheckedUpdateManyWithoutSegnalazioneInput>
  }

  export type segnalazionestoricoUpsertWithWhereUniqueWithoutTecniciInput = {
    where: segnalazionestoricoWhereUniqueInput
    update: XOR<segnalazionestoricoUpdateWithoutTecniciInput, segnalazionestoricoUncheckedUpdateWithoutTecniciInput>
    create: XOR<segnalazionestoricoCreateWithoutTecniciInput, segnalazionestoricoUncheckedCreateWithoutTecniciInput>
  }

  export type segnalazionestoricoUpdateWithWhereUniqueWithoutTecniciInput = {
    where: segnalazionestoricoWhereUniqueInput
    data: XOR<segnalazionestoricoUpdateWithoutTecniciInput, segnalazionestoricoUncheckedUpdateWithoutTecniciInput>
  }

  export type segnalazionestoricoUpdateManyWithWhereWithoutTecniciInput = {
    where: segnalazionestoricoScalarWhereInput
    data: XOR<segnalazionestoricoUpdateManyMutationInput, segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestoricoInput>
  }

  export type segnalazioneCreateWithoutTipoeventoInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    fonti?: fontiCreateNestedOneWithoutSegnalazioneInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazioneInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazioneInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    utenti_segnalazione_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazioneInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateWithoutTipoeventoInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneCreateOrConnectWithoutTipoeventoInput = {
    where: segnalazioneWhereUniqueInput
    create: XOR<segnalazioneCreateWithoutTipoeventoInput, segnalazioneUncheckedCreateWithoutTipoeventoInput>
  }

  export type segnalazioneCreateManyTipoeventoInputEnvelope = {
    data: Enumerable<segnalazioneCreateManyTipoeventoInput>
    skipDuplicates?: boolean
  }

  export type segnalazionestoricoCreateWithoutTipoeventoInput = {
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    fonti?: fontiCreateNestedOneWithoutSegnalazionestoricoInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazionestoricoInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazionestoricoInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazionestoricoInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazionestoricoInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazionestoricoInput
  }

  export type segnalazionestoricoUncheckedCreateWithoutTipoeventoInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateOrConnectWithoutTipoeventoInput = {
    where: segnalazionestoricoWhereUniqueInput
    create: XOR<segnalazionestoricoCreateWithoutTipoeventoInput, segnalazionestoricoUncheckedCreateWithoutTipoeventoInput>
  }

  export type segnalazionestoricoCreateManyTipoeventoInputEnvelope = {
    data: Enumerable<segnalazionestoricoCreateManyTipoeventoInput>
    skipDuplicates?: boolean
  }

  export type segnalazioneUpsertWithWhereUniqueWithoutTipoeventoInput = {
    where: segnalazioneWhereUniqueInput
    update: XOR<segnalazioneUpdateWithoutTipoeventoInput, segnalazioneUncheckedUpdateWithoutTipoeventoInput>
    create: XOR<segnalazioneCreateWithoutTipoeventoInput, segnalazioneUncheckedCreateWithoutTipoeventoInput>
  }

  export type segnalazioneUpdateWithWhereUniqueWithoutTipoeventoInput = {
    where: segnalazioneWhereUniqueInput
    data: XOR<segnalazioneUpdateWithoutTipoeventoInput, segnalazioneUncheckedUpdateWithoutTipoeventoInput>
  }

  export type segnalazioneUpdateManyWithWhereWithoutTipoeventoInput = {
    where: segnalazioneScalarWhereInput
    data: XOR<segnalazioneUpdateManyMutationInput, segnalazioneUncheckedUpdateManyWithoutSegnalazioneInput>
  }

  export type segnalazionestoricoUpsertWithWhereUniqueWithoutTipoeventoInput = {
    where: segnalazionestoricoWhereUniqueInput
    update: XOR<segnalazionestoricoUpdateWithoutTipoeventoInput, segnalazionestoricoUncheckedUpdateWithoutTipoeventoInput>
    create: XOR<segnalazionestoricoCreateWithoutTipoeventoInput, segnalazionestoricoUncheckedCreateWithoutTipoeventoInput>
  }

  export type segnalazionestoricoUpdateWithWhereUniqueWithoutTipoeventoInput = {
    where: segnalazionestoricoWhereUniqueInput
    data: XOR<segnalazionestoricoUpdateWithoutTipoeventoInput, segnalazionestoricoUncheckedUpdateWithoutTipoeventoInput>
  }

  export type segnalazionestoricoUpdateManyWithWhereWithoutTipoeventoInput = {
    where: segnalazionestoricoScalarWhereInput
    data: XOR<segnalazionestoricoUpdateManyMutationInput, segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestoricoInput>
  }

  export type segnalazioneCreateWithoutTipoprovvedimentoInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    fonti?: fontiCreateNestedOneWithoutSegnalazioneInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazioneInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    utenti_segnalazione_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazioneInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazioneInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateWithoutTipoprovvedimentoInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneCreateOrConnectWithoutTipoprovvedimentoInput = {
    where: segnalazioneWhereUniqueInput
    create: XOR<segnalazioneCreateWithoutTipoprovvedimentoInput, segnalazioneUncheckedCreateWithoutTipoprovvedimentoInput>
  }

  export type segnalazioneCreateManyTipoprovvedimentoInputEnvelope = {
    data: Enumerable<segnalazioneCreateManyTipoprovvedimentoInput>
    skipDuplicates?: boolean
  }

  export type segnalazionestoricoCreateWithoutTipoprovvedimentoInput = {
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    fonti?: fontiCreateNestedOneWithoutSegnalazionestoricoInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazionestoricoInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazionestoricoInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazionestoricoInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazionestoricoInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazionestoricoInput
  }

  export type segnalazionestoricoUncheckedCreateWithoutTipoprovvedimentoInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
  }

  export type segnalazionestoricoCreateOrConnectWithoutTipoprovvedimentoInput = {
    where: segnalazionestoricoWhereUniqueInput
    create: XOR<segnalazionestoricoCreateWithoutTipoprovvedimentoInput, segnalazionestoricoUncheckedCreateWithoutTipoprovvedimentoInput>
  }

  export type segnalazionestoricoCreateManyTipoprovvedimentoInputEnvelope = {
    data: Enumerable<segnalazionestoricoCreateManyTipoprovvedimentoInput>
    skipDuplicates?: boolean
  }

  export type segnalazioneUpsertWithWhereUniqueWithoutTipoprovvedimentoInput = {
    where: segnalazioneWhereUniqueInput
    update: XOR<segnalazioneUpdateWithoutTipoprovvedimentoInput, segnalazioneUncheckedUpdateWithoutTipoprovvedimentoInput>
    create: XOR<segnalazioneCreateWithoutTipoprovvedimentoInput, segnalazioneUncheckedCreateWithoutTipoprovvedimentoInput>
  }

  export type segnalazioneUpdateWithWhereUniqueWithoutTipoprovvedimentoInput = {
    where: segnalazioneWhereUniqueInput
    data: XOR<segnalazioneUpdateWithoutTipoprovvedimentoInput, segnalazioneUncheckedUpdateWithoutTipoprovvedimentoInput>
  }

  export type segnalazioneUpdateManyWithWhereWithoutTipoprovvedimentoInput = {
    where: segnalazioneScalarWhereInput
    data: XOR<segnalazioneUpdateManyMutationInput, segnalazioneUncheckedUpdateManyWithoutSegnalazioneInput>
  }

  export type segnalazionestoricoUpsertWithWhereUniqueWithoutTipoprovvedimentoInput = {
    where: segnalazionestoricoWhereUniqueInput
    update: XOR<segnalazionestoricoUpdateWithoutTipoprovvedimentoInput, segnalazionestoricoUncheckedUpdateWithoutTipoprovvedimentoInput>
    create: XOR<segnalazionestoricoCreateWithoutTipoprovvedimentoInput, segnalazionestoricoUncheckedCreateWithoutTipoprovvedimentoInput>
  }

  export type segnalazionestoricoUpdateWithWhereUniqueWithoutTipoprovvedimentoInput = {
    where: segnalazionestoricoWhereUniqueInput
    data: XOR<segnalazionestoricoUpdateWithoutTipoprovvedimentoInput, segnalazionestoricoUncheckedUpdateWithoutTipoprovvedimentoInput>
  }

  export type segnalazionestoricoUpdateManyWithWhereWithoutTipoprovvedimentoInput = {
    where: segnalazionestoricoScalarWhereInput
    data: XOR<segnalazionestoricoUpdateManyMutationInput, segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestoricoInput>
  }

  export type segnalazioneCreateWithoutTiposeveritaInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    fonti?: fontiCreateNestedOneWithoutSegnalazioneInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazioneInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazioneInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    utenti_segnalazione_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazioneInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateWithoutTiposeveritaInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneCreateOrConnectWithoutTiposeveritaInput = {
    where: segnalazioneWhereUniqueInput
    create: XOR<segnalazioneCreateWithoutTiposeveritaInput, segnalazioneUncheckedCreateWithoutTiposeveritaInput>
  }

  export type segnalazioneCreateManyTiposeveritaInputEnvelope = {
    data: Enumerable<segnalazioneCreateManyTiposeveritaInput>
    skipDuplicates?: boolean
  }

  export type segnalazionestoricoCreateWithoutTiposeveritaInput = {
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    fonti?: fontiCreateNestedOneWithoutSegnalazionestoricoInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazionestoricoInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazionestoricoInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazionestoricoInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazionestoricoInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazionestoricoInput
  }

  export type segnalazionestoricoUncheckedCreateWithoutTiposeveritaInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateOrConnectWithoutTiposeveritaInput = {
    where: segnalazionestoricoWhereUniqueInput
    create: XOR<segnalazionestoricoCreateWithoutTiposeveritaInput, segnalazionestoricoUncheckedCreateWithoutTiposeveritaInput>
  }

  export type segnalazionestoricoCreateManyTiposeveritaInputEnvelope = {
    data: Enumerable<segnalazionestoricoCreateManyTiposeveritaInput>
    skipDuplicates?: boolean
  }

  export type segnalazioneUpsertWithWhereUniqueWithoutTiposeveritaInput = {
    where: segnalazioneWhereUniqueInput
    update: XOR<segnalazioneUpdateWithoutTiposeveritaInput, segnalazioneUncheckedUpdateWithoutTiposeveritaInput>
    create: XOR<segnalazioneCreateWithoutTiposeveritaInput, segnalazioneUncheckedCreateWithoutTiposeveritaInput>
  }

  export type segnalazioneUpdateWithWhereUniqueWithoutTiposeveritaInput = {
    where: segnalazioneWhereUniqueInput
    data: XOR<segnalazioneUpdateWithoutTiposeveritaInput, segnalazioneUncheckedUpdateWithoutTiposeveritaInput>
  }

  export type segnalazioneUpdateManyWithWhereWithoutTiposeveritaInput = {
    where: segnalazioneScalarWhereInput
    data: XOR<segnalazioneUpdateManyMutationInput, segnalazioneUncheckedUpdateManyWithoutSegnalazioneInput>
  }

  export type segnalazionestoricoUpsertWithWhereUniqueWithoutTiposeveritaInput = {
    where: segnalazionestoricoWhereUniqueInput
    update: XOR<segnalazionestoricoUpdateWithoutTiposeveritaInput, segnalazionestoricoUncheckedUpdateWithoutTiposeveritaInput>
    create: XOR<segnalazionestoricoCreateWithoutTiposeveritaInput, segnalazionestoricoUncheckedCreateWithoutTiposeveritaInput>
  }

  export type segnalazionestoricoUpdateWithWhereUniqueWithoutTiposeveritaInput = {
    where: segnalazionestoricoWhereUniqueInput
    data: XOR<segnalazionestoricoUpdateWithoutTiposeveritaInput, segnalazionestoricoUncheckedUpdateWithoutTiposeveritaInput>
  }

  export type segnalazionestoricoUpdateManyWithWhereWithoutTiposeveritaInput = {
    where: segnalazionestoricoScalarWhereInput
    data: XOR<segnalazionestoricoUpdateManyMutationInput, segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestoricoInput>
  }

  export type catastoanomaliaCreateWithoutUtentiInput = {
    idAppalto?: number | null
    dataModifica?: string | null
    adjacentLayer?: string | null
    adjacentLayerGeom?: string | null
  }

  export type catastoanomaliaUncheckedCreateWithoutUtentiInput = {
    id?: number
    idAppalto?: number | null
    dataModifica?: string | null
    adjacentLayer?: string | null
    adjacentLayerGeom?: string | null
  }

  export type catastoanomaliaCreateOrConnectWithoutUtentiInput = {
    where: catastoanomaliaWhereUniqueInput
    create: XOR<catastoanomaliaCreateWithoutUtentiInput, catastoanomaliaUncheckedCreateWithoutUtentiInput>
  }

  export type catastoanomaliaCreateManyUtentiInputEnvelope = {
    data: Enumerable<catastoanomaliaCreateManyUtentiInput>
    skipDuplicates?: boolean
  }

  export type catastolinkerCreateWithoutUtentiInput = {
    idCatasto?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    idSegnalazione?: number | null
    statoSegnalazione?: string | null
    statoLavoro?: string | null
    flg_catasto?: number | null
    geojson?: string | null
    lavoro?: lavoroCreateNestedOneWithoutCatastolinkerInput
    pratica?: praticaCreateNestedOneWithoutCatastolinkerInput
  }

  export type catastolinkerUncheckedCreateWithoutUtentiInput = {
    id?: number
    idCatasto?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    statoSegnalazione?: string | null
    statoLavoro?: string | null
    flg_catasto?: number | null
    idPratica?: number | null
    geojson?: string | null
  }

  export type catastolinkerCreateOrConnectWithoutUtentiInput = {
    where: catastolinkerWhereUniqueInput
    create: XOR<catastolinkerCreateWithoutUtentiInput, catastolinkerUncheckedCreateWithoutUtentiInput>
  }

  export type catastolinkerCreateManyUtentiInputEnvelope = {
    data: Enumerable<catastolinkerCreateManyUtentiInput>
    skipDuplicates?: boolean
  }

  export type lavoroCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput = {
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    catastolinker?: catastolinkerCreateNestedManyWithoutLavoroInput
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutLavoroInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutLavoroInput
    utenti_lavoro_idUtenteToutenti?: utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteToutentiInput
    impresa?: impresaCreateNestedOneWithoutLavoroInput
  }

  export type lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutLavoroInput
  }

  export type lavoroCreateOrConnectWithoutUtenti_lavoro_idUtenteStatoToutentiInput = {
    where: lavoroWhereUniqueInput
    create: XOR<lavoroCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput, lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
  }

  export type lavoroCreateManyUtenti_lavoro_idUtenteStatoToutentiInputEnvelope = {
    data: Enumerable<lavoroCreateManyUtenti_lavoro_idUtenteStatoToutentiInput>
    skipDuplicates?: boolean
  }

  export type lavoroCreateWithoutUtenti_lavoro_idUtenteToutentiInput = {
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    catastolinker?: catastolinkerCreateNestedManyWithoutLavoroInput
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutLavoroInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutLavoroInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutLavoro_lavoro_idUtenteStatoToutentiInput
    impresa?: impresaCreateNestedOneWithoutLavoroInput
  }

  export type lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteToutentiInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutLavoroInput
  }

  export type lavoroCreateOrConnectWithoutUtenti_lavoro_idUtenteToutentiInput = {
    where: lavoroWhereUniqueInput
    create: XOR<lavoroCreateWithoutUtenti_lavoro_idUtenteToutentiInput, lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteToutentiInput>
  }

  export type lavoroCreateManyUtenti_lavoro_idUtenteToutentiInputEnvelope = {
    data: Enumerable<lavoroCreateManyUtenti_lavoro_idUtenteToutentiInput>
    skipDuplicates?: boolean
  }

  export type lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput = {
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutLavorostoricoInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutLavorostoricoInput
    utenti_lavorostorico_idUtenteToutenti?: utentiCreateNestedOneWithoutLavorostorico_lavorostorico_idUtenteToutentiInput
    impresa?: impresaCreateNestedOneWithoutLavorostoricoInput
  }

  export type lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput = {
    id?: number
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
  }

  export type lavorostoricoCreateOrConnectWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput = {
    where: lavorostoricoWhereUniqueInput
    create: XOR<lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput, lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
  }

  export type lavorostoricoCreateManyUtenti_lavorostorico_idUtenteStatoToutentiInputEnvelope = {
    data: Enumerable<lavorostoricoCreateManyUtenti_lavorostorico_idUtenteStatoToutentiInput>
    skipDuplicates?: boolean
  }

  export type lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput = {
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutLavorostoricoInput
    sottocategorialavoro?: sottocategorialavoroCreateNestedOneWithoutLavorostoricoInput
    utenti_lavorostorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput
    impresa?: impresaCreateNestedOneWithoutLavorostoricoInput
  }

  export type lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput = {
    id?: number
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
  }

  export type lavorostoricoCreateOrConnectWithoutUtenti_lavorostorico_idUtenteToutentiInput = {
    where: lavorostoricoWhereUniqueInput
    create: XOR<lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput, lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput>
  }

  export type lavorostoricoCreateManyUtenti_lavorostorico_idUtenteToutentiInputEnvelope = {
    data: Enumerable<lavorostoricoCreateManyUtenti_lavorostorico_idUtenteToutentiInput>
    skipDuplicates?: boolean
  }

  export type livelliservizioCreateWithoutUtentiInput = {
    idAppalto?: number | null
    dataModifica?: string | null
    risultato?: string | null
    detrazioneEffettivo?: string | null
    premioEffettivo?: string | null
    chiave?: string | null
    unita?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    dataIntervalloDa?: string | null
    dataIntervalloA?: string | null
    dataRichiesta?: string | null
    dataInizioEffettivaLavoro?: string | null
    dataChiusuraSegnalazione?: string | null
    dataFineMassima?: string | null
    elaborato?: number | null
    idSchedulatore?: number | null
    tipolavoro?: string | null
    note?: string | null
    dataCreazioneSegnalazione?: string | null
    livelliserviziodescrizione?: livelliserviziodescrizioneCreateNestedOneWithoutLivelliservizioInput
  }

  export type livelliservizioUncheckedCreateWithoutUtentiInput = {
    id?: number
    idAppalto?: number | null
    dataModifica?: string | null
    idLds?: number | null
    risultato?: string | null
    detrazioneEffettivo?: string | null
    premioEffettivo?: string | null
    chiave?: string | null
    unita?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    dataIntervalloDa?: string | null
    dataIntervalloA?: string | null
    dataRichiesta?: string | null
    dataInizioEffettivaLavoro?: string | null
    dataChiusuraSegnalazione?: string | null
    dataFineMassima?: string | null
    elaborato?: number | null
    idSchedulatore?: number | null
    tipolavoro?: string | null
    note?: string | null
    dataCreazioneSegnalazione?: string | null
  }

  export type livelliservizioCreateOrConnectWithoutUtentiInput = {
    where: livelliservizioWhereUniqueInput
    create: XOR<livelliservizioCreateWithoutUtentiInput, livelliservizioUncheckedCreateWithoutUtentiInput>
  }

  export type livelliservizioCreateManyUtentiInputEnvelope = {
    data: Enumerable<livelliservizioCreateManyUtentiInput>
    skipDuplicates?: boolean
  }

  export type oggettocivettaCreateWithoutUtentiInput = {
    idSegnalazione?: number | null
    idOggettoCatasto?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    idRifCivetta?: number | null
  }

  export type oggettocivettaUncheckedCreateWithoutUtentiInput = {
    id?: number
    idSegnalazione?: number | null
    idOggettoCatasto?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    idRifCivetta?: number | null
  }

  export type oggettocivettaCreateOrConnectWithoutUtentiInput = {
    where: oggettocivettaWhereUniqueInput
    create: XOR<oggettocivettaCreateWithoutUtentiInput, oggettocivettaUncheckedCreateWithoutUtentiInput>
  }

  export type oggettocivettaCreateManyUtentiInputEnvelope = {
    data: Enumerable<oggettocivettaCreateManyUtentiInput>
    skipDuplicates?: boolean
  }

  export type praticaCreateWithoutUtentiInput = {
    idAppalto?: number | null
    dataModifica?: string | null
    dataChiusura?: string | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
    catastolinker?: catastolinkerCreateNestedManyWithoutPraticaInput
  }

  export type praticaUncheckedCreateWithoutUtentiInput = {
    id?: number
    idAppalto?: number | null
    dataModifica?: string | null
    dataChiusura?: string | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
    catastolinker?: catastolinkerUncheckedCreateNestedManyWithoutPraticaInput
  }

  export type praticaCreateOrConnectWithoutUtentiInput = {
    where: praticaWhereUniqueInput
    create: XOR<praticaCreateWithoutUtentiInput, praticaUncheckedCreateWithoutUtentiInput>
  }

  export type praticaCreateManyUtentiInputEnvelope = {
    data: Enumerable<praticaCreateManyUtentiInput>
    skipDuplicates?: boolean
  }

  export type praticastoricoCreateWithoutUtentiInput = {
    idPratica?: number | null
    idAppalto?: number | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
  }

  export type praticastoricoUncheckedCreateWithoutUtentiInput = {
    id?: number
    idPratica?: number | null
    idAppalto?: number | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
  }

  export type praticastoricoCreateOrConnectWithoutUtentiInput = {
    where: praticastoricoWhereUniqueInput
    create: XOR<praticastoricoCreateWithoutUtentiInput, praticastoricoUncheckedCreateWithoutUtentiInput>
  }

  export type praticastoricoCreateManyUtentiInputEnvelope = {
    data: Enumerable<praticastoricoCreateManyUtentiInput>
    skipDuplicates?: boolean
  }

  export type registrorichiedenteCreateWithoutUtentiInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idSegnalazione?: number | null
    del?: string | null
    fonti?: fontiCreateNestedOneWithoutRegistrorichiedenteInput
    segnalatore?: segnalatoreCreateNestedOneWithoutRegistrorichiedenteInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutRegistrorichiedenteInput
  }

  export type registrorichiedenteUncheckedCreateWithoutUtentiInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idSegnalazione?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    idSegnalazioneGetico?: number | null
    del?: string | null
  }

  export type registrorichiedenteCreateOrConnectWithoutUtentiInput = {
    where: registrorichiedenteWhereUniqueInput
    create: XOR<registrorichiedenteCreateWithoutUtentiInput, registrorichiedenteUncheckedCreateWithoutUtentiInput>
  }

  export type registrorichiedenteCreateManyUtentiInputEnvelope = {
    data: Enumerable<registrorichiedenteCreateManyUtentiInput>
    skipDuplicates?: boolean
  }

  export type segnalazioneCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    fonti?: fontiCreateNestedOneWithoutSegnalazioneInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazioneInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazioneInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazioneInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazioneInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneCreateOrConnectWithoutUtenti_segnalazione_idUtenteStatoToutentiInput = {
    where: segnalazioneWhereUniqueInput
    create: XOR<segnalazioneCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput, segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
  }

  export type segnalazioneCreateManyUtenti_segnalazione_idUtenteStatoToutentiInputEnvelope = {
    data: Enumerable<segnalazioneCreateManyUtenti_segnalazione_idUtenteStatoToutentiInput>
    skipDuplicates?: boolean
  }

  export type segnalazioneCreateWithoutUtenti_segnalazione_idUtenteToutentiInput = {
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazioneInput
    fonti?: fontiCreateNestedOneWithoutSegnalazioneInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazioneInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazioneInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazioneInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazioneInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazioneInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazioneInput
    segnalazionestatostorico?: segnalazionestatostoricoCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteToutentiInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedCreateNestedManyWithoutSegnalazioneInput
  }

  export type segnalazioneCreateOrConnectWithoutUtenti_segnalazione_idUtenteToutentiInput = {
    where: segnalazioneWhereUniqueInput
    create: XOR<segnalazioneCreateWithoutUtenti_segnalazione_idUtenteToutentiInput, segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteToutentiInput>
  }

  export type segnalazioneCreateManyUtenti_segnalazione_idUtenteToutentiInputEnvelope = {
    data: Enumerable<segnalazioneCreateManyUtenti_segnalazione_idUtenteToutentiInput>
    skipDuplicates?: boolean
  }

  export type segnalazionestatostoricoCreateWithoutUtentiInput = {
    idAppalto?: number | null
    dataModifica?: string | null
    stato?: string | null
    notaStato?: string | null
    segnalazione?: segnalazioneCreateNestedOneWithoutSegnalazionestatostoricoInput
  }

  export type segnalazionestatostoricoUncheckedCreateWithoutUtentiInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    dataModifica?: string | null
    stato?: string | null
    notaStato?: string | null
  }

  export type segnalazionestatostoricoCreateOrConnectWithoutUtentiInput = {
    where: segnalazionestatostoricoWhereUniqueInput
    create: XOR<segnalazionestatostoricoCreateWithoutUtentiInput, segnalazionestatostoricoUncheckedCreateWithoutUtentiInput>
  }

  export type segnalazionestatostoricoCreateManyUtentiInputEnvelope = {
    data: Enumerable<segnalazionestatostoricoCreateManyUtentiInput>
    skipDuplicates?: boolean
  }

  export type segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput = {
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    fonti?: fontiCreateNestedOneWithoutSegnalazionestoricoInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazionestoricoInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazionestoricoInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazionestoricoInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazionestoricoInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazionestoricoInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazionestoricoInput
  }

  export type segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateOrConnectWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput = {
    where: segnalazionestoricoWhereUniqueInput
    create: XOR<segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput, segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
  }

  export type segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteStatoToutentiInputEnvelope = {
    data: Enumerable<segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
    skipDuplicates?: boolean
  }

  export type segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput = {
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    categoriaanomalia?: categoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    sottocategoriaanomalia?: sottocategoriaanomaliaCreateNestedOneWithoutSegnalazionestoricoInput
    fonti?: fontiCreateNestedOneWithoutSegnalazionestoricoInput
    segnalatore?: segnalatoreCreateNestedOneWithoutSegnalazionestoricoInput
    segnalazione_getico?: segnalazione_geticoCreateNestedOneWithoutSegnalazionestoricoInput
    tecnici?: tecniciCreateNestedOneWithoutSegnalazionestoricoInput
    tipoprovvedimento?: tipoprovvedimentoCreateNestedOneWithoutSegnalazionestoricoInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiCreateNestedOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput
    tiposeverita?: tiposeveritaCreateNestedOneWithoutSegnalazionestoricoInput
    tipoevento?: tipoeventoCreateNestedOneWithoutSegnalazionestoricoInput
  }

  export type segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateOrConnectWithoutUtenti_segnalazionestorico_idUtenteToutentiInput = {
    where: segnalazionestoricoWhereUniqueInput
    create: XOR<segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput, segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
  }

  export type segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteToutentiInputEnvelope = {
    data: Enumerable<segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteToutentiInput>
    skipDuplicates?: boolean
  }

  export type gruppoCreateWithoutUtentiInput = {
    idAppalto?: number | null
    descrizione?: string | null
    dataModifica?: string | null
  }

  export type gruppoUncheckedCreateWithoutUtentiInput = {
    id?: number
    idAppalto?: number | null
    descrizione?: string | null
    dataModifica?: string | null
  }

  export type gruppoCreateOrConnectWithoutUtentiInput = {
    where: gruppoWhereUniqueInput
    create: XOR<gruppoCreateWithoutUtentiInput, gruppoUncheckedCreateWithoutUtentiInput>
  }

  export type catastoanomaliaUpsertWithWhereUniqueWithoutUtentiInput = {
    where: catastoanomaliaWhereUniqueInput
    update: XOR<catastoanomaliaUpdateWithoutUtentiInput, catastoanomaliaUncheckedUpdateWithoutUtentiInput>
    create: XOR<catastoanomaliaCreateWithoutUtentiInput, catastoanomaliaUncheckedCreateWithoutUtentiInput>
  }

  export type catastoanomaliaUpdateWithWhereUniqueWithoutUtentiInput = {
    where: catastoanomaliaWhereUniqueInput
    data: XOR<catastoanomaliaUpdateWithoutUtentiInput, catastoanomaliaUncheckedUpdateWithoutUtentiInput>
  }

  export type catastoanomaliaUpdateManyWithWhereWithoutUtentiInput = {
    where: catastoanomaliaScalarWhereInput
    data: XOR<catastoanomaliaUpdateManyMutationInput, catastoanomaliaUncheckedUpdateManyWithoutCatastoanomaliaInput>
  }

  export type catastoanomaliaScalarWhereInput = {
    AND?: Enumerable<catastoanomaliaScalarWhereInput>
    OR?: Enumerable<catastoanomaliaScalarWhereInput>
    NOT?: Enumerable<catastoanomaliaScalarWhereInput>
    id?: IntFilter | number
    idUtente?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
    adjacentLayer?: StringNullableFilter | string | null
    adjacentLayerGeom?: StringNullableFilter | string | null
  }

  export type catastolinkerUpsertWithWhereUniqueWithoutUtentiInput = {
    where: catastolinkerWhereUniqueInput
    update: XOR<catastolinkerUpdateWithoutUtentiInput, catastolinkerUncheckedUpdateWithoutUtentiInput>
    create: XOR<catastolinkerCreateWithoutUtentiInput, catastolinkerUncheckedCreateWithoutUtentiInput>
  }

  export type catastolinkerUpdateWithWhereUniqueWithoutUtentiInput = {
    where: catastolinkerWhereUniqueInput
    data: XOR<catastolinkerUpdateWithoutUtentiInput, catastolinkerUncheckedUpdateWithoutUtentiInput>
  }

  export type catastolinkerUpdateManyWithWhereWithoutUtentiInput = {
    where: catastolinkerScalarWhereInput
    data: XOR<catastolinkerUpdateManyMutationInput, catastolinkerUncheckedUpdateManyWithoutCatastolinkerInput>
  }

  export type lavoroUpsertWithWhereUniqueWithoutUtenti_lavoro_idUtenteStatoToutentiInput = {
    where: lavoroWhereUniqueInput
    update: XOR<lavoroUpdateWithoutUtenti_lavoro_idUtenteStatoToutentiInput, lavoroUncheckedUpdateWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
    create: XOR<lavoroCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput, lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
  }

  export type lavoroUpdateWithWhereUniqueWithoutUtenti_lavoro_idUtenteStatoToutentiInput = {
    where: lavoroWhereUniqueInput
    data: XOR<lavoroUpdateWithoutUtenti_lavoro_idUtenteStatoToutentiInput, lavoroUncheckedUpdateWithoutUtenti_lavoro_idUtenteStatoToutentiInput>
  }

  export type lavoroUpdateManyWithWhereWithoutUtenti_lavoro_idUtenteStatoToutentiInput = {
    where: lavoroScalarWhereInput
    data: XOR<lavoroUpdateManyMutationInput, lavoroUncheckedUpdateManyWithoutLavoro_lavoro_idUtenteStatoToutentiInput>
  }

  export type lavoroUpsertWithWhereUniqueWithoutUtenti_lavoro_idUtenteToutentiInput = {
    where: lavoroWhereUniqueInput
    update: XOR<lavoroUpdateWithoutUtenti_lavoro_idUtenteToutentiInput, lavoroUncheckedUpdateWithoutUtenti_lavoro_idUtenteToutentiInput>
    create: XOR<lavoroCreateWithoutUtenti_lavoro_idUtenteToutentiInput, lavoroUncheckedCreateWithoutUtenti_lavoro_idUtenteToutentiInput>
  }

  export type lavoroUpdateWithWhereUniqueWithoutUtenti_lavoro_idUtenteToutentiInput = {
    where: lavoroWhereUniqueInput
    data: XOR<lavoroUpdateWithoutUtenti_lavoro_idUtenteToutentiInput, lavoroUncheckedUpdateWithoutUtenti_lavoro_idUtenteToutentiInput>
  }

  export type lavoroUpdateManyWithWhereWithoutUtenti_lavoro_idUtenteToutentiInput = {
    where: lavoroScalarWhereInput
    data: XOR<lavoroUpdateManyMutationInput, lavoroUncheckedUpdateManyWithoutLavoro_lavoro_idUtenteToutentiInput>
  }

  export type lavorostoricoUpsertWithWhereUniqueWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput = {
    where: lavorostoricoWhereUniqueInput
    update: XOR<lavorostoricoUpdateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput, lavorostoricoUncheckedUpdateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
    create: XOR<lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput, lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
  }

  export type lavorostoricoUpdateWithWhereUniqueWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput = {
    where: lavorostoricoWhereUniqueInput
    data: XOR<lavorostoricoUpdateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput, lavorostoricoUncheckedUpdateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput>
  }

  export type lavorostoricoUpdateManyWithWhereWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput = {
    where: lavorostoricoScalarWhereInput
    data: XOR<lavorostoricoUpdateManyMutationInput, lavorostoricoUncheckedUpdateManyWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput>
  }

  export type lavorostoricoUpsertWithWhereUniqueWithoutUtenti_lavorostorico_idUtenteToutentiInput = {
    where: lavorostoricoWhereUniqueInput
    update: XOR<lavorostoricoUpdateWithoutUtenti_lavorostorico_idUtenteToutentiInput, lavorostoricoUncheckedUpdateWithoutUtenti_lavorostorico_idUtenteToutentiInput>
    create: XOR<lavorostoricoCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput, lavorostoricoUncheckedCreateWithoutUtenti_lavorostorico_idUtenteToutentiInput>
  }

  export type lavorostoricoUpdateWithWhereUniqueWithoutUtenti_lavorostorico_idUtenteToutentiInput = {
    where: lavorostoricoWhereUniqueInput
    data: XOR<lavorostoricoUpdateWithoutUtenti_lavorostorico_idUtenteToutentiInput, lavorostoricoUncheckedUpdateWithoutUtenti_lavorostorico_idUtenteToutentiInput>
  }

  export type lavorostoricoUpdateManyWithWhereWithoutUtenti_lavorostorico_idUtenteToutentiInput = {
    where: lavorostoricoScalarWhereInput
    data: XOR<lavorostoricoUpdateManyMutationInput, lavorostoricoUncheckedUpdateManyWithoutLavorostorico_lavorostorico_idUtenteToutentiInput>
  }

  export type livelliservizioUpsertWithWhereUniqueWithoutUtentiInput = {
    where: livelliservizioWhereUniqueInput
    update: XOR<livelliservizioUpdateWithoutUtentiInput, livelliservizioUncheckedUpdateWithoutUtentiInput>
    create: XOR<livelliservizioCreateWithoutUtentiInput, livelliservizioUncheckedCreateWithoutUtentiInput>
  }

  export type livelliservizioUpdateWithWhereUniqueWithoutUtentiInput = {
    where: livelliservizioWhereUniqueInput
    data: XOR<livelliservizioUpdateWithoutUtentiInput, livelliservizioUncheckedUpdateWithoutUtentiInput>
  }

  export type livelliservizioUpdateManyWithWhereWithoutUtentiInput = {
    where: livelliservizioScalarWhereInput
    data: XOR<livelliservizioUpdateManyMutationInput, livelliservizioUncheckedUpdateManyWithoutLivelliservizioInput>
  }

  export type oggettocivettaUpsertWithWhereUniqueWithoutUtentiInput = {
    where: oggettocivettaWhereUniqueInput
    update: XOR<oggettocivettaUpdateWithoutUtentiInput, oggettocivettaUncheckedUpdateWithoutUtentiInput>
    create: XOR<oggettocivettaCreateWithoutUtentiInput, oggettocivettaUncheckedCreateWithoutUtentiInput>
  }

  export type oggettocivettaUpdateWithWhereUniqueWithoutUtentiInput = {
    where: oggettocivettaWhereUniqueInput
    data: XOR<oggettocivettaUpdateWithoutUtentiInput, oggettocivettaUncheckedUpdateWithoutUtentiInput>
  }

  export type oggettocivettaUpdateManyWithWhereWithoutUtentiInput = {
    where: oggettocivettaScalarWhereInput
    data: XOR<oggettocivettaUpdateManyMutationInput, oggettocivettaUncheckedUpdateManyWithoutOggettocivettaInput>
  }

  export type oggettocivettaScalarWhereInput = {
    AND?: Enumerable<oggettocivettaScalarWhereInput>
    OR?: Enumerable<oggettocivettaScalarWhereInput>
    NOT?: Enumerable<oggettocivettaScalarWhereInput>
    id?: IntFilter | number
    idSegnalazione?: IntNullableFilter | number | null
    idOggettoCatasto?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
    idRifCivetta?: IntNullableFilter | number | null
  }

  export type praticaUpsertWithWhereUniqueWithoutUtentiInput = {
    where: praticaWhereUniqueInput
    update: XOR<praticaUpdateWithoutUtentiInput, praticaUncheckedUpdateWithoutUtentiInput>
    create: XOR<praticaCreateWithoutUtentiInput, praticaUncheckedCreateWithoutUtentiInput>
  }

  export type praticaUpdateWithWhereUniqueWithoutUtentiInput = {
    where: praticaWhereUniqueInput
    data: XOR<praticaUpdateWithoutUtentiInput, praticaUncheckedUpdateWithoutUtentiInput>
  }

  export type praticaUpdateManyWithWhereWithoutUtentiInput = {
    where: praticaScalarWhereInput
    data: XOR<praticaUpdateManyMutationInput, praticaUncheckedUpdateManyWithoutPraticaInput>
  }

  export type praticaScalarWhereInput = {
    AND?: Enumerable<praticaScalarWhereInput>
    OR?: Enumerable<praticaScalarWhereInput>
    NOT?: Enumerable<praticaScalarWhereInput>
    id?: IntFilter | number
    idUtente?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    dataModifica?: StringNullableFilter | string | null
    dataChiusura?: StringNullableFilter | string | null
    nomePratica?: StringNullableFilter | string | null
    localizzazioneDichiarataQuartiere?: StringNullableFilter | string | null
    localizzazioneDichiarata?: StringNullableFilter | string | null
    notePratica?: StringNullableFilter | string | null
    importoPratica?: StringNullableFilter | string | null
    del?: StringNullableFilter | string | null
    dataCreazione?: StringNullableFilter | string | null
    statoCorrentePratica?: StringNullableFilter | string | null
    delLavori?: StringNullableFilter | string | null
  }

  export type praticastoricoUpsertWithWhereUniqueWithoutUtentiInput = {
    where: praticastoricoWhereUniqueInput
    update: XOR<praticastoricoUpdateWithoutUtentiInput, praticastoricoUncheckedUpdateWithoutUtentiInput>
    create: XOR<praticastoricoCreateWithoutUtentiInput, praticastoricoUncheckedCreateWithoutUtentiInput>
  }

  export type praticastoricoUpdateWithWhereUniqueWithoutUtentiInput = {
    where: praticastoricoWhereUniqueInput
    data: XOR<praticastoricoUpdateWithoutUtentiInput, praticastoricoUncheckedUpdateWithoutUtentiInput>
  }

  export type praticastoricoUpdateManyWithWhereWithoutUtentiInput = {
    where: praticastoricoScalarWhereInput
    data: XOR<praticastoricoUpdateManyMutationInput, praticastoricoUncheckedUpdateManyWithoutPraticastoricoInput>
  }

  export type praticastoricoScalarWhereInput = {
    AND?: Enumerable<praticastoricoScalarWhereInput>
    OR?: Enumerable<praticastoricoScalarWhereInput>
    NOT?: Enumerable<praticastoricoScalarWhereInput>
    id?: IntFilter | number
    idPratica?: IntNullableFilter | number | null
    idAppalto?: IntNullableFilter | number | null
    idUtente?: IntNullableFilter | number | null
    nomePratica?: StringNullableFilter | string | null
    localizzazioneDichiarataQuartiere?: StringNullableFilter | string | null
    localizzazioneDichiarata?: StringNullableFilter | string | null
    dataModifica?: StringNullableFilter | string | null
    dataChiusura?: StringNullableFilter | string | null
    notePratica?: StringNullableFilter | string | null
    importoPratica?: StringNullableFilter | string | null
    del?: StringNullableFilter | string | null
    dataCreazione?: StringNullableFilter | string | null
    statoCorrentePratica?: StringNullableFilter | string | null
    delLavori?: StringNullableFilter | string | null
  }

  export type registrorichiedenteUpsertWithWhereUniqueWithoutUtentiInput = {
    where: registrorichiedenteWhereUniqueInput
    update: XOR<registrorichiedenteUpdateWithoutUtentiInput, registrorichiedenteUncheckedUpdateWithoutUtentiInput>
    create: XOR<registrorichiedenteCreateWithoutUtentiInput, registrorichiedenteUncheckedCreateWithoutUtentiInput>
  }

  export type registrorichiedenteUpdateWithWhereUniqueWithoutUtentiInput = {
    where: registrorichiedenteWhereUniqueInput
    data: XOR<registrorichiedenteUpdateWithoutUtentiInput, registrorichiedenteUncheckedUpdateWithoutUtentiInput>
  }

  export type registrorichiedenteUpdateManyWithWhereWithoutUtentiInput = {
    where: registrorichiedenteScalarWhereInput
    data: XOR<registrorichiedenteUpdateManyMutationInput, registrorichiedenteUncheckedUpdateManyWithoutRegistrorichiedenteInput>
  }

  export type segnalazioneUpsertWithWhereUniqueWithoutUtenti_segnalazione_idUtenteStatoToutentiInput = {
    where: segnalazioneWhereUniqueInput
    update: XOR<segnalazioneUpdateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput, segnalazioneUncheckedUpdateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
    create: XOR<segnalazioneCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput, segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
  }

  export type segnalazioneUpdateWithWhereUniqueWithoutUtenti_segnalazione_idUtenteStatoToutentiInput = {
    where: segnalazioneWhereUniqueInput
    data: XOR<segnalazioneUpdateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput, segnalazioneUncheckedUpdateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput>
  }

  export type segnalazioneUpdateManyWithWhereWithoutUtenti_segnalazione_idUtenteStatoToutentiInput = {
    where: segnalazioneScalarWhereInput
    data: XOR<segnalazioneUpdateManyMutationInput, segnalazioneUncheckedUpdateManyWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput>
  }

  export type segnalazioneUpsertWithWhereUniqueWithoutUtenti_segnalazione_idUtenteToutentiInput = {
    where: segnalazioneWhereUniqueInput
    update: XOR<segnalazioneUpdateWithoutUtenti_segnalazione_idUtenteToutentiInput, segnalazioneUncheckedUpdateWithoutUtenti_segnalazione_idUtenteToutentiInput>
    create: XOR<segnalazioneCreateWithoutUtenti_segnalazione_idUtenteToutentiInput, segnalazioneUncheckedCreateWithoutUtenti_segnalazione_idUtenteToutentiInput>
  }

  export type segnalazioneUpdateWithWhereUniqueWithoutUtenti_segnalazione_idUtenteToutentiInput = {
    where: segnalazioneWhereUniqueInput
    data: XOR<segnalazioneUpdateWithoutUtenti_segnalazione_idUtenteToutentiInput, segnalazioneUncheckedUpdateWithoutUtenti_segnalazione_idUtenteToutentiInput>
  }

  export type segnalazioneUpdateManyWithWhereWithoutUtenti_segnalazione_idUtenteToutentiInput = {
    where: segnalazioneScalarWhereInput
    data: XOR<segnalazioneUpdateManyMutationInput, segnalazioneUncheckedUpdateManyWithoutSegnalazione_segnalazione_idUtenteToutentiInput>
  }

  export type segnalazionestatostoricoUpsertWithWhereUniqueWithoutUtentiInput = {
    where: segnalazionestatostoricoWhereUniqueInput
    update: XOR<segnalazionestatostoricoUpdateWithoutUtentiInput, segnalazionestatostoricoUncheckedUpdateWithoutUtentiInput>
    create: XOR<segnalazionestatostoricoCreateWithoutUtentiInput, segnalazionestatostoricoUncheckedCreateWithoutUtentiInput>
  }

  export type segnalazionestatostoricoUpdateWithWhereUniqueWithoutUtentiInput = {
    where: segnalazionestatostoricoWhereUniqueInput
    data: XOR<segnalazionestatostoricoUpdateWithoutUtentiInput, segnalazionestatostoricoUncheckedUpdateWithoutUtentiInput>
  }

  export type segnalazionestatostoricoUpdateManyWithWhereWithoutUtentiInput = {
    where: segnalazionestatostoricoScalarWhereInput
    data: XOR<segnalazionestatostoricoUpdateManyMutationInput, segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazionestatostoricoInput>
  }

  export type segnalazionestoricoUpsertWithWhereUniqueWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput = {
    where: segnalazionestoricoWhereUniqueInput
    update: XOR<segnalazionestoricoUpdateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput, segnalazionestoricoUncheckedUpdateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
    create: XOR<segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput, segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
  }

  export type segnalazionestoricoUpdateWithWhereUniqueWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput = {
    where: segnalazionestoricoWhereUniqueInput
    data: XOR<segnalazionestoricoUpdateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput, segnalazionestoricoUncheckedUpdateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput>
  }

  export type segnalazionestoricoUpdateManyWithWhereWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput = {
    where: segnalazionestoricoScalarWhereInput
    data: XOR<segnalazionestoricoUpdateManyMutationInput, segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput>
  }

  export type segnalazionestoricoUpsertWithWhereUniqueWithoutUtenti_segnalazionestorico_idUtenteToutentiInput = {
    where: segnalazionestoricoWhereUniqueInput
    update: XOR<segnalazionestoricoUpdateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput, segnalazionestoricoUncheckedUpdateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
    create: XOR<segnalazionestoricoCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput, segnalazionestoricoUncheckedCreateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
  }

  export type segnalazionestoricoUpdateWithWhereUniqueWithoutUtenti_segnalazionestorico_idUtenteToutentiInput = {
    where: segnalazionestoricoWhereUniqueInput
    data: XOR<segnalazionestoricoUpdateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput, segnalazionestoricoUncheckedUpdateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput>
  }

  export type segnalazionestoricoUpdateManyWithWhereWithoutUtenti_segnalazionestorico_idUtenteToutentiInput = {
    where: segnalazionestoricoScalarWhereInput
    data: XOR<segnalazionestoricoUpdateManyMutationInput, segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput>
  }

  export type gruppoUpsertWithoutUtentiInput = {
    update: XOR<gruppoUpdateWithoutUtentiInput, gruppoUncheckedUpdateWithoutUtentiInput>
    create: XOR<gruppoCreateWithoutUtentiInput, gruppoUncheckedCreateWithoutUtentiInput>
  }

  export type gruppoUpdateWithoutUtentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gruppoUncheckedUpdateWithoutUtentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    descrizione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaCreateManyCategoriaanomaliaInput = {
    id?: number
    id_sottocategoria_anomalia?: number | null
  }

  export type categoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInput = {
    id?: number
    id_sottocategoria_lavoro?: number | null
  }

  export type lavoroCreateManyCategoriaanomaliaInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
  }

  export type lavorostoricoCreateManyCategoriaanomaliaInput = {
    id?: number
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
  }

  export type segnalazioneCreateManyCategoriaanomaliaInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateManyCategoriaanomaliaInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateManyCategoriaanomaliaInput = {
    id?: number
    id_sottocategoria_anomalia?: number | null
    id_sottocategoria_lavoro?: number | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaUpdateWithoutCategoriaanomaliaInput = {
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutCategoriaanomalia_sottocategoriaanomaliaNestedInput
  }

  export type categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateWithoutCategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_sottocategoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateManyWithoutCategoriaanomalia_sottocategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_sottocategoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type categoriaanomalia_sottocategorialavoroUpdateWithoutCategoriaanomaliaInput = {
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutCategoriaanomalia_sottocategorialavoroNestedInput
  }

  export type categoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutCategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_sottocategoria_lavoro?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type categoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutCategoriaanomalia_sottocategorialavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_sottocategoria_lavoro?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type lavoroUpdateWithoutCategoriaanomaliaInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUpdateManyWithoutLavoroNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutLavoroNestedInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiUpdateOneWithoutLavoro_lavoro_idUtenteStatoToutentiNestedInput
    utenti_lavoro_idUtenteToutenti?: utentiUpdateOneWithoutLavoro_lavoro_idUtenteToutentiNestedInput
    impresa?: impresaUpdateOneWithoutLavoroNestedInput
  }

  export type lavoroUncheckedUpdateWithoutCategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutLavoroNestedInput
  }

  export type lavoroUncheckedUpdateManyWithoutLavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavorostoricoUpdateWithoutCategoriaanomaliaInput = {
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutLavorostoricoNestedInput
    utenti_lavorostorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiNestedInput
    utenti_lavorostorico_idUtenteToutenti?: utentiUpdateOneWithoutLavorostorico_lavorostorico_idUtenteToutentiNestedInput
    impresa?: impresaUpdateOneWithoutLavorostoricoNestedInput
  }

  export type lavorostoricoUncheckedUpdateWithoutCategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavorostoricoUncheckedUpdateManyWithoutLavorostoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazioneUpdateWithoutCategoriaanomaliaInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazioneNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazioneNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazioneNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput
    utenti_segnalazione_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazioneNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazioneNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateWithoutCategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateManyWithoutSegnalazioneInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazionestoricoUpdateWithoutCategoriaanomaliaInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazionestoricoNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazionestoricoNestedInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiNestedInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazionestoricoNestedInput
  }

  export type segnalazionestoricoUncheckedUpdateWithoutCategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateWithoutCategoriaanomaliaInput = {
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSottocategoriaanomalia_sottocategorialavoroNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutSottocategoriaanomalia_sottocategorialavoroNestedInput
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutCategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_sottocategoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
    id_sottocategoria_lavoro?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateManyWithoutSottocategoriaanomalia_sottocategorialavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_sottocategoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
    id_sottocategoria_lavoro?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type registrorichiedenteCreateManyFontiInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idUtente?: number | null
    idSegnalazione?: number | null
    idSegnalatore?: number | null
    idSegnalazioneGetico?: number | null
    del?: string | null
  }

  export type segnalazioneCreateManyFontiInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateManyFontiInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type registrorichiedenteUpdateWithoutFontiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatore?: segnalatoreUpdateOneWithoutRegistrorichiedenteNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutRegistrorichiedenteNestedInput
    utenti?: utentiUpdateOneWithoutRegistrorichiedenteNestedInput
  }

  export type registrorichiedenteUncheckedUpdateWithoutFontiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type registrorichiedenteUncheckedUpdateManyWithoutRegistrorichiedenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazioneUpdateWithoutFontiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazioneNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazioneNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput
    utenti_segnalazione_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazioneNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazioneNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateWithoutFontiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazionestoricoUpdateWithoutFontiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazionestoricoNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazionestoricoNestedInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiNestedInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazionestoricoNestedInput
  }

  export type segnalazionestoricoUncheckedUpdateWithoutFontiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type utentiCreateManyGruppoInput = {
    id?: number
    idAppalto?: number | null
    nome?: string | null
    cognome?: string | null
    username?: string | null
    password?: string | null
    email: string
    status?: string | null
    permessi?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataSospensione?: string | null
    del?: string | null
    scadenzaPassword?: string | null
    roles?: string | null
  }

  export type utentiUpdateWithoutGruppoInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type utentiUncheckedUpdateWithoutGruppoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    catastoanomalia?: catastoanomaliaUncheckedUpdateManyWithoutUtentiNestedInput
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutUtentiNestedInput
    lavoro_lavoro_idUtenteStatoToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteStatoToutentiNestedInput
    lavoro_lavoro_idUtenteToutenti?: lavoroUncheckedUpdateManyWithoutUtenti_lavoro_idUtenteToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteStatoToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteStatoToutentiNestedInput
    lavorostorico_lavorostorico_idUtenteToutenti?: lavorostoricoUncheckedUpdateManyWithoutUtenti_lavorostorico_idUtenteToutentiNestedInput
    livelliservizio?: livelliservizioUncheckedUpdateManyWithoutUtentiNestedInput
    oggettocivetta?: oggettocivettaUncheckedUpdateManyWithoutUtentiNestedInput
    pratica?: praticaUncheckedUpdateManyWithoutUtentiNestedInput
    praticastorico?: praticastoricoUncheckedUpdateManyWithoutUtentiNestedInput
    registrorichiedente?: registrorichiedenteUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazione_segnalazione_idUtenteStatoToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteStatoToutentiNestedInput
    segnalazione_segnalazione_idUtenteToutenti?: segnalazioneUncheckedUpdateManyWithoutUtenti_segnalazione_idUtenteToutentiNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutUtentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteStatoToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiNestedInput
    segnalazionestorico_segnalazionestorico_idUtenteToutenti?: segnalazionestoricoUncheckedUpdateManyWithoutUtenti_segnalazionestorico_idUtenteToutentiNestedInput
  }

  export type utentiUncheckedUpdateManyWithoutUtentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    cognome?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    permessi?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataSospensione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    scadenzaPassword?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavoroCreateManyImpresaInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
  }

  export type lavorostoricoCreateManyImpresaInput = {
    id?: number
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
  }

  export type lavoroUpdateWithoutImpresaInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUpdateManyWithoutLavoroNestedInput
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutLavoroNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutLavoroNestedInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiUpdateOneWithoutLavoro_lavoro_idUtenteStatoToutentiNestedInput
    utenti_lavoro_idUtenteToutenti?: utentiUpdateOneWithoutLavoro_lavoro_idUtenteToutentiNestedInput
  }

  export type lavoroUncheckedUpdateWithoutImpresaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutLavoroNestedInput
  }

  export type lavorostoricoUpdateWithoutImpresaInput = {
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutLavorostoricoNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutLavorostoricoNestedInput
    utenti_lavorostorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiNestedInput
    utenti_lavorostorico_idUtenteToutenti?: utentiUpdateOneWithoutLavorostorico_lavorostorico_idUtenteToutentiNestedInput
  }

  export type lavorostoricoUncheckedUpdateWithoutImpresaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catastolinkerCreateManyLavoroInput = {
    id?: number
    idCatasto?: number | null
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    idSegnalazione?: number | null
    statoSegnalazione?: string | null
    statoLavoro?: string | null
    flg_catasto?: number | null
    idPratica?: number | null
    geojson?: string | null
  }

  export type catastolinkerUpdateWithoutLavoroInput = {
    idCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    statoSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    flg_catasto?: NullableIntFieldUpdateOperationsInput | number | null
    geojson?: NullableStringFieldUpdateOperationsInput | string | null
    pratica?: praticaUpdateOneWithoutCatastolinkerNestedInput
    utenti?: utentiUpdateOneWithoutCatastolinkerNestedInput
  }

  export type catastolinkerUncheckedUpdateWithoutLavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    idCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    statoSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    flg_catasto?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    geojson?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catastolinkerUncheckedUpdateManyWithoutCatastolinkerInput = {
    id?: IntFieldUpdateOperationsInput | number
    idCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    statoSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    flg_catasto?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    geojson?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliservizioCreateManyLivelliserviziodescrizioneInput = {
    id?: number
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    risultato?: string | null
    detrazioneEffettivo?: string | null
    premioEffettivo?: string | null
    chiave?: string | null
    unita?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    dataIntervalloDa?: string | null
    dataIntervalloA?: string | null
    dataRichiesta?: string | null
    dataInizioEffettivaLavoro?: string | null
    dataChiusuraSegnalazione?: string | null
    dataFineMassima?: string | null
    elaborato?: number | null
    idSchedulatore?: number | null
    tipolavoro?: string | null
    note?: string | null
    dataCreazioneSegnalazione?: string | null
  }

  export type livelliservizioUpdateWithoutLivelliserviziodescrizioneInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    risultato?: NullableStringFieldUpdateOperationsInput | string | null
    detrazioneEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    premioEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    chiave?: NullableStringFieldUpdateOperationsInput | string | null
    unita?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataIntervalloDa?: NullableStringFieldUpdateOperationsInput | string | null
    dataIntervalloA?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettivaLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusuraSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    elaborato?: NullableIntFieldUpdateOperationsInput | number | null
    idSchedulatore?: NullableIntFieldUpdateOperationsInput | number | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazioneSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    utenti?: utentiUpdateOneWithoutLivelliservizioNestedInput
  }

  export type livelliservizioUncheckedUpdateWithoutLivelliserviziodescrizioneInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    risultato?: NullableStringFieldUpdateOperationsInput | string | null
    detrazioneEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    premioEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    chiave?: NullableStringFieldUpdateOperationsInput | string | null
    unita?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataIntervalloDa?: NullableStringFieldUpdateOperationsInput | string | null
    dataIntervalloA?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettivaLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusuraSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    elaborato?: NullableIntFieldUpdateOperationsInput | number | null
    idSchedulatore?: NullableIntFieldUpdateOperationsInput | number | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazioneSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliservizioUncheckedUpdateManyWithoutLivelliservizioInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    risultato?: NullableStringFieldUpdateOperationsInput | string | null
    detrazioneEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    premioEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    chiave?: NullableStringFieldUpdateOperationsInput | string | null
    unita?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataIntervalloDa?: NullableStringFieldUpdateOperationsInput | string | null
    dataIntervalloA?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettivaLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusuraSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    elaborato?: NullableIntFieldUpdateOperationsInput | number | null
    idSchedulatore?: NullableIntFieldUpdateOperationsInput | number | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazioneSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catastolinkerCreateManyPraticaInput = {
    id?: number
    idCatasto?: number | null
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    statoSegnalazione?: string | null
    statoLavoro?: string | null
    flg_catasto?: number | null
    geojson?: string | null
  }

  export type catastolinkerUpdateWithoutPraticaInput = {
    idCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    statoSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    flg_catasto?: NullableIntFieldUpdateOperationsInput | number | null
    geojson?: NullableStringFieldUpdateOperationsInput | string | null
    lavoro?: lavoroUpdateOneWithoutCatastolinkerNestedInput
    utenti?: utentiUpdateOneWithoutCatastolinkerNestedInput
  }

  export type catastolinkerUncheckedUpdateWithoutPraticaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    statoSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    flg_catasto?: NullableIntFieldUpdateOperationsInput | number | null
    geojson?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type registrorichiedenteCreateManySegnalatoreInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idUtente?: number | null
    idSegnalazione?: number | null
    fonteSegnalazione?: number | null
    idSegnalazioneGetico?: number | null
    del?: string | null
  }

  export type segnalazioneCreateManySegnalatoreInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateManySegnalatoreInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type registrorichiedenteUpdateWithoutSegnalatoreInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    fonti?: fontiUpdateOneWithoutRegistrorichiedenteNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutRegistrorichiedenteNestedInput
    utenti?: utentiUpdateOneWithoutRegistrorichiedenteNestedInput
  }

  export type registrorichiedenteUncheckedUpdateWithoutSegnalatoreInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazioneUpdateWithoutSegnalatoreInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazioneNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazioneNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput
    utenti_segnalazione_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazioneNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazioneNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateWithoutSegnalatoreInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazionestoricoUpdateWithoutSegnalatoreInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazionestoricoNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazionestoricoNestedInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiNestedInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazionestoricoNestedInput
  }

  export type segnalazionestoricoUncheckedUpdateWithoutSegnalatoreInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazionestatostoricoCreateManySegnalazioneInput = {
    id?: number
    idAppalto?: number | null
    idUtente?: number | null
    dataModifica?: string | null
    stato?: string | null
    notaStato?: string | null
  }

  export type segnalazionestatostoricoUpdateWithoutSegnalazioneInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    utenti?: utentiUpdateOneWithoutSegnalazionestatostoricoNestedInput
  }

  export type segnalazionestatostoricoUncheckedUpdateWithoutSegnalazioneInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazionestatostoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type registrorichiedenteCreateManySegnalazione_geticoInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idUtente?: number | null
    idSegnalazione?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    del?: string | null
  }

  export type segnalazioneCreateManySegnalazione_geticoInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateManySegnalazione_geticoInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type registrorichiedenteUpdateWithoutSegnalazione_geticoInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    fonti?: fontiUpdateOneWithoutRegistrorichiedenteNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutRegistrorichiedenteNestedInput
    utenti?: utentiUpdateOneWithoutRegistrorichiedenteNestedInput
  }

  export type registrorichiedenteUncheckedUpdateWithoutSegnalazione_geticoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazioneUpdateWithoutSegnalazione_geticoInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazioneNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazioneNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazioneNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput
    utenti_segnalazione_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazioneNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazioneNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateWithoutSegnalazione_geticoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazionestoricoUpdateWithoutSegnalazione_geticoInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazionestoricoNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazionestoricoNestedInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiNestedInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazionestoricoNestedInput
  }

  export type segnalazionestoricoUncheckedUpdateWithoutSegnalazione_geticoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaCreateManySottocategoriaanomaliaInput = {
    id?: number
    id_categoria_anomalia?: number | null
  }

  export type segnalazioneCreateManySottocategoriaanomaliaInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateManySottocategoriaanomaliaInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateManySottocategoriaanomaliaInput = {
    id?: number
    id_categoria_anomalia?: number | null
    id_sottocategoria_lavoro?: number | null
  }

  export type categoriaanomalia_sottocategoriaanomaliaUpdateWithoutSottocategoriaanomaliaInput = {
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutCategoriaanomalia_sottocategoriaanomaliaNestedInput
  }

  export type categoriaanomalia_sottocategoriaanomaliaUncheckedUpdateWithoutSottocategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_categoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazioneUpdateWithoutSottocategoriaanomaliaInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazioneNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazioneNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazioneNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput
    utenti_segnalazione_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazioneNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazioneNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateWithoutSottocategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazionestoricoUpdateWithoutSottocategoriaanomaliaInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazionestoricoNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazionestoricoNestedInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiNestedInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazionestoricoNestedInput
  }

  export type segnalazionestoricoUncheckedUpdateWithoutSottocategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateWithoutSottocategoriaanomaliaInput = {
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSottocategoriaanomalia_sottocategorialavoroNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutSottocategoriaanomalia_sottocategorialavoroNestedInput
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutSottocategoriaanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_categoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
    id_sottocategoria_lavoro?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type categoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInput = {
    id?: number
    id_categoria_lavoro?: number | null
  }

  export type lavoroCreateManySottocategorialavoroInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
  }

  export type lavorostoricoCreateManySottocategorialavoroInput = {
    id?: number
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroCreateManySottocategorialavoroInput = {
    id?: number
    id_categoria_anomalia?: number | null
    id_sottocategoria_anomalia?: number | null
  }

  export type categoriaanomalia_sottocategorialavoroUpdateWithoutSottocategorialavoroInput = {
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutCategoriaanomalia_sottocategorialavoroNestedInput
  }

  export type categoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutSottocategorialavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_categoria_lavoro?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type lavoroUpdateWithoutSottocategorialavoroInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUpdateManyWithoutLavoroNestedInput
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutLavoroNestedInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiUpdateOneWithoutLavoro_lavoro_idUtenteStatoToutentiNestedInput
    utenti_lavoro_idUtenteToutenti?: utentiUpdateOneWithoutLavoro_lavoro_idUtenteToutentiNestedInput
    impresa?: impresaUpdateOneWithoutLavoroNestedInput
  }

  export type lavoroUncheckedUpdateWithoutSottocategorialavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutLavoroNestedInput
  }

  export type lavorostoricoUpdateWithoutSottocategorialavoroInput = {
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutLavorostoricoNestedInput
    utenti_lavorostorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiNestedInput
    utenti_lavorostorico_idUtenteToutenti?: utentiUpdateOneWithoutLavorostorico_lavorostorico_idUtenteToutentiNestedInput
    impresa?: impresaUpdateOneWithoutLavorostoricoNestedInput
  }

  export type lavorostoricoUncheckedUpdateWithoutSottocategorialavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sottocategoriaanomalia_sottocategorialavoroUpdateWithoutSottocategorialavoroInput = {
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSottocategoriaanomalia_sottocategorialavoroNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSottocategoriaanomalia_sottocategorialavoroNestedInput
  }

  export type sottocategoriaanomalia_sottocategorialavoroUncheckedUpdateWithoutSottocategorialavoroInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_categoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
    id_sottocategoria_anomalia?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazioneCreateManyTecniciInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateManyTecniciInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazioneUpdateWithoutTecniciInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazioneNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazioneNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput
    utenti_segnalazione_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazioneNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazioneNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateWithoutTecniciInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazionestoricoUpdateWithoutTecniciInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazionestoricoNestedInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiNestedInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazionestoricoNestedInput
  }

  export type segnalazionestoricoUncheckedUpdateWithoutTecniciInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazioneCreateManyTipoeventoInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateManyTipoeventoInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazioneUpdateWithoutTipoeventoInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazioneNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazioneNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazioneNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput
    utenti_segnalazione_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazioneNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateWithoutTipoeventoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazionestoricoUpdateWithoutTipoeventoInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazionestoricoNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazionestoricoNestedInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiNestedInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazionestoricoNestedInput
  }

  export type segnalazionestoricoUncheckedUpdateWithoutTipoeventoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazioneCreateManyTipoprovvedimentoInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
  }

  export type segnalazionestoricoCreateManyTipoprovvedimentoInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
  }

  export type segnalazioneUpdateWithoutTipoprovvedimentoInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazioneNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazioneNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput
    utenti_segnalazione_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazioneNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazioneNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateWithoutTipoprovvedimentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazionestoricoUpdateWithoutTipoprovvedimentoInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazionestoricoNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazionestoricoNestedInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiNestedInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazionestoricoNestedInput
  }

  export type segnalazionestoricoUncheckedUpdateWithoutTipoprovvedimentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazioneCreateManyTiposeveritaInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateManyTiposeveritaInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazioneUpdateWithoutTiposeveritaInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazioneNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazioneNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazioneNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput
    utenti_segnalazione_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazioneNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateWithoutTiposeveritaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazionestoricoUpdateWithoutTiposeveritaInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazionestoricoNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazionestoricoNestedInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiNestedInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazionestoricoNestedInput
  }

  export type segnalazionestoricoUncheckedUpdateWithoutTiposeveritaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type catastoanomaliaCreateManyUtentiInput = {
    id?: number
    idAppalto?: number | null
    dataModifica?: string | null
    adjacentLayer?: string | null
    adjacentLayerGeom?: string | null
  }

  export type catastolinkerCreateManyUtentiInput = {
    id?: number
    idCatasto?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    statoSegnalazione?: string | null
    statoLavoro?: string | null
    flg_catasto?: number | null
    idPratica?: number | null
    geojson?: string | null
  }

  export type lavoroCreateManyUtenti_lavoro_idUtenteStatoToutentiInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
  }

  export type lavoroCreateManyUtenti_lavoro_idUtenteToutentiInput = {
    id?: number
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    del?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    delOggettiCatasto?: string | null
    quantita?: string | null
    operatore?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    notePubbliche?: string | null
  }

  export type lavorostoricoCreateManyUtenti_lavorostorico_idUtenteStatoToutentiInput = {
    id?: number
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    idUtente?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
  }

  export type lavorostoricoCreateManyUtenti_lavorostorico_idUtenteToutentiInput = {
    id?: number
    idLavoro?: number | null
    idAppalto?: number | null
    idEvento?: number | null
    idPratica?: number | null
    idPOI?: number | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarata?: string | null
    categoriaLavoro?: number | null
    dettaglioLavoro?: number | null
    noteLavoro?: string | null
    contabilitaLavoro?: number | null
    attrezzaturaLavoro?: number | null
    mezzoLavoro?: number | null
    personaleLavoro?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    sospeso?: number | null
    dataora_ini_sospensione?: string | null
    dataora_fine_sospensione?: string | null
    tempo_sospensione?: number | null
    note_sospensione?: string | null
    dataInizioProgrammata?: string | null
    dataInizioEffettiva?: string | null
    dataInizioMassima?: string | null
    dataFineProgrammata?: string | null
    dataFineEffettiva?: string | null
    dataFineMassima?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    statoCorrenteLavoro?: string | null
    delOggettiCatasto?: string | null
    del?: string | null
    quantita?: string | null
    operatore?: string | null
    impresaEsecutrice?: number | null
    segnaleticatemporanea?: string | null
    tipolavoro?: string | null
    statoMessaInSicurezza?: string | null
    dataMessaInSicurezza?: string | null
    flgCambioStato?: string | null
    notePubbliche?: string | null
  }

  export type livelliservizioCreateManyUtentiInput = {
    id?: number
    idAppalto?: number | null
    dataModifica?: string | null
    idLds?: number | null
    risultato?: string | null
    detrazioneEffettivo?: string | null
    premioEffettivo?: string | null
    chiave?: string | null
    unita?: string | null
    idSegnalazione?: number | null
    idLavoro?: number | null
    dataIntervalloDa?: string | null
    dataIntervalloA?: string | null
    dataRichiesta?: string | null
    dataInizioEffettivaLavoro?: string | null
    dataChiusuraSegnalazione?: string | null
    dataFineMassima?: string | null
    elaborato?: number | null
    idSchedulatore?: number | null
    tipolavoro?: string | null
    note?: string | null
    dataCreazioneSegnalazione?: string | null
  }

  export type oggettocivettaCreateManyUtentiInput = {
    id?: number
    idSegnalazione?: number | null
    idOggettoCatasto?: number | null
    idAppalto?: number | null
    dataModifica?: string | null
    idRifCivetta?: number | null
  }

  export type praticaCreateManyUtentiInput = {
    id?: number
    idAppalto?: number | null
    dataModifica?: string | null
    dataChiusura?: string | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
  }

  export type praticastoricoCreateManyUtentiInput = {
    id?: number
    idPratica?: number | null
    idAppalto?: number | null
    nomePratica?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarata?: string | null
    dataModifica?: string | null
    dataChiusura?: string | null
    notePratica?: string | null
    importoPratica?: string | null
    del?: string | null
    dataCreazione?: string | null
    statoCorrentePratica?: string | null
    delLavori?: string | null
  }

  export type registrorichiedenteCreateManyUtentiInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    idSegnalazione?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    idSegnalazioneGetico?: number | null
    del?: string | null
  }

  export type segnalazioneCreateManyUtenti_segnalazione_idUtenteStatoToutentiInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtente?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazioneCreateManyUtenti_segnalazione_idUtenteToutentiInput = {
    id?: number
    idAppalto?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazioneCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneDichiarataCivico?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idTecnico?: number | null
    localizzazioneDichiarataQuartiere?: string | null
    idLavoroAssociato?: string | null
    dataChiusura?: string | null
    statoCorrenteSegnalazione?: string | null
    del?: string | null
    idSegnalazioneGetico?: number | null
    delOggettiCatasto?: string | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    numeroProvvedimento?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestatostoricoCreateManyUtentiInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    dataModifica?: string | null
    stato?: string | null
    notaStato?: string | null
  }

  export type segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteStatoToutentiInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtente?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type segnalazionestoricoCreateManyUtenti_segnalazionestorico_idUtenteToutentiInput = {
    id?: number
    idAppalto?: number | null
    idSegnalazione?: number | null
    noteSegnalatore?: string | null
    segnalatori?: segnalazionestoricoCreatesegnalatoriInput | Enumerable<number>
    dataCreazione?: string | null
    dataModifica?: string | null
    dataRichiesta?: string | null
    localizzazioneDichiarata?: string | null
    localizzazioneNote?: string | null
    descrizioneAnomalia?: string | null
    commentoAnomalia?: string | null
    idEvento?: number | null
    idPratica?: number | null
    dataModificaStato?: string | null
    stato?: string | null
    notaStato?: string | null
    flgCambioStato?: string | null
    idUtenteStato?: number | null
    idSegnalatore?: number | null
    fonteSegnalazione?: number | null
    categoriaAnomalia?: number | null
    dettaglioAnomalia?: number | null
    severitaEvento?: number | null
    tipoEvento?: number | null
    idLavoroAssociato?: string | null
    statoCorrenteSegnalazione?: string | null
    idSegnalazioneGetico?: number | null
    sottoservizi?: string | null
    sinistri?: string | null
    richiestaSopralluogo?: string | null
    delOggettiCatasto?: string | null
    idTecnico?: number | null
    numeroProvvedimento?: string | null
    dataChiusura?: string | null
    localizzazioneDichiarataQuartiere?: string | null
    localizzazioneDichiarataCivico?: string | null
    del?: string | null
    idTipoProvvedimento?: number | null
  }

  export type catastoanomaliaUpdateWithoutUtentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayer?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayerGeom?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catastoanomaliaUncheckedUpdateWithoutUtentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayer?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayerGeom?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catastoanomaliaUncheckedUpdateManyWithoutCatastoanomaliaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayer?: NullableStringFieldUpdateOperationsInput | string | null
    adjacentLayerGeom?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catastolinkerUpdateWithoutUtentiInput = {
    idCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    statoSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    flg_catasto?: NullableIntFieldUpdateOperationsInput | number | null
    geojson?: NullableStringFieldUpdateOperationsInput | string | null
    lavoro?: lavoroUpdateOneWithoutCatastolinkerNestedInput
    pratica?: praticaUpdateOneWithoutCatastolinkerNestedInput
  }

  export type catastolinkerUncheckedUpdateWithoutUtentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    statoSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    flg_catasto?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    geojson?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavoroUpdateWithoutUtenti_lavoro_idUtenteStatoToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUpdateManyWithoutLavoroNestedInput
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutLavoroNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutLavoroNestedInput
    utenti_lavoro_idUtenteToutenti?: utentiUpdateOneWithoutLavoro_lavoro_idUtenteToutentiNestedInput
    impresa?: impresaUpdateOneWithoutLavoroNestedInput
  }

  export type lavoroUncheckedUpdateWithoutUtenti_lavoro_idUtenteStatoToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutLavoroNestedInput
  }

  export type lavoroUncheckedUpdateManyWithoutLavoro_lavoro_idUtenteStatoToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavoroUpdateWithoutUtenti_lavoro_idUtenteToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUpdateManyWithoutLavoroNestedInput
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutLavoroNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutLavoroNestedInput
    utenti_lavoro_idUtenteStatoToutenti?: utentiUpdateOneWithoutLavoro_lavoro_idUtenteStatoToutentiNestedInput
    impresa?: impresaUpdateOneWithoutLavoroNestedInput
  }

  export type lavoroUncheckedUpdateWithoutUtenti_lavoro_idUtenteToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutLavoroNestedInput
  }

  export type lavoroUncheckedUpdateManyWithoutLavoro_lavoro_idUtenteToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavorostoricoUpdateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput = {
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutLavorostoricoNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutLavorostoricoNestedInput
    utenti_lavorostorico_idUtenteToutenti?: utentiUpdateOneWithoutLavorostorico_lavorostorico_idUtenteToutentiNestedInput
    impresa?: impresaUpdateOneWithoutLavorostoricoNestedInput
  }

  export type lavorostoricoUncheckedUpdateWithoutUtenti_lavorostorico_idUtenteStatoToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavorostoricoUncheckedUpdateManyWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavorostoricoUpdateWithoutUtenti_lavorostorico_idUtenteToutentiInput = {
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutLavorostoricoNestedInput
    sottocategorialavoro?: sottocategorialavoroUpdateOneWithoutLavorostoricoNestedInput
    utenti_lavorostorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutLavorostorico_lavorostorico_idUtenteStatoToutentiNestedInput
    impresa?: impresaUpdateOneWithoutLavorostoricoNestedInput
  }

  export type lavorostoricoUncheckedUpdateWithoutUtenti_lavorostorico_idUtenteToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type lavorostoricoUncheckedUpdateManyWithoutLavorostorico_lavorostorico_idUtenteToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idPOI?: NullableIntFieldUpdateOperationsInput | number | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    noteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    contabilitaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    attrezzaturaLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    mezzoLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    personaleLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    sospeso?: NullableIntFieldUpdateOperationsInput | number | null
    dataora_ini_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataora_fine_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_sospensione?: NullableIntFieldUpdateOperationsInput | number | null
    note_sospensione?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioMassima?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineProgrammata?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineEffettiva?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    quantita?: NullableStringFieldUpdateOperationsInput | string | null
    operatore?: NullableStringFieldUpdateOperationsInput | string | null
    impresaEsecutrice?: NullableIntFieldUpdateOperationsInput | number | null
    segnaleticatemporanea?: NullableStringFieldUpdateOperationsInput | string | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    statoMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    dataMessaInSicurezza?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    notePubbliche?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type livelliservizioUpdateWithoutUtentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    risultato?: NullableStringFieldUpdateOperationsInput | string | null
    detrazioneEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    premioEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    chiave?: NullableStringFieldUpdateOperationsInput | string | null
    unita?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataIntervalloDa?: NullableStringFieldUpdateOperationsInput | string | null
    dataIntervalloA?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettivaLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusuraSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    elaborato?: NullableIntFieldUpdateOperationsInput | number | null
    idSchedulatore?: NullableIntFieldUpdateOperationsInput | number | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazioneSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    livelliserviziodescrizione?: livelliserviziodescrizioneUpdateOneWithoutLivelliservizioNestedInput
  }

  export type livelliservizioUncheckedUpdateWithoutUtentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idLds?: NullableIntFieldUpdateOperationsInput | number | null
    risultato?: NullableStringFieldUpdateOperationsInput | string | null
    detrazioneEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    premioEffettivo?: NullableStringFieldUpdateOperationsInput | string | null
    chiave?: NullableStringFieldUpdateOperationsInput | string | null
    unita?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoro?: NullableIntFieldUpdateOperationsInput | number | null
    dataIntervalloDa?: NullableStringFieldUpdateOperationsInput | string | null
    dataIntervalloA?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    dataInizioEffettivaLavoro?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusuraSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataFineMassima?: NullableStringFieldUpdateOperationsInput | string | null
    elaborato?: NullableIntFieldUpdateOperationsInput | number | null
    idSchedulatore?: NullableIntFieldUpdateOperationsInput | number | null
    tipolavoro?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazioneSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type oggettocivettaUpdateWithoutUtentiInput = {
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idOggettoCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idRifCivetta?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type oggettocivettaUncheckedUpdateWithoutUtentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idOggettoCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idRifCivetta?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type oggettocivettaUncheckedUpdateManyWithoutOggettocivettaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idOggettoCatasto?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    idRifCivetta?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type praticaUpdateWithoutUtentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUpdateManyWithoutPraticaNestedInput
  }

  export type praticaUncheckedUpdateWithoutUtentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
    catastolinker?: catastolinkerUncheckedUpdateManyWithoutPraticaNestedInput
  }

  export type praticaUncheckedUpdateManyWithoutPraticaInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type praticastoricoUpdateWithoutUtentiInput = {
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type praticastoricoUncheckedUpdateWithoutUtentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type praticastoricoUncheckedUpdateManyWithoutPraticastoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    nomePratica?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    notePratica?: NullableStringFieldUpdateOperationsInput | string | null
    importoPratica?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrentePratica?: NullableStringFieldUpdateOperationsInput | string | null
    delLavori?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type registrorichiedenteUpdateWithoutUtentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    fonti?: fontiUpdateOneWithoutRegistrorichiedenteNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutRegistrorichiedenteNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutRegistrorichiedenteNestedInput
  }

  export type registrorichiedenteUncheckedUpdateWithoutUtentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazioneUpdateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazioneNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazioneNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazioneNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazioneNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazioneNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateWithoutUtenti_segnalazione_idUtenteStatoToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateManyWithoutSegnalazione_segnalazione_idUtenteStatoToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazioneUpdateWithoutUtenti_segnalazione_idUtenteToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazioneNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazioneNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazioneNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazioneNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazioneNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazioneNestedInput
    utenti_segnalazione_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazione_segnalazione_idUtenteStatoToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazioneNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazioneNestedInput
    segnalazionestatostorico?: segnalazionestatostoricoUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateWithoutUtenti_segnalazione_idUtenteToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
    segnalazionestatostorico?: segnalazionestatostoricoUncheckedUpdateManyWithoutSegnalazioneNestedInput
  }

  export type segnalazioneUncheckedUpdateManyWithoutSegnalazione_segnalazione_idUtenteToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazioneUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazionestatostoricoUpdateWithoutUtentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    segnalazione?: segnalazioneUpdateOneWithoutSegnalazionestatostoricoNestedInput
  }

  export type segnalazionestatostoricoUncheckedUpdateWithoutUtentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type segnalazionestoricoUpdateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazionestoricoNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazionestoricoNestedInput
    utenti_segnalazionestorico_idUtenteToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazionestoricoNestedInput
  }

  export type segnalazionestoricoUncheckedUpdateWithoutUtenti_segnalazionestorico_idUtenteStatoToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtente?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazionestoricoUpdateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput = {
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaanomalia?: categoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    sottocategoriaanomalia?: sottocategoriaanomaliaUpdateOneWithoutSegnalazionestoricoNestedInput
    fonti?: fontiUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalatore?: segnalatoreUpdateOneWithoutSegnalazionestoricoNestedInput
    segnalazione_getico?: segnalazione_geticoUpdateOneWithoutSegnalazionestoricoNestedInput
    tecnici?: tecniciUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoprovvedimento?: tipoprovvedimentoUpdateOneWithoutSegnalazionestoricoNestedInput
    utenti_segnalazionestorico_idUtenteStatoToutenti?: utentiUpdateOneWithoutSegnalazionestorico_segnalazionestorico_idUtenteStatoToutentiNestedInput
    tiposeverita?: tiposeveritaUpdateOneWithoutSegnalazionestoricoNestedInput
    tipoevento?: tipoeventoUpdateOneWithoutSegnalazionestoricoNestedInput
  }

  export type segnalazionestoricoUncheckedUpdateWithoutUtenti_segnalazionestorico_idUtenteToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type segnalazionestoricoUncheckedUpdateManyWithoutSegnalazionestorico_segnalazionestorico_idUtenteToutentiInput = {
    id?: IntFieldUpdateOperationsInput | number
    idAppalto?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    noteSegnalatore?: NullableStringFieldUpdateOperationsInput | string | null
    segnalatori?: segnalazionestoricoUpdatesegnalatoriInput | Enumerable<number>
    dataCreazione?: NullableStringFieldUpdateOperationsInput | string | null
    dataModifica?: NullableStringFieldUpdateOperationsInput | string | null
    dataRichiesta?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarata?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneNote?: NullableStringFieldUpdateOperationsInput | string | null
    descrizioneAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    commentoAnomalia?: NullableStringFieldUpdateOperationsInput | string | null
    idEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idPratica?: NullableIntFieldUpdateOperationsInput | number | null
    dataModificaStato?: NullableStringFieldUpdateOperationsInput | string | null
    stato?: NullableStringFieldUpdateOperationsInput | string | null
    notaStato?: NullableStringFieldUpdateOperationsInput | string | null
    flgCambioStato?: NullableStringFieldUpdateOperationsInput | string | null
    idUtenteStato?: NullableIntFieldUpdateOperationsInput | number | null
    idSegnalatore?: NullableIntFieldUpdateOperationsInput | number | null
    fonteSegnalazione?: NullableIntFieldUpdateOperationsInput | number | null
    categoriaAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    dettaglioAnomalia?: NullableIntFieldUpdateOperationsInput | number | null
    severitaEvento?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEvento?: NullableIntFieldUpdateOperationsInput | number | null
    idLavoroAssociato?: NullableStringFieldUpdateOperationsInput | string | null
    statoCorrenteSegnalazione?: NullableStringFieldUpdateOperationsInput | string | null
    idSegnalazioneGetico?: NullableIntFieldUpdateOperationsInput | number | null
    sottoservizi?: NullableStringFieldUpdateOperationsInput | string | null
    sinistri?: NullableStringFieldUpdateOperationsInput | string | null
    richiestaSopralluogo?: NullableStringFieldUpdateOperationsInput | string | null
    delOggettiCatasto?: NullableStringFieldUpdateOperationsInput | string | null
    idTecnico?: NullableIntFieldUpdateOperationsInput | number | null
    numeroProvvedimento?: NullableStringFieldUpdateOperationsInput | string | null
    dataChiusura?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataQuartiere?: NullableStringFieldUpdateOperationsInput | string | null
    localizzazioneDichiarataCivico?: NullableStringFieldUpdateOperationsInput | string | null
    del?: NullableStringFieldUpdateOperationsInput | string | null
    idTipoProvvedimento?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}